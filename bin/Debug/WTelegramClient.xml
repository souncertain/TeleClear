<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WTelegramClient</name>
    </assembly>
    <members>
        <member name="E:WTelegram.Client.OnUpdates">
            <summary>This event will be called when unsollicited updates/messages are sent by Telegram servers</summary>
            <remarks>Make your handler <see langword="async"/>, or return <see cref="P:System.Threading.Tasks.Task.CompletedTask"/> or <see langword="null"/><br/>See <see href="https://github.com/wiz0u/WTelegramClient/blob/master/Examples/Program_ReactorError.cs?ts=4#L30">Examples/Program_ReactorError.cs</see> for how to use this<br/>or <see href="https://github.com/wiz0u/WTelegramClient/blob/master/Examples/Program_ListenUpdates.cs?ts=4#L21">Examples/Program_ListenUpdate.cs</see> using the UpdateManager class instead</remarks>
        </member>
        <member name="E:WTelegram.Client.OnOther">
            <summary>This event is called for other types of notifications (login states, reactor errors, ...)</summary>
        </member>
        <member name="E:WTelegram.Client.OnOwnUpdates">
            <summary>Use this handler to intercept Updates that resulted from your own API calls</summary>
        </member>
        <member name="P:WTelegram.Client.TcpHandler">
            <summary>Used to create a TcpClient connected to the given address/port, or throw an exception on failure</summary>
        </member>
        <member name="P:WTelegram.Client.MTProxyUrl">
            <summary>Url for using a MTProxy. https://t.me/proxy?server=... </summary>
        </member>
        <member name="P:WTelegram.Client.TLConfig">
            <summary>Telegram configuration, obtained at connection time</summary>
        </member>
        <member name="P:WTelegram.Client.MaxAutoReconnects">
            <summary>Number of automatic reconnections on connection/reactor failure</summary>
        </member>
        <member name="P:WTelegram.Client.MaxCodePwdAttempts">
            <summary>Number of attempts in case of wrong verification_code or password</summary>
        </member>
        <member name="P:WTelegram.Client.FloodRetryThreshold">
            <summary>Number of seconds under which an error 420 FLOOD_WAIT_X will not be raised and your request will instead be auto-retried after the delay</summary>
        </member>
        <member name="P:WTelegram.Client.PingInterval">
            <summary>Number of seconds between each keep-alive ping. Increase this if you have a slow connection or you're debugging your code</summary>
        </member>
        <member name="P:WTelegram.Client.FilePartSize">
            <summary>Size of chunks when uploading/downloading files. Reduce this if you don't have much memory</summary>
        </member>
        <member name="P:WTelegram.Client.IsMainDC">
            <summary>Is this Client instance the main or a secondary DC session</summary>
        </member>
        <member name="P:WTelegram.Client.Disconnected">
            <summary>Has this Client established connection been disconnected?</summary>
        </member>
        <member name="P:WTelegram.Client.UserId">
            <summary>ID of the current logged-in user or 0</summary>
        </member>
        <member name="P:WTelegram.Client.User">
            <summary>Info about the current logged-in user. This is only filled after a successful (re)login, not updated later</summary>
        </member>
        <member name="M:WTelegram.Client.#ctor(System.Func{System.String,System.String},System.IO.Stream)">
            <summary>Welcome to WTelegramClient! 🙂</summary>
            <param name="configProvider">Config callback, is queried for: <b>api_id</b>, <b>api_hash</b>, <b>session_pathname</b></param>
            <param name="sessionStore">if specified, must support initial Length &amp; Read() of a session, then calls to Write() the updated session. Other calls can be ignored</param>
        </member>
        <member name="M:WTelegram.Client.DefaultConfig(System.String)">
            <summary>Default config values, used if your Config callback returns <see langword="null"/></summary>
        </member>
        <member name="M:WTelegram.Client.LoadPublicKey(System.String)">
            <summary>Load a specific Telegram server public key</summary>
            <param name="pem">A string starting with <c>-----BEGIN RSA PUBLIC KEY-----</c></param>
        </member>
        <member name="M:WTelegram.Client.InputCheckPassword(TL.Account_Password,System.String)">
            <summary>Builds a structure that is used to validate a 2FA password</summary>
            <param name="accountPassword">Password validation configuration. You can obtain this via <c>Account_GetPassword</c> or through OnOther as part of the login process</param>
            <param name="password">The password to validate</param>
        </member>
        <member name="M:WTelegram.Client.Reset(System.Boolean,System.Boolean)">
            <summary>Disconnect from Telegram <i>(shouldn't be needed in normal usage)</i></summary>
            <param name="resetUser">Forget about logged-in user</param>
            <param name="resetSessions">Disconnect secondary sessions with other DCs</param>
        </member>
        <member name="M:WTelegram.Client.GetClientForDC(System.Int32,System.Boolean,System.Boolean)">
            <summary>Obtain/create a Client for a secondary session on a specific Data Center</summary>
            <param name="dcId">ID of the Data Center</param>
            <param name="media_only">Session will be used only for transferring media</param>
            <param name="connect">Connect immediately</param>
            <returns>Client connected to the selected DC</returns>
        </member>
        <member name="M:WTelegram.Client.ConnectAsync(System.Boolean)">
            <summary>Establish connection to Telegram servers without negociating a user session</summary>
            <param name="quickResume">Attempt to resume session immediately without issuing Layer/InitConnection/GetConfig <i>(not recommended by default)</i></param>
            <remarks>Usually you shouldn't need to call this method: Use <see cref="M:WTelegram.Client.LoginUserIfNeeded(TL.CodeSettings,System.Boolean)">LoginUserIfNeeded</see> instead. <br/>Config callback is queried for: <b>server_address</b></remarks>
            <returns>Most methods of this class are async (Task), so please use <see langword="await"/></returns>
        </member>
        <member name="M:WTelegram.Client.Login(System.String)">
            <summary>Login as a user with given phone number (or resume previous session)<br/>Call this method again to provide additional requested login information</summary>
            <param name="loginInfo">First call should be with phone number<br/>Further calls should be with the requested configuration value</param>
            <returns>Configuration item requested to continue login, or <see langword="null"/> when login is successful<br/>
            Possible values: <b>verification_code</b>, <b>name</b> (signup), <b>password</b> (2FA), <b>email</b> &amp; <b>email_verification_code</b> (email registration)</returns>
            <exception cref="T:WTelegram.WTException"/><exception cref="T:TL.RpcException"/>
        </member>
        <member name="M:WTelegram.Client.LoginBotIfNeeded(System.String)">
            <summary>Login as a bot (if not already logged-in).</summary>
            <param name="bot_token">bot token, or <see langword="null"/> if token is provided by Config callback</param>
            <remarks>Config callback may be queried for: <b>bot_token</b>
            <br/>Bots can only call API methods marked with [bots: ✓] in their documentation. </remarks>
            <returns>Detail about the logged-in bot</returns>
        </member>
        <member name="M:WTelegram.Client.LoginUserIfNeeded(TL.CodeSettings,System.Boolean)">
            <summary>Login as a user (if not already logged-in).
            <br/><i>(this method calls <see cref="M:WTelegram.Client.ConnectAsync(System.Boolean)">ConnectAsync</see> if necessary)</i></summary>
            <remarks>Config callback is queried for: <b>phone_number</b>, <b>verification_code</b> <br/>and eventually <b>first_name</b>, <b>last_name</b> (signup required), <b>password</b> (2FA auth), <b>email</b> &amp; <b>email_verification_code</b> (email registration), <b>user_id</b> (alt validation)</remarks>
            <param name="settings">(optional) Preference for verification_code sending</param>
            <param name="reloginOnFailedResume">Proceed to logout and login if active user session cannot be resumed successfully</param>
            <returns>Detail about the logged-in user
            <br/>Most methods of this class are async (Task), so please use <see langword="await"/> to get the result</returns>
        </member>
        <member name="M:WTelegram.Client.LoginWithQRCode(System.Action{System.String},System.Int64[],System.Boolean,System.Threading.CancellationToken)">
            <summary>Login via QR code</summary>
            <param name="qrDisplay">Callback to display the login url as QR code to the user (<a href="https://www.nuget.org/packages/QRCoder/">QRCoder library</a> can help you)</param>
            <param name="except_ids">(optional) To prevent logging as these user ids</param>
            <param name="logoutFirst">If session is already connected to a user, this method will first log out.<br/>You can also check property <see cref="P:WTelegram.Client.UserId"/> before calling this method.</param>
            <param name="ct">If you need to abort the method before login is completed</param>
            <returns>Detail about the logged-in user</returns>
        </member>
        <member name="M:WTelegram.Client.LoginAlreadyDone(TL.Auth_AuthorizationBase)">
            <summary><b>[Not recommended]</b> You can use this if you have already obtained a login authorization manually</summary>
            <param name="authorization">if this was not a successful Auth_Authorization, an exception is thrown</param>
            <returns>the User that was authorized</returns>
            <remarks>This approach is not recommended because you likely didn't properly handle all aspects of the login process
            <br/>(transient failures, unnecessary login, 2FA, sign-up required, slowness to respond, verification code resending, encryption key safety, etc..)
            <br/>Methods <c>LoginUserIfNeeded</c> and <c>LoginBotIfNeeded</c> handle these automatically for you</remarks>
        </member>
        <member name="M:WTelegram.Client.Invoke``1(TL.IMethod{``0})">
            <summary>Call the given TL method <i>(You shouldn't need to use this method directly)</i></summary>
            <typeparam name="T">Expected type of the returned object</typeparam>
            <param name="query">TL method structure</param>
            <returns>Wait for the reply and return the resulting object, or throws an RpcException if an error was replied</returns>
        </member>
        <member name="T:WTelegram.Client.ProgressCallback">
            <summary>Used to indicate progression of file download/upload</summary>
            <param name="transmitted">transmitted bytes</param>
            <param name="totalSize">total size of file in bytes, or 0 if unknown</param>
        </member>
        <member name="M:WTelegram.Client.UploadFileAsync(System.String,WTelegram.Client.ProgressCallback)">
            <summary>Helper function to upload a file to Telegram</summary>
            <param name="pathname">Path to the file to upload</param>
            <param name="progress">(optional) Callback for tracking the progression of the transfer</param>
            <returns>an <see cref="T:TL.InputFile"/> or <see cref="T:TL.InputFileBig"/> than can be used in various requests</returns>
        </member>
        <member name="M:WTelegram.Client.UploadFileAsync(System.IO.Stream,System.String,WTelegram.Client.ProgressCallback)">
            <summary>Helper function to upload a file to Telegram</summary>
            <param name="stream">Content of the file to upload. This method close/dispose the stream</param>
            <param name="filename">Name of the file</param>
            <param name="progress">(optional) Callback for tracking the progression of the transfer</param>
            <returns>an <see cref="T:TL.InputFile"/> or <see cref="T:TL.InputFileBig"/> than can be used in various requests</returns>
        </member>
        <member name="M:WTelegram.Client.Messages_Search``1(TL.InputPeer,System.String,System.Int32,System.Int32)">
            <summary>Search messages in chat with <see href="https://corefork.telegram.org/type/MessagesFilter">filter</see> and text		<para>See <a href="https://corefork.telegram.org/method/messages.search"/></para></summary>
            <typeparam name="T">See <see cref="T:TL.MessagesFilter"/> for a list of possible filter types</typeparam>
            <param name="peer">User or chat, histories with which are searched, or <see langword="null"/> constructor for global search</param>
            <param name="text">Text search request</param>
            <param name="offset_id">Only return messages starting from the specified message ID</param>
            <param name="limit"><a href="https://corefork.telegram.org/api/offsets">Number of results to return</a></param>
        </member>
        <member name="M:WTelegram.Client.Messages_SearchGlobal``1(System.String,System.Int32,System.Int32)">
            <summary>Search messages globally with <see href="https://corefork.telegram.org/type/MessagesFilter">filter</see> and text		<para>See <a href="https://corefork.telegram.org/method/messages.searchGlobal"/></para></summary>
            <typeparam name="T">See <see cref="T:TL.MessagesFilter"/> for a list of possible filter types</typeparam>
            <param name="text">Text search request</param>
            <param name="offset_id">Only return messages starting from the specified message ID</param>
            <param name="limit"><a href="https://corefork.telegram.org/api/offsets">Number of results to return</a></param>
        </member>
        <member name="M:WTelegram.Client.SendMediaAsync(TL.InputPeer,System.String,TL.InputFileBase,System.String,System.Int32,TL.MessageEntity[],System.DateTime)">
            <summary>Helper function to send a media message more easily</summary>
            <param name="peer">Destination of message (chat group, channel, user chat, etc..) </param>
            <param name="caption">Caption for the media <i>(in plain text)</i> or <see langword="null"/></param>
            <param name="uploadedFile">Media file already uploaded to TG <i>(see <see cref="M:WTelegram.Client.UploadFileAsync(System.String,WTelegram.Client.ProgressCallback)">UploadFileAsync</see>)</i></param>
            <param name="mimeType"><see langword="null"/> for automatic detection, <c>"photo"</c> for an inline photo, <c>"video"</c> for a streamable MP4 video, or a MIME type to send as a document</param>
            <param name="reply_to_msg_id">Your message is a reply to an existing message with this ID, in the same chat</param>
            <param name="entities">Text formatting entities for the caption. You can use <see cref="M:TL.Markdown.MarkdownToEntities(WTelegram.Client,System.String@,System.Boolean,System.Collections.Generic.IReadOnlyDictionary{System.Int64,TL.User})">MarkdownToEntities</see> to create these</param>
            <param name="schedule_date">UTC timestamp when the message should be sent</param>
            <returns>The transmitted message confirmed by Telegram</returns>
        </member>
        <member name="M:WTelegram.Client.SendMessageAsync(TL.InputPeer,System.String,TL.InputMedia,System.Int32,TL.MessageEntity[],System.DateTime,WTelegram.Client.LinkPreview)">
            <summary>Helper function to send a text or media message easily</summary>
            <param name="peer">Destination of message (chat group, channel, user chat, etc..) </param>
            <param name="text">The plain text of the message (or media caption)</param>
            <param name="media">An instance of <see cref="T:TL.InputMedia">InputMedia</see>-derived class, or <see langword="null"/> if there is no associated media</param>
            <param name="reply_to_msg_id">Your message is a reply to an existing message with this ID, in the same chat</param>
            <param name="entities">Text formatting entities. You can use <see cref="M:TL.HtmlText.HtmlToEntities(WTelegram.Client,System.String@,System.Boolean,System.Collections.Generic.IReadOnlyDictionary{System.Int64,TL.User})">HtmlToEntities</see> or <see cref="M:TL.Markdown.MarkdownToEntities(WTelegram.Client,System.String@,System.Boolean,System.Collections.Generic.IReadOnlyDictionary{System.Int64,TL.User})">MarkdownToEntities</see> to create these</param>
            <param name="schedule_date">UTC timestamp when the message should be sent</param>
            <param name="preview">Should website/media preview be shown below, above or not, for URL links in your message</param>
            <returns>The transmitted message as confirmed by Telegram</returns>
        </member>
        <member name="M:WTelegram.Client.SendAlbumAsync(TL.InputPeer,System.Collections.Generic.ICollection{TL.InputMedia},System.String,System.Int32,TL.MessageEntity[],System.DateTime,System.Boolean)">
            <summary>Helper function to send an album (media group) of photos or documents more easily</summary>
            <param name="peer">Destination of message (chat group, channel, user chat, etc..) </param>
            <param name="medias">An array or List of <see cref="T:TL.InputMedia">InputMedia</see>-derived class</param>
            <param name="caption">Caption for the media <i>(in plain text)</i> or <see langword="null"/></param>
            <param name="reply_to_msg_id">Your message is a reply to an existing message with this ID, in the same chat</param>
            <param name="entities">Text formatting entities for the caption. You can use <see cref="M:TL.Markdown.MarkdownToEntities(WTelegram.Client,System.String@,System.Boolean,System.Collections.Generic.IReadOnlyDictionary{System.Int64,TL.User})">MarkdownToEntities</see> to create these</param>
            <param name="schedule_date">UTC timestamp when the message should be sent</param>
            <param name="videoUrlAsFile">Any <see cref="T:TL.InputMediaDocumentExternal"/> URL pointing to a video should be considered as non-streamable</param>
            <returns>The last of the media group messages, confirmed by Telegram</returns>
            <remarks>
            * The caption/entities are set on the last media<br/>
            * <see cref="T:TL.InputMediaDocumentExternal"/> and <see cref="T:TL.InputMediaPhotoExternal"/> are supported by downloading the file from the web via HttpClient and sending it to Telegram.
              WTelegramClient proxy settings don't apply to HttpClient<br/>
            * You may run into errors if you mix, in the same album, photos and file documents having no thumbnails/video attributes
            </remarks>
        </member>
        <member name="M:WTelegram.Client.DownloadFileAsync(TL.Photo,System.IO.Stream,TL.PhotoSizeBase,WTelegram.Client.ProgressCallback)">
            <summary>Download a photo from Telegram into the outputStream</summary>
            <param name="photo">The photo to download</param>
            <param name="outputStream">Stream to write the file content to. This method does not close/dispose the stream</param>
            <param name="photoSize">A specific size/version of the photo, or <see langword="null"/> to download the largest version of the photo</param>
            <param name="progress">(optional) Callback for tracking the progression of the transfer</param>
            <returns>The file type of the photo</returns>
        </member>
        <member name="M:WTelegram.Client.DownloadFileAsync(TL.Document,System.IO.Stream,TL.PhotoSizeBase,WTelegram.Client.ProgressCallback)">
            <summary>Download a document from Telegram into the outputStream</summary>
            <param name="document">The document to download</param>
            <param name="outputStream">Stream to write the file content to. This method does not close/dispose the stream</param>
            <param name="thumbSize">A specific size/version of the document thumbnail to download, or <see langword="null"/> to download the document itself</param>
            <param name="progress">(optional) Callback for tracking the progression of the transfer</param>
            <returns>MIME type of the document/thumbnail</returns>
        </member>
        <member name="M:WTelegram.Client.DownloadFileAsync(TL.InputFileLocationBase,System.IO.Stream,System.Int32,System.Int64,WTelegram.Client.ProgressCallback)">
            <summary>Download a file from Telegram into the outputStream</summary>
            <param name="fileLocation">Telegram file identifier, typically obtained with a .ToFileLocation() call</param>
            <param name="outputStream">Stream to write file content to. This method does not close/dispose the stream</param>
            <param name="dc_id">(optional) DC on which the file is stored</param>
            <param name="fileSize">(optional) Expected file size</param>
            <param name="progress">(optional) Callback for tracking the progression of the transfer</param>
            <returns>The file type</returns>
        </member>
        <member name="M:WTelegram.Client.DownloadProfilePhotoAsync(TL.IPeerInfo,System.IO.Stream,System.Boolean,System.Boolean)">
            <summary>Download the profile photo for a given peer into the outputStream</summary>
            <param name="peer">User, Chat or Channel</param>
            <param name="outputStream">Stream to write the file content to. This method does not close/dispose the stream</param>
            <param name="big">Whether to download the high-quality version of the picture</param>
            <param name="miniThumb">Whether to extract the embedded very low-res thumbnail (synchronous, no actual download needed)</param>
            <returns>The file type of the photo, or 0 if no photo available</returns>
        </member>
        <member name="M:WTelegram.Client.Messages_GetAllChats">
            <summary>Get all chats, channels and supergroups</summary>
        </member>
        <member name="M:WTelegram.Client.Messages_GetAllDialogs(System.Nullable{System.Int32})">
            <summary>Returns the current user dialog list.		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.getDialogs#possible-errors">details</a>)</para></summary>
            <param name="folder_id"><a href="https://corefork.telegram.org/api/folders#peer-folders">Peer folder ID, for more info click here</a></param>
            <returns>See <a href="https://corefork.telegram.org/constructor/messages.dialogs"/></returns>
        </member>
        <member name="M:WTelegram.Client.Channels_GetAllParticipants(TL.InputChannelBase,System.Boolean,System.String,System.String,System.Threading.CancellationToken)">
            <summary>Helper method that tries to fetch all participants from a Channel (beyond Telegram server-side limitations)</summary>
            <param name="channel">The channel to query</param>
            <param name="includeKickBan">Also fetch the kicked/banned members?</param>
            <param name="alphabet1">first letters used to search for in participants names<br/>(default values crafted with ♥ to find most latin and cyrillic names)</param>
            <param name="alphabet2">second (and further) letters used to search for in participants names</param>
            <param name="cancellationToken">Can be used to abort the work of this method</param>
            <returns>Field <c>count</c> indicates the total count of members. Field <c>participants</c> contains those that were successfully fetched</returns>
            <remarks>⚠ This method can take a few minutes to complete on big broadcast channels. It likely won't be able to obtain the full total count of members</remarks>
        </member>
        <member name="M:WTelegram.Client.Channels_GetAdminLog(TL.InputChannelBase,TL.ChannelAdminLogEventsFilter.Flags,System.String,TL.InputUserBase)">
            <summary>Helper simplified method: Get the admin log of a <a href="https://corefork.telegram.org/api/channel">channel/supergroup</a>		<para>See <a href="https://corefork.telegram.org/method/channels.getAdminLog"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/channels.getAdminLog#possible-errors">details</a>)</para></summary>
            <param name="channel">Channel</param>
            <param name="q">Search query, can be empty</param>
            <param name="events_filter">Event filter</param>
            <param name="admin">Only show events from this admin</param>
        </member>
        <member name="M:WTelegram.Client.AddChatUser(TL.InputPeer,TL.InputUserBase)">
            <summary>Generic helper: Adds a single user to a Chat or Channel		<para>See <a href="https://corefork.telegram.org/method/messages.addChatUser"/><br/> and <a href="https://corefork.telegram.org/method/channels.inviteToChannel"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403</para></summary>
            <param name="peer">Chat/Channel</param>
            <param name="user">User to be added</param>
        </member>
        <member name="M:WTelegram.Client.DeleteChatUser(TL.InputPeer,TL.InputUser)">
            <summary>Generic helper: Kick a user from a Chat or Channel [bots: ✓]		<para>See <a href="https://corefork.telegram.org/method/channels.editBanned"/><br/> and <a href="https://corefork.telegram.org/method/messages.deleteChatUser"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403</para></summary>
            <param name="peer">Chat/Channel</param>
            <param name="user">User to be removed</param>
        </member>
        <member name="M:WTelegram.Client.LeaveChat(TL.InputPeer)">
            <summary>Generic helper: Leave a Chat or Channel [bots: ✓]		<para>See <a href="https://corefork.telegram.org/method/messages.deleteChatUser"/><br/> and <a href="https://corefork.telegram.org/method/channels.leaveChannel"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403</para></summary>
            <param name="peer">Chat/Channel to leave</param>
        </member>
        <member name="M:WTelegram.Client.EditChatAdmin(TL.InputPeer,TL.InputUserBase,System.Boolean)">
            <summary>Generic helper: Make a user admin in a Chat or Channel		<para>See <a href="https://corefork.telegram.org/method/messages.editChatAdmin"/><br/> and <a href="https://corefork.telegram.org/method/channels.editAdmin"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403,406</para></summary>
            <param name="peer">Chat/Channel</param>
            <param name="user">The user to make admin</param>
            <param name="is_admin">Whether to make them admin</param>
        </member>
        <member name="M:WTelegram.Client.EditChatPhoto(TL.InputPeer,TL.InputChatPhotoBase)">
            <summary>Generic helper: Change the photo of a Chat or Channel [bots: ✓]		<para>See <a href="https://corefork.telegram.org/method/messages.editChatPhoto"/><br/> and <a href="https://corefork.telegram.org/method/channels.editPhoto"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403</para></summary>
            <param name="peer">Chat/Channel</param>
            <param name="photo">New photo</param>
        </member>
        <member name="M:WTelegram.Client.EditChatTitle(TL.InputPeer,System.String)">
            <summary>Generic helper: Edit the name of a Chat or Channel [bots: ✓]		<para>See <a href="https://corefork.telegram.org/method/messages.editChatTitle"/><br/> and <a href="https://corefork.telegram.org/method/channels.editTitle"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403</para></summary>
            <param name="peer">Chat/Channel</param>
            <param name="title">New name</param>
        </member>
        <member name="M:WTelegram.Client.GetFullChat(TL.InputPeer)">
            <summary>Get full info about a Chat or Channel [bots: ✓]		<para>See <a href="https://corefork.telegram.org/method/messages.getFullChat"/><br/> and <a href="https://corefork.telegram.org/method/channels.getFullChannel"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403,406</para></summary>
            <param name="peer">Chat/Channel</param>
        </member>
        <member name="M:WTelegram.Client.DeleteChat(TL.InputPeer)">
            <summary>Generic helper: Delete a Chat or Channel		<para>See <a href="https://corefork.telegram.org/method/messages.deleteChat"/><br/> and <a href="https://corefork.telegram.org/method/channels.deleteChannel"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403,406</para></summary>
            <param name="peer">Chat/Channel to delete</param>
        </member>
        <member name="M:WTelegram.Client.GetMessages(TL.InputPeer)">
            <summary>If you want to get all messages from a chat, use method Messages_GetHistory</summary>
        </member>
        <member name="M:WTelegram.Client.GetMessages(TL.InputPeer,TL.InputMessage[])">
            <summary>Generic helper: Get individual messages by IDs [bots: ✓]		<para>See <a href="https://corefork.telegram.org/method/messages.getMessages"/><br/> and <a href="https://corefork.telegram.org/method/channels.getMessages"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400</para></summary>
            <param name="peer">User/Chat/Channel</param>
            <param name="id">IDs of messages to get</param>
        </member>
        <member name="M:WTelegram.Client.DeleteMessages(TL.InputPeer,System.Int32[])">
            <summary>Generic helper: Delete messages by IDs [bots: ✓]<br/>Messages are deleted for all participants		<para>See <a href="https://corefork.telegram.org/method/messages.deleteMessages"/><br/> and <a href="https://corefork.telegram.org/method/channels.deleteMessages"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403</para></summary>
            <param name="peer">User/Chat/Channel</param>
            <param name="id">IDs of messages to delete</param>
        </member>
        <member name="M:WTelegram.Client.ReadHistory(TL.InputPeer,System.Int32)">
            <summary>Generic helper: Marks message history as read.		<para>See <a href="https://corefork.telegram.org/method/messages.readHistory"/><br/> and <a href="https://corefork.telegram.org/method/channels.readHistory"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400</para></summary>
            <param name="peer">User/Chat/Channel</param>
            <param name="max_id">If a positive value is passed, only messages with identifiers less or equal than the given one will be marked read</param>
        </member>
        <member name="M:WTelegram.Client.AnalyzeInviteLink(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.Int64,TL.ChatBase})">
            <summary>Return information about a chat/channel based on Invite Link or Public Link</summary>
            <param name="url">Public link or Invite link, like https://t.me/+InviteHash, https://t.me/joinchat/InviteHash or https://t.me/channelname<br/>Works also without https:// prefix</param>
            <param name="join"><see langword="true"/> to also join the chat/channel</param>
            <param name="chats">previously collected chats, to prevent unnecessary ResolveUsername</param>
            <returns>a Chat or Channel, possibly partial Channel information only (with flag <see cref="F:TL.Channel.Flags.min"/>)</returns>
        </member>
        <member name="M:WTelegram.Client.GetMessageByLink(System.String,System.Collections.Generic.IDictionary{System.Int64,TL.ChatBase})">
            <summary>Return chat and message details based on a Message Link (URL)</summary>
            <param name="url">Message Link, like https://t.me/c/1234567890/1234 or t.me/channelname/1234</param>
            <param name="chats">previously collected chats, to prevent unnecessary ResolveUsername</param>
            <returns>Structure containing the message, chat and user details</returns>
            <remarks>If link is for private group (<c>t.me/c/..</c>), user must have joined that group</remarks>
        </member>
        <member name="P:WTelegram.Helpers.Log">
            <summary>Callback for logging a line (string) with its associated <see href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.extensions.logging.loglevel">severity level</see> (int)</summary>
        </member>
        <member name="F:WTelegram.Helpers.JsonOptions">
            <summary>For serializing indented Json with fields included</summary>
        </member>
        <member name="M:WTelegram.Helpers.RandomLong">
            <summary>Get a cryptographic random 64-bit value</summary>
        </member>
        <member name="M:WTelegram.Helpers.IsProbablePrime(System.Numerics.BigInteger)">
            <summary>Miller–Rabin primality test</summary>
            <param name="n">The number to check for primality</param>
        </member>
        <member name="M:WTelegram.SecretChats.#ctor(WTelegram.Client,System.String)">
            <summary>Instantiate a Secret Chats manager</summary>
            <param name="client">The Telegram client</param>
            <param name="filename">File path to load/save secret chats keys/status (optional)</param>
        </member>
        <member name="M:WTelegram.SecretChats.Discard(System.Int32,System.Boolean)">
            <summary>Terminate the secret chat</summary>
            <param name="chat_id">Secret Chat ID</param>
            <param name="delete_history">Whether to delete the entire chat history for the other user as well</param>
        </member>
        <member name="M:WTelegram.SecretChats.Request(TL.InputUserBase)">
            <summary>Initiate a secret chat with the given user.<br/>(chat must be acknowledged by remote user before being active)</summary>
            <param name="user">The remote user</param>
            <returns>Secret Chat ID</returns>
            <exception cref="T:WTelegram.WTException"></exception>
        </member>
        <member name="M:WTelegram.SecretChats.HandleUpdate(TL.UpdateEncryption,System.Nullable{System.Boolean})">
            <summary>Processes the <see cref="T:TL.UpdateEncryption"/> you received from Telegram (<see cref="E:WTelegram.Client.OnUpdates"/>).</summary>
            <param name="update">If update.chat is <see cref="T:TL.EncryptedChatRequested"/>, you might want to first make sure you want to accept this secret chat initiated by user <see cref="F:TL.EncryptedChatRequested.admin_id"/></param>
            <param name="acceptChatRequests">Incoming requests for secret chats are automatically: accepted (<see langword="true"/>), rejected (<see langword="false"/>) or ignored (<see langword="null"/>)</param>
            <returns><see langword="true"/> if the update was handled successfully</returns>
            <exception cref="T:WTelegram.WTException"></exception>
        </member>
        <member name="M:WTelegram.SecretChats.SendMessage(System.Int32,TL.DecryptedMessageBase,System.Boolean,TL.InputEncryptedFileBase)">
            <summary>Encrypt and send a message on a secret chat</summary>
            <remarks>You would typically pass an instance of <see cref="T:TL.Layer73.DecryptedMessage"/> or <see cref="T:TL.Layer23.DecryptedMessageService"/> that you created and filled
            <br/>Remember to fill <c>random_id</c> with <see cref="M:WTelegram.Helpers.RandomLong"/>, and the <c>flags</c> field if necessary</remarks>
            <param name="chatId">Secret Chat ID</param>
            <param name="msg">The pre-filled <see cref="T:TL.Layer73.DecryptedMessage">DecryptedMessage</see> or <see cref="T:TL.Layer23.DecryptedMessageService">DecryptedMessageService </see> to send</param>
            <param name="silent">Send encrypted message without a notification</param>
            <param name="file">Optional file attachment. See method <see cref="M:WTelegram.SecretChats.UploadFile(System.IO.Stream,TL.DecryptedMessageMedia,WTelegram.Client.ProgressCallback)">UploadFile</see></param>
            <returns>Confirmation of sent message</returns>
        </member>
        <member name="M:WTelegram.SecretChats.DecryptMessage(TL.EncryptedMessageBase,System.Boolean)">
            <summary>Decrypt an encrypted message obtained in <see cref="T:TL.UpdateNewEncryptedMessage"/></summary>
            <param name="msg">Encrypted <see cref="F:TL.UpdateNewEncryptedMessage.message"/></param>
            <param name="fillGaps">If messages are missing or received in wrong order, automatically request to resend missing messages</param>
            <returns>An array of <see cref="T:TL.Layer73.DecryptedMessage">DecryptedMessage</see> or <see cref="T:TL.Layer23.DecryptedMessageService">DecryptedMessageService </see> from various TL.LayerXX namespaces.<br/>
            You can use the generic properties to access their fields
            <para>May return an empty array if msg was already previously received or is not the next message in sequence.
            <br/>May return multiple messages if missing messages are finally received (using <paramref name="fillGaps"/> = true)</para></returns>
            <exception cref="T:WTelegram.WTException"></exception>
        </member>
        <member name="M:WTelegram.SecretChats.UploadFile(System.IO.Stream,TL.DecryptedMessageMedia,WTelegram.Client.ProgressCallback)">
            <summary>Upload a file to Telegram in encrypted form</summary>
            <param name="stream">Content of the file to upload. This method close/dispose the stream</param>
            <param name="media">The associated media structure that will be updated with file size and the random AES key/iv</param>
            <param name="progress">(optional) Callback for tracking the progression of the transfer</param>
            <returns>the uploaded file info that should be passed to method <see cref="M:WTelegram.SecretChats.SendMessage(System.Int32,TL.DecryptedMessageBase,System.Boolean,TL.InputEncryptedFileBase)">SendMessage</see></returns>
        </member>
        <member name="M:WTelegram.SecretChats.DownloadFile(TL.EncryptedFile,TL.DecryptedMessageMedia,System.IO.Stream,WTelegram.Client.ProgressCallback)">
            <summary>Download and decrypt an encrypted file from Telegram Secret Chat into the outputStream</summary>
            <param name="encryptedFile">The encrypted file to download &amp; decrypt</param>
            <param name="media">The associated message media structure</param>
            <param name="outputStream">Stream to write the decrypted file content to. This method does not close/dispose the stream</param>
            <param name="progress">(optional) Callback for tracking the progression of the transfer</param>
            <returns>The mime type of the decrypted file, <see langword="null"/> if unknown</returns>
        </member>
        <member name="F:WTelegram.UpdateManager.Users">
            <summary>Collected info about Users <i>(only if using the default collector)</i></summary>
        </member>
        <member name="F:WTelegram.UpdateManager.Chats">
            <summary>Collected info about Chats <i>(only if using the default collector)</i></summary>
        </member>
        <member name="P:WTelegram.UpdateManager.InactivityThreshold">
            <summary>Timout to detect lack of updates and force refetch them</summary>
        </member>
        <member name="P:WTelegram.UpdateManager.Log">
            <summary>Logging callback (defaults to WTelegram.Helpers.Log ; can be null for performance)</summary>
        </member>
        <member name="P:WTelegram.UpdateManager.State">
            <summary>Current set of update states (for saving and later resume)</summary>
        </member>
        <member name="M:WTelegram.UpdateManager.#ctor(WTelegram.Client,System.Func{TL.Update,System.Threading.Tasks.Task},System.Collections.Generic.IDictionary{System.Int64,WTelegram.UpdateManager.MBoxState},WTelegram.IPeerCollector,System.Boolean)">
            <summary>Manager ensuring that you receive Telegram updates in correct order, without missing any</summary>
            <param name="client">the WTelegram Client to manage</param>
            <param name="onUpdate">Event to be called on sequential individual update</param>
            <param name="state">(optional) Resume session by recovering all updates that occured since this state</param>
            <param name="collector">Custom users/chats collector. By default, those are collected in properties Users/Chats</param>
            <param name="reentrant"><see langword="true"/> if your <paramref name="onUpdate"/> method can be called again even when last async call didn't return yet</param>
        </member>
        <member name="M:WTelegram.UpdateManager.LoadDialogs(TL.Messages_Dialogs,System.Boolean)">
            <summary>Load latest dialogs states, checking for missing updates</summary>
            <param name="dialogs">structure returned by Messages_Get*Dialogs calls</param>
            <param name="fullLoadNewChans">Dangerous! Load full history of unknown new channels as updates</param>
        </member>
        <member name="M:WTelegram.UpdateManager.SaveState(System.String)">
            <summary>Save the current state of the manager to JSON file</summary>
            <param name="statePath">File path to write</param>
            <remarks>Note: This does not save the the content of collected Users/Chats dictionaries</remarks>
        </member>
        <member name="M:WTelegram.UpdateManager.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer <i>(only if using the default collector)</i></summary>
        </member>
        <member name="M:TL.Services.CollectUsersChats(TL.IPeerResolver,System.Collections.Generic.IDictionary{System.Int64,TL.User},System.Collections.Generic.IDictionary{System.Int64,TL.ChatBase})">
            <summary>Accumulate users/chats found in this structure in your dictionaries, ignoring <see href="https://core.telegram.org/api/min">Min constructors</see> when the full object is already stored</summary>
            <param name="structure">The structure having a <c>users</c></param>
        </member>
        <member name="M:TL.Markdown.MarkdownToEntities(WTelegram.Client,System.String@,System.Boolean,System.Collections.Generic.IReadOnlyDictionary{System.Int64,TL.User})">
            <summary>Converts a <a href="https://core.telegram.org/bots/api/#markdownv2-style">Markdown text</a> into the (plain text + entities) format used by Telegram messages</summary>
            <param name="_">not used anymore, you can pass null</param>
            <param name="text">[in] The Markdown text<br/>[out] The same (plain) text, stripped of all Markdown notation</param>
            <param name="premium">Generate premium entities if any</param>
            <param name="users">Dictionary used for <c>tg://user?id=</c> notation</param>
            <returns>The array of formatting entities that you can pass (along with the plain text) to <see cref="M:WTelegram.Client.SendMessageAsync(TL.InputPeer,System.String,TL.InputMedia,System.Int32,TL.MessageEntity[],System.DateTime,WTelegram.Client.LinkPreview)">SendMessageAsync</see> or  <see cref="M:WTelegram.Client.SendMediaAsync(TL.InputPeer,System.String,TL.InputFileBase,System.String,System.Int32,TL.MessageEntity[],System.DateTime)">SendMediaAsync</see></returns>
        </member>
        <member name="M:TL.Markdown.EntitiesToMarkdown(WTelegram.Client,System.String,TL.MessageEntity[],System.Boolean)">
            <summary>Converts the (plain text + entities) format used by Telegram messages into a <a href="https://core.telegram.org/bots/api/#markdownv2-style">Markdown text</a></summary>
            <param name="client">Client, used only for getting current user ID in case of <c>InputMessageEntityMentionName+InputUserSelf</c></param>
            <param name="message">The plain text, typically obtained from <see cref="F:TL.Message.message"/></param>
            <param name="entities">The array of formatting entities, typically obtained from <see cref="F:TL.Message.entities"/></param>
            <param name="premium">Convert premium entities (might lead to non-standard markdown)</param>
            <returns>The message text with MarkdownV2 formattings</returns>
        </member>
        <member name="M:TL.Markdown.Escape(System.String)">
            <summary>Insert backslashes in front of Markdown reserved characters</summary>
            <param name="text">The text to escape</param>
            <returns>The escaped text, ready to be used in <see cref="M:TL.Markdown.MarkdownToEntities(WTelegram.Client,System.String@,System.Boolean,System.Collections.Generic.IReadOnlyDictionary{System.Int64,TL.User})">MarkdownToEntities</see> without problems</returns>
        </member>
        <member name="M:TL.HtmlText.HtmlToEntities(WTelegram.Client,System.String@,System.Boolean,System.Collections.Generic.IReadOnlyDictionary{System.Int64,TL.User})">
            <summary>Converts an <a href="https://core.telegram.org/bots/api/#html-style">HTML-formatted text</a> into the (plain text + entities) format used by Telegram messages</summary>
            <param name="_">not used anymore, you can pass null</param>
            <param name="text">[in] The HTML-formatted text<br/>[out] The same (plain) text, stripped of all HTML tags</param>
            <param name="premium">Generate premium entities if any</param>
            <param name="users">Dictionary used for <c>tg://user?id=</c> notation</param>
            <returns>The array of formatting entities that you can pass (along with the plain text) to <see cref="M:WTelegram.Client.SendMessageAsync(TL.InputPeer,System.String,TL.InputMedia,System.Int32,TL.MessageEntity[],System.DateTime,WTelegram.Client.LinkPreview)">SendMessageAsync</see> or  <see cref="M:WTelegram.Client.SendMediaAsync(TL.InputPeer,System.String,TL.InputFileBase,System.String,System.Int32,TL.MessageEntity[],System.DateTime)">SendMediaAsync</see></returns>
        </member>
        <member name="M:TL.HtmlText.EntitiesToHtml(WTelegram.Client,System.String,TL.MessageEntity[],System.Boolean)">
            <summary>Converts the (plain text + entities) format used by Telegram messages into an <a href="https://core.telegram.org/bots/api/#html-style">HTML-formatted text</a></summary>
            <param name="client">Client, used only for getting current user ID in case of <c>InputMessageEntityMentionName+InputUserSelf</c></param>
            <param name="message">The plain text, typically obtained from <see cref="F:TL.Message.message"/></param>
            <param name="entities">The array of formatting entities, typically obtained from <see cref="F:TL.Message.entities"/></param>
            <param name="premium">Convert premium entities</param>
            <returns>The message text with HTML formatting tags</returns>
        </member>
        <member name="M:TL.HtmlText.Escape(System.String)">
            <summary>Replace special HTML characters with their &amp;xx; equivalent</summary>
            <param name="text">The text to make HTML-safe</param>
            <returns>The HTML-safe text, ready to be used in <see cref="M:TL.HtmlText.HtmlToEntities(WTelegram.Client,System.String@,System.Boolean,System.Collections.Generic.IReadOnlyDictionary{System.Int64,TL.User})">HtmlToEntities</see> without problems</returns>
        </member>
        <member name="F:TL.RpcException.X">
            <summary>The value of X in the message, -1 if no variable X was found</summary>
        </member>
        <member name="F:TL.DestroyAuthKeyRes.Ok">
            <summary>See <a href="https://corefork.telegram.org/constructor/destroy_auth_key_ok"/></summary>
        </member>
        <member name="F:TL.DestroyAuthKeyRes.None">
            <summary>See <a href="https://corefork.telegram.org/constructor/destroy_auth_key_none"/></summary>
        </member>
        <member name="F:TL.DestroyAuthKeyRes.Fail">
            <summary>See <a href="https://corefork.telegram.org/constructor/destroy_auth_key_fail"/></summary>
        </member>
        <member name="T:TL.Bool">
            <summary>Boolean type.		<para>See <a href="https://corefork.telegram.org/type/Bool"/></para></summary>
        </member>
        <member name="F:TL.Bool.False">
            <summary>Constructor may be interpreted as a <strong>boolean</strong><c>false</c> value.</summary>
        </member>
        <member name="F:TL.Bool.True">
            <summary>The constructor can be interpreted as a <strong>boolean</strong><c>true</c> value.</summary>
        </member>
        <member name="T:TL.True">
            <summary>See <a href="https://corefork.telegram.org/mtproto/TL-formal#predefined-identifiers">predefined identifiers</a>.		<para>See <a href="https://corefork.telegram.org/constructor/true"/></para></summary>
        </member>
        <member name="T:TL.Error">
            <summary>Error.		<para>See <a href="https://corefork.telegram.org/constructor/error"/></para></summary>
        </member>
        <member name="F:TL.Error.code">
            <summary>Error code</summary>
        </member>
        <member name="F:TL.Error.text">
            <summary>Message</summary>
        </member>
        <member name="T:TL.Null">
            <summary>Corresponds to an arbitrary empty object.		<para>See <a href="https://corefork.telegram.org/constructor/null"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/null">null</a></remarks>
        </member>
        <member name="T:TL.InputPeer">
            <summary>Peer		<para>See <a href="https://corefork.telegram.org/type/InputPeer"/></para>		<para>Derived classes: <see cref="T:TL.InputPeerSelf"/>, <see cref="T:TL.InputPeerChat"/>, <see cref="T:TL.InputPeerUser"/>, <see cref="T:TL.InputPeerChannel"/>, <see cref="T:TL.InputPeerUserFromMessage"/>, <see cref="T:TL.InputPeerChannelFromMessage"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/inputPeerEmpty">inputPeerEmpty</a></remarks>
        </member>
        <member name="T:TL.InputPeerSelf">
            <summary>Defines the current user.		<para>See <a href="https://corefork.telegram.org/constructor/inputPeerSelf"/></para></summary>
        </member>
        <member name="T:TL.InputPeerChat">
            <summary>Defines a chat for further interaction.		<para>See <a href="https://corefork.telegram.org/constructor/inputPeerChat"/></para></summary>
        </member>
        <member name="F:TL.InputPeerChat.chat_id">
            <summary>Chat identifier</summary>
        </member>
        <member name="M:TL.InputPeerChat.#ctor(System.Int64)">
            <summary>⚠ <b>This type is only for basic Chat</b>. See <see href="https://wiz0u.github.io/WTelegramClient/#terminology">Terminology</see> in the README to understand what this means<br/>Chat groups of type Channel must use <see cref="T:TL.InputPeerChannel"/>.</summary>
            <param name="chat_id">Chat identifier</param>
        </member>
        <member name="T:TL.InputPeerUser">
            <summary>Defines a user for further interaction.		<para>See <a href="https://corefork.telegram.org/constructor/inputPeerUser"/></para></summary>
        </member>
        <member name="F:TL.InputPeerUser.user_id">
            <summary>User identifier</summary>
        </member>
        <member name="F:TL.InputPeerUser.access_hash">
            <summary>⚠ <b>REQUIRED FIELD</b>. See <see href="https://wiz0u.github.io/WTelegramClient/FAQ#access-hash">how to obtain it</see><br/><strong>access_hash</strong> value from the <see cref="T:TL.User"/></summary>
        </member>
        <member name="M:TL.InputPeerUser.#ctor(System.Int64,System.Int64)">
            <param name="user_id">User identifier</param>
            <param name="access_hash">⚠ <b>REQUIRED FIELD</b>. See FAQ for how to obtain it<br/><strong>access_hash</strong> value from the <see cref="T:TL.User"/> structure</param>
        </member>
        <member name="T:TL.InputPeerChannel">
            <summary>Defines a channel for further interaction.		<para>See <a href="https://corefork.telegram.org/constructor/inputPeerChannel"/></para></summary>
        </member>
        <member name="F:TL.InputPeerChannel.channel_id">
            <summary>Channel identifier</summary>
        </member>
        <member name="F:TL.InputPeerChannel.access_hash">
            <summary>⚠ <b>REQUIRED FIELD</b>. See <see href="https://wiz0u.github.io/WTelegramClient/FAQ#access-hash">how to obtain it</see><br/><strong>access_hash</strong> value from the <see cref="T:TL.Channel"/></summary>
        </member>
        <member name="M:TL.InputPeerChannel.#ctor(System.Int64,System.Int64)">
            <param name="channel_id">Channel identifier</param>
            <param name="access_hash">⚠ <b>REQUIRED FIELD</b>. See FAQ for how to obtain it<br/><strong>access_hash</strong> value from the <see cref="T:TL.Channel"/> structure</param>
        </member>
        <member name="T:TL.InputPeerUserFromMessage">
            <summary>Defines a <a href="https://corefork.telegram.org/api/min">min</a> user that was seen in a certain message of a certain chat.		<para>See <a href="https://corefork.telegram.org/constructor/inputPeerUserFromMessage"/></para></summary>
        </member>
        <member name="F:TL.InputPeerUserFromMessage.peer">
            <summary>The chat where the user was seen</summary>
        </member>
        <member name="F:TL.InputPeerUserFromMessage.msg_id">
            <summary>The message ID</summary>
        </member>
        <member name="F:TL.InputPeerUserFromMessage.user_id">
            <summary>The identifier of the user that was seen</summary>
        </member>
        <member name="T:TL.InputPeerChannelFromMessage">
            <summary>Defines a <a href="https://corefork.telegram.org/api/min">min</a> channel that was seen in a certain message of a certain chat.		<para>See <a href="https://corefork.telegram.org/constructor/inputPeerChannelFromMessage"/></para></summary>
        </member>
        <member name="F:TL.InputPeerChannelFromMessage.peer">
            <summary>The chat where the channel's message was seen</summary>
        </member>
        <member name="F:TL.InputPeerChannelFromMessage.msg_id">
            <summary>The message ID</summary>
        </member>
        <member name="F:TL.InputPeerChannelFromMessage.channel_id">
            <summary>The identifier of the channel that was seen</summary>
        </member>
        <member name="T:TL.InputUserBase">
            <summary>Defines a user for subsequent interaction.		<para>See <a href="https://corefork.telegram.org/type/InputUser"/></para>		<para>Derived classes: <see cref="T:TL.InputUserSelf"/>, <see cref="T:TL.InputUser"/>, <see cref="T:TL.InputUserFromMessage"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/inputUserEmpty">inputUserEmpty</a></remarks>
        </member>
        <member name="T:TL.InputUserSelf">
            <summary>Defines the current user.		<para>See <a href="https://corefork.telegram.org/constructor/inputUserSelf"/></para></summary>
        </member>
        <member name="T:TL.InputUser">
            <summary>Defines a user for further interaction.		<para>See <a href="https://corefork.telegram.org/constructor/inputUser"/></para></summary>
        </member>
        <member name="F:TL.InputUser.user_id">
            <summary>User identifier</summary>
        </member>
        <member name="F:TL.InputUser.access_hash">
            <summary>⚠ <b>REQUIRED FIELD</b>. See <see href="https://wiz0u.github.io/WTelegramClient/FAQ#access-hash">how to obtain it</see><br/><strong>access_hash</strong> value from the <see cref="T:TL.User"/></summary>
        </member>
        <member name="M:TL.InputUser.#ctor(System.Int64,System.Int64)">
            <param name="user_id">User identifier</param>
            <param name="access_hash">⚠ <b>REQUIRED FIELD</b>. See FAQ for how to obtain it<br/><strong>access_hash</strong> value from the <see cref="T:TL.User"/> structure</param>
        </member>
        <member name="T:TL.InputUserFromMessage">
            <summary>Defines a <a href="https://corefork.telegram.org/api/min">min</a> user that was seen in a certain message of a certain chat.		<para>See <a href="https://corefork.telegram.org/constructor/inputUserFromMessage"/></para></summary>
        </member>
        <member name="F:TL.InputUserFromMessage.peer">
            <summary>The chat where the user was seen</summary>
        </member>
        <member name="F:TL.InputUserFromMessage.msg_id">
            <summary>The message ID</summary>
        </member>
        <member name="F:TL.InputUserFromMessage.user_id">
            <summary>The identifier of the user that was seen</summary>
        </member>
        <member name="T:TL.InputContact">
            <summary>Object defines a contact from the user's phone book.		<para>See <a href="https://corefork.telegram.org/type/InputContact"/></para>		<para>Derived classes: <see cref="T:TL.InputPhoneContact"/></para></summary>
        </member>
        <member name="T:TL.InputPhoneContact">
            <summary>Phone contact.		<para>See <a href="https://corefork.telegram.org/constructor/inputPhoneContact"/></para></summary>
        </member>
        <member name="F:TL.InputPhoneContact.client_id">
            <summary>An arbitrary 64-bit integer: it should be set, for example, to an incremental number when using <see cref="M:TL.SchemaExtensions.Contacts_ImportContacts(WTelegram.Client,TL.InputContact[])">Contacts_ImportContacts</see>, in order to retry importing only the contacts that weren't imported successfully, according to the client_ids returned in <see cref="T:TL.Contacts_ImportedContacts"/>.<c>retry_contacts</c>.</summary>
        </member>
        <member name="F:TL.InputPhoneContact.phone">
            <summary>Phone number</summary>
        </member>
        <member name="F:TL.InputPhoneContact.first_name">
            <summary>Contact's first name</summary>
        </member>
        <member name="F:TL.InputPhoneContact.last_name">
            <summary>Contact's last name</summary>
        </member>
        <member name="T:TL.InputFileBase">
            <summary>Defines a file uploaded by the client.		<para>See <a href="https://corefork.telegram.org/type/InputFile"/></para>		<para>Derived classes: <see cref="T:TL.InputFile"/>, <see cref="T:TL.InputFileBig"/></para></summary>
        </member>
        <member name="P:TL.InputFileBase.ID">
            <summary>Random file identifier created by the client</summary>
        </member>
        <member name="P:TL.InputFileBase.Parts">
            <summary>Number of parts saved</summary>
        </member>
        <member name="P:TL.InputFileBase.Name">
            <summary>Full name of the file</summary>
        </member>
        <member name="M:TL.InputFileBase.ToInputChatPhoto(System.Nullable{System.Boolean})">
            <param name="isSquareVideo10s"><see langword="false"/> for a profile photo. <see langword="null"/> for auto-detection<br/><see langword="true"/> for a profile video. The video <u>MUST</u> be square, 10 seconds max, larger than 160x160</param>
        </member>
        <member name="T:TL.InputFile">
            <summary>Defines a file saved in parts using the method <see cref="M:TL.SchemaExtensions.Upload_SaveFilePart(WTelegram.Client,System.Int64,System.Int32,System.Byte[])">Upload_SaveFilePart</see>.		<para>See <a href="https://corefork.telegram.org/constructor/inputFile"/></para></summary>
        </member>
        <member name="F:TL.InputFile.id">
            <summary>Random file identifier created by the client</summary>
        </member>
        <member name="F:TL.InputFile.parts">
            <summary>Number of parts saved</summary>
        </member>
        <member name="F:TL.InputFile.name">
            <summary>Full name of the file</summary>
        </member>
        <member name="F:TL.InputFile.md5_checksum">
            <summary>In case the file's <a href="https://en.wikipedia.org/wiki/MD5#MD5_hashes">md5-hash</a> was passed, contents of the file will be checked prior to use</summary>
        </member>
        <member name="P:TL.InputFile.ID">
            <summary>Random file identifier created by the client</summary>
        </member>
        <member name="P:TL.InputFile.Parts">
            <summary>Number of parts saved</summary>
        </member>
        <member name="P:TL.InputFile.Name">
            <summary>Full name of the file</summary>
        </member>
        <member name="T:TL.InputFileBig">
            <summary>Assigns a big file (over 10 MB in size), saved in part using the method <see cref="M:TL.SchemaExtensions.Upload_SaveBigFilePart(WTelegram.Client,System.Int64,System.Int32,System.Int32,System.Byte[])">Upload_SaveBigFilePart</see>.		<para>See <a href="https://corefork.telegram.org/constructor/inputFileBig"/></para></summary>
        </member>
        <member name="F:TL.InputFileBig.id">
            <summary>Random file id, created by the client</summary>
        </member>
        <member name="F:TL.InputFileBig.parts">
            <summary>Number of parts saved</summary>
        </member>
        <member name="F:TL.InputFileBig.name">
            <summary>Full file name</summary>
        </member>
        <member name="P:TL.InputFileBig.ID">
            <summary>Random file id, created by the client</summary>
        </member>
        <member name="P:TL.InputFileBig.Parts">
            <summary>Number of parts saved</summary>
        </member>
        <member name="P:TL.InputFileBig.Name">
            <summary>Full file name</summary>
        </member>
        <member name="T:TL.InputMedia">
            <summary>Defines media content of a message.		<para>See <a href="https://corefork.telegram.org/type/InputMedia"/></para>		<para>Derived classes: <see cref="T:TL.InputMediaUploadedPhoto"/>, <see cref="T:TL.InputMediaPhoto"/>, <see cref="T:TL.InputMediaGeoPoint"/>, <see cref="T:TL.InputMediaContact"/>, <see cref="T:TL.InputMediaUploadedDocument"/>, <see cref="T:TL.InputMediaDocument"/>, <see cref="T:TL.InputMediaVenue"/>, <see cref="T:TL.InputMediaPhotoExternal"/>, <see cref="T:TL.InputMediaDocumentExternal"/>, <see cref="T:TL.InputMediaGame"/>, <see cref="T:TL.InputMediaInvoice"/>, <see cref="T:TL.InputMediaGeoLive"/>, <see cref="T:TL.InputMediaPoll"/>, <see cref="T:TL.InputMediaDice"/>, <see cref="T:TL.InputMediaStory"/>, <see cref="T:TL.InputMediaWebPage"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/inputMediaEmpty">inputMediaEmpty</a></remarks>
        </member>
        <member name="T:TL.InputMediaUploadedPhoto">
            <summary>Photo		<para>See <a href="https://corefork.telegram.org/constructor/inputMediaUploadedPhoto"/></para></summary>
        </member>
        <member name="F:TL.InputMediaUploadedPhoto.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.InputMediaUploadedPhoto.file">
            <summary>The <a href="https://corefork.telegram.org/api/files">uploaded file</a></summary>
        </member>
        <member name="F:TL.InputMediaUploadedPhoto.stickers">
            <summary>Attached mask stickers</summary>
        </member>
        <member name="F:TL.InputMediaUploadedPhoto.ttl_seconds">
            <summary>Time to live in seconds of self-destructing photo</summary>
        </member>
        <member name="F:TL.InputMediaUploadedPhoto.Flags.has_stickers">
            <summary>Field <see cref="F:TL.InputMediaUploadedPhoto.stickers"/> has a value</summary>
        </member>
        <member name="F:TL.InputMediaUploadedPhoto.Flags.has_ttl_seconds">
            <summary>Field <see cref="F:TL.InputMediaUploadedPhoto.ttl_seconds"/> has a value</summary>
        </member>
        <member name="F:TL.InputMediaUploadedPhoto.Flags.spoiler">
            <summary>Whether this media should be hidden behind a spoiler warning</summary>
        </member>
        <member name="T:TL.InputMediaPhoto">
            <summary>Forwarded photo		<para>See <a href="https://corefork.telegram.org/constructor/inputMediaPhoto"/></para></summary>
        </member>
        <member name="F:TL.InputMediaPhoto.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.InputMediaPhoto.id">
            <summary>Photo to be forwarded</summary>
        </member>
        <member name="F:TL.InputMediaPhoto.ttl_seconds">
            <summary>Time to live in seconds of self-destructing photo</summary>
        </member>
        <member name="F:TL.InputMediaPhoto.Flags.has_ttl_seconds">
            <summary>Field <see cref="F:TL.InputMediaPhoto.ttl_seconds"/> has a value</summary>
        </member>
        <member name="F:TL.InputMediaPhoto.Flags.spoiler">
            <summary>Whether this media should be hidden behind a spoiler warning</summary>
        </member>
        <member name="T:TL.InputMediaGeoPoint">
            <summary>Map.		<para>See <a href="https://corefork.telegram.org/constructor/inputMediaGeoPoint"/></para></summary>
        </member>
        <member name="F:TL.InputMediaGeoPoint.geo_point">
            <summary>GeoPoint</summary>
        </member>
        <member name="T:TL.InputMediaContact">
            <summary>Phone book contact		<para>See <a href="https://corefork.telegram.org/constructor/inputMediaContact"/></para></summary>
        </member>
        <member name="F:TL.InputMediaContact.phone_number">
            <summary>Phone number</summary>
        </member>
        <member name="F:TL.InputMediaContact.first_name">
            <summary>Contact's first name</summary>
        </member>
        <member name="F:TL.InputMediaContact.last_name">
            <summary>Contact's last name</summary>
        </member>
        <member name="F:TL.InputMediaContact.vcard">
            <summary>Contact vcard</summary>
        </member>
        <member name="T:TL.InputMediaUploadedDocument">
            <summary>New document		<para>See <a href="https://corefork.telegram.org/constructor/inputMediaUploadedDocument"/></para></summary>
        </member>
        <member name="F:TL.InputMediaUploadedDocument.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.InputMediaUploadedDocument.file">
            <summary>The <a href="https://corefork.telegram.org/api/files">uploaded file</a></summary>
        </member>
        <member name="F:TL.InputMediaUploadedDocument.thumb">
            <summary>Thumbnail of the document, uploaded as for the file</summary>
        </member>
        <member name="F:TL.InputMediaUploadedDocument.mime_type">
            <summary>MIME type of document</summary>
        </member>
        <member name="F:TL.InputMediaUploadedDocument.attributes">
            <summary>Attributes that specify the type of the document (video, audio, voice, sticker, etc.)</summary>
        </member>
        <member name="F:TL.InputMediaUploadedDocument.stickers">
            <summary>Attached stickers</summary>
        </member>
        <member name="F:TL.InputMediaUploadedDocument.ttl_seconds">
            <summary>Time to live in seconds of self-destructing document</summary>
        </member>
        <member name="F:TL.InputMediaUploadedDocument.Flags.has_stickers">
            <summary>Field <see cref="F:TL.InputMediaUploadedDocument.stickers"/> has a value</summary>
        </member>
        <member name="F:TL.InputMediaUploadedDocument.Flags.has_ttl_seconds">
            <summary>Field <see cref="F:TL.InputMediaUploadedDocument.ttl_seconds"/> has a value</summary>
        </member>
        <member name="F:TL.InputMediaUploadedDocument.Flags.has_thumb">
            <summary>Field <see cref="F:TL.InputMediaUploadedDocument.thumb"/> has a value</summary>
        </member>
        <member name="F:TL.InputMediaUploadedDocument.Flags.nosound_video">
            <summary>Whether the specified document is a video file with no audio tracks (a GIF animation (even as MPEG4), for example)</summary>
        </member>
        <member name="F:TL.InputMediaUploadedDocument.Flags.force_file">
            <summary>Force the media file to be uploaded as document</summary>
        </member>
        <member name="F:TL.InputMediaUploadedDocument.Flags.spoiler">
            <summary>Whether this media should be hidden behind a spoiler warning</summary>
        </member>
        <member name="T:TL.InputMediaDocument">
            <summary>Forwarded document		<para>See <a href="https://corefork.telegram.org/constructor/inputMediaDocument"/></para></summary>
        </member>
        <member name="F:TL.InputMediaDocument.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.InputMediaDocument.id">
            <summary>The document to be forwarded.</summary>
        </member>
        <member name="F:TL.InputMediaDocument.ttl_seconds">
            <summary>Time to live of self-destructing document</summary>
        </member>
        <member name="F:TL.InputMediaDocument.query">
            <summary>Text query or emoji that was used by the user to find this sticker or GIF: used to improve search result relevance.</summary>
        </member>
        <member name="F:TL.InputMediaDocument.Flags.has_ttl_seconds">
            <summary>Field <see cref="F:TL.InputMediaDocument.ttl_seconds"/> has a value</summary>
        </member>
        <member name="F:TL.InputMediaDocument.Flags.has_query">
            <summary>Field <see cref="F:TL.InputMediaDocument.query"/> has a value</summary>
        </member>
        <member name="F:TL.InputMediaDocument.Flags.spoiler">
            <summary>Whether this media should be hidden behind a spoiler warning</summary>
        </member>
        <member name="T:TL.InputMediaVenue">
            <summary>Can be used to send a venue geolocation.		<para>See <a href="https://corefork.telegram.org/constructor/inputMediaVenue"/></para></summary>
        </member>
        <member name="F:TL.InputMediaVenue.geo_point">
            <summary>Geolocation</summary>
        </member>
        <member name="F:TL.InputMediaVenue.title">
            <summary>Venue name</summary>
        </member>
        <member name="F:TL.InputMediaVenue.address">
            <summary>Physical address of the venue</summary>
        </member>
        <member name="F:TL.InputMediaVenue.provider">
            <summary>Venue provider: currently only "foursquare" and "gplaces" (Google Places) need to be supported</summary>
        </member>
        <member name="F:TL.InputMediaVenue.venue_id">
            <summary>Venue ID in the provider's database</summary>
        </member>
        <member name="F:TL.InputMediaVenue.venue_type">
            <summary>Venue type in the provider's database</summary>
        </member>
        <member name="T:TL.InputMediaPhotoExternal">
            <summary>New photo that will be uploaded by the server using the specified URL		<para>See <a href="https://corefork.telegram.org/constructor/inputMediaPhotoExternal"/></para></summary>
        </member>
        <member name="F:TL.InputMediaPhotoExternal.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.InputMediaPhotoExternal.url">
            <summary>URL of the photo</summary>
        </member>
        <member name="F:TL.InputMediaPhotoExternal.ttl_seconds">
            <summary>Self-destruct time to live of photo</summary>
        </member>
        <member name="F:TL.InputMediaPhotoExternal.Flags.has_ttl_seconds">
            <summary>Field <see cref="F:TL.InputMediaPhotoExternal.ttl_seconds"/> has a value</summary>
        </member>
        <member name="F:TL.InputMediaPhotoExternal.Flags.spoiler">
            <summary>Whether this media should be hidden behind a spoiler warning</summary>
        </member>
        <member name="T:TL.InputMediaDocumentExternal">
            <summary>Document that will be downloaded by the telegram servers		<para>See <a href="https://corefork.telegram.org/constructor/inputMediaDocumentExternal"/></para></summary>
        </member>
        <member name="F:TL.InputMediaDocumentExternal.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.InputMediaDocumentExternal.url">
            <summary>URL of the document</summary>
        </member>
        <member name="F:TL.InputMediaDocumentExternal.ttl_seconds">
            <summary>Self-destruct time to live of document</summary>
        </member>
        <member name="F:TL.InputMediaDocumentExternal.Flags.has_ttl_seconds">
            <summary>Field <see cref="F:TL.InputMediaDocumentExternal.ttl_seconds"/> has a value</summary>
        </member>
        <member name="F:TL.InputMediaDocumentExternal.Flags.spoiler">
            <summary>Whether this media should be hidden behind a spoiler warning</summary>
        </member>
        <member name="T:TL.InputMediaGame">
            <summary>A game		<para>See <a href="https://corefork.telegram.org/constructor/inputMediaGame"/></para></summary>
        </member>
        <member name="F:TL.InputMediaGame.id">
            <summary>The game to forward</summary>
        </member>
        <member name="T:TL.InputMediaInvoice">
            <summary>Generated invoice of a <a href="https://corefork.telegram.org/bots/payments">bot payment</a>		<para>See <a href="https://corefork.telegram.org/constructor/inputMediaInvoice"/></para></summary>
        </member>
        <member name="F:TL.InputMediaInvoice.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.InputMediaInvoice.title">
            <summary>Product name, 1-32 characters</summary>
        </member>
        <member name="F:TL.InputMediaInvoice.description">
            <summary>Product description, 1-255 characters</summary>
        </member>
        <member name="F:TL.InputMediaInvoice.photo">
            <summary>URL of the product photo for the invoice. Can be a photo of the goods or a marketing image for a service. People like it better when they see what they are paying for.</summary>
        </member>
        <member name="F:TL.InputMediaInvoice.invoice">
            <summary>The actual invoice</summary>
        </member>
        <member name="F:TL.InputMediaInvoice.payload">
            <summary>Bot-defined invoice payload, 1-128 bytes. This will not be displayed to the user, use for your internal processes.</summary>
        </member>
        <member name="F:TL.InputMediaInvoice.provider">
            <summary>Payments provider token, obtained via <a href="https://t.me/botfather">Botfather</a></summary>
        </member>
        <member name="F:TL.InputMediaInvoice.provider_data">
            <summary>JSON-encoded data about the invoice, which will be shared with the payment provider. A detailed description of required fields should be provided by the payment provider.</summary>
        </member>
        <member name="F:TL.InputMediaInvoice.start_param">
            <summary>Unique <a href="https://corefork.telegram.org/api/links#bot-links">bot deep links start parameter</a>. If present, forwarded copies of the sent message will have a URL button with a <a href="https://corefork.telegram.org/api/links#bot-links">deep link</a> to the bot (instead of a Pay button), with the value used as the start parameter. If absent, forwarded copies of the sent message will have a Pay button, allowing multiple users to pay directly from the forwarded message, using the same invoice.</summary>
        </member>
        <member name="F:TL.InputMediaInvoice.extended_media">
            <summary>Extended media</summary>
        </member>
        <member name="F:TL.InputMediaInvoice.Flags.has_photo">
            <summary>Field <see cref="F:TL.InputMediaInvoice.photo"/> has a value</summary>
        </member>
        <member name="F:TL.InputMediaInvoice.Flags.has_start_param">
            <summary>Field <see cref="F:TL.InputMediaInvoice.start_param"/> has a value</summary>
        </member>
        <member name="F:TL.InputMediaInvoice.Flags.has_extended_media">
            <summary>Field <see cref="F:TL.InputMediaInvoice.extended_media"/> has a value</summary>
        </member>
        <member name="T:TL.InputMediaGeoLive">
            <summary><a href="https://corefork.telegram.org/api/live-location">Live geolocation</a>		<para>See <a href="https://corefork.telegram.org/constructor/inputMediaGeoLive"/></para></summary>
        </member>
        <member name="F:TL.InputMediaGeoLive.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.InputMediaGeoLive.geo_point">
            <summary>Current geolocation</summary>
        </member>
        <member name="F:TL.InputMediaGeoLive.heading">
            <summary>For <a href="https://corefork.telegram.org/api/live-location">live locations</a>, a direction in which the location moves, in degrees; 1-360.</summary>
        </member>
        <member name="F:TL.InputMediaGeoLive.period">
            <summary>Validity period of the current location</summary>
        </member>
        <member name="F:TL.InputMediaGeoLive.proximity_notification_radius">
            <summary>For <a href="https://corefork.telegram.org/api/live-location">live locations</a>, a maximum distance to another chat member for proximity alerts, in meters (0-100000)</summary>
        </member>
        <member name="F:TL.InputMediaGeoLive.Flags.stopped">
            <summary>Whether sending of the geolocation was stopped</summary>
        </member>
        <member name="F:TL.InputMediaGeoLive.Flags.has_period">
            <summary>Field <see cref="F:TL.InputMediaGeoLive.period"/> has a value</summary>
        </member>
        <member name="F:TL.InputMediaGeoLive.Flags.has_heading">
            <summary>Field <see cref="F:TL.InputMediaGeoLive.heading"/> has a value</summary>
        </member>
        <member name="F:TL.InputMediaGeoLive.Flags.has_proximity_notification_radius">
            <summary>Field <see cref="F:TL.InputMediaGeoLive.proximity_notification_radius"/> has a value</summary>
        </member>
        <member name="T:TL.InputMediaPoll">
            <summary>A poll		<para>See <a href="https://corefork.telegram.org/constructor/inputMediaPoll"/></para></summary>
        </member>
        <member name="F:TL.InputMediaPoll.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.InputMediaPoll.poll">
            <summary>The poll to send</summary>
        </member>
        <member name="F:TL.InputMediaPoll.correct_answers">
            <summary>Correct answer IDs (for quiz polls)</summary>
        </member>
        <member name="F:TL.InputMediaPoll.solution">
            <summary>Explanation of quiz solution</summary>
        </member>
        <member name="F:TL.InputMediaPoll.solution_entities">
            <summary><a href="https://corefork.telegram.org/api/entities">Message entities for styled text</a></summary>
        </member>
        <member name="F:TL.InputMediaPoll.Flags.has_correct_answers">
            <summary>Field <see cref="F:TL.InputMediaPoll.correct_answers"/> has a value</summary>
        </member>
        <member name="F:TL.InputMediaPoll.Flags.has_solution">
            <summary>Fields <see cref="F:TL.InputMediaPoll.solution"/> and <see cref="F:TL.InputMediaPoll.solution_entities"/> have a value</summary>
        </member>
        <member name="T:TL.InputMediaDice">
            <summary>Send a <a href="https://corefork.telegram.org/api/dice">dice-based animated sticker</a>		<para>See <a href="https://corefork.telegram.org/constructor/inputMediaDice"/></para></summary>
        </member>
        <member name="F:TL.InputMediaDice.emoticon">
            <summary>The emoji, for now 🏀, 🎲 and 🎯 are supported</summary>
        </member>
        <member name="T:TL.InputMediaStory">
            <summary>Forwarded story		<para>See <a href="https://corefork.telegram.org/constructor/inputMediaStory"/></para></summary>
        </member>
        <member name="F:TL.InputMediaStory.peer">
            <summary>Peer where the story was posted</summary>
        </member>
        <member name="F:TL.InputMediaStory.id">
            <summary>Story ID</summary>
        </member>
        <member name="T:TL.InputMediaWebPage">
            <summary>Specifies options that will be used to generate the link preview for the caption, or even a standalone link preview without an attached message.		<para>See <a href="https://corefork.telegram.org/constructor/inputMediaWebPage"/></para></summary>
        </member>
        <member name="F:TL.InputMediaWebPage.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.InputMediaWebPage.url">
            <summary>The URL to use for the link preview.</summary>
        </member>
        <member name="F:TL.InputMediaWebPage.Flags.force_large_media">
            <summary>If set, specifies that a large media preview should be used.</summary>
        </member>
        <member name="F:TL.InputMediaWebPage.Flags.force_small_media">
            <summary>If set, specifies that a small media preview should be used.</summary>
        </member>
        <member name="F:TL.InputMediaWebPage.Flags.optional">
            <summary>If <strong>not</strong> set, a <c>WEBPAGE_NOT_FOUND</c> RPC error will be emitted if a webpage preview cannot be generated for the specified <c>url</c>; otherwise, no error will be emitted (unless the provided message is also empty, in which case a <c>MESSAGE_EMPTY</c> will be emitted, instead).</summary>
        </member>
        <member name="T:TL.InputChatPhotoBase">
            <summary>Defines a new group profile photo.		<para>See <a href="https://corefork.telegram.org/type/InputChatPhoto"/></para>		<para>Derived classes: <see cref="T:TL.InputChatUploadedPhoto"/>, <see cref="T:TL.InputChatPhoto"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/inputChatPhotoEmpty">inputChatPhotoEmpty</a></remarks>
        </member>
        <member name="T:TL.InputChatUploadedPhoto">
            <summary>New photo to be set as group profile photo.		<para>See <a href="https://corefork.telegram.org/constructor/inputChatUploadedPhoto"/></para></summary>
        </member>
        <member name="F:TL.InputChatUploadedPhoto.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.InputChatUploadedPhoto.file">
            <summary>File saved in parts using the method <see cref="M:TL.SchemaExtensions.Upload_SaveFilePart(WTelegram.Client,System.Int64,System.Int32,System.Byte[])">Upload_SaveFilePart</see></summary>
        </member>
        <member name="F:TL.InputChatUploadedPhoto.video">
            <summary>Square video for animated profile picture</summary>
        </member>
        <member name="F:TL.InputChatUploadedPhoto.video_start_ts">
            <summary>Floating point UNIX timestamp in seconds, indicating the frame of the video/sticker that should be used as static preview; can only be used if <c>video</c> or <c>video_emoji_markup</c> is set.</summary>
        </member>
        <member name="F:TL.InputChatUploadedPhoto.video_emoji_markup">
            <summary>Animated sticker profile picture, must contain either a <see cref="T:TL.VideoSizeEmojiMarkup"/> or a <see cref="T:TL.VideoSizeStickerMarkup"/>.</summary>
        </member>
        <member name="F:TL.InputChatUploadedPhoto.Flags.has_file">
            <summary>Field <see cref="F:TL.InputChatUploadedPhoto.file"/> has a value</summary>
        </member>
        <member name="F:TL.InputChatUploadedPhoto.Flags.has_video">
            <summary>Field <see cref="F:TL.InputChatUploadedPhoto.video"/> has a value</summary>
        </member>
        <member name="F:TL.InputChatUploadedPhoto.Flags.has_video_start_ts">
            <summary>Field <see cref="F:TL.InputChatUploadedPhoto.video_start_ts"/> has a value</summary>
        </member>
        <member name="F:TL.InputChatUploadedPhoto.Flags.has_video_emoji_markup">
            <summary>Field <see cref="F:TL.InputChatUploadedPhoto.video_emoji_markup"/> has a value</summary>
        </member>
        <member name="T:TL.InputChatPhoto">
            <summary>Existing photo to be set as a chat profile photo.		<para>See <a href="https://corefork.telegram.org/constructor/inputChatPhoto"/></para></summary>
        </member>
        <member name="F:TL.InputChatPhoto.id">
            <summary>Existing photo</summary>
        </member>
        <member name="T:TL.InputGeoPoint">
            <summary>Defines a GeoPoint by its coordinates.		<para>See <a href="https://corefork.telegram.org/constructor/inputGeoPoint"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/inputGeoPointEmpty">inputGeoPointEmpty</a></remarks>
        </member>
        <member name="F:TL.InputGeoPoint.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.InputGeoPoint.lat">
            <summary>Latitude</summary>
        </member>
        <member name="F:TL.InputGeoPoint.lon">
            <summary>Longitude</summary>
        </member>
        <member name="F:TL.InputGeoPoint.accuracy_radius">
            <summary>The estimated horizontal accuracy of the location, in meters; as defined by the sender.</summary>
        </member>
        <member name="F:TL.InputGeoPoint.Flags.has_accuracy_radius">
            <summary>Field <see cref="F:TL.InputGeoPoint.accuracy_radius"/> has a value</summary>
        </member>
        <member name="T:TL.InputPhoto">
            <summary>Defines a photo for further interaction.		<para>See <a href="https://corefork.telegram.org/constructor/inputPhoto"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/inputPhotoEmpty">inputPhotoEmpty</a></remarks>
        </member>
        <member name="F:TL.InputPhoto.id">
            <summary>Photo identifier</summary>
        </member>
        <member name="F:TL.InputPhoto.access_hash">
            <summary>⚠ <b>REQUIRED FIELD</b>. See <see href="https://wiz0u.github.io/WTelegramClient/FAQ#access-hash">how to obtain it</see><br/><strong>access_hash</strong> value from the <see cref="T:TL.Photo"/></summary>
        </member>
        <member name="F:TL.InputPhoto.file_reference">
            <summary><a href="https://corefork.telegram.org/api/file_reference">File reference</a></summary>
        </member>
        <member name="T:TL.InputFileLocationBase">
            <summary>Defines the location of a file for download.		<para>See <a href="https://corefork.telegram.org/type/InputFileLocation"/></para>		<para>Derived classes: <see cref="T:TL.InputFileLocation"/>, <see cref="T:TL.InputEncryptedFileLocation"/>, <see cref="T:TL.InputDocumentFileLocation"/>, <see cref="T:TL.InputSecureFileLocation"/>, <see cref="T:TL.InputTakeoutFileLocation"/>, <see cref="T:TL.InputPhotoFileLocation"/>, <see cref="T:TL.InputPhotoLegacyFileLocation"/>, <see cref="T:TL.InputPeerPhotoFileLocation"/>, <see cref="T:TL.InputStickerSetThumb"/>, <see cref="T:TL.InputGroupCallStream"/></para></summary>
        </member>
        <member name="T:TL.InputFileLocation">
            <summary>DEPRECATED location of a photo		<para>See <a href="https://corefork.telegram.org/constructor/inputFileLocation"/></para></summary>
        </member>
        <member name="F:TL.InputFileLocation.volume_id">
            <summary>Server volume</summary>
        </member>
        <member name="F:TL.InputFileLocation.local_id">
            <summary>File identifier</summary>
        </member>
        <member name="F:TL.InputFileLocation.secret">
            <summary>Check sum to access the file</summary>
        </member>
        <member name="F:TL.InputFileLocation.file_reference">
            <summary><a href="https://corefork.telegram.org/api/file_reference">File reference</a></summary>
        </member>
        <member name="T:TL.InputEncryptedFileLocation">
            <summary>Location of encrypted secret chat file.		<para>See <a href="https://corefork.telegram.org/constructor/inputEncryptedFileLocation"/></para></summary>
        </member>
        <member name="F:TL.InputEncryptedFileLocation.id">
            <summary>File ID, <strong>id</strong> parameter value from <see cref="T:TL.EncryptedFile"/></summary>
        </member>
        <member name="F:TL.InputEncryptedFileLocation.access_hash">
            <summary>⚠ <b>REQUIRED FIELD</b>. See <see href="https://wiz0u.github.io/WTelegramClient/FAQ#access-hash">how to obtain it</see><br/>Checksum, <strong>access_hash</strong> parameter value from <see cref="T:TL.EncryptedFile"/></summary>
        </member>
        <member name="T:TL.InputDocumentFileLocation">
            <summary>Document location (video, voice, audio, basically every type except photo)		<para>See <a href="https://corefork.telegram.org/constructor/inputDocumentFileLocation"/></para></summary>
        </member>
        <member name="F:TL.InputDocumentFileLocation.id">
            <summary>Document ID</summary>
        </member>
        <member name="F:TL.InputDocumentFileLocation.access_hash">
            <summary>⚠ <b>REQUIRED FIELD</b>. See <see href="https://wiz0u.github.io/WTelegramClient/FAQ#access-hash">how to obtain it</see><br/><strong>access_hash</strong> parameter from the <see cref="T:TL.Document"/></summary>
        </member>
        <member name="F:TL.InputDocumentFileLocation.file_reference">
            <summary><a href="https://corefork.telegram.org/api/file_reference">File reference</a></summary>
        </member>
        <member name="F:TL.InputDocumentFileLocation.thumb_size">
            <summary>Thumbnail size to download the thumbnail</summary>
        </member>
        <member name="T:TL.InputSecureFileLocation">
            <summary>Location of encrypted telegram <a href="https://corefork.telegram.org/passport">passport</a> file.		<para>See <a href="https://corefork.telegram.org/constructor/inputSecureFileLocation"/></para></summary>
        </member>
        <member name="F:TL.InputSecureFileLocation.id">
            <summary>File ID, <strong>id</strong> parameter value from <see cref="T:TL.SecureFile"/></summary>
        </member>
        <member name="F:TL.InputSecureFileLocation.access_hash">
            <summary>⚠ <b>REQUIRED FIELD</b>. See <see href="https://wiz0u.github.io/WTelegramClient/FAQ#access-hash">how to obtain it</see><br/>Checksum, <strong>access_hash</strong> parameter value from <see cref="T:TL.SecureFile"/></summary>
        </member>
        <member name="T:TL.InputTakeoutFileLocation">
            <summary>Used to download a JSON file that will contain all personal data related to features that do not have a specialized <a href="https://corefork.telegram.org/api/takeout">takeout method</a> yet, see <a href="https://corefork.telegram.org/api/takeout">here »</a> for more info on the takeout API.		<para>See <a href="https://corefork.telegram.org/constructor/inputTakeoutFileLocation"/></para></summary>
        </member>
        <member name="T:TL.InputPhotoFileLocation">
            <summary>Use this object to download a photo with <see cref="M:TL.SchemaExtensions.Upload_GetFile(WTelegram.Client,TL.InputFileLocationBase,System.Int64,System.Int32,System.Boolean,System.Boolean)">Upload_GetFile</see> method		<para>See <a href="https://corefork.telegram.org/constructor/inputPhotoFileLocation"/></para></summary>
        </member>
        <member name="F:TL.InputPhotoFileLocation.id">
            <summary>Photo ID, obtained from the <see cref="T:TL.Photo"/> object</summary>
        </member>
        <member name="F:TL.InputPhotoFileLocation.access_hash">
            <summary>⚠ <b>REQUIRED FIELD</b>. See <see href="https://wiz0u.github.io/WTelegramClient/FAQ#access-hash">how to obtain it</see><br/>Photo's access hash, obtained from the <see cref="T:TL.Photo"/> object</summary>
        </member>
        <member name="F:TL.InputPhotoFileLocation.file_reference">
            <summary><a href="https://corefork.telegram.org/api/file_reference">File reference</a></summary>
        </member>
        <member name="F:TL.InputPhotoFileLocation.thumb_size">
            <summary>The <see cref="T:TL.PhotoSizeBase"/> to download: must be set to the <c>type</c> field of the desired PhotoSize object of the <see cref="T:TL.Photo"/></summary>
        </member>
        <member name="T:TL.InputPhotoLegacyFileLocation">
            <summary>DEPRECATED legacy photo file location		<para>See <a href="https://corefork.telegram.org/constructor/inputPhotoLegacyFileLocation"/></para></summary>
        </member>
        <member name="F:TL.InputPhotoLegacyFileLocation.id">
            <summary>Photo ID</summary>
        </member>
        <member name="F:TL.InputPhotoLegacyFileLocation.access_hash">
            <summary>⚠ <b>REQUIRED FIELD</b>. See <see href="https://wiz0u.github.io/WTelegramClient/FAQ#access-hash">how to obtain it</see><br/>Access hash</summary>
        </member>
        <member name="F:TL.InputPhotoLegacyFileLocation.file_reference">
            <summary>File reference</summary>
        </member>
        <member name="F:TL.InputPhotoLegacyFileLocation.volume_id">
            <summary>Volume ID</summary>
        </member>
        <member name="F:TL.InputPhotoLegacyFileLocation.local_id">
            <summary>Local ID</summary>
        </member>
        <member name="F:TL.InputPhotoLegacyFileLocation.secret">
            <summary>Secret</summary>
        </member>
        <member name="T:TL.InputPeerPhotoFileLocation">
            <summary>Location of profile photo of channel/group/supergroup/user		<para>See <a href="https://corefork.telegram.org/constructor/inputPeerPhotoFileLocation"/></para></summary>
        </member>
        <member name="F:TL.InputPeerPhotoFileLocation.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.InputPeerPhotoFileLocation.peer">
            <summary>The peer whose profile picture should be downloaded</summary>
        </member>
        <member name="F:TL.InputPeerPhotoFileLocation.photo_id">
            <summary>Photo ID</summary>
        </member>
        <member name="F:TL.InputPeerPhotoFileLocation.Flags.big">
            <summary>Whether to download the high-quality version of the picture</summary>
        </member>
        <member name="T:TL.InputStickerSetThumb">
            <summary>Location of stickerset thumbnail (see <a href="https://corefork.telegram.org/api/files">files</a>)		<para>See <a href="https://corefork.telegram.org/constructor/inputStickerSetThumb"/></para></summary>
        </member>
        <member name="F:TL.InputStickerSetThumb.stickerset">
            <summary>Sticker set</summary>
        </member>
        <member name="F:TL.InputStickerSetThumb.thumb_version">
            <summary>Thumbnail version</summary>
        </member>
        <member name="T:TL.InputGroupCallStream">
            <summary>Chunk of a livestream		<para>See <a href="https://corefork.telegram.org/constructor/inputGroupCallStream"/></para></summary>
        </member>
        <member name="F:TL.InputGroupCallStream.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.InputGroupCallStream.call">
            <summary>Livestream info</summary>
        </member>
        <member name="F:TL.InputGroupCallStream.time_ms">
            <summary>Timestamp in milliseconds</summary>
        </member>
        <member name="F:TL.InputGroupCallStream.scale">
            <summary>Specifies the duration of the video segment to fetch in milliseconds, by bitshifting <c>1000</c> to the right <c>scale</c> times: <c>duration_ms := 1000 &gt;&gt; scale</c></summary>
        </member>
        <member name="F:TL.InputGroupCallStream.video_channel">
            <summary>Selected video channel</summary>
        </member>
        <member name="F:TL.InputGroupCallStream.video_quality">
            <summary>Selected video quality (0 = lowest, 1 = medium, 2 = best)</summary>
        </member>
        <member name="F:TL.InputGroupCallStream.Flags.has_video_channel">
            <summary>Fields <see cref="F:TL.InputGroupCallStream.video_channel"/> and <see cref="F:TL.InputGroupCallStream.video_quality"/> have a value</summary>
        </member>
        <member name="T:TL.Peer">
            <summary>Chat partner or group.		<para>See <a href="https://corefork.telegram.org/type/Peer"/></para>		<para>Derived classes: <see cref="T:TL.PeerUser"/>, <see cref="T:TL.PeerChat"/>, <see cref="T:TL.PeerChannel"/></para></summary>
            <remarks>Use the <c>UserOrChat(peer)</c> method from the root class you received, in order to convert this to a more useful <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/></remarks>
        </member>
        <member name="T:TL.PeerUser">
            <summary>Chat partner		<para>See <a href="https://corefork.telegram.org/constructor/peerUser"/></para></summary>
        </member>
        <member name="F:TL.PeerUser.user_id">
            <summary>User identifier</summary>
        </member>
        <member name="T:TL.PeerChat">
            <summary>Group.		<para>See <a href="https://corefork.telegram.org/constructor/peerChat"/></para></summary>
        </member>
        <member name="F:TL.PeerChat.chat_id">
            <summary>Group identifier</summary>
        </member>
        <member name="T:TL.PeerChannel">
            <summary>Channel/supergroup		<para>See <a href="https://corefork.telegram.org/constructor/peerChannel"/></para></summary>
        </member>
        <member name="F:TL.PeerChannel.channel_id">
            <summary>Channel ID</summary>
        </member>
        <member name="T:TL.Storage_FileType">
            <summary>Object describes the file type.		<para>See <a href="https://corefork.telegram.org/type/storage.FileType"/></para></summary>
        </member>
        <member name="F:TL.Storage_FileType.unknown">
            <summary>Unknown type.</summary>
        </member>
        <member name="F:TL.Storage_FileType.partial">
            <summary>Part of a bigger file.</summary>
        </member>
        <member name="F:TL.Storage_FileType.jpeg">
            <summary>JPEG image. MIME type: <c>image/jpeg</c>.</summary>
        </member>
        <member name="F:TL.Storage_FileType.gif">
            <summary>GIF image. MIME type: <c>image/gif</c>.</summary>
        </member>
        <member name="F:TL.Storage_FileType.png">
            <summary>PNG image. MIME type: <c>image/png</c>.</summary>
        </member>
        <member name="F:TL.Storage_FileType.pdf">
            <summary>PDF document image. MIME type: <c>application/pdf</c>.</summary>
        </member>
        <member name="F:TL.Storage_FileType.mp3">
            <summary>Mp3 audio. MIME type: <c>audio/mpeg</c>.</summary>
        </member>
        <member name="F:TL.Storage_FileType.mov">
            <summary>Quicktime video. MIME type: <c>video/quicktime</c>.</summary>
        </member>
        <member name="F:TL.Storage_FileType.mp4">
            <summary>MPEG-4 video. MIME type: <c>video/mp4</c>.</summary>
        </member>
        <member name="F:TL.Storage_FileType.webp">
            <summary>WEBP image. MIME type: <c>image/webp</c>.</summary>
        </member>
        <member name="T:TL.UserBase">
            <summary>Object defines a user.		<para>See <a href="https://corefork.telegram.org/type/User"/></para>		<para>Derived classes: <see cref="T:TL.UserEmpty"/>, <see cref="T:TL.User"/></para></summary>
        </member>
        <member name="T:TL.UserEmpty">
            <summary>Empty constructor, non-existent user.		<para>See <a href="https://corefork.telegram.org/constructor/userEmpty"/></para></summary>
        </member>
        <member name="F:TL.UserEmpty.id">
            <summary>User identifier or <c>0</c></summary>
        </member>
        <member name="T:TL.User">
            <summary>Indicates info about a certain user		<para>See <a href="https://corefork.telegram.org/constructor/user"/></para></summary>
        </member>
        <member name="F:TL.User.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.User.flags2">
            <summary>Extra bits of information, use <c>flags2.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.User.id">
            <summary>ID of the user</summary>
        </member>
        <member name="F:TL.User.access_hash">
            <summary>Access hash of the user</summary>
        </member>
        <member name="F:TL.User.first_name">
            <summary>First name</summary>
        </member>
        <member name="F:TL.User.last_name">
            <summary>Last name</summary>
        </member>
        <member name="F:TL.User.username">
            <summary>Username</summary>
        </member>
        <member name="F:TL.User.phone">
            <summary>Phone number</summary>
        </member>
        <member name="F:TL.User.photo">
            <summary>Profile picture of user</summary>
        </member>
        <member name="F:TL.User.status">
            <summary>Online status of user</summary>
        </member>
        <member name="F:TL.User.bot_info_version">
            <summary>Version of the <see cref="T:TL.UserFull">bot_info field in userFull</see>, incremented every time it changes</summary>
        </member>
        <member name="F:TL.User.restriction_reason">
            <summary>Contains the reason why access to this user must be restricted.</summary>
        </member>
        <member name="F:TL.User.bot_inline_placeholder">
            <summary>Inline placeholder for this inline bot</summary>
        </member>
        <member name="F:TL.User.lang_code">
            <summary>Language code of the user</summary>
        </member>
        <member name="F:TL.User.emoji_status">
            <summary><a href="https://corefork.telegram.org/api/emoji-status">Emoji status</a></summary>
        </member>
        <member name="F:TL.User.usernames">
            <summary>Additional usernames</summary>
        </member>
        <member name="F:TL.User.stories_max_id">
            <summary>ID of the maximum read <a href="https://corefork.telegram.org/api/stories">story</a>.</summary>
        </member>
        <member name="F:TL.User.color">
            <summary>The user's <a href="https://corefork.telegram.org/api/colors">accent color</a>.</summary>
        </member>
        <member name="F:TL.User.profile_color">
            <summary>The user's <a href="https://corefork.telegram.org/api/colors">profile color</a>.</summary>
        </member>
        <member name="F:TL.User.Flags.has_access_hash">
            <summary>Field <see cref="F:TL.User.access_hash"/> has a value</summary>
        </member>
        <member name="F:TL.User.Flags.has_first_name">
            <summary>Field <see cref="F:TL.User.first_name"/> has a value</summary>
        </member>
        <member name="F:TL.User.Flags.has_last_name">
            <summary>Field <see cref="F:TL.User.last_name"/> has a value</summary>
        </member>
        <member name="F:TL.User.Flags.has_username">
            <summary>Field <see cref="F:TL.User.username"/> has a value</summary>
        </member>
        <member name="F:TL.User.Flags.has_phone">
            <summary>Field <see cref="F:TL.User.phone"/> has a value</summary>
        </member>
        <member name="F:TL.User.Flags.has_photo">
            <summary>Field <see cref="F:TL.User.photo"/> has a value</summary>
        </member>
        <member name="F:TL.User.Flags.has_status">
            <summary>Field <see cref="F:TL.User.status"/> has a value</summary>
        </member>
        <member name="F:TL.User.Flags.self">
            <summary>Whether this user indicates the currently logged in user</summary>
        </member>
        <member name="F:TL.User.Flags.contact">
            <summary>Whether this user is a contact</summary>
        </member>
        <member name="F:TL.User.Flags.mutual_contact">
            <summary>Whether this user is a mutual contact</summary>
        </member>
        <member name="F:TL.User.Flags.deleted">
            <summary>Whether the account of this user was deleted</summary>
        </member>
        <member name="F:TL.User.Flags.bot">
            <summary>Is this user a bot?</summary>
        </member>
        <member name="F:TL.User.Flags.bot_chat_history">
            <summary>Can the bot see all messages in groups?</summary>
        </member>
        <member name="F:TL.User.Flags.bot_nochats">
            <summary>Can the bot be added to groups?</summary>
        </member>
        <member name="F:TL.User.Flags.verified">
            <summary>Whether this user is verified</summary>
        </member>
        <member name="F:TL.User.Flags.restricted">
            <summary>Access to this user must be restricted for the reason specified in <c>restriction_reason</c></summary>
        </member>
        <member name="F:TL.User.Flags.has_bot_inline_placeholder">
            <summary>Field <see cref="F:TL.User.bot_inline_placeholder"/> has a value</summary>
        </member>
        <member name="F:TL.User.Flags.min">
            <summary>See <a href="https://corefork.telegram.org/api/min">min</a></summary>
        </member>
        <member name="F:TL.User.Flags.bot_inline_geo">
            <summary>Whether the bot can request our geolocation in inline mode</summary>
        </member>
        <member name="F:TL.User.Flags.has_lang_code">
            <summary>Field <see cref="F:TL.User.lang_code"/> has a value</summary>
        </member>
        <member name="F:TL.User.Flags.support">
            <summary>Whether this is an official support user</summary>
        </member>
        <member name="F:TL.User.Flags.scam">
            <summary>This may be a scam user</summary>
        </member>
        <member name="F:TL.User.Flags.apply_min_photo">
            <summary>If set, the profile picture for this user should be refetched</summary>
        </member>
        <member name="F:TL.User.Flags.fake">
            <summary>If set, this user was reported by many users as a fake or scam user: be careful when interacting with them.</summary>
        </member>
        <member name="F:TL.User.Flags.bot_attach_menu">
            <summary>Whether this bot offers an <a href="https://corefork.telegram.org/api/bots/attach">attachment menu web app</a></summary>
        </member>
        <member name="F:TL.User.Flags.premium">
            <summary>Whether this user is a Telegram Premium user</summary>
        </member>
        <member name="F:TL.User.Flags.attach_menu_enabled">
            <summary>Whether we installed the <a href="https://corefork.telegram.org/api/bots/attach">attachment menu web app</a> offered by this bot</summary>
        </member>
        <member name="F:TL.User.Flags.has_emoji_status">
            <summary>Field <see cref="F:TL.User.emoji_status"/> has a value</summary>
        </member>
        <member name="F:TL.User.Flags2.has_usernames">
            <summary>Field <see cref="F:TL.User.usernames"/> has a value</summary>
        </member>
        <member name="F:TL.User.Flags2.bot_can_edit">
            <summary>Whether we can edit the profile picture, name, about text and description of this bot because we own it.</summary>
        </member>
        <member name="F:TL.User.Flags2.close_friend">
            <summary>Whether we marked this user as a <a href="https://corefork.telegram.org/api/privacy">close friend, see here » for more info</a></summary>
        </member>
        <member name="F:TL.User.Flags2.stories_hidden">
            <summary>Whether we have <a href="https://corefork.telegram.org/api/stories#hiding-stories-of-other-users">hidden »</a> all active stories of this user.</summary>
        </member>
        <member name="F:TL.User.Flags2.stories_unavailable">
            <summary>No stories from this user are visible.</summary>
        </member>
        <member name="F:TL.User.Flags2.has_stories_max_id">
            <summary>Field <see cref="F:TL.User.stories_max_id"/> has a value</summary>
        </member>
        <member name="F:TL.User.Flags2.has_color">
            <summary>Field <see cref="F:TL.User.color"/> has a value</summary>
        </member>
        <member name="F:TL.User.Flags2.has_profile_color">
            <summary>Field <see cref="F:TL.User.profile_color"/> has a value</summary>
        </member>
        <member name="P:TL.User.LastSeenAgo">
            <summary>An estimation of the number of days ago the user was last seen (Online=0, Recently=1, LastWeek=5, LastMonth=20, LongTimeAgo=150)</summary>
        </member>
        <member name="T:TL.UserProfilePhoto">
            <summary>User profile photo.		<para>See <a href="https://corefork.telegram.org/constructor/userProfilePhoto"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/userProfilePhotoEmpty">userProfilePhotoEmpty</a></remarks>
        </member>
        <member name="F:TL.UserProfilePhoto.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UserProfilePhoto.photo_id">
            <summary>Identifier of the respective photo</summary>
        </member>
        <member name="F:TL.UserProfilePhoto.stripped_thumb">
            <summary><a href="https://corefork.telegram.org/api/files#stripped-thumbnails">Stripped thumbnail</a></summary>
        </member>
        <member name="F:TL.UserProfilePhoto.dc_id">
            <summary>DC ID where the photo is stored</summary>
        </member>
        <member name="F:TL.UserProfilePhoto.Flags.has_video">
            <summary>Whether an <a href="https://corefork.telegram.org/api/files#animated-profile-pictures">animated profile picture</a> is available for this user</summary>
        </member>
        <member name="F:TL.UserProfilePhoto.Flags.has_stripped_thumb">
            <summary>Field <see cref="F:TL.UserProfilePhoto.stripped_thumb"/> has a value</summary>
        </member>
        <member name="F:TL.UserProfilePhoto.Flags.personal">
            <summary>Whether this profile photo is only visible to us (i.e. it was set using <see cref="M:TL.SchemaExtensions.Photos_UploadContactProfilePhoto(WTelegram.Client,TL.InputUserBase,TL.InputFileBase,TL.InputFileBase,System.Nullable{System.Double},TL.VideoSizeBase,System.Boolean,System.Boolean)">Photos_UploadContactProfilePhoto</see>).</summary>
        </member>
        <member name="T:TL.UserStatus">
            <summary>User online status		<para>See <a href="https://corefork.telegram.org/type/UserStatus"/></para>		<para>Derived classes: <see cref="T:TL.UserStatusOnline"/>, <see cref="T:TL.UserStatusOffline"/>, <see cref="T:TL.UserStatusRecently"/>, <see cref="T:TL.UserStatusLastWeek"/>, <see cref="T:TL.UserStatusLastMonth"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/userStatusEmpty">userStatusEmpty</a></remarks>
            <remarks>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/userStatusEmpty">userStatusEmpty</a> = last seen a long time ago, more than a month (or blocked/deleted users)</remarks>
        </member>
        <member name="T:TL.UserStatusOnline">
            <summary>Online status of the user.		<para>See <a href="https://corefork.telegram.org/constructor/userStatusOnline"/></para></summary>
        </member>
        <member name="F:TL.UserStatusOnline.expires">
            <summary>Time to expiration of the current online status</summary>
        </member>
        <member name="T:TL.UserStatusOffline">
            <summary>The user's offline status.		<para>See <a href="https://corefork.telegram.org/constructor/userStatusOffline"/></para></summary>
        </member>
        <member name="F:TL.UserStatusOffline.was_online">
            <summary>Time the user was last seen online</summary>
        </member>
        <member name="T:TL.UserStatusRecently">
            <summary>Online status: last seen recently		<para>See <a href="https://corefork.telegram.org/constructor/userStatusRecently"/></para></summary>
            <remarks>covers anything between 1 second and 2-3 days</remarks>
        </member>
        <member name="T:TL.UserStatusLastWeek">
            <summary>Online status: last seen last week		<para>See <a href="https://corefork.telegram.org/constructor/userStatusLastWeek"/></para></summary>
            <remarks>between 2-3 and seven days</remarks>
        </member>
        <member name="T:TL.UserStatusLastMonth">
            <summary>Online status: last seen last month		<para>See <a href="https://corefork.telegram.org/constructor/userStatusLastMonth"/></para></summary>
            <remarks>between 6-7 days and a month</remarks>
        </member>
        <member name="T:TL.ChatBase">
            <summary>Object defines a group.		<para>See <a href="https://corefork.telegram.org/type/Chat"/></para>		<para>Derived classes: <see cref="T:TL.ChatEmpty"/>, <see cref="T:TL.Chat"/>, <see cref="T:TL.ChatForbidden"/>, <see cref="T:TL.Channel"/>, <see cref="T:TL.ChannelForbidden"/></para></summary>
        </member>
        <member name="P:TL.ChatBase.ID">
            <summary>ID of the group</summary>
        </member>
        <member name="P:TL.ChatBase.Title">
            <summary>Title</summary>
        </member>
        <member name="P:TL.ChatBase.IsActive">
            <summary>Is this chat among current user active chats?</summary>
        </member>
        <member name="P:TL.ChatBase.IsChannel">
            <summary>Is this chat a broadcast channel?</summary>
        </member>
        <member name="M:TL.ChatBase.IsBanned(TL.ChatBannedRights.Flags)">
            <summary>returns true if you're banned of any of these rights</summary>
        </member>
        <member name="T:TL.ChatEmpty">
            <summary>Empty constructor, group doesn't exist		<para>See <a href="https://corefork.telegram.org/constructor/chatEmpty"/></para></summary>
        </member>
        <member name="F:TL.ChatEmpty.id">
            <summary>Group identifier</summary>
        </member>
        <member name="P:TL.ChatEmpty.ID">
            <summary>Group identifier</summary>
        </member>
        <member name="T:TL.Chat">
            <summary>Info about a group		<para>See <a href="https://corefork.telegram.org/constructor/chat"/></para></summary>
        </member>
        <member name="F:TL.Chat.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Chat.id">
            <summary>ID of the group</summary>
        </member>
        <member name="F:TL.Chat.title">
            <summary>Title</summary>
        </member>
        <member name="F:TL.Chat.photo">
            <summary>Chat photo</summary>
        </member>
        <member name="F:TL.Chat.participants_count">
            <summary>Participant count</summary>
        </member>
        <member name="F:TL.Chat.date">
            <summary>Date of creation of the group</summary>
        </member>
        <member name="F:TL.Chat.version">
            <summary>Used in basic groups to reorder updates and make sure that all of them were received.</summary>
        </member>
        <member name="F:TL.Chat.migrated_to">
            <summary>Means this chat was <a href="https://corefork.telegram.org/api/channel">upgraded</a> to a supergroup</summary>
        </member>
        <member name="F:TL.Chat.admin_rights">
            <summary><a href="https://corefork.telegram.org/api/rights">Admin rights</a> of the user in the group</summary>
        </member>
        <member name="F:TL.Chat.default_banned_rights">
            <summary><a href="https://corefork.telegram.org/api/rights">Default banned rights</a> of all users in the group</summary>
        </member>
        <member name="F:TL.Chat.Flags.creator">
            <summary>Whether the current user is the creator of the group</summary>
        </member>
        <member name="F:TL.Chat.Flags.left">
            <summary>Whether the current user has left the group</summary>
        </member>
        <member name="F:TL.Chat.Flags.deactivated">
            <summary>Whether the group was <a href="https://corefork.telegram.org/api/channel">migrated</a></summary>
        </member>
        <member name="F:TL.Chat.Flags.has_migrated_to">
            <summary>Field <see cref="F:TL.Chat.migrated_to"/> has a value</summary>
        </member>
        <member name="F:TL.Chat.Flags.has_admin_rights">
            <summary>Field <see cref="F:TL.Chat.admin_rights"/> has a value</summary>
        </member>
        <member name="F:TL.Chat.Flags.has_default_banned_rights">
            <summary>Field <see cref="F:TL.Chat.default_banned_rights"/> has a value</summary>
        </member>
        <member name="F:TL.Chat.Flags.call_active">
            <summary>Whether a group call is currently active</summary>
        </member>
        <member name="F:TL.Chat.Flags.call_not_empty">
            <summary>Whether there's anyone in the group call</summary>
        </member>
        <member name="F:TL.Chat.Flags.noforwards">
            <summary>Whether this group is <a href="https://telegram.org/blog/protected-content-delete-by-date-and-more">protected</a>, thus does not allow forwarding messages from it</summary>
        </member>
        <member name="P:TL.Chat.ID">
            <summary>ID of the group</summary>
        </member>
        <member name="P:TL.Chat.Title">
            <summary>Title</summary>
        </member>
        <member name="T:TL.ChatForbidden">
            <summary>A group to which the user has no access. E.g., because the user was kicked from the group.		<para>See <a href="https://corefork.telegram.org/constructor/chatForbidden"/></para></summary>
        </member>
        <member name="F:TL.ChatForbidden.id">
            <summary>User identifier</summary>
        </member>
        <member name="F:TL.ChatForbidden.title">
            <summary>Group name</summary>
        </member>
        <member name="P:TL.ChatForbidden.ID">
            <summary>User identifier</summary>
        </member>
        <member name="P:TL.ChatForbidden.Title">
            <summary>Group name</summary>
        </member>
        <member name="T:TL.Channel">
            <summary>Channel/supergroup info		<para>See <a href="https://corefork.telegram.org/constructor/channel"/></para></summary>
        </member>
        <member name="F:TL.Channel.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Channel.flags2">
            <summary>Extra bits of information, use <c>flags2.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Channel.id">
            <summary>ID of the channel</summary>
        </member>
        <member name="F:TL.Channel.access_hash">
            <summary>Access hash</summary>
        </member>
        <member name="F:TL.Channel.title">
            <summary>Title</summary>
        </member>
        <member name="F:TL.Channel.username">
            <summary>Username</summary>
        </member>
        <member name="F:TL.Channel.photo">
            <summary>Profile photo</summary>
        </member>
        <member name="F:TL.Channel.date">
            <summary>Date when the user joined the supergroup/channel, or if the user isn't a member, its creation date</summary>
        </member>
        <member name="F:TL.Channel.restriction_reason">
            <summary>Contains the reason why access to this channel must be restricted.</summary>
        </member>
        <member name="F:TL.Channel.admin_rights">
            <summary>Admin rights of the user in this channel (see <a href="https://corefork.telegram.org/api/rights">rights</a>)</summary>
        </member>
        <member name="F:TL.Channel.banned_rights">
            <summary>Banned rights of the user in this channel (see <a href="https://corefork.telegram.org/api/rights">rights</a>)</summary>
        </member>
        <member name="F:TL.Channel.default_banned_rights">
            <summary>Default chat rights (see <a href="https://corefork.telegram.org/api/rights">rights</a>)</summary>
        </member>
        <member name="F:TL.Channel.participants_count">
            <summary>Participant count</summary>
        </member>
        <member name="F:TL.Channel.usernames">
            <summary>Additional usernames</summary>
        </member>
        <member name="F:TL.Channel.stories_max_id">
            <summary>ID of the maximum read <a href="https://corefork.telegram.org/api/stories">story</a>.</summary>
        </member>
        <member name="F:TL.Channel.color">
            <summary>The channel's <a href="https://corefork.telegram.org/api/colors">accent color</a>.</summary>
        </member>
        <member name="F:TL.Channel.profile_color">
            <summary>The channel's <a href="https://corefork.telegram.org/api/colors">profile color</a>.</summary>
        </member>
        <member name="F:TL.Channel.emoji_status">
            <summary><a href="https://corefork.telegram.org/api/emoji-status">Emoji status</a></summary>
        </member>
        <member name="F:TL.Channel.level">
            <summary><a href="https://corefork.telegram.org/api/boost">Boost level</a></summary>
        </member>
        <member name="F:TL.Channel.Flags.creator">
            <summary>Whether the current user is the creator of this channel</summary>
        </member>
        <member name="F:TL.Channel.Flags.left">
            <summary>Whether the current user has left or is not a member of this channel</summary>
        </member>
        <member name="F:TL.Channel.Flags.broadcast">
            <summary>Is this a channel?</summary>
        </member>
        <member name="F:TL.Channel.Flags.has_username">
            <summary>Field <see cref="F:TL.Channel.username"/> has a value</summary>
        </member>
        <member name="F:TL.Channel.Flags.verified">
            <summary>Is this channel verified by telegram?</summary>
        </member>
        <member name="F:TL.Channel.Flags.megagroup">
            <summary>Is this a supergroup?</summary>
        </member>
        <member name="F:TL.Channel.Flags.restricted">
            <summary>Whether viewing/writing in this channel for a reason (see <c>restriction_reason</c></summary>
        </member>
        <member name="F:TL.Channel.Flags.signatures">
            <summary>Whether signatures are enabled (channels)</summary>
        </member>
        <member name="F:TL.Channel.Flags.min">
            <summary>See <a href="https://corefork.telegram.org/api/min">min</a></summary>
        </member>
        <member name="F:TL.Channel.Flags.has_access_hash">
            <summary>Field <see cref="F:TL.Channel.access_hash"/> has a value</summary>
        </member>
        <member name="F:TL.Channel.Flags.has_admin_rights">
            <summary>Field <see cref="F:TL.Channel.admin_rights"/> has a value</summary>
        </member>
        <member name="F:TL.Channel.Flags.has_banned_rights">
            <summary>Field <see cref="F:TL.Channel.banned_rights"/> has a value</summary>
        </member>
        <member name="F:TL.Channel.Flags.has_participants_count">
            <summary>Field <see cref="F:TL.Channel.participants_count"/> has a value</summary>
        </member>
        <member name="F:TL.Channel.Flags.has_default_banned_rights">
            <summary>Field <see cref="F:TL.Channel.default_banned_rights"/> has a value</summary>
        </member>
        <member name="F:TL.Channel.Flags.scam">
            <summary>This channel/supergroup is probably a scam</summary>
        </member>
        <member name="F:TL.Channel.Flags.has_link">
            <summary>Whether this channel has a private join link</summary>
        </member>
        <member name="F:TL.Channel.Flags.has_geo">
            <summary>Whether this chanel has a geoposition</summary>
        </member>
        <member name="F:TL.Channel.Flags.slowmode_enabled">
            <summary>Whether slow mode is enabled for groups to prevent flood in chat</summary>
        </member>
        <member name="F:TL.Channel.Flags.call_active">
            <summary>Whether a group call or livestream is currently active</summary>
        </member>
        <member name="F:TL.Channel.Flags.call_not_empty">
            <summary>Whether there's anyone in the group call or livestream</summary>
        </member>
        <member name="F:TL.Channel.Flags.fake">
            <summary>If set, this <a href="https://corefork.telegram.org/api/channel">supergroup/channel</a> was reported by many users as a fake or scam: be careful when interacting with it.</summary>
        </member>
        <member name="F:TL.Channel.Flags.gigagroup">
            <summary>Whether this <a href="https://corefork.telegram.org/api/channel">supergroup</a> is a gigagroup</summary>
        </member>
        <member name="F:TL.Channel.Flags.noforwards">
            <summary>Whether this channel or group is <a href="https://telegram.org/blog/protected-content-delete-by-date-and-more">protected</a>, thus does not allow forwarding messages from it</summary>
        </member>
        <member name="F:TL.Channel.Flags.join_to_send">
            <summary>Whether a user needs to join the supergroup before they can send messages: can be false only for <a href="https://corefork.telegram.org/api/discussion">discussion groups »</a>, toggle using <see cref="M:TL.SchemaExtensions.Channels_ToggleJoinToSend(WTelegram.Client,TL.InputChannelBase,System.Boolean)">Channels_ToggleJoinToSend</see></summary>
        </member>
        <member name="F:TL.Channel.Flags.join_request">
            <summary>Whether a user's join request will have to be <a href="https://corefork.telegram.org/api/invites#join-requests">approved by administrators</a>, toggle using <see cref="M:TL.SchemaExtensions.Channels_ToggleJoinRequest(WTelegram.Client,TL.InputChannelBase,System.Boolean)">Channels_ToggleJoinRequest</see></summary>
        </member>
        <member name="F:TL.Channel.Flags.forum">
            <summary>Whether this supergroup is a <a href="https://corefork.telegram.org/api/forum">forum</a></summary>
        </member>
        <member name="F:TL.Channel.Flags2.has_usernames">
            <summary>Field <see cref="F:TL.Channel.usernames"/> has a value</summary>
        </member>
        <member name="F:TL.Channel.Flags2.stories_hidden">
            <summary>Whether we have <a href="https://corefork.telegram.org/api/stories#hiding-stories-of-other-users">hidden all stories posted by this channel »</a>.</summary>
        </member>
        <member name="F:TL.Channel.Flags2.stories_hidden_min">
            <summary>If set, indicates that the <c>stories_hidden</c> flag was not populated, and its value must cannot be relied on; use the previously cached value, or re-fetch the constructor using <see cref="M:TL.SchemaExtensions.Channels_GetChannels(WTelegram.Client,TL.InputChannelBase[])">Channels_GetChannels</see> to obtain the latest value of the <c>stories_hidden</c> flag.</summary>
        </member>
        <member name="F:TL.Channel.Flags2.stories_unavailable">
            <summary>No stories from the channel are visible.</summary>
        </member>
        <member name="F:TL.Channel.Flags2.has_stories_max_id">
            <summary>Field <see cref="F:TL.Channel.stories_max_id"/> has a value</summary>
        </member>
        <member name="F:TL.Channel.Flags2.has_color">
            <summary>Field <see cref="F:TL.Channel.color"/> has a value</summary>
        </member>
        <member name="F:TL.Channel.Flags2.has_profile_color">
            <summary>Field <see cref="F:TL.Channel.profile_color"/> has a value</summary>
        </member>
        <member name="F:TL.Channel.Flags2.has_emoji_status">
            <summary>Field <see cref="F:TL.Channel.emoji_status"/> has a value</summary>
        </member>
        <member name="F:TL.Channel.Flags2.has_level">
            <summary>Field <see cref="F:TL.Channel.level"/> has a value</summary>
        </member>
        <member name="P:TL.Channel.ID">
            <summary>ID of the channel</summary>
        </member>
        <member name="P:TL.Channel.Title">
            <summary>Title</summary>
        </member>
        <member name="T:TL.ChannelForbidden">
            <summary>Indicates a channel/supergroup we can't access because we were banned, or for some other reason.		<para>See <a href="https://corefork.telegram.org/constructor/channelForbidden"/></para></summary>
        </member>
        <member name="F:TL.ChannelForbidden.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.ChannelForbidden.id">
            <summary>Channel ID</summary>
        </member>
        <member name="F:TL.ChannelForbidden.access_hash">
            <summary>Access hash</summary>
        </member>
        <member name="F:TL.ChannelForbidden.title">
            <summary>Title</summary>
        </member>
        <member name="F:TL.ChannelForbidden.until_date">
            <summary>The ban is valid until the specified date</summary>
        </member>
        <member name="F:TL.ChannelForbidden.Flags.broadcast">
            <summary>Is this a channel</summary>
        </member>
        <member name="F:TL.ChannelForbidden.Flags.megagroup">
            <summary>Is this a supergroup</summary>
        </member>
        <member name="F:TL.ChannelForbidden.Flags.has_until_date">
            <summary>Field <see cref="F:TL.ChannelForbidden.until_date"/> has a value</summary>
        </member>
        <member name="P:TL.ChannelForbidden.ID">
            <summary>Channel ID</summary>
        </member>
        <member name="P:TL.ChannelForbidden.Title">
            <summary>Title</summary>
        </member>
        <member name="T:TL.ChatFullBase">
            <summary>Full info about a <a href="https://corefork.telegram.org/api/channel#channels">channel</a>, <a href="https://corefork.telegram.org/api/channel#supergroups">supergroup</a>, <a href="https://corefork.telegram.org/api/channel#gigagroups">gigagroup</a> or <a href="https://corefork.telegram.org/api/channel#basic-groups">basic group</a>.		<para>See <a href="https://corefork.telegram.org/type/ChatFull"/></para>		<para>Derived classes: <see cref="T:TL.ChatFull"/>, <see cref="T:TL.ChannelFull"/></para></summary>
        </member>
        <member name="P:TL.ChatFullBase.ID">
            <summary>ID of the chat</summary>
        </member>
        <member name="P:TL.ChatFullBase.About">
            <summary>About string for this chat</summary>
        </member>
        <member name="P:TL.ChatFullBase.ChatPhoto">
            <summary>Chat photo</summary>
        </member>
        <member name="P:TL.ChatFullBase.NotifySettings">
            <summary>Notification settings</summary>
        </member>
        <member name="P:TL.ChatFullBase.ExportedInvite">
            <summary>Chat invite</summary>
        </member>
        <member name="P:TL.ChatFullBase.BotInfo">
            <summary>Info about bots that are in this chat</summary>
        </member>
        <member name="P:TL.ChatFullBase.PinnedMsg">
            <summary>Message ID of the last <a href="https://corefork.telegram.org/api/pin">pinned message</a></summary>
        </member>
        <member name="P:TL.ChatFullBase.Folder">
            <summary><a href="https://corefork.telegram.org/api/folders#peer-folders">Peer folder ID, for more info click here</a></summary>
        </member>
        <member name="P:TL.ChatFullBase.Call">
            <summary>Group call information</summary>
        </member>
        <member name="P:TL.ChatFullBase.TtlPeriod">
            <summary>Time-To-Live of messages sent by the current user to this chat</summary>
        </member>
        <member name="P:TL.ChatFullBase.GroupcallDefaultJoinAs">
            <summary>When using <see cref="M:TL.SchemaExtensions.Phone_GetGroupCallJoinAs(WTelegram.Client,TL.InputPeer)">Phone_GetGroupCallJoinAs</see> to get a list of peers that can be used to join a group call, this field indicates the peer that should be selected by default.</summary>
        </member>
        <member name="P:TL.ChatFullBase.ThemeEmoticon">
            <summary>Emoji representing a specific chat theme</summary>
        </member>
        <member name="P:TL.ChatFullBase.RequestsPending">
            <summary>Pending <a href="https://corefork.telegram.org/api/invites#join-requests">join requests »</a></summary>
        </member>
        <member name="P:TL.ChatFullBase.RecentRequesters">
            <summary>IDs of users who requested to join recently</summary>
        </member>
        <member name="P:TL.ChatFullBase.AvailableReactions">
            <summary>Allowed <a href="https://corefork.telegram.org/api/reactions">message reactions »</a></summary>
        </member>
        <member name="T:TL.ChatFull">
            <summary>Full info about a <a href="https://corefork.telegram.org/api/channel#basic-groups">basic group</a>.		<para>See <a href="https://corefork.telegram.org/constructor/chatFull"/></para></summary>
        </member>
        <member name="F:TL.ChatFull.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.ChatFull.id">
            <summary>ID of the chat</summary>
        </member>
        <member name="F:TL.ChatFull.about">
            <summary>About string for this chat</summary>
        </member>
        <member name="F:TL.ChatFull.participants">
            <summary>Participant list</summary>
        </member>
        <member name="F:TL.ChatFull.chat_photo">
            <summary>Chat photo</summary>
        </member>
        <member name="F:TL.ChatFull.notify_settings">
            <summary>Notification settings</summary>
        </member>
        <member name="F:TL.ChatFull.exported_invite">
            <summary>Chat invite</summary>
        </member>
        <member name="F:TL.ChatFull.bot_info">
            <summary>Info about bots that are in this chat</summary>
        </member>
        <member name="F:TL.ChatFull.pinned_msg_id">
            <summary>Message ID of the last <a href="https://corefork.telegram.org/api/pin">pinned message</a></summary>
        </member>
        <member name="F:TL.ChatFull.folder_id">
            <summary><a href="https://corefork.telegram.org/api/folders#peer-folders">Peer folder ID, for more info click here</a></summary>
        </member>
        <member name="F:TL.ChatFull.call">
            <summary>Group call information</summary>
        </member>
        <member name="F:TL.ChatFull.ttl_period">
            <summary>Time-To-Live of messages sent by the current user to this chat</summary>
        </member>
        <member name="F:TL.ChatFull.groupcall_default_join_as">
            <summary>When using <see cref="M:TL.SchemaExtensions.Phone_GetGroupCallJoinAs(WTelegram.Client,TL.InputPeer)">Phone_GetGroupCallJoinAs</see> to get a list of peers that can be used to join a group call, this field indicates the peer that should be selected by default.</summary>
        </member>
        <member name="F:TL.ChatFull.theme_emoticon">
            <summary>Emoji representing a specific chat theme</summary>
        </member>
        <member name="F:TL.ChatFull.requests_pending">
            <summary>Pending <a href="https://corefork.telegram.org/api/invites#join-requests">join requests »</a></summary>
        </member>
        <member name="F:TL.ChatFull.recent_requesters">
            <summary>IDs of users who requested to join recently</summary>
        </member>
        <member name="F:TL.ChatFull.available_reactions">
            <summary>Allowed <a href="https://corefork.telegram.org/api/reactions">message reactions »</a></summary>
        </member>
        <member name="F:TL.ChatFull.Flags.has_chat_photo">
            <summary>Field <see cref="F:TL.ChatFull.chat_photo"/> has a value</summary>
        </member>
        <member name="F:TL.ChatFull.Flags.has_bot_info">
            <summary>Field <see cref="F:TL.ChatFull.bot_info"/> has a value</summary>
        </member>
        <member name="F:TL.ChatFull.Flags.has_pinned_msg_id">
            <summary>Field <see cref="F:TL.ChatFull.pinned_msg_id"/> has a value</summary>
        </member>
        <member name="F:TL.ChatFull.Flags.can_set_username">
            <summary>Can we change the username of this chat</summary>
        </member>
        <member name="F:TL.ChatFull.Flags.has_scheduled">
            <summary>Whether <a href="https://corefork.telegram.org/api/scheduled-messages">scheduled messages</a> are available</summary>
        </member>
        <member name="F:TL.ChatFull.Flags.has_folder_id">
            <summary>Field <see cref="F:TL.ChatFull.folder_id"/> has a value</summary>
        </member>
        <member name="F:TL.ChatFull.Flags.has_call">
            <summary>Field <see cref="F:TL.ChatFull.call"/> has a value</summary>
        </member>
        <member name="F:TL.ChatFull.Flags.has_exported_invite">
            <summary>Field <see cref="F:TL.ChatFull.exported_invite"/> has a value</summary>
        </member>
        <member name="F:TL.ChatFull.Flags.has_ttl_period">
            <summary>Field <see cref="F:TL.ChatFull.ttl_period"/> has a value</summary>
        </member>
        <member name="F:TL.ChatFull.Flags.has_groupcall_default_join_as">
            <summary>Field <see cref="F:TL.ChatFull.groupcall_default_join_as"/> has a value</summary>
        </member>
        <member name="F:TL.ChatFull.Flags.has_theme_emoticon">
            <summary>Field <see cref="F:TL.ChatFull.theme_emoticon"/> has a value</summary>
        </member>
        <member name="F:TL.ChatFull.Flags.has_requests_pending">
            <summary>Fields <see cref="F:TL.ChatFull.requests_pending"/> and <see cref="F:TL.ChatFull.recent_requesters"/> have a value</summary>
        </member>
        <member name="F:TL.ChatFull.Flags.has_available_reactions">
            <summary>Field <see cref="F:TL.ChatFull.available_reactions"/> has a value</summary>
        </member>
        <member name="F:TL.ChatFull.Flags.translations_disabled">
            <summary>Whether the <a href="https://corefork.telegram.org/api/translation">real-time chat translation popup</a> should be hidden.</summary>
        </member>
        <member name="F:TL.ChatFull.Flags.has_reactions_limit">
            <summary>Field <see cref="F:TL.ChatFull.reactions_limit"/> has a value</summary>
        </member>
        <member name="P:TL.ChatFull.ID">
            <summary>ID of the chat</summary>
        </member>
        <member name="P:TL.ChatFull.About">
            <summary>About string for this chat</summary>
        </member>
        <member name="P:TL.ChatFull.ChatPhoto">
            <summary>Chat photo</summary>
        </member>
        <member name="P:TL.ChatFull.NotifySettings">
            <summary>Notification settings</summary>
        </member>
        <member name="P:TL.ChatFull.ExportedInvite">
            <summary>Chat invite</summary>
        </member>
        <member name="P:TL.ChatFull.BotInfo">
            <summary>Info about bots that are in this chat</summary>
        </member>
        <member name="P:TL.ChatFull.PinnedMsg">
            <summary>Message ID of the last <a href="https://corefork.telegram.org/api/pin">pinned message</a></summary>
        </member>
        <member name="P:TL.ChatFull.Folder">
            <summary><a href="https://corefork.telegram.org/api/folders#peer-folders">Peer folder ID, for more info click here</a></summary>
        </member>
        <member name="P:TL.ChatFull.Call">
            <summary>Group call information</summary>
        </member>
        <member name="P:TL.ChatFull.TtlPeriod">
            <summary>Time-To-Live of messages sent by the current user to this chat</summary>
        </member>
        <member name="P:TL.ChatFull.GroupcallDefaultJoinAs">
            <summary>When using <see cref="M:TL.SchemaExtensions.Phone_GetGroupCallJoinAs(WTelegram.Client,TL.InputPeer)">Phone_GetGroupCallJoinAs</see> to get a list of peers that can be used to join a group call, this field indicates the peer that should be selected by default.</summary>
        </member>
        <member name="P:TL.ChatFull.ThemeEmoticon">
            <summary>Emoji representing a specific chat theme</summary>
        </member>
        <member name="P:TL.ChatFull.RequestsPending">
            <summary>Pending <a href="https://corefork.telegram.org/api/invites#join-requests">join requests »</a></summary>
        </member>
        <member name="P:TL.ChatFull.RecentRequesters">
            <summary>IDs of users who requested to join recently</summary>
        </member>
        <member name="P:TL.ChatFull.AvailableReactions">
            <summary>Allowed <a href="https://corefork.telegram.org/api/reactions">message reactions »</a></summary>
        </member>
        <member name="T:TL.ChannelFull">
            <summary>Full info about a <a href="https://corefork.telegram.org/api/channel#channels">channel</a>, <a href="https://corefork.telegram.org/api/channel#supergroups">supergroup</a> or <a href="https://corefork.telegram.org/api/channel#gigagroups">gigagroup</a>.		<para>See <a href="https://corefork.telegram.org/constructor/channelFull"/></para></summary>
        </member>
        <member name="F:TL.ChannelFull.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.ChannelFull.flags2">
            <summary>Extra bits of information, use <c>flags2.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.ChannelFull.id">
            <summary>ID of the channel</summary>
        </member>
        <member name="F:TL.ChannelFull.about">
            <summary>Info about the channel</summary>
        </member>
        <member name="F:TL.ChannelFull.participants_count">
            <summary>Number of participants of the channel</summary>
        </member>
        <member name="F:TL.ChannelFull.admins_count">
            <summary>Number of channel admins</summary>
        </member>
        <member name="F:TL.ChannelFull.kicked_count">
            <summary>Number of users <a href="https://corefork.telegram.org/api/rights">kicked</a> from the channel</summary>
        </member>
        <member name="F:TL.ChannelFull.banned_count">
            <summary>Number of users <a href="https://corefork.telegram.org/api/rights">banned</a> from the channel</summary>
        </member>
        <member name="F:TL.ChannelFull.online_count">
            <summary>Number of users currently online</summary>
        </member>
        <member name="F:TL.ChannelFull.read_inbox_max_id">
            <summary>Position up to which all incoming messages are read.</summary>
        </member>
        <member name="F:TL.ChannelFull.read_outbox_max_id">
            <summary>Position up to which all outgoing messages are read.</summary>
        </member>
        <member name="F:TL.ChannelFull.unread_count">
            <summary>Count of unread messages</summary>
        </member>
        <member name="F:TL.ChannelFull.chat_photo">
            <summary>Channel picture</summary>
        </member>
        <member name="F:TL.ChannelFull.notify_settings">
            <summary>Notification settings</summary>
        </member>
        <member name="F:TL.ChannelFull.exported_invite">
            <summary>Invite link</summary>
        </member>
        <member name="F:TL.ChannelFull.bot_info">
            <summary>Info about bots in the channel/supergroup</summary>
        </member>
        <member name="F:TL.ChannelFull.migrated_from_chat_id">
            <summary>The chat ID from which this group was <a href="https://corefork.telegram.org/api/channel">migrated</a></summary>
        </member>
        <member name="F:TL.ChannelFull.migrated_from_max_id">
            <summary>The message ID in the original chat at which this group was <a href="https://corefork.telegram.org/api/channel">migrated</a></summary>
        </member>
        <member name="F:TL.ChannelFull.pinned_msg_id">
            <summary>Message ID of the last <a href="https://corefork.telegram.org/api/pin">pinned message</a></summary>
        </member>
        <member name="F:TL.ChannelFull.stickerset">
            <summary>Associated stickerset</summary>
        </member>
        <member name="F:TL.ChannelFull.available_min_id">
            <summary>Identifier of a maximum unavailable message in a channel due to hidden history.</summary>
        </member>
        <member name="F:TL.ChannelFull.folder_id">
            <summary><a href="https://corefork.telegram.org/api/folders#peer-folders">Peer folder ID, for more info click here</a></summary>
        </member>
        <member name="F:TL.ChannelFull.linked_chat_id">
            <summary>ID of the linked <a href="https://corefork.telegram.org/api/discussion">discussion chat</a> for channels</summary>
        </member>
        <member name="F:TL.ChannelFull.location">
            <summary>Location of the geogroup</summary>
        </member>
        <member name="F:TL.ChannelFull.slowmode_seconds">
            <summary>If specified, users in supergroups will only be able to send one message every <c>slowmode_seconds</c> seconds</summary>
        </member>
        <member name="F:TL.ChannelFull.slowmode_next_send_date">
            <summary>Indicates when the user will be allowed to send another message in the supergroup (unixtime)</summary>
        </member>
        <member name="F:TL.ChannelFull.stats_dc">
            <summary>If set, specifies the DC to use for fetching channel statistics</summary>
        </member>
        <member name="F:TL.ChannelFull.pts">
            <summary>Latest <a href="https://corefork.telegram.org/api/updates">PTS</a> for this channel</summary>
        </member>
        <member name="F:TL.ChannelFull.call">
            <summary>Livestream or group call information</summary>
        </member>
        <member name="F:TL.ChannelFull.ttl_period">
            <summary>Time-To-Live of messages in this channel or supergroup</summary>
        </member>
        <member name="F:TL.ChannelFull.pending_suggestions">
            <summary>A list of <a href="https://corefork.telegram.org/api/config#suggestions">suggested actions</a> for the supergroup admin, <a href="https://corefork.telegram.org/api/config#suggestions">see here for more info »</a>.</summary>
        </member>
        <member name="F:TL.ChannelFull.groupcall_default_join_as">
            <summary>When using <see cref="M:TL.SchemaExtensions.Phone_GetGroupCallJoinAs(WTelegram.Client,TL.InputPeer)">Phone_GetGroupCallJoinAs</see> to get a list of peers that can be used to join a group call, this field indicates the peer that should be selected by default.</summary>
        </member>
        <member name="F:TL.ChannelFull.theme_emoticon">
            <summary>Emoji representing a specific chat theme</summary>
        </member>
        <member name="F:TL.ChannelFull.requests_pending">
            <summary>Pending <a href="https://corefork.telegram.org/api/invites#join-requests">join requests »</a></summary>
        </member>
        <member name="F:TL.ChannelFull.recent_requesters">
            <summary>IDs of users who requested to join recently</summary>
        </member>
        <member name="F:TL.ChannelFull.default_send_as">
            <summary>Default peer used for sending messages to this channel</summary>
        </member>
        <member name="F:TL.ChannelFull.available_reactions">
            <summary>Allowed <a href="https://corefork.telegram.org/api/reactions">message reactions »</a></summary>
        </member>
        <member name="F:TL.ChannelFull.stories">
            <summary>Channel <a href="https://corefork.telegram.org/api/stories">stories</a></summary>
        </member>
        <member name="F:TL.ChannelFull.wallpaper">
            <summary><a href="https://corefork.telegram.org/api/wallpapers">Wallpaper</a></summary>
        </member>
        <member name="F:TL.ChannelFull.Flags.has_participants_count">
            <summary>Field <see cref="F:TL.ChannelFull.participants_count"/> has a value</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags.has_admins_count">
            <summary>Field <see cref="F:TL.ChannelFull.admins_count"/> has a value</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags.has_kicked_count">
            <summary>Fields <see cref="F:TL.ChannelFull.kicked_count"/> and <see cref="F:TL.ChannelFull.banned_count"/> have a value</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags.can_view_participants">
            <summary>Can we view the participant list?</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags.has_migrated_from_chat_id">
            <summary>Fields <see cref="F:TL.ChannelFull.migrated_from_chat_id"/> and <see cref="F:TL.ChannelFull.migrated_from_max_id"/> have a value</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags.has_pinned_msg_id">
            <summary>Field <see cref="F:TL.ChannelFull.pinned_msg_id"/> has a value</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags.can_set_username">
            <summary>Can we set the channel's username?</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags.can_set_stickers">
            <summary>Can we <see cref="M:TL.SchemaExtensions.Channels_SetStickers(WTelegram.Client,TL.InputChannelBase,TL.InputStickerSet)">Channels_SetStickers</see> a stickerpack to the supergroup?</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags.has_stickerset">
            <summary>Field <see cref="F:TL.ChannelFull.stickerset"/> has a value</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags.has_available_min_id">
            <summary>Field <see cref="F:TL.ChannelFull.available_min_id"/> has a value</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags.hidden_prehistory">
            <summary>Is the history before we joined hidden to us?</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags.has_folder_id">
            <summary>Field <see cref="F:TL.ChannelFull.folder_id"/> has a value</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags.has_stats_dc">
            <summary>Field <see cref="F:TL.ChannelFull.stats_dc"/> has a value</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags.has_online_count">
            <summary>Field <see cref="F:TL.ChannelFull.online_count"/> has a value</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags.has_linked_chat_id">
            <summary>Field <see cref="F:TL.ChannelFull.linked_chat_id"/> has a value</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags.has_location">
            <summary>Field <see cref="F:TL.ChannelFull.location"/> has a value</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags.can_set_location">
            <summary>Can we set the geolocation of this group (for geogroups)</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags.has_slowmode_seconds">
            <summary>Field <see cref="F:TL.ChannelFull.slowmode_seconds"/> has a value</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags.has_slowmode_next_send_date">
            <summary>Field <see cref="F:TL.ChannelFull.slowmode_next_send_date"/> has a value</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags.has_scheduled">
            <summary>Whether scheduled messages are available</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags.can_view_stats">
            <summary>Can the user view <a href="https://corefork.telegram.org/api/stats">channel/supergroup statistics</a></summary>
        </member>
        <member name="F:TL.ChannelFull.Flags.has_call">
            <summary>Field <see cref="F:TL.ChannelFull.call"/> has a value</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags.blocked">
            <summary>Whether any anonymous admin of this supergroup was blocked: if set, you won't receive messages from anonymous group admins in <a href="https://corefork.telegram.org/api/discussion">discussion replies via @replies</a></summary>
        </member>
        <member name="F:TL.ChannelFull.Flags.has_exported_invite">
            <summary>Field <see cref="F:TL.ChannelFull.exported_invite"/> has a value</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags.has_ttl_period">
            <summary>Field <see cref="F:TL.ChannelFull.ttl_period"/> has a value</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags.has_pending_suggestions">
            <summary>Field <see cref="F:TL.ChannelFull.pending_suggestions"/> has a value</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags.has_groupcall_default_join_as">
            <summary>Field <see cref="F:TL.ChannelFull.groupcall_default_join_as"/> has a value</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags.has_theme_emoticon">
            <summary>Field <see cref="F:TL.ChannelFull.theme_emoticon"/> has a value</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags.has_requests_pending">
            <summary>Fields <see cref="F:TL.ChannelFull.requests_pending"/> and <see cref="F:TL.ChannelFull.recent_requesters"/> have a value</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags.has_default_send_as">
            <summary>Field <see cref="F:TL.ChannelFull.default_send_as"/> has a value</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags.has_available_reactions">
            <summary>Field <see cref="F:TL.ChannelFull.available_reactions"/> has a value</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags2.can_delete_channel">
            <summary>Can we delete this channel?</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags2.antispam">
            <summary>Whether <a href="https://corefork.telegram.org/api/antispam">native antispam</a> functionality is enabled in this supergroup.</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags2.participants_hidden">
            <summary>Whether the participant list is hidden.</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags2.translations_disabled">
            <summary>Whether the <a href="https://corefork.telegram.org/api/translation">real-time chat translation popup</a> should be hidden.</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags2.has_stories">
            <summary>Field <see cref="F:TL.ChannelFull.stories"/> has a value</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags2.stories_pinned_available">
            <summary>Whether this user has some <a href="https://corefork.telegram.org/api/stories#pinned-or-archived-stories">pinned stories</a>.</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags2.view_forum_as_messages">
            <summary>Users may also choose to display messages from all topics of a <a href="https://corefork.telegram.org/api/forum">forum</a> as if they were sent to a normal group, using a "View as messages" setting in the local client.  <br/>This setting only affects the current account, and is synced to other logged in sessions using the <see cref="M:TL.SchemaExtensions.Channels_ToggleViewForumAsMessages(WTelegram.Client,TL.InputChannelBase,System.Boolean)">Channels_ToggleViewForumAsMessages</see> method; invoking this method will update the value of this flag.</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags2.has_wallpaper">
            <summary>Field <see cref="F:TL.ChannelFull.wallpaper"/> has a value</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags2.has_boosts_applied">
            <summary>Field <see cref="F:TL.ChannelFull.boosts_applied"/> has a value</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags2.has_boosts_unrestrict">
            <summary>Field <see cref="F:TL.ChannelFull.boosts_unrestrict"/> has a value</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags2.has_emojiset">
            <summary>Field <see cref="F:TL.ChannelFull.emojiset"/> has a value</summary>
        </member>
        <member name="F:TL.ChannelFull.Flags2.has_reactions_limit">
            <summary>Field <see cref="F:TL.ChannelFull.reactions_limit"/> has a value</summary>
        </member>
        <member name="P:TL.ChannelFull.ID">
            <summary>ID of the channel</summary>
        </member>
        <member name="P:TL.ChannelFull.About">
            <summary>Info about the channel</summary>
        </member>
        <member name="P:TL.ChannelFull.ChatPhoto">
            <summary>Channel picture</summary>
        </member>
        <member name="P:TL.ChannelFull.NotifySettings">
            <summary>Notification settings</summary>
        </member>
        <member name="P:TL.ChannelFull.ExportedInvite">
            <summary>Invite link</summary>
        </member>
        <member name="P:TL.ChannelFull.BotInfo">
            <summary>Info about bots in the channel/supergroup</summary>
        </member>
        <member name="P:TL.ChannelFull.PinnedMsg">
            <summary>Message ID of the last <a href="https://corefork.telegram.org/api/pin">pinned message</a></summary>
        </member>
        <member name="P:TL.ChannelFull.Folder">
            <summary><a href="https://corefork.telegram.org/api/folders#peer-folders">Peer folder ID, for more info click here</a></summary>
        </member>
        <member name="P:TL.ChannelFull.Call">
            <summary>Livestream or group call information</summary>
        </member>
        <member name="P:TL.ChannelFull.TtlPeriod">
            <summary>Time-To-Live of messages in this channel or supergroup</summary>
        </member>
        <member name="P:TL.ChannelFull.GroupcallDefaultJoinAs">
            <summary>When using <see cref="M:TL.SchemaExtensions.Phone_GetGroupCallJoinAs(WTelegram.Client,TL.InputPeer)">Phone_GetGroupCallJoinAs</see> to get a list of peers that can be used to join a group call, this field indicates the peer that should be selected by default.</summary>
        </member>
        <member name="P:TL.ChannelFull.ThemeEmoticon">
            <summary>Emoji representing a specific chat theme</summary>
        </member>
        <member name="P:TL.ChannelFull.RequestsPending">
            <summary>Pending <a href="https://corefork.telegram.org/api/invites#join-requests">join requests »</a></summary>
        </member>
        <member name="P:TL.ChannelFull.RecentRequesters">
            <summary>IDs of users who requested to join recently</summary>
        </member>
        <member name="P:TL.ChannelFull.AvailableReactions">
            <summary>Allowed <a href="https://corefork.telegram.org/api/reactions">message reactions »</a></summary>
        </member>
        <member name="T:TL.ChatParticipantBase">
            <summary>Details of a group member.		<para>See <a href="https://corefork.telegram.org/type/ChatParticipant"/></para>		<para>Derived classes: <see cref="T:TL.ChatParticipant"/>, <see cref="T:TL.ChatParticipantCreator"/>, <see cref="T:TL.ChatParticipantAdmin"/></para></summary>
        </member>
        <member name="P:TL.ChatParticipantBase.UserId">
            <summary>Member user ID</summary>
        </member>
        <member name="T:TL.ChatParticipant">
            <summary>Group member.		<para>See <a href="https://corefork.telegram.org/constructor/chatParticipant"/></para></summary>
        </member>
        <member name="F:TL.ChatParticipant.user_id">
            <summary>Member user ID</summary>
        </member>
        <member name="F:TL.ChatParticipant.inviter_id">
            <summary>ID of the user that added the member to the group</summary>
        </member>
        <member name="F:TL.ChatParticipant.date">
            <summary>Date added to the group</summary>
        </member>
        <member name="P:TL.ChatParticipant.UserId">
            <summary>Member user ID</summary>
        </member>
        <member name="T:TL.ChatParticipantCreator">
            <summary>Represents the creator of the group		<para>See <a href="https://corefork.telegram.org/constructor/chatParticipantCreator"/></para></summary>
        </member>
        <member name="F:TL.ChatParticipantCreator.user_id">
            <summary>ID of the user that created the group</summary>
        </member>
        <member name="P:TL.ChatParticipantCreator.UserId">
            <summary>ID of the user that created the group</summary>
        </member>
        <member name="T:TL.ChatParticipantAdmin">
            <summary>Chat admin		<para>See <a href="https://corefork.telegram.org/constructor/chatParticipantAdmin"/></para></summary>
        </member>
        <member name="T:TL.ChatParticipantsBase">
            <summary>Object contains info on group members.		<para>See <a href="https://corefork.telegram.org/type/ChatParticipants"/></para>		<para>Derived classes: <see cref="T:TL.ChatParticipantsForbidden"/>, <see cref="T:TL.ChatParticipants"/></para></summary>
        </member>
        <member name="P:TL.ChatParticipantsBase.ChatId">
            <summary>Group ID</summary>
        </member>
        <member name="T:TL.ChatParticipantsForbidden">
            <summary>Info on members is unavailable		<para>See <a href="https://corefork.telegram.org/constructor/chatParticipantsForbidden"/></para></summary>
        </member>
        <member name="F:TL.ChatParticipantsForbidden.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.ChatParticipantsForbidden.chat_id">
            <summary>Group ID</summary>
        </member>
        <member name="F:TL.ChatParticipantsForbidden.self_participant">
            <summary>Info about the group membership of the current user</summary>
        </member>
        <member name="F:TL.ChatParticipantsForbidden.Flags.has_self_participant">
            <summary>Field <see cref="F:TL.ChatParticipantsForbidden.self_participant"/> has a value</summary>
        </member>
        <member name="P:TL.ChatParticipantsForbidden.ChatId">
            <summary>Group ID</summary>
        </member>
        <member name="T:TL.ChatParticipants">
            <summary>Group members.		<para>See <a href="https://corefork.telegram.org/constructor/chatParticipants"/></para></summary>
        </member>
        <member name="F:TL.ChatParticipants.chat_id">
            <summary>Group identifier</summary>
        </member>
        <member name="F:TL.ChatParticipants.participants">
            <summary>List of group members</summary>
        </member>
        <member name="F:TL.ChatParticipants.version">
            <summary>Group version number</summary>
        </member>
        <member name="P:TL.ChatParticipants.ChatId">
            <summary>Group identifier</summary>
        </member>
        <member name="T:TL.ChatPhoto">
            <summary>Group profile photo.		<para>See <a href="https://corefork.telegram.org/constructor/chatPhoto"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/chatPhotoEmpty">chatPhotoEmpty</a></remarks>
        </member>
        <member name="F:TL.ChatPhoto.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.ChatPhoto.photo_id">
            <summary>Photo ID</summary>
        </member>
        <member name="F:TL.ChatPhoto.stripped_thumb">
            <summary><a href="https://corefork.telegram.org/api/files#stripped-thumbnails">Stripped thumbnail</a></summary>
        </member>
        <member name="F:TL.ChatPhoto.dc_id">
            <summary>DC where this photo is stored</summary>
        </member>
        <member name="F:TL.ChatPhoto.Flags.has_video">
            <summary>Whether the user has an animated profile picture</summary>
        </member>
        <member name="F:TL.ChatPhoto.Flags.has_stripped_thumb">
            <summary>Field <see cref="F:TL.ChatPhoto.stripped_thumb"/> has a value</summary>
        </member>
        <member name="T:TL.MessageBase">
            <summary>Object describing a message.		<para>See <a href="https://corefork.telegram.org/type/Message"/></para>		<para>Derived classes: <see cref="T:TL.MessageEmpty"/>, <see cref="T:TL.Message"/>, <see cref="T:TL.MessageService"/></para></summary>
        </member>
        <member name="P:TL.MessageBase.ID">
            <summary>ID of the message</summary>
        </member>
        <member name="P:TL.MessageBase.From">
            <summary>ID of the sender of the message</summary>
        </member>
        <member name="P:TL.MessageBase.Peer">
            <summary>Peer ID, the chat where this message was sent</summary>
        </member>
        <member name="P:TL.MessageBase.ReplyTo">
            <summary>Reply information</summary>
        </member>
        <member name="P:TL.MessageBase.Date">
            <summary>Date of the message</summary>
        </member>
        <member name="P:TL.MessageBase.TtlPeriod">
            <summary>Time To Live of the message, once message.date+message.ttl_period === time(), the message will be deleted on the server, and must be deleted locally as well.</summary>
        </member>
        <member name="T:TL.MessageEmpty">
            <summary>Empty constructor, non-existent message.		<para>See <a href="https://corefork.telegram.org/constructor/messageEmpty"/></para></summary>
        </member>
        <member name="F:TL.MessageEmpty.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.MessageEmpty.id">
            <summary>Message identifier</summary>
        </member>
        <member name="F:TL.MessageEmpty.peer_id">
            <summary>Peer ID, the chat where this message was sent</summary>
        </member>
        <member name="F:TL.MessageEmpty.Flags.has_peer_id">
            <summary>Field <see cref="F:TL.MessageEmpty.peer_id"/> has a value</summary>
        </member>
        <member name="P:TL.MessageEmpty.ID">
            <summary>Message identifier</summary>
        </member>
        <member name="P:TL.MessageEmpty.Peer">
            <summary>Peer ID, the chat where this message was sent</summary>
        </member>
        <member name="T:TL.Message">
            <summary>A message		<para>See <a href="https://corefork.telegram.org/constructor/message"/></para></summary>
        </member>
        <member name="F:TL.Message.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Message.id">
            <summary>ID of the message</summary>
        </member>
        <member name="F:TL.Message.from_id">
            <summary>ID of the sender of the message</summary>
        </member>
        <member name="F:TL.Message.peer_id">
            <summary>Peer ID, the chat where this message was sent</summary>
        </member>
        <member name="F:TL.Message.saved_peer_id">
            <summary>Messages fetched from a <a href="https://corefork.telegram.org/api/saved-messages">saved messages dialog »</a> will have <c>peer</c>=<see cref="T:TL.InputPeerSelf"/> and the <c>saved_peer_id</c> flag set to the ID of the saved dialog.<br/></summary>
        </member>
        <member name="F:TL.Message.fwd_from">
            <summary>Info about forwarded messages</summary>
        </member>
        <member name="F:TL.Message.via_bot_id">
            <summary>ID of the inline bot that generated the message</summary>
        </member>
        <member name="F:TL.Message.reply_to">
            <summary>Reply information</summary>
        </member>
        <member name="F:TL.Message.date">
            <summary>Date of the message</summary>
        </member>
        <member name="F:TL.Message.message">
            <summary>The message</summary>
        </member>
        <member name="F:TL.Message.media">
            <summary>Media attachment</summary>
        </member>
        <member name="F:TL.Message.reply_markup">
            <summary>Reply markup (bot/inline keyboards)</summary>
        </member>
        <member name="F:TL.Message.entities">
            <summary>Message <a href="https://corefork.telegram.org/api/entities">entities</a> for styled text</summary>
        </member>
        <member name="F:TL.Message.views">
            <summary>View count for channel posts</summary>
        </member>
        <member name="F:TL.Message.forwards">
            <summary>Forward counter</summary>
        </member>
        <member name="F:TL.Message.replies">
            <summary>Info about <a href="https://corefork.telegram.org/api/threads">post comments (for channels) or message replies (for groups)</a></summary>
        </member>
        <member name="F:TL.Message.edit_date">
            <summary>Last edit date of this message</summary>
        </member>
        <member name="F:TL.Message.post_author">
            <summary>Name of the author of this message for channel posts (with signatures enabled)</summary>
        </member>
        <member name="F:TL.Message.grouped_id">
            <summary>Multiple media messages sent using <see cref="M:TL.SchemaExtensions.Messages_SendMultiMedia(WTelegram.Client,TL.InputPeer,TL.InputSingleMedia[],TL.InputReplyTo,System.Nullable{System.DateTime},TL.InputPeer,TL.InputQuickReplyShortcutBase,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">Messages_SendMultiMedia</see> with the same grouped ID indicate an <a href="https://corefork.telegram.org/api/files#albums-grouped-media">album or media group</a></summary>
        </member>
        <member name="F:TL.Message.reactions">
            <summary>Reactions to this message</summary>
        </member>
        <member name="F:TL.Message.restriction_reason">
            <summary>Contains the reason why access to this message must be restricted.</summary>
        </member>
        <member name="F:TL.Message.ttl_period">
            <summary>Time To Live of the message, once message.date+message.ttl_period === time(), the message will be deleted on the server, and must be deleted locally as well.</summary>
        </member>
        <member name="F:TL.Message.Flags.out_">
            <summary>Is this an outgoing message</summary>
        </member>
        <member name="F:TL.Message.Flags.has_fwd_from">
            <summary>Field <see cref="F:TL.Message.fwd_from"/> has a value</summary>
        </member>
        <member name="F:TL.Message.Flags.has_reply_to">
            <summary>Field <see cref="F:TL.Message.reply_to"/> has a value</summary>
        </member>
        <member name="F:TL.Message.Flags.mentioned">
            <summary>Whether we were <a href="https://corefork.telegram.org/api/mentions">mentioned</a> in this message</summary>
        </member>
        <member name="F:TL.Message.Flags.media_unread">
            <summary>Whether there are unread media attachments in this message</summary>
        </member>
        <member name="F:TL.Message.Flags.has_reply_markup">
            <summary>Field <see cref="F:TL.Message.reply_markup"/> has a value</summary>
        </member>
        <member name="F:TL.Message.Flags.has_entities">
            <summary>Field <see cref="F:TL.Message.entities"/> has a value</summary>
        </member>
        <member name="F:TL.Message.Flags.has_from_id">
            <summary>Field <see cref="F:TL.Message.from_id"/> has a value</summary>
        </member>
        <member name="F:TL.Message.Flags.has_media">
            <summary>Field <see cref="F:TL.Message.media"/> has a value</summary>
        </member>
        <member name="F:TL.Message.Flags.has_views">
            <summary>Fields <see cref="F:TL.Message.views"/> and <see cref="F:TL.Message.forwards"/> have a value</summary>
        </member>
        <member name="F:TL.Message.Flags.has_via_bot_id">
            <summary>Field <see cref="F:TL.Message.via_bot_id"/> has a value</summary>
        </member>
        <member name="F:TL.Message.Flags.silent">
            <summary>Whether this is a silent message (no notification triggered)</summary>
        </member>
        <member name="F:TL.Message.Flags.post">
            <summary>Whether this is a channel post</summary>
        </member>
        <member name="F:TL.Message.Flags.has_edit_date">
            <summary>Field <see cref="F:TL.Message.edit_date"/> has a value</summary>
        </member>
        <member name="F:TL.Message.Flags.has_post_author">
            <summary>Field <see cref="F:TL.Message.post_author"/> has a value</summary>
        </member>
        <member name="F:TL.Message.Flags.has_grouped_id">
            <summary>Field <see cref="F:TL.Message.grouped_id"/> has a value</summary>
        </member>
        <member name="F:TL.Message.Flags.from_scheduled">
            <summary>Whether this is a <a href="https://corefork.telegram.org/api/scheduled-messages">scheduled message</a></summary>
        </member>
        <member name="F:TL.Message.Flags.legacy">
            <summary>This is a legacy message: it has to be refetched with the new layer</summary>
        </member>
        <member name="F:TL.Message.Flags.has_reactions">
            <summary>Field <see cref="F:TL.Message.reactions"/> has a value</summary>
        </member>
        <member name="F:TL.Message.Flags.edit_hide">
            <summary>Whether the message should be shown as not modified to the user, even if an edit date is present</summary>
        </member>
        <member name="F:TL.Message.Flags.has_restriction_reason">
            <summary>Field <see cref="F:TL.Message.restriction_reason"/> has a value</summary>
        </member>
        <member name="F:TL.Message.Flags.has_replies">
            <summary>Field <see cref="F:TL.Message.replies"/> has a value</summary>
        </member>
        <member name="F:TL.Message.Flags.pinned">
            <summary>Whether this message is <a href="https://corefork.telegram.org/api/pin">pinned</a></summary>
        </member>
        <member name="F:TL.Message.Flags.has_ttl_period">
            <summary>Field <see cref="F:TL.Message.ttl_period"/> has a value</summary>
        </member>
        <member name="F:TL.Message.Flags.noforwards">
            <summary>Whether this message is <a href="https://telegram.org/blog/protected-content-delete-by-date-and-more">protected</a> and thus cannot be forwarded; clients should also prevent users from saving attached media (i.e. videos should only be streamed, photos should be kept in RAM, et cetera).</summary>
        </member>
        <member name="F:TL.Message.Flags.invert_media">
            <summary>If set, any eventual webpage preview will be shown on top of the message instead of at the bottom.</summary>
        </member>
        <member name="F:TL.Message.Flags.has_saved_peer_id">
            <summary>Field <see cref="F:TL.Message.saved_peer_id"/> has a value</summary>
        </member>
        <member name="F:TL.Message.Flags.has_from_boosts_applied">
            <summary>Field <see cref="F:TL.Message.from_boosts_applied"/> has a value</summary>
        </member>
        <member name="F:TL.Message.Flags.has_quick_reply_shortcut_id">
            <summary>Field <see cref="F:TL.Message.quick_reply_shortcut_id"/> has a value</summary>
        </member>
        <member name="F:TL.Message.Flags2.has_via_business_bot_id">
            <summary>Field <see cref="F:TL.Message.via_business_bot_id"/> has a value</summary>
        </member>
        <member name="P:TL.Message.ID">
            <summary>ID of the message</summary>
        </member>
        <member name="P:TL.Message.From">
            <summary>ID of the sender of the message</summary>
        </member>
        <member name="P:TL.Message.Peer">
            <summary>Peer ID, the chat where this message was sent</summary>
        </member>
        <member name="P:TL.Message.ReplyTo">
            <summary>Reply information</summary>
        </member>
        <member name="P:TL.Message.Date">
            <summary>Date of the message</summary>
        </member>
        <member name="P:TL.Message.TtlPeriod">
            <summary>Time To Live of the message, once message.date+message.ttl_period === time(), the message will be deleted on the server, and must be deleted locally as well.</summary>
        </member>
        <member name="T:TL.MessageService">
            <summary>Indicates a service message		<para>See <a href="https://corefork.telegram.org/constructor/messageService"/></para></summary>
        </member>
        <member name="F:TL.MessageService.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.MessageService.id">
            <summary>Message ID</summary>
        </member>
        <member name="F:TL.MessageService.from_id">
            <summary>ID of the sender of this message</summary>
        </member>
        <member name="F:TL.MessageService.peer_id">
            <summary>Sender of service message</summary>
        </member>
        <member name="F:TL.MessageService.reply_to">
            <summary>Reply (thread) information</summary>
        </member>
        <member name="F:TL.MessageService.date">
            <summary>Message date</summary>
        </member>
        <member name="F:TL.MessageService.action">
            <summary>Event connected with the service message</summary>
        </member>
        <member name="F:TL.MessageService.ttl_period">
            <summary>Time To Live of the message, once message.date+message.ttl_period === time(), the message will be deleted on the server, and must be deleted locally as well.</summary>
        </member>
        <member name="F:TL.MessageService.Flags.out_">
            <summary>Whether the message is outgoing</summary>
        </member>
        <member name="F:TL.MessageService.Flags.has_reply_to">
            <summary>Field <see cref="F:TL.MessageService.reply_to"/> has a value</summary>
        </member>
        <member name="F:TL.MessageService.Flags.mentioned">
            <summary>Whether we were mentioned in the message</summary>
        </member>
        <member name="F:TL.MessageService.Flags.media_unread">
            <summary>Whether the message contains unread media</summary>
        </member>
        <member name="F:TL.MessageService.Flags.has_from_id">
            <summary>Field <see cref="F:TL.MessageService.from_id"/> has a value</summary>
        </member>
        <member name="F:TL.MessageService.Flags.silent">
            <summary>Whether the message is silent</summary>
        </member>
        <member name="F:TL.MessageService.Flags.post">
            <summary>Whether it's a channel post</summary>
        </member>
        <member name="F:TL.MessageService.Flags.legacy">
            <summary>This is a legacy message: it has to be refetched with the new layer</summary>
        </member>
        <member name="F:TL.MessageService.Flags.has_ttl_period">
            <summary>Field <see cref="F:TL.MessageService.ttl_period"/> has a value</summary>
        </member>
        <member name="P:TL.MessageService.ID">
            <summary>Message ID</summary>
        </member>
        <member name="P:TL.MessageService.From">
            <summary>ID of the sender of this message</summary>
        </member>
        <member name="P:TL.MessageService.Peer">
            <summary>Sender of service message</summary>
        </member>
        <member name="P:TL.MessageService.ReplyTo">
            <summary>Reply (thread) information</summary>
        </member>
        <member name="P:TL.MessageService.Date">
            <summary>Message date</summary>
        </member>
        <member name="P:TL.MessageService.TtlPeriod">
            <summary>Time To Live of the message, once message.date+message.ttl_period === time(), the message will be deleted on the server, and must be deleted locally as well.</summary>
        </member>
        <member name="T:TL.MessageMedia">
            <summary>Media		<para>See <a href="https://corefork.telegram.org/type/MessageMedia"/></para>		<para>Derived classes: <see cref="T:TL.MessageMediaPhoto"/>, <see cref="T:TL.MessageMediaGeo"/>, <see cref="T:TL.MessageMediaContact"/>, <see cref="T:TL.MessageMediaUnsupported"/>, <see cref="T:TL.MessageMediaDocument"/>, <see cref="T:TL.MessageMediaWebPage"/>, <see cref="T:TL.MessageMediaVenue"/>, <see cref="T:TL.MessageMediaGame"/>, <see cref="T:TL.MessageMediaInvoice"/>, <see cref="T:TL.MessageMediaGeoLive"/>, <see cref="T:TL.MessageMediaPoll"/>, <see cref="T:TL.MessageMediaDice"/>, <see cref="T:TL.MessageMediaStory"/>, <see cref="T:TL.MessageMediaGiveaway"/>, <see cref="T:TL.MessageMediaGiveawayResults"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/messageMediaEmpty">messageMediaEmpty</a></remarks>
        </member>
        <member name="M:TL.MessageMedia.ToInputMedia">
            <summary>Use this helper method to send a copy of the media without downloading it</summary>
            <remarks>Quiz poll may need to be voted before obtaining the correct answers. Dice will not replicate same value. TTL ignored<br/>May return <see langword="null"/> for Invoice and other unsupported media types</remarks>
        </member>
        <member name="T:TL.MessageMediaPhoto">
            <summary>Attached photo.		<para>See <a href="https://corefork.telegram.org/constructor/messageMediaPhoto"/></para></summary>
        </member>
        <member name="F:TL.MessageMediaPhoto.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.MessageMediaPhoto.photo">
            <summary>Photo</summary>
        </member>
        <member name="F:TL.MessageMediaPhoto.ttl_seconds">
            <summary>Time to live in seconds of self-destructing photo</summary>
        </member>
        <member name="F:TL.MessageMediaPhoto.Flags.has_photo">
            <summary>Field <see cref="F:TL.MessageMediaPhoto.photo"/> has a value</summary>
        </member>
        <member name="F:TL.MessageMediaPhoto.Flags.has_ttl_seconds">
            <summary>Field <see cref="F:TL.MessageMediaPhoto.ttl_seconds"/> has a value</summary>
        </member>
        <member name="F:TL.MessageMediaPhoto.Flags.spoiler">
            <summary>Whether this media should be hidden behind a spoiler warning</summary>
        </member>
        <member name="T:TL.MessageMediaGeo">
            <summary>Attached map.		<para>See <a href="https://corefork.telegram.org/constructor/messageMediaGeo"/></para></summary>
        </member>
        <member name="F:TL.MessageMediaGeo.geo">
            <summary>GeoPoint</summary>
        </member>
        <member name="T:TL.MessageMediaContact">
            <summary>Attached contact.		<para>See <a href="https://corefork.telegram.org/constructor/messageMediaContact"/></para></summary>
        </member>
        <member name="F:TL.MessageMediaContact.phone_number">
            <summary>Phone number</summary>
        </member>
        <member name="F:TL.MessageMediaContact.first_name">
            <summary>Contact's first name</summary>
        </member>
        <member name="F:TL.MessageMediaContact.last_name">
            <summary>Contact's last name</summary>
        </member>
        <member name="F:TL.MessageMediaContact.vcard">
            <summary>VCARD of contact</summary>
        </member>
        <member name="F:TL.MessageMediaContact.user_id">
            <summary>User identifier or <c>0</c>, if the user with the given phone number is not registered</summary>
        </member>
        <member name="T:TL.MessageMediaUnsupported">
            <summary>Current version of the client does not support this media type.		<para>See <a href="https://corefork.telegram.org/constructor/messageMediaUnsupported"/></para></summary>
        </member>
        <member name="T:TL.MessageMediaDocument">
            <summary>Document (video, audio, voice, sticker, any media type except photo)		<para>See <a href="https://corefork.telegram.org/constructor/messageMediaDocument"/></para></summary>
        </member>
        <member name="F:TL.MessageMediaDocument.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.MessageMediaDocument.document">
            <summary>Attached document</summary>
        </member>
        <member name="F:TL.MessageMediaDocument.alt_document">
            <summary>Currently only used for story videos, may contain an alternative version of the story video, explicitly encoded using H.264 (in MPEG4 transport) at a lower resolution than <c>document</c>.</summary>
        </member>
        <member name="F:TL.MessageMediaDocument.ttl_seconds">
            <summary>Time to live of self-destructing document</summary>
        </member>
        <member name="F:TL.MessageMediaDocument.Flags.has_document">
            <summary>Field <see cref="F:TL.MessageMediaDocument.document"/> has a value</summary>
        </member>
        <member name="F:TL.MessageMediaDocument.Flags.has_ttl_seconds">
            <summary>Field <see cref="F:TL.MessageMediaDocument.ttl_seconds"/> has a value</summary>
        </member>
        <member name="F:TL.MessageMediaDocument.Flags.nopremium">
            <summary>Whether this is a normal sticker, if not set this is a premium sticker and a premium sticker animation must be played.</summary>
        </member>
        <member name="F:TL.MessageMediaDocument.Flags.spoiler">
            <summary>Whether this media should be hidden behind a spoiler warning</summary>
        </member>
        <member name="F:TL.MessageMediaDocument.Flags.has_alt_document">
            <summary>Field <see cref="F:TL.MessageMediaDocument.alt_document"/> has a value</summary>
        </member>
        <member name="F:TL.MessageMediaDocument.Flags.video">
            <summary>Whether this is a video.</summary>
        </member>
        <member name="F:TL.MessageMediaDocument.Flags.round">
            <summary>Whether this is a round video.</summary>
        </member>
        <member name="F:TL.MessageMediaDocument.Flags.voice">
            <summary>Whether this is a voice message.</summary>
        </member>
        <member name="T:TL.MessageMediaWebPage">
            <summary>Preview of webpage		<para>See <a href="https://corefork.telegram.org/constructor/messageMediaWebPage"/></para></summary>
        </member>
        <member name="F:TL.MessageMediaWebPage.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.MessageMediaWebPage.webpage">
            <summary>Webpage preview</summary>
        </member>
        <member name="F:TL.MessageMediaWebPage.Flags.force_large_media">
            <summary>If set, specifies that a large media preview should be used.</summary>
        </member>
        <member name="F:TL.MessageMediaWebPage.Flags.force_small_media">
            <summary>If set, specifies that a small media preview should be used.</summary>
        </member>
        <member name="F:TL.MessageMediaWebPage.Flags.manual">
            <summary>If set, indicates that the URL used for the webpage preview was specified manually using <see cref="T:TL.InputMediaWebPage"/>, and may not be related to any of the URLs specified in the message.</summary>
        </member>
        <member name="F:TL.MessageMediaWebPage.Flags.safe">
            <summary>If set, the webpage can be opened directly without user confirmation; otherwise, user confirmation is required, showing the exact URL that will be opened.</summary>
        </member>
        <member name="T:TL.MessageMediaVenue">
            <summary>Venue		<para>See <a href="https://corefork.telegram.org/constructor/messageMediaVenue"/></para></summary>
        </member>
        <member name="F:TL.MessageMediaVenue.geo">
            <summary>Geolocation of venue</summary>
        </member>
        <member name="F:TL.MessageMediaVenue.title">
            <summary>Venue name</summary>
        </member>
        <member name="F:TL.MessageMediaVenue.address">
            <summary>Address</summary>
        </member>
        <member name="F:TL.MessageMediaVenue.provider">
            <summary>Venue provider: currently only "foursquare" and "gplaces" (Google Places) need to be supported</summary>
        </member>
        <member name="F:TL.MessageMediaVenue.venue_id">
            <summary>Venue ID in the provider's database</summary>
        </member>
        <member name="F:TL.MessageMediaVenue.venue_type">
            <summary>Venue type in the provider's database</summary>
        </member>
        <member name="T:TL.MessageMediaGame">
            <summary>Telegram game		<para>See <a href="https://corefork.telegram.org/constructor/messageMediaGame"/></para></summary>
        </member>
        <member name="F:TL.MessageMediaGame.game">
            <summary>Game</summary>
        </member>
        <member name="T:TL.MessageMediaInvoice">
            <summary>Invoice		<para>See <a href="https://corefork.telegram.org/constructor/messageMediaInvoice"/></para></summary>
        </member>
        <member name="F:TL.MessageMediaInvoice.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.MessageMediaInvoice.title">
            <summary>Product name, 1-32 characters</summary>
        </member>
        <member name="F:TL.MessageMediaInvoice.description">
            <summary>Product description, 1-255 characters</summary>
        </member>
        <member name="F:TL.MessageMediaInvoice.photo">
            <summary>URL of the product photo for the invoice. Can be a photo of the goods or a marketing image for a service. People like it better when they see what they are paying for.</summary>
        </member>
        <member name="F:TL.MessageMediaInvoice.receipt_msg_id">
            <summary>Message ID of receipt: if set, clients should change the text of the first <see cref="T:TL.KeyboardButtonBuy"/> button always attached to the <see cref="T:TL.Message"/> to a localized version of the word <c>Receipt</c></summary>
        </member>
        <member name="F:TL.MessageMediaInvoice.currency">
            <summary>Three-letter ISO 4217 <a href="https://corefork.telegram.org/bots/payments#supported-currencies">currency</a> code</summary>
        </member>
        <member name="F:TL.MessageMediaInvoice.total_amount">
            <summary>Total price in the smallest units of the currency (integer, not float/double). For example, for a price of <c>US$ 1.45</c> pass <c>amount = 145</c>. See the exp parameter in <a href="https://corefork.telegram.org/bots/payments/currencies.json">currencies.json</a>, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies).</summary>
        </member>
        <member name="F:TL.MessageMediaInvoice.start_param">
            <summary>Unique bot deep-linking parameter that can be used to generate this invoice</summary>
        </member>
        <member name="F:TL.MessageMediaInvoice.extended_media">
            <summary>Extended media</summary>
        </member>
        <member name="F:TL.MessageMediaInvoice.Flags.has_photo">
            <summary>Field <see cref="F:TL.MessageMediaInvoice.photo"/> has a value</summary>
        </member>
        <member name="F:TL.MessageMediaInvoice.Flags.shipping_address_requested">
            <summary>Whether the shipping address was requested</summary>
        </member>
        <member name="F:TL.MessageMediaInvoice.Flags.has_receipt_msg_id">
            <summary>Field <see cref="F:TL.MessageMediaInvoice.receipt_msg_id"/> has a value</summary>
        </member>
        <member name="F:TL.MessageMediaInvoice.Flags.test">
            <summary>Whether this is an example invoice</summary>
        </member>
        <member name="F:TL.MessageMediaInvoice.Flags.has_extended_media">
            <summary>Field <see cref="F:TL.MessageMediaInvoice.extended_media"/> has a value</summary>
        </member>
        <member name="T:TL.MessageMediaGeoLive">
            <summary>Indicates a <a href="https://corefork.telegram.org/api/live-location">live geolocation</a>		<para>See <a href="https://corefork.telegram.org/constructor/messageMediaGeoLive"/></para></summary>
        </member>
        <member name="F:TL.MessageMediaGeoLive.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.MessageMediaGeoLive.geo">
            <summary>Geolocation</summary>
        </member>
        <member name="F:TL.MessageMediaGeoLive.heading">
            <summary>For <a href="https://corefork.telegram.org/api/live-location">live locations</a>, a direction in which the location moves, in degrees; 1-360</summary>
        </member>
        <member name="F:TL.MessageMediaGeoLive.period">
            <summary>Validity period of provided geolocation</summary>
        </member>
        <member name="F:TL.MessageMediaGeoLive.proximity_notification_radius">
            <summary>For <a href="https://corefork.telegram.org/api/live-location">live locations</a>, a maximum distance to another chat member for proximity alerts, in meters (0-100000).</summary>
        </member>
        <member name="F:TL.MessageMediaGeoLive.Flags.has_heading">
            <summary>Field <see cref="F:TL.MessageMediaGeoLive.heading"/> has a value</summary>
        </member>
        <member name="F:TL.MessageMediaGeoLive.Flags.has_proximity_notification_radius">
            <summary>Field <see cref="F:TL.MessageMediaGeoLive.proximity_notification_radius"/> has a value</summary>
        </member>
        <member name="T:TL.MessageMediaPoll">
            <summary>Poll		<para>See <a href="https://corefork.telegram.org/constructor/messageMediaPoll"/></para></summary>
        </member>
        <member name="F:TL.MessageMediaPoll.poll">
            <summary>The poll</summary>
        </member>
        <member name="F:TL.MessageMediaPoll.results">
            <summary>The results of the poll</summary>
        </member>
        <member name="T:TL.MessageMediaDice">
            <summary><a href="https://corefork.telegram.org/api/dice">Dice-based animated sticker</a>		<para>See <a href="https://corefork.telegram.org/constructor/messageMediaDice"/></para></summary>
        </member>
        <member name="F:TL.MessageMediaDice.value">
            <summary><a href="https://corefork.telegram.org/api/dice">Dice value</a></summary>
        </member>
        <member name="F:TL.MessageMediaDice.emoticon">
            <summary>The emoji, for now 🏀, 🎲 and 🎯 are supported</summary>
        </member>
        <member name="T:TL.MessageMediaStory">
            <summary>Represents a forwarded <a href="https://corefork.telegram.org/api/stories">story</a> or a story mention.		<para>See <a href="https://corefork.telegram.org/constructor/messageMediaStory"/></para></summary>
        </member>
        <member name="F:TL.MessageMediaStory.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.MessageMediaStory.peer">
            <summary>Peer that posted the story.</summary>
        </member>
        <member name="F:TL.MessageMediaStory.id">
            <summary>Story ID</summary>
        </member>
        <member name="F:TL.MessageMediaStory.story">
            <summary>The story itself, if absent fetch it using <see cref="M:TL.SchemaExtensions.Stories_GetStoriesByID(WTelegram.Client,TL.InputPeer,System.Int32[])">Stories_GetStoriesByID</see> and the <c>peer</c>/<c>id</c> parameters specified above.</summary>
        </member>
        <member name="F:TL.MessageMediaStory.Flags.has_story">
            <summary>Field <see cref="F:TL.MessageMediaStory.story"/> has a value</summary>
        </member>
        <member name="F:TL.MessageMediaStory.Flags.via_mention">
            <summary>If set, indicates that this someone has mentioned us in this story (i.e. by tagging us in the description) or vice versa, we have mentioned the other peer (if the message is outgoing).</summary>
        </member>
        <member name="T:TL.MessageMediaGiveaway">
            <summary>Contains info about a <a href="https://corefork.telegram.org/api/giveaways">giveaway, see here »</a> for more info.		<para>See <a href="https://corefork.telegram.org/constructor/messageMediaGiveaway"/></para></summary>
        </member>
        <member name="F:TL.MessageMediaGiveaway.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.MessageMediaGiveaway.channels">
            <summary>The channels that the user must join to participate in the giveaway.</summary>
        </member>
        <member name="F:TL.MessageMediaGiveaway.countries_iso2">
            <summary>If set, only users residing in these countries can participate in the giveaway, (specified as a list of two-letter ISO 3166-1 alpha-2 country codes); otherwise there are no country-based limitations.</summary>
        </member>
        <member name="F:TL.MessageMediaGiveaway.prize_description">
            <summary>Can contain a textual description of additional giveaway prizes.</summary>
        </member>
        <member name="F:TL.MessageMediaGiveaway.quantity">
            <summary>Number of <a href="https://corefork.telegram.org/api/premium">Telegram Premium</a> subscriptions given away.</summary>
        </member>
        <member name="F:TL.MessageMediaGiveaway.months">
            <summary>Duration in months of each <a href="https://corefork.telegram.org/api/premium">Telegram Premium</a> subscription in the giveaway.</summary>
        </member>
        <member name="F:TL.MessageMediaGiveaway.until_date">
            <summary>The end date of the giveaway.</summary>
        </member>
        <member name="F:TL.MessageMediaGiveaway.Flags.only_new_subscribers">
            <summary>If set, only new subscribers starting from the giveaway creation date will be able to participate to the giveaway.</summary>
        </member>
        <member name="F:TL.MessageMediaGiveaway.Flags.has_countries_iso2">
            <summary>Field <see cref="F:TL.MessageMediaGiveaway.countries_iso2"/> has a value</summary>
        </member>
        <member name="F:TL.MessageMediaGiveaway.Flags.winners_are_visible">
            <summary>If set, giveaway winners are public and will be listed in a <see cref="T:TL.MessageMediaGiveawayResults"/> message that will be automatically sent to the channel once the giveaway ends.</summary>
        </member>
        <member name="F:TL.MessageMediaGiveaway.Flags.has_prize_description">
            <summary>Field <see cref="F:TL.MessageMediaGiveaway.prize_description"/> has a value</summary>
        </member>
        <member name="T:TL.MessageMediaGiveawayResults">
            <summary>A <a href="https://corefork.telegram.org/api/giveaways">giveaway</a> with public winners has finished, this constructor contains info about the winners.		<para>See <a href="https://corefork.telegram.org/constructor/messageMediaGiveawayResults"/></para></summary>
        </member>
        <member name="F:TL.MessageMediaGiveawayResults.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.MessageMediaGiveawayResults.channel_id">
            <summary>ID of the channel that was automatically <a href="https://corefork.telegram.org/api/boost">boosted</a> by the winners of the giveaway for duration of the Premium subscription.</summary>
        </member>
        <member name="F:TL.MessageMediaGiveawayResults.additional_peers_count">
            <summary>Number of other channels that participated in the giveaway.</summary>
        </member>
        <member name="F:TL.MessageMediaGiveawayResults.launch_msg_id">
            <summary>Identifier of the message with the giveaway in <c>channel_id</c>.</summary>
        </member>
        <member name="F:TL.MessageMediaGiveawayResults.winners_count">
            <summary>Total number of winners in the giveaway.</summary>
        </member>
        <member name="F:TL.MessageMediaGiveawayResults.unclaimed_count">
            <summary>Number of not-yet-claimed prizes.</summary>
        </member>
        <member name="F:TL.MessageMediaGiveawayResults.winners">
            <summary>Up to 100 user identifiers of the winners of the giveaway.</summary>
        </member>
        <member name="F:TL.MessageMediaGiveawayResults.months">
            <summary>Duration in months of each <a href="https://corefork.telegram.org/api/premium">Telegram Premium</a> subscription in the giveaway.</summary>
        </member>
        <member name="F:TL.MessageMediaGiveawayResults.prize_description">
            <summary>Can contain a textual description of additional giveaway prizes.</summary>
        </member>
        <member name="F:TL.MessageMediaGiveawayResults.until_date">
            <summary>Point in time (Unix timestamp) when the winners were selected. May be bigger than winners selection date specified in initial parameters of the giveaway.</summary>
        </member>
        <member name="F:TL.MessageMediaGiveawayResults.Flags.only_new_subscribers">
            <summary>If set, only new subscribers starting from the giveaway creation date participated in the giveaway.</summary>
        </member>
        <member name="F:TL.MessageMediaGiveawayResults.Flags.has_prize_description">
            <summary>Field <see cref="F:TL.MessageMediaGiveawayResults.prize_description"/> has a value</summary>
        </member>
        <member name="F:TL.MessageMediaGiveawayResults.Flags.refunded">
            <summary>If set, the giveaway was canceled and was fully refunded.</summary>
        </member>
        <member name="F:TL.MessageMediaGiveawayResults.Flags.has_additional_peers_count">
            <summary>Field <see cref="F:TL.MessageMediaGiveawayResults.additional_peers_count"/> has a value</summary>
        </member>
        <member name="T:TL.MessageAction">
            <summary>Object describing actions connected to a service message.		<para>See <a href="https://corefork.telegram.org/type/MessageAction"/></para>		<para>Derived classes: <see cref="T:TL.MessageActionChatCreate"/>, <see cref="T:TL.MessageActionChatEditTitle"/>, <see cref="T:TL.MessageActionChatEditPhoto"/>, <see cref="T:TL.MessageActionChatDeletePhoto"/>, <see cref="T:TL.MessageActionChatAddUser"/>, <see cref="T:TL.MessageActionChatDeleteUser"/>, <see cref="T:TL.MessageActionChatJoinedByLink"/>, <see cref="T:TL.MessageActionChannelCreate"/>, <see cref="T:TL.MessageActionChatMigrateTo"/>, <see cref="T:TL.MessageActionChannelMigrateFrom"/>, <see cref="T:TL.MessageActionPinMessage"/>, <see cref="T:TL.MessageActionHistoryClear"/>, <see cref="T:TL.MessageActionGameScore"/>, <see cref="T:TL.MessageActionPaymentSentMe"/>, <see cref="T:TL.MessageActionPaymentSent"/>, <see cref="T:TL.MessageActionPhoneCall"/>, <see cref="T:TL.MessageActionScreenshotTaken"/>, <see cref="T:TL.MessageActionCustomAction"/>, <see cref="T:TL.MessageActionBotAllowed"/>, <see cref="T:TL.MessageActionSecureValuesSentMe"/>, <see cref="T:TL.MessageActionSecureValuesSent"/>, <see cref="T:TL.MessageActionContactSignUp"/>, <see cref="T:TL.MessageActionGeoProximityReached"/>, <see cref="T:TL.MessageActionGroupCall"/>, <see cref="T:TL.MessageActionInviteToGroupCall"/>, <see cref="T:TL.MessageActionSetMessagesTTL"/>, <see cref="T:TL.MessageActionGroupCallScheduled"/>, <see cref="T:TL.MessageActionSetChatTheme"/>, <see cref="T:TL.MessageActionChatJoinedByRequest"/>, <see cref="T:TL.MessageActionWebViewDataSentMe"/>, <see cref="T:TL.MessageActionWebViewDataSent"/>, <see cref="T:TL.MessageActionGiftPremium"/>, <see cref="T:TL.MessageActionTopicCreate"/>, <see cref="T:TL.MessageActionTopicEdit"/>, <see cref="T:TL.MessageActionSuggestProfilePhoto"/>, <see cref="T:TL.MessageActionRequestedPeer"/>, <see cref="T:TL.MessageActionSetChatWallPaper"/>, <see cref="T:TL.MessageActionGiftCode"/>, <see cref="T:TL.MessageActionGiveawayLaunch"/>, <see cref="T:TL.MessageActionGiveawayResults"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/messageActionEmpty">messageActionEmpty</a></remarks>
        </member>
        <member name="T:TL.MessageActionChatCreate">
            <summary>Group created		<para>See <a href="https://corefork.telegram.org/constructor/messageActionChatCreate"/></para></summary>
        </member>
        <member name="F:TL.MessageActionChatCreate.title">
            <summary>Group name</summary>
        </member>
        <member name="F:TL.MessageActionChatCreate.users">
            <summary>List of group members</summary>
        </member>
        <member name="T:TL.MessageActionChatEditTitle">
            <summary>Group name changed.		<para>See <a href="https://corefork.telegram.org/constructor/messageActionChatEditTitle"/></para></summary>
        </member>
        <member name="F:TL.MessageActionChatEditTitle.title">
            <summary>New group name</summary>
        </member>
        <member name="T:TL.MessageActionChatEditPhoto">
            <summary>Group profile changed		<para>See <a href="https://corefork.telegram.org/constructor/messageActionChatEditPhoto"/></para></summary>
        </member>
        <member name="F:TL.MessageActionChatEditPhoto.photo">
            <summary>New group profile photo</summary>
        </member>
        <member name="T:TL.MessageActionChatDeletePhoto">
            <summary>Group profile photo removed.		<para>See <a href="https://corefork.telegram.org/constructor/messageActionChatDeletePhoto"/></para></summary>
        </member>
        <member name="T:TL.MessageActionChatAddUser">
            <summary>New member in the group		<para>See <a href="https://corefork.telegram.org/constructor/messageActionChatAddUser"/></para></summary>
        </member>
        <member name="F:TL.MessageActionChatAddUser.users">
            <summary>Users that were invited to the chat</summary>
        </member>
        <member name="T:TL.MessageActionChatDeleteUser">
            <summary>User left the group.		<para>See <a href="https://corefork.telegram.org/constructor/messageActionChatDeleteUser"/></para></summary>
        </member>
        <member name="F:TL.MessageActionChatDeleteUser.user_id">
            <summary>Leaving user ID</summary>
        </member>
        <member name="T:TL.MessageActionChatJoinedByLink">
            <summary>A user joined the chat via an invite link		<para>See <a href="https://corefork.telegram.org/constructor/messageActionChatJoinedByLink"/></para></summary>
        </member>
        <member name="F:TL.MessageActionChatJoinedByLink.inviter_id">
            <summary>ID of the user that created the invite link</summary>
        </member>
        <member name="T:TL.MessageActionChannelCreate">
            <summary>The channel was created		<para>See <a href="https://corefork.telegram.org/constructor/messageActionChannelCreate"/></para></summary>
        </member>
        <member name="F:TL.MessageActionChannelCreate.title">
            <summary>Original channel/supergroup title</summary>
        </member>
        <member name="T:TL.MessageActionChatMigrateTo">
            <summary>Indicates the chat was <a href="https://corefork.telegram.org/api/channel">migrated</a> to the specified supergroup		<para>See <a href="https://corefork.telegram.org/constructor/messageActionChatMigrateTo"/></para></summary>
        </member>
        <member name="F:TL.MessageActionChatMigrateTo.channel_id">
            <summary>The supergroup it was migrated to</summary>
        </member>
        <member name="T:TL.MessageActionChannelMigrateFrom">
            <summary>Indicates the channel was <a href="https://corefork.telegram.org/api/channel">migrated</a> from the specified chat		<para>See <a href="https://corefork.telegram.org/constructor/messageActionChannelMigrateFrom"/></para></summary>
        </member>
        <member name="F:TL.MessageActionChannelMigrateFrom.title">
            <summary>The old chat title</summary>
        </member>
        <member name="F:TL.MessageActionChannelMigrateFrom.chat_id">
            <summary>The old chat ID</summary>
        </member>
        <member name="T:TL.MessageActionPinMessage">
            <summary>A message was pinned		<para>See <a href="https://corefork.telegram.org/constructor/messageActionPinMessage"/></para></summary>
        </member>
        <member name="T:TL.MessageActionHistoryClear">
            <summary>Chat history was cleared		<para>See <a href="https://corefork.telegram.org/constructor/messageActionHistoryClear"/></para></summary>
        </member>
        <member name="T:TL.MessageActionGameScore">
            <summary>Someone scored in a game		<para>See <a href="https://corefork.telegram.org/constructor/messageActionGameScore"/></para></summary>
        </member>
        <member name="F:TL.MessageActionGameScore.game_id">
            <summary>Game ID</summary>
        </member>
        <member name="F:TL.MessageActionGameScore.score">
            <summary>Score</summary>
        </member>
        <member name="T:TL.MessageActionPaymentSentMe">
            <summary>A user just sent a payment to me (a bot)		<para>See <a href="https://corefork.telegram.org/constructor/messageActionPaymentSentMe"/></para></summary>
        </member>
        <member name="F:TL.MessageActionPaymentSentMe.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.MessageActionPaymentSentMe.currency">
            <summary>Three-letter ISO 4217 <a href="https://corefork.telegram.org/bots/payments#supported-currencies">currency</a> code</summary>
        </member>
        <member name="F:TL.MessageActionPaymentSentMe.total_amount">
            <summary>Price of the product in the smallest units of the currency (integer, not float/double). For example, for a price of <c>US$ 1.45</c> pass <c>amount = 145</c>. See the exp parameter in <a href="https://corefork.telegram.org/bots/payments/currencies.json">currencies.json</a>, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies).</summary>
        </member>
        <member name="F:TL.MessageActionPaymentSentMe.payload">
            <summary>Bot specified invoice payload</summary>
        </member>
        <member name="F:TL.MessageActionPaymentSentMe.info">
            <summary>Order info provided by the user</summary>
        </member>
        <member name="F:TL.MessageActionPaymentSentMe.shipping_option_id">
            <summary>Identifier of the shipping option chosen by the user</summary>
        </member>
        <member name="F:TL.MessageActionPaymentSentMe.charge">
            <summary>Provider payment identifier</summary>
        </member>
        <member name="F:TL.MessageActionPaymentSentMe.Flags.has_info">
            <summary>Field <see cref="F:TL.MessageActionPaymentSentMe.info"/> has a value</summary>
        </member>
        <member name="F:TL.MessageActionPaymentSentMe.Flags.has_shipping_option_id">
            <summary>Field <see cref="F:TL.MessageActionPaymentSentMe.shipping_option_id"/> has a value</summary>
        </member>
        <member name="F:TL.MessageActionPaymentSentMe.Flags.recurring_init">
            <summary>Whether this is the first payment of a recurring payment we just subscribed to</summary>
        </member>
        <member name="F:TL.MessageActionPaymentSentMe.Flags.recurring_used">
            <summary>Whether this payment is part of a recurring payment</summary>
        </member>
        <member name="T:TL.MessageActionPaymentSent">
            <summary>A payment was sent		<para>See <a href="https://corefork.telegram.org/constructor/messageActionPaymentSent"/></para></summary>
        </member>
        <member name="F:TL.MessageActionPaymentSent.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.MessageActionPaymentSent.currency">
            <summary>Three-letter ISO 4217 <a href="https://corefork.telegram.org/bots/payments#supported-currencies">currency</a> code</summary>
        </member>
        <member name="F:TL.MessageActionPaymentSent.total_amount">
            <summary>Price of the product in the smallest units of the currency (integer, not float/double). For example, for a price of <c>US$ 1.45</c> pass <c>amount = 145</c>. See the exp parameter in <a href="https://corefork.telegram.org/bots/payments/currencies.json">currencies.json</a>, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies).</summary>
        </member>
        <member name="F:TL.MessageActionPaymentSent.invoice_slug">
            <summary>An invoice slug taken from an <a href="https://corefork.telegram.org/api/links#invoice-links">invoice deep link</a> or from the <a href="https://corefork.telegram.org/api/config#premium-invoice-slug"><c>premium_invoice_slug</c> app config parameter »</a></summary>
        </member>
        <member name="F:TL.MessageActionPaymentSent.Flags.has_invoice_slug">
            <summary>Field <see cref="F:TL.MessageActionPaymentSent.invoice_slug"/> has a value</summary>
        </member>
        <member name="F:TL.MessageActionPaymentSent.Flags.recurring_init">
            <summary>Whether this is the first payment of a recurring payment we just subscribed to</summary>
        </member>
        <member name="F:TL.MessageActionPaymentSent.Flags.recurring_used">
            <summary>Whether this payment is part of a recurring payment</summary>
        </member>
        <member name="T:TL.MessageActionPhoneCall">
            <summary>A phone call		<para>See <a href="https://corefork.telegram.org/constructor/messageActionPhoneCall"/></para></summary>
        </member>
        <member name="F:TL.MessageActionPhoneCall.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.MessageActionPhoneCall.call_id">
            <summary>Call ID</summary>
        </member>
        <member name="F:TL.MessageActionPhoneCall.reason">
            <summary>If the call has ended, the reason why it ended</summary>
        </member>
        <member name="F:TL.MessageActionPhoneCall.duration">
            <summary>Duration of the call in seconds</summary>
        </member>
        <member name="F:TL.MessageActionPhoneCall.Flags.has_reason">
            <summary>Field <see cref="F:TL.MessageActionPhoneCall.reason"/> has a value</summary>
        </member>
        <member name="F:TL.MessageActionPhoneCall.Flags.has_duration">
            <summary>Field <see cref="F:TL.MessageActionPhoneCall.duration"/> has a value</summary>
        </member>
        <member name="F:TL.MessageActionPhoneCall.Flags.video">
            <summary>Is this a video call?</summary>
        </member>
        <member name="T:TL.MessageActionScreenshotTaken">
            <summary>A screenshot of the chat was taken		<para>See <a href="https://corefork.telegram.org/constructor/messageActionScreenshotTaken"/></para></summary>
        </member>
        <member name="T:TL.MessageActionCustomAction">
            <summary>Custom action (most likely not supported by the current layer, an upgrade might be needed)		<para>See <a href="https://corefork.telegram.org/constructor/messageActionCustomAction"/></para></summary>
        </member>
        <member name="F:TL.MessageActionCustomAction.message">
            <summary>Action message</summary>
        </member>
        <member name="T:TL.MessageActionBotAllowed">
            <summary>We have given the bot permission to send us direct messages.		<para>See <a href="https://corefork.telegram.org/constructor/messageActionBotAllowed"/></para></summary>
        </member>
        <member name="F:TL.MessageActionBotAllowed.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.MessageActionBotAllowed.domain">
            <summary>We have authorized the bot to send us messages by logging into a website via <a href="https://corefork.telegram.org/widgets/login">Telegram Login »</a>; this field contains the domain name of the website on which the user has logged in.</summary>
        </member>
        <member name="F:TL.MessageActionBotAllowed.app">
            <summary>We have authorized the bot to send us messages by opening the specified <a href="https://corefork.telegram.org/api/bots/webapps">bot mini app</a>.</summary>
        </member>
        <member name="F:TL.MessageActionBotAllowed.Flags.has_domain">
            <summary>Field <see cref="F:TL.MessageActionBotAllowed.domain"/> has a value</summary>
        </member>
        <member name="F:TL.MessageActionBotAllowed.Flags.attach_menu">
            <summary>We have authorized the bot to send us messages by installing the bot's <a href="https://corefork.telegram.org/api/bots/attach">attachment menu</a>.</summary>
        </member>
        <member name="F:TL.MessageActionBotAllowed.Flags.has_app">
            <summary>Field <see cref="F:TL.MessageActionBotAllowed.app"/> has a value</summary>
        </member>
        <member name="F:TL.MessageActionBotAllowed.Flags.from_request">
            <summary>We have allowed the bot to send us messages using <see cref="M:TL.SchemaExtensions.Bots_AllowSendMessage(WTelegram.Client,TL.InputUserBase)">Bots_AllowSendMessage</see>.</summary>
        </member>
        <member name="T:TL.MessageActionSecureValuesSentMe">
            <summary>Secure <a href="https://corefork.telegram.org/passport">telegram passport</a> values were received		<para>See <a href="https://corefork.telegram.org/constructor/messageActionSecureValuesSentMe"/></para></summary>
        </member>
        <member name="F:TL.MessageActionSecureValuesSentMe.values">
            <summary>Vector with information about documents and other Telegram Passport elements that were shared with the bot</summary>
        </member>
        <member name="F:TL.MessageActionSecureValuesSentMe.credentials">
            <summary>Encrypted credentials required to decrypt the data</summary>
        </member>
        <member name="T:TL.MessageActionSecureValuesSent">
            <summary>Request for secure <a href="https://corefork.telegram.org/passport">telegram passport</a> values was sent		<para>See <a href="https://corefork.telegram.org/constructor/messageActionSecureValuesSent"/></para></summary>
        </member>
        <member name="F:TL.MessageActionSecureValuesSent.types">
            <summary>Secure value types</summary>
        </member>
        <member name="T:TL.MessageActionContactSignUp">
            <summary>A contact just signed up to telegram		<para>See <a href="https://corefork.telegram.org/constructor/messageActionContactSignUp"/></para></summary>
        </member>
        <member name="T:TL.MessageActionGeoProximityReached">
            <summary>A user of the chat is now in proximity of another user		<para>See <a href="https://corefork.telegram.org/constructor/messageActionGeoProximityReached"/></para></summary>
        </member>
        <member name="F:TL.MessageActionGeoProximityReached.from_id">
            <summary>The user or chat that is now in proximity of <c>to_id</c></summary>
        </member>
        <member name="F:TL.MessageActionGeoProximityReached.to_id">
            <summary>The user or chat that subscribed to <a href="https://corefork.telegram.org/api/live-location#proximity-alert">live geolocation proximity alerts</a></summary>
        </member>
        <member name="F:TL.MessageActionGeoProximityReached.distance">
            <summary>Distance, in meters (0-100000)</summary>
        </member>
        <member name="T:TL.MessageActionGroupCall">
            <summary>The group call has ended		<para>See <a href="https://corefork.telegram.org/constructor/messageActionGroupCall"/></para></summary>
        </member>
        <member name="F:TL.MessageActionGroupCall.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.MessageActionGroupCall.call">
            <summary>Group call</summary>
        </member>
        <member name="F:TL.MessageActionGroupCall.duration">
            <summary>Group call duration</summary>
        </member>
        <member name="F:TL.MessageActionGroupCall.Flags.has_duration">
            <summary>Field <see cref="F:TL.MessageActionGroupCall.duration"/> has a value</summary>
        </member>
        <member name="T:TL.MessageActionInviteToGroupCall">
            <summary>A set of users was invited to the group call		<para>See <a href="https://corefork.telegram.org/constructor/messageActionInviteToGroupCall"/></para></summary>
        </member>
        <member name="F:TL.MessageActionInviteToGroupCall.call">
            <summary>The group call</summary>
        </member>
        <member name="F:TL.MessageActionInviteToGroupCall.users">
            <summary>The invited users</summary>
        </member>
        <member name="T:TL.MessageActionSetMessagesTTL">
            <summary>The Time-To-Live of messages in this chat was changed.		<para>See <a href="https://corefork.telegram.org/constructor/messageActionSetMessagesTTL"/></para></summary>
        </member>
        <member name="F:TL.MessageActionSetMessagesTTL.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.MessageActionSetMessagesTTL.period">
            <summary>New Time-To-Live of all messages sent in this chat; if 0, autodeletion was disabled.</summary>
        </member>
        <member name="F:TL.MessageActionSetMessagesTTL.auto_setting_from">
            <summary>If set, the chat TTL setting was set not due to a manual change by one of participants, but automatically because one of the participants has the <see cref="M:TL.SchemaExtensions.Messages_SetDefaultHistoryTTL(WTelegram.Client,System.Int32)">Messages_SetDefaultHistoryTTL</see>. For example, when a user writes to us for the first time and we have set a default messages TTL of 1 week, this service message (with <c>auto_setting_from=our_userid</c>) will be emitted before our first message.</summary>
        </member>
        <member name="F:TL.MessageActionSetMessagesTTL.Flags.has_auto_setting_from">
            <summary>Field <see cref="F:TL.MessageActionSetMessagesTTL.auto_setting_from"/> has a value</summary>
        </member>
        <member name="T:TL.MessageActionGroupCallScheduled">
            <summary>A group call was scheduled		<para>See <a href="https://corefork.telegram.org/constructor/messageActionGroupCallScheduled"/></para></summary>
        </member>
        <member name="F:TL.MessageActionGroupCallScheduled.call">
            <summary>The group call</summary>
        </member>
        <member name="F:TL.MessageActionGroupCallScheduled.schedule_date">
            <summary>When is this group call scheduled to start</summary>
        </member>
        <member name="T:TL.MessageActionSetChatTheme">
            <summary>The chat theme was changed		<para>See <a href="https://corefork.telegram.org/constructor/messageActionSetChatTheme"/></para></summary>
        </member>
        <member name="F:TL.MessageActionSetChatTheme.emoticon">
            <summary>The emoji that identifies a chat theme</summary>
        </member>
        <member name="T:TL.MessageActionChatJoinedByRequest">
            <summary>A user was accepted into the group by an admin		<para>See <a href="https://corefork.telegram.org/constructor/messageActionChatJoinedByRequest"/></para></summary>
        </member>
        <member name="T:TL.MessageActionWebViewDataSentMe">
            <summary>Data from an opened <a href="https://corefork.telegram.org/api/bots/webapps">reply keyboard bot mini app</a> was relayed to the bot that owns it (bot side service message).		<para>See <a href="https://corefork.telegram.org/constructor/messageActionWebViewDataSentMe"/></para></summary>
        </member>
        <member name="F:TL.MessageActionWebViewDataSentMe.data">
            <summary>Relayed data.</summary>
        </member>
        <member name="T:TL.MessageActionWebViewDataSent">
            <summary>Data from an opened <a href="https://corefork.telegram.org/api/bots/webapps">reply keyboard bot mini app</a> was relayed to the bot that owns it (user side service message).		<para>See <a href="https://corefork.telegram.org/constructor/messageActionWebViewDataSent"/></para></summary>
        </member>
        <member name="F:TL.MessageActionWebViewDataSent.text">
            <summary>Text of the <see cref="T:TL.KeyboardButtonSimpleWebView"/> that was pressed to open the web app.</summary>
        </member>
        <member name="T:TL.MessageActionGiftPremium">
            <summary>Info about a gifted Telegram Premium subscription		<para>See <a href="https://corefork.telegram.org/constructor/messageActionGiftPremium"/></para></summary>
        </member>
        <member name="F:TL.MessageActionGiftPremium.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.MessageActionGiftPremium.currency">
            <summary>Three-letter ISO 4217 <a href="https://corefork.telegram.org/bots/payments#supported-currencies">currency</a> code</summary>
        </member>
        <member name="F:TL.MessageActionGiftPremium.amount">
            <summary>Price of the gift in the smallest units of the currency (integer, not float/double). For example, for a price of <c>US$ 1.45</c> pass <c>amount = 145</c>. See the exp parameter in <a href="https://corefork.telegram.org/bots/payments/currencies.json">currencies.json</a>, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies).</summary>
        </member>
        <member name="F:TL.MessageActionGiftPremium.months">
            <summary>Duration of the gifted Telegram Premium subscription</summary>
        </member>
        <member name="F:TL.MessageActionGiftPremium.crypto_currency">
            <summary>If the gift was bought using a cryptocurrency, the cryptocurrency name.</summary>
        </member>
        <member name="F:TL.MessageActionGiftPremium.crypto_amount">
            <summary>If the gift was bought using a cryptocurrency, price of the gift in the smallest units of a cryptocurrency.</summary>
        </member>
        <member name="F:TL.MessageActionGiftPremium.Flags.has_crypto_currency">
            <summary>Fields <see cref="F:TL.MessageActionGiftPremium.crypto_currency"/> and <see cref="F:TL.MessageActionGiftPremium.crypto_amount"/> have a value</summary>
        </member>
        <member name="T:TL.MessageActionTopicCreate">
            <summary>A <a href="https://corefork.telegram.org/api/forum#forum-topics">forum topic</a> was created.		<para>See <a href="https://corefork.telegram.org/constructor/messageActionTopicCreate"/></para></summary>
        </member>
        <member name="F:TL.MessageActionTopicCreate.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.MessageActionTopicCreate.title">
            <summary>Topic name.</summary>
        </member>
        <member name="F:TL.MessageActionTopicCreate.icon_color">
            <summary>If no custom emoji icon is specified, specifies the color of the fallback topic icon (RGB), one of <c>0x6FB9F0</c>, <c>0xFFD67E</c>, <c>0xCB86DB</c>, <c>0x8EEE98</c>, <c>0xFF93B2</c>, or <c>0xFB6F5F</c>.</summary>
        </member>
        <member name="F:TL.MessageActionTopicCreate.icon_emoji_id">
            <summary>ID of the <a href="https://corefork.telegram.org/api/custom-emoji">custom emoji</a> used as topic icon.</summary>
        </member>
        <member name="F:TL.MessageActionTopicCreate.Flags.has_icon_emoji_id">
            <summary>Field <see cref="F:TL.MessageActionTopicCreate.icon_emoji_id"/> has a value</summary>
        </member>
        <member name="T:TL.MessageActionTopicEdit">
            <summary><a href="https://corefork.telegram.org/api/forum#forum-topics">Forum topic</a> information was edited.		<para>See <a href="https://corefork.telegram.org/constructor/messageActionTopicEdit"/></para></summary>
        </member>
        <member name="F:TL.MessageActionTopicEdit.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.MessageActionTopicEdit.title">
            <summary>New topic title.</summary>
        </member>
        <member name="F:TL.MessageActionTopicEdit.icon_emoji_id">
            <summary>ID of the new <a href="https://corefork.telegram.org/api/custom-emoji">custom emoji</a> used as topic icon, or if it was removed.</summary>
        </member>
        <member name="F:TL.MessageActionTopicEdit.closed">
            <summary>Whether the topic was opened or closed.</summary>
        </member>
        <member name="F:TL.MessageActionTopicEdit.hidden">
            <summary>Whether the topic was hidden or unhidden (only valid for the "General" topic, <c>id=1</c>).</summary>
        </member>
        <member name="F:TL.MessageActionTopicEdit.Flags.has_title">
            <summary>Field <see cref="F:TL.MessageActionTopicEdit.title"/> has a value</summary>
        </member>
        <member name="F:TL.MessageActionTopicEdit.Flags.has_icon_emoji_id">
            <summary>Field <see cref="F:TL.MessageActionTopicEdit.icon_emoji_id"/> has a value</summary>
        </member>
        <member name="F:TL.MessageActionTopicEdit.Flags.has_closed">
            <summary>Field <see cref="F:TL.MessageActionTopicEdit.closed"/> has a value</summary>
        </member>
        <member name="F:TL.MessageActionTopicEdit.Flags.has_hidden">
            <summary>Field <see cref="F:TL.MessageActionTopicEdit.hidden"/> has a value</summary>
        </member>
        <member name="T:TL.MessageActionSuggestProfilePhoto">
            <summary>A new profile picture was suggested using <see cref="M:TL.SchemaExtensions.Photos_UploadContactProfilePhoto(WTelegram.Client,TL.InputUserBase,TL.InputFileBase,TL.InputFileBase,System.Nullable{System.Double},TL.VideoSizeBase,System.Boolean,System.Boolean)">Photos_UploadContactProfilePhoto</see>.		<para>See <a href="https://corefork.telegram.org/constructor/messageActionSuggestProfilePhoto"/></para></summary>
        </member>
        <member name="F:TL.MessageActionSuggestProfilePhoto.photo">
            <summary>The photo that the user suggested we set as profile picture.</summary>
        </member>
        <member name="T:TL.MessageActionRequestedPeer">
            <summary>Contains info about one or more peers that the user shared with the bot after clicking on a <see cref="T:TL.KeyboardButtonRequestPeer"/> button.		<para>See <a href="https://corefork.telegram.org/constructor/messageActionRequestedPeer"/></para></summary>
        </member>
        <member name="F:TL.MessageActionRequestedPeer.button_id">
            <summary><c>button_id</c> contained in the <see cref="T:TL.KeyboardButtonRequestPeer"/></summary>
        </member>
        <member name="F:TL.MessageActionRequestedPeer.peers">
            <summary>The shared peers</summary>
        </member>
        <member name="T:TL.MessageActionSetChatWallPaper">
            <summary>The <a href="https://corefork.telegram.org/api/wallpapers">wallpaper »</a> of the current chat was changed.		<para>See <a href="https://corefork.telegram.org/constructor/messageActionSetChatWallPaper"/></para></summary>
        </member>
        <member name="F:TL.MessageActionSetChatWallPaper.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.MessageActionSetChatWallPaper.wallpaper">
            <summary>New <a href="https://corefork.telegram.org/api/wallpapers">wallpaper</a></summary>
        </member>
        <member name="F:TL.MessageActionSetChatWallPaper.Flags.same">
            <summary>If set, indicates the user applied a <a href="https://corefork.telegram.org/api/wallpapers">wallpaper »</a> previously sent by the other user in a <see cref="T:TL.MessageActionSetChatWallPaper"/> message.</summary>
        </member>
        <member name="F:TL.MessageActionSetChatWallPaper.Flags.for_both">
            <summary>If set, indicates the wallpaper was forcefully applied for both sides, without explicit confirmation from the other side. <br/>If the message is incoming, and we did not like the new wallpaper the other user has chosen for us, we can re-set our previous wallpaper just on our side, by invoking <see cref="M:TL.SchemaExtensions.Messages_SetChatWallPaper(WTelegram.Client,TL.InputPeer,TL.InputWallPaperBase,System.Nullable{System.Int32},TL.WallPaperSettings,System.Boolean,System.Boolean)">Messages_SetChatWallPaper</see>, providing only the <c>revert</c> flag (and obviously the <c>peer</c> parameter).</summary>
        </member>
        <member name="T:TL.MessageActionGiftCode">
            <summary>Contains a <a href="https://corefork.telegram.org/api/links#premium-giftcode-links">Telegram Premium giftcode link</a>.		<para>See <a href="https://corefork.telegram.org/constructor/messageActionGiftCode"/></para></summary>
        </member>
        <member name="F:TL.MessageActionGiftCode.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.MessageActionGiftCode.boost_peer">
            <summary>Identifier of the channel that created the gift code <a href="https://corefork.telegram.org/api/giveaways">either directly or through a giveaway</a>: if we import this giftcode link, we will also automatically <a href="https://corefork.telegram.org/api/boost">boost</a> this channel.</summary>
        </member>
        <member name="F:TL.MessageActionGiftCode.months">
            <summary>Duration in months of the gifted <a href="https://corefork.telegram.org/api/premium">Telegram Premium subscription</a>.</summary>
        </member>
        <member name="F:TL.MessageActionGiftCode.slug">
            <summary>Slug of the <a href="https://corefork.telegram.org/api/links#premium-giftcode-links">Telegram Premium giftcode link</a></summary>
        </member>
        <member name="F:TL.MessageActionGiftCode.currency">
            <summary>Three-letter ISO 4217 <a href="https://corefork.telegram.org/bots/payments#supported-currencies">currency</a> code</summary>
        </member>
        <member name="F:TL.MessageActionGiftCode.amount">
            <summary>Total price in the smallest units of the currency (integer, not float/double). For example, for a price of <c>US$ 1.45</c> pass <c>amount = 145</c>. See the exp parameter in <a href="https://corefork.telegram.org/bots/payments/currencies.json">currencies.json</a>, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies).</summary>
        </member>
        <member name="F:TL.MessageActionGiftCode.crypto_currency">
            <summary>If set, the gift was made using the specified cryptocurrency.</summary>
        </member>
        <member name="F:TL.MessageActionGiftCode.crypto_amount">
            <summary>If <c>crypto_currency</c> is set, contains the paid amount, in the smallest units of the cryptocurrency.</summary>
        </member>
        <member name="F:TL.MessageActionGiftCode.Flags.via_giveaway">
            <summary>If set, this gift code was received from a <a href="https://corefork.telegram.org/api/giveaways">giveaway »</a> started by a channel we're subscribed to.</summary>
        </member>
        <member name="F:TL.MessageActionGiftCode.Flags.has_boost_peer">
            <summary>Field <see cref="F:TL.MessageActionGiftCode.boost_peer"/> has a value</summary>
        </member>
        <member name="F:TL.MessageActionGiftCode.Flags.unclaimed">
            <summary>If set, the link was not <a href="https://corefork.telegram.org/api/links#premium-giftcode-links">redeemed</a> yet.</summary>
        </member>
        <member name="F:TL.MessageActionGiftCode.Flags.has_crypto_currency">
            <summary>Fields <see cref="F:TL.MessageActionGiftCode.crypto_currency"/> and <see cref="F:TL.MessageActionGiftCode.crypto_amount"/> have a value</summary>
        </member>
        <member name="T:TL.MessageActionGiveawayLaunch">
            <summary>A <a href="https://corefork.telegram.org/api/giveaways">giveaway</a> was started.		<para>See <a href="https://corefork.telegram.org/constructor/messageActionGiveawayLaunch"/></para></summary>
        </member>
        <member name="T:TL.MessageActionGiveawayResults">
            <summary>A <a href="https://corefork.telegram.org/api/giveaways">giveaway</a> has ended.		<para>See <a href="https://corefork.telegram.org/constructor/messageActionGiveawayResults"/></para></summary>
        </member>
        <member name="F:TL.MessageActionGiveawayResults.winners_count">
            <summary>Number of winners in the giveaway</summary>
        </member>
        <member name="F:TL.MessageActionGiveawayResults.unclaimed_count">
            <summary>Number of undistributed prizes</summary>
        </member>
        <member name="T:TL.MessageActionBoostApply">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/messageActionBoostApply"/></para></summary>
        </member>
        <member name="T:TL.MessageActionRequestedPeerSentMe">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/messageActionRequestedPeerSentMe"/></para></summary>
        </member>
        <member name="T:TL.DialogBase">
            <summary>Chat info.		<para>See <a href="https://corefork.telegram.org/type/Dialog"/></para>		<para>Derived classes: <see cref="T:TL.Dialog"/>, <see cref="T:TL.DialogFolder"/></para></summary>
        </member>
        <member name="P:TL.DialogBase.Peer">
            <summary>The chat</summary>
        </member>
        <member name="P:TL.DialogBase.TopMessage">
            <summary>The latest message ID</summary>
        </member>
        <member name="T:TL.Dialog">
            <summary>Chat		<para>See <a href="https://corefork.telegram.org/constructor/dialog"/></para></summary>
        </member>
        <member name="F:TL.Dialog.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Dialog.peer">
            <summary>The chat</summary>
        </member>
        <member name="F:TL.Dialog.top_message">
            <summary>The latest message ID</summary>
        </member>
        <member name="F:TL.Dialog.read_inbox_max_id">
            <summary>Position up to which all incoming messages are read.</summary>
        </member>
        <member name="F:TL.Dialog.read_outbox_max_id">
            <summary>Position up to which all outgoing messages are read.</summary>
        </member>
        <member name="F:TL.Dialog.unread_count">
            <summary>Number of unread messages</summary>
        </member>
        <member name="F:TL.Dialog.unread_mentions_count">
            <summary>Number of <a href="https://corefork.telegram.org/api/mentions">unread mentions</a></summary>
        </member>
        <member name="F:TL.Dialog.unread_reactions_count">
            <summary>Number of unread reactions to messages you sent</summary>
        </member>
        <member name="F:TL.Dialog.notify_settings">
            <summary>Notification settings</summary>
        </member>
        <member name="F:TL.Dialog.pts">
            <summary><a href="https://corefork.telegram.org/api/updates">PTS</a></summary>
        </member>
        <member name="F:TL.Dialog.draft">
            <summary>Message <a href="https://corefork.telegram.org/api/drafts">draft</a></summary>
        </member>
        <member name="F:TL.Dialog.folder_id">
            <summary><a href="https://corefork.telegram.org/api/folders#peer-folders">Peer folder ID, for more info click here</a></summary>
        </member>
        <member name="F:TL.Dialog.ttl_period">
            <summary>Time-to-live of all messages sent in this dialog</summary>
        </member>
        <member name="F:TL.Dialog.Flags.has_pts">
            <summary>Field <see cref="F:TL.Dialog.pts"/> has a value</summary>
        </member>
        <member name="F:TL.Dialog.Flags.has_draft">
            <summary>Field <see cref="F:TL.Dialog.draft"/> has a value</summary>
        </member>
        <member name="F:TL.Dialog.Flags.pinned">
            <summary>Is the dialog pinned</summary>
        </member>
        <member name="F:TL.Dialog.Flags.unread_mark">
            <summary>Whether the chat was manually marked as unread</summary>
        </member>
        <member name="F:TL.Dialog.Flags.has_folder_id">
            <summary>Field <see cref="F:TL.Dialog.folder_id"/> has a value</summary>
        </member>
        <member name="F:TL.Dialog.Flags.has_ttl_period">
            <summary>Field <see cref="F:TL.Dialog.ttl_period"/> has a value</summary>
        </member>
        <member name="F:TL.Dialog.Flags.view_forum_as_messages">
            <summary>Users may also choose to display messages from all topics of a <a href="https://corefork.telegram.org/api/forum">forum</a> as if they were sent to a normal group, using a "View as messages" setting in the local client.  <br/>This setting only affects the current account, and is synced to other logged in sessions using the <see cref="M:TL.SchemaExtensions.Channels_ToggleViewForumAsMessages(WTelegram.Client,TL.InputChannelBase,System.Boolean)">Channels_ToggleViewForumAsMessages</see> method; invoking this method will update the value of this flag.</summary>
        </member>
        <member name="P:TL.Dialog.Peer">
            <summary>The chat</summary>
        </member>
        <member name="P:TL.Dialog.TopMessage">
            <summary>The latest message ID</summary>
        </member>
        <member name="T:TL.DialogFolder">
            <summary>Dialog in folder		<para>See <a href="https://corefork.telegram.org/constructor/dialogFolder"/></para></summary>
        </member>
        <member name="F:TL.DialogFolder.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.DialogFolder.folder">
            <summary>The folder</summary>
        </member>
        <member name="F:TL.DialogFolder.peer">
            <summary>Peer in folder</summary>
        </member>
        <member name="F:TL.DialogFolder.top_message">
            <summary>Latest message ID of dialog</summary>
        </member>
        <member name="F:TL.DialogFolder.unread_muted_peers_count">
            <summary>Number of unread muted peers in folder</summary>
        </member>
        <member name="F:TL.DialogFolder.unread_unmuted_peers_count">
            <summary>Number of unread unmuted peers in folder</summary>
        </member>
        <member name="F:TL.DialogFolder.unread_muted_messages_count">
            <summary>Number of unread messages from muted peers in folder</summary>
        </member>
        <member name="F:TL.DialogFolder.unread_unmuted_messages_count">
            <summary>Number of unread messages from unmuted peers in folder</summary>
        </member>
        <member name="F:TL.DialogFolder.Flags.pinned">
            <summary>Is this folder pinned</summary>
        </member>
        <member name="P:TL.DialogFolder.Peer">
            <summary>Peer in folder</summary>
        </member>
        <member name="P:TL.DialogFolder.TopMessage">
            <summary>Latest message ID of dialog</summary>
        </member>
        <member name="T:TL.PhotoBase">
            <summary>Object describes a photo.		<para>See <a href="https://corefork.telegram.org/type/Photo"/></para>		<para>Derived classes: <see cref="T:TL.PhotoEmpty"/>, <see cref="T:TL.Photo"/></para></summary>
        </member>
        <member name="T:TL.PhotoEmpty">
            <summary>Empty constructor, non-existent photo		<para>See <a href="https://corefork.telegram.org/constructor/photoEmpty"/></para></summary>
        </member>
        <member name="F:TL.PhotoEmpty.id">
            <summary>Photo identifier</summary>
        </member>
        <member name="T:TL.Photo">
            <summary>Photo		<para>See <a href="https://corefork.telegram.org/constructor/photo"/></para></summary>
        </member>
        <member name="F:TL.Photo.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Photo.id">
            <summary>ID</summary>
        </member>
        <member name="F:TL.Photo.access_hash">
            <summary>Access hash</summary>
        </member>
        <member name="F:TL.Photo.file_reference">
            <summary><a href="https://corefork.telegram.org/api/file_reference">file reference</a></summary>
        </member>
        <member name="F:TL.Photo.date">
            <summary>Date of upload</summary>
        </member>
        <member name="F:TL.Photo.sizes">
            <summary>Available sizes for download</summary>
        </member>
        <member name="F:TL.Photo.video_sizes">
            <summary><a href="https://corefork.telegram.org/api/files#animated-profile-pictures">For animated profiles</a>, the MPEG4 videos</summary>
        </member>
        <member name="F:TL.Photo.dc_id">
            <summary>DC ID to use for download</summary>
        </member>
        <member name="F:TL.Photo.Flags.has_stickers">
            <summary>Whether the photo has mask stickers attached to it</summary>
        </member>
        <member name="F:TL.Photo.Flags.has_video_sizes">
            <summary>Field <see cref="F:TL.Photo.video_sizes"/> has a value</summary>
        </member>
        <member name="T:TL.PhotoSizeBase">
            <summary>Location of a certain size of a picture		<para>See <a href="https://corefork.telegram.org/type/PhotoSize"/></para>		<para>Derived classes: <see cref="T:TL.PhotoSizeEmpty"/>, <see cref="T:TL.PhotoSize"/>, <see cref="T:TL.PhotoCachedSize"/>, <see cref="T:TL.PhotoStrippedSize"/>, <see cref="T:TL.PhotoSizeProgressive"/>, <see cref="T:TL.PhotoPathSize"/></para></summary>
        </member>
        <member name="P:TL.PhotoSizeBase.Type">
            <summary><a href="https://corefork.telegram.org/api/files#image-thumbnail-types">Thumbnail type »</a></summary>
        </member>
        <member name="T:TL.PhotoSizeEmpty">
            <summary>Empty constructor. Image with this thumbnail is unavailable.		<para>See <a href="https://corefork.telegram.org/constructor/photoSizeEmpty"/></para></summary>
        </member>
        <member name="F:TL.PhotoSizeEmpty.type">
            <summary><a href="https://corefork.telegram.org/api/files#image-thumbnail-types">Thumbnail type »</a></summary>
        </member>
        <member name="P:TL.PhotoSizeEmpty.Type">
            <summary><a href="https://corefork.telegram.org/api/files#image-thumbnail-types">Thumbnail type »</a></summary>
        </member>
        <member name="T:TL.PhotoSize">
            <summary>Image description.		<para>See <a href="https://corefork.telegram.org/constructor/photoSize"/></para></summary>
        </member>
        <member name="F:TL.PhotoSize.type">
            <summary><a href="https://corefork.telegram.org/api/files#image-thumbnail-types">Thumbnail type »</a></summary>
        </member>
        <member name="F:TL.PhotoSize.w">
            <summary>Image width</summary>
        </member>
        <member name="F:TL.PhotoSize.h">
            <summary>Image height</summary>
        </member>
        <member name="F:TL.PhotoSize.size">
            <summary>File size</summary>
        </member>
        <member name="P:TL.PhotoSize.Type">
            <summary><a href="https://corefork.telegram.org/api/files#image-thumbnail-types">Thumbnail type »</a></summary>
        </member>
        <member name="T:TL.PhotoCachedSize">
            <summary>Description of an image and its content.		<para>See <a href="https://corefork.telegram.org/constructor/photoCachedSize"/></para></summary>
        </member>
        <member name="F:TL.PhotoCachedSize.type">
            <summary>Thumbnail type</summary>
        </member>
        <member name="F:TL.PhotoCachedSize.w">
            <summary>Image width</summary>
        </member>
        <member name="F:TL.PhotoCachedSize.h">
            <summary>Image height</summary>
        </member>
        <member name="F:TL.PhotoCachedSize.bytes">
            <summary>Binary data, file content</summary>
        </member>
        <member name="P:TL.PhotoCachedSize.Type">
            <summary>Thumbnail type</summary>
        </member>
        <member name="T:TL.PhotoStrippedSize">
            <summary>A low-resolution compressed JPG payload		<para>See <a href="https://corefork.telegram.org/constructor/photoStrippedSize"/></para></summary>
        </member>
        <member name="F:TL.PhotoStrippedSize.type">
            <summary>Thumbnail type</summary>
        </member>
        <member name="F:TL.PhotoStrippedSize.bytes">
            <summary>Thumbnail data, see <a href="https://corefork.telegram.org/api/files#stripped-thumbnails">here for more info on decompression »</a></summary>
        </member>
        <member name="P:TL.PhotoStrippedSize.Type">
            <summary>Thumbnail type</summary>
        </member>
        <member name="T:TL.PhotoSizeProgressive">
            <summary>Progressively encoded photosize		<para>See <a href="https://corefork.telegram.org/constructor/photoSizeProgressive"/></para></summary>
        </member>
        <member name="F:TL.PhotoSizeProgressive.type">
            <summary><a href="https://corefork.telegram.org/api/files#image-thumbnail-types">Photosize type »</a></summary>
        </member>
        <member name="F:TL.PhotoSizeProgressive.w">
            <summary>Photo width</summary>
        </member>
        <member name="F:TL.PhotoSizeProgressive.h">
            <summary>Photo height</summary>
        </member>
        <member name="F:TL.PhotoSizeProgressive.sizes">
            <summary>Sizes of progressive JPEG file prefixes, which can be used to preliminarily show the image.</summary>
        </member>
        <member name="P:TL.PhotoSizeProgressive.Type">
            <summary><a href="https://corefork.telegram.org/api/files#image-thumbnail-types">Photosize type »</a></summary>
        </member>
        <member name="T:TL.PhotoPathSize">
            <summary>Messages with animated stickers can have a compressed svg (&lt; 300 bytes) to show the outline of the sticker before fetching the actual lottie animation.		<para>See <a href="https://corefork.telegram.org/constructor/photoPathSize"/></para></summary>
        </member>
        <member name="F:TL.PhotoPathSize.type">
            <summary>Always <c>j</c></summary>
        </member>
        <member name="F:TL.PhotoPathSize.bytes">
            <summary>Compressed SVG path payload, <a href="https://corefork.telegram.org/api/files#vector-thumbnails">see here for decompression instructions</a></summary>
        </member>
        <member name="P:TL.PhotoPathSize.Type">
            <summary>Always <c>j</c></summary>
        </member>
        <member name="T:TL.GeoPoint">
            <summary>GeoPoint.		<para>See <a href="https://corefork.telegram.org/constructor/geoPoint"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/geoPointEmpty">geoPointEmpty</a></remarks>
        </member>
        <member name="F:TL.GeoPoint.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.GeoPoint.lon">
            <summary>Longitude</summary>
        </member>
        <member name="F:TL.GeoPoint.lat">
            <summary>Latitude</summary>
        </member>
        <member name="F:TL.GeoPoint.access_hash">
            <summary>Access hash</summary>
        </member>
        <member name="F:TL.GeoPoint.accuracy_radius">
            <summary>The estimated horizontal accuracy of the location, in meters; as defined by the sender.</summary>
        </member>
        <member name="F:TL.GeoPoint.Flags.has_accuracy_radius">
            <summary>Field <see cref="F:TL.GeoPoint.accuracy_radius"/> has a value</summary>
        </member>
        <member name="T:TL.Auth_SentCodeBase">
            <summary>Contains info on a confirmation code message sent via SMS, phone call or Telegram.		<para>See <a href="https://corefork.telegram.org/type/auth.SentCode"/></para>		<para>Derived classes: <see cref="T:TL.Auth_SentCode"/>, <see cref="T:TL.Auth_SentCodeSuccess"/></para></summary>
        </member>
        <member name="T:TL.Auth_SentCode">
            <summary>Contains info about a sent verification code.		<para>See <a href="https://corefork.telegram.org/constructor/auth.sentCode"/></para></summary>
        </member>
        <member name="F:TL.Auth_SentCode.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Auth_SentCode.type">
            <summary>Phone code type</summary>
        </member>
        <member name="F:TL.Auth_SentCode.phone_code_hash">
            <summary>Phone code hash, to be stored and later re-used with <see cref="M:TL.SchemaExtensions.Auth_SignIn(WTelegram.Client,System.String,System.String,System.String,TL.EmailVerification)">Auth_SignIn</see></summary>
        </member>
        <member name="F:TL.Auth_SentCode.next_type">
            <summary>Phone code type that will be sent next, if the phone code is not received within <c>timeout</c> seconds: to send it use <see cref="M:TL.SchemaExtensions.Auth_ResendCode(WTelegram.Client,System.String,System.String)">Auth_ResendCode</see></summary>
        </member>
        <member name="F:TL.Auth_SentCode.timeout">
            <summary>Timeout for reception of the phone code</summary>
        </member>
        <member name="F:TL.Auth_SentCode.Flags.has_next_type">
            <summary>Field <see cref="F:TL.Auth_SentCode.next_type"/> has a value</summary>
        </member>
        <member name="F:TL.Auth_SentCode.Flags.has_timeout">
            <summary>Field <see cref="F:TL.Auth_SentCode.timeout"/> has a value</summary>
        </member>
        <member name="T:TL.Auth_SentCodeSuccess">
            <summary>The user successfully authorized using <a href="https://corefork.telegram.org/api/auth#future-auth-tokens">future auth tokens</a>		<para>See <a href="https://corefork.telegram.org/constructor/auth.sentCodeSuccess"/></para></summary>
        </member>
        <member name="F:TL.Auth_SentCodeSuccess.authorization">
            <summary>Authorization info</summary>
        </member>
        <member name="T:TL.Auth_AuthorizationBase">
            <summary>Object contains info on user authorization.		<para>See <a href="https://corefork.telegram.org/type/auth.Authorization"/></para>		<para>Derived classes: <see cref="T:TL.Auth_Authorization"/>, <see cref="T:TL.Auth_AuthorizationSignUpRequired"/></para></summary>
        </member>
        <member name="T:TL.Auth_Authorization">
            <summary>Contains user authorization info.		<para>See <a href="https://corefork.telegram.org/constructor/auth.authorization"/></para></summary>
        </member>
        <member name="F:TL.Auth_Authorization.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Auth_Authorization.otherwise_relogin_days">
            <summary>Iff setup_password_required is set and the user declines to set a 2-step verification password, they will be able to log into their account via SMS again only after this many days pass.</summary>
        </member>
        <member name="F:TL.Auth_Authorization.tmp_sessions">
            <summary>Temporary <a href="https://corefork.telegram.org/passport">passport</a> sessions</summary>
        </member>
        <member name="F:TL.Auth_Authorization.future_auth_token">
            <summary>A <a href="https://corefork.telegram.org/api/auth#future-auth-tokens">future auth token</a></summary>
        </member>
        <member name="F:TL.Auth_Authorization.user">
            <summary>Info on authorized user</summary>
        </member>
        <member name="F:TL.Auth_Authorization.Flags.has_tmp_sessions">
            <summary>Field <see cref="F:TL.Auth_Authorization.tmp_sessions"/> has a value</summary>
        </member>
        <member name="F:TL.Auth_Authorization.Flags.setup_password_required">
            <summary>Suggests the user to set up a 2-step verification password to be able to log in again</summary>
        </member>
        <member name="F:TL.Auth_Authorization.Flags.has_future_auth_token">
            <summary>Field <see cref="F:TL.Auth_Authorization.future_auth_token"/> has a value</summary>
        </member>
        <member name="T:TL.Auth_AuthorizationSignUpRequired">
            <summary>An account with this phone number doesn't exist on telegram: the user has to <a href="https://corefork.telegram.org/api/auth">enter basic information and sign up</a>		<para>See <a href="https://corefork.telegram.org/constructor/auth.authorizationSignUpRequired"/></para></summary>
        </member>
        <member name="F:TL.Auth_AuthorizationSignUpRequired.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Auth_AuthorizationSignUpRequired.terms_of_service">
            <summary>Telegram's terms of service: the user must read and accept the terms of service before signing up to telegram</summary>
        </member>
        <member name="F:TL.Auth_AuthorizationSignUpRequired.Flags.has_terms_of_service">
            <summary>Field <see cref="F:TL.Auth_AuthorizationSignUpRequired.terms_of_service"/> has a value</summary>
        </member>
        <member name="T:TL.Auth_ExportedAuthorization">
            <summary>Data for copying of authorization between data centers.		<para>See <a href="https://corefork.telegram.org/constructor/auth.exportedAuthorization"/></para></summary>
        </member>
        <member name="F:TL.Auth_ExportedAuthorization.id">
            <summary>current user identifier</summary>
        </member>
        <member name="F:TL.Auth_ExportedAuthorization.bytes">
            <summary>authorizes key</summary>
        </member>
        <member name="T:TL.InputNotifyPeerBase">
            <summary>Object defines the set of users and/or groups that generate notifications.		<para>See <a href="https://corefork.telegram.org/type/InputNotifyPeer"/></para>		<para>Derived classes: <see cref="T:TL.InputNotifyPeer"/>, <see cref="T:TL.InputNotifyUsers"/>, <see cref="T:TL.InputNotifyChats"/>, <see cref="T:TL.InputNotifyBroadcasts"/>, <see cref="T:TL.InputNotifyForumTopic"/></para></summary>
        </member>
        <member name="T:TL.InputNotifyPeer">
            <summary>Notifications generated by a certain user or group.		<para>See <a href="https://corefork.telegram.org/constructor/inputNotifyPeer"/></para></summary>
        </member>
        <member name="F:TL.InputNotifyPeer.peer">
            <summary>User or group</summary>
        </member>
        <member name="T:TL.InputNotifyUsers">
            <summary>Notifications generated by all users.		<para>See <a href="https://corefork.telegram.org/constructor/inputNotifyUsers"/></para></summary>
        </member>
        <member name="T:TL.InputNotifyChats">
            <summary>Notifications generated by all groups.		<para>See <a href="https://corefork.telegram.org/constructor/inputNotifyChats"/></para></summary>
        </member>
        <member name="T:TL.InputNotifyBroadcasts">
            <summary>All <a href="https://corefork.telegram.org/api/channel">channels</a>		<para>See <a href="https://corefork.telegram.org/constructor/inputNotifyBroadcasts"/></para></summary>
        </member>
        <member name="T:TL.InputNotifyForumTopic">
            <summary>Notifications generated by a <a href="https://corefork.telegram.org/api/forum#forum-topics">topic</a> in a <a href="https://corefork.telegram.org/api/forum">forum</a>.		<para>See <a href="https://corefork.telegram.org/constructor/inputNotifyForumTopic"/></para></summary>
        </member>
        <member name="F:TL.InputNotifyForumTopic.peer">
            <summary>Forum ID</summary>
        </member>
        <member name="F:TL.InputNotifyForumTopic.top_msg_id">
            <summary><a href="https://corefork.telegram.org/api/forum#forum-topics">Topic ID</a></summary>
        </member>
        <member name="T:TL.InputPeerNotifySettings">
            <summary>Notification settings.		<para>See <a href="https://corefork.telegram.org/constructor/inputPeerNotifySettings"/></para></summary>
        </member>
        <member name="F:TL.InputPeerNotifySettings.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.InputPeerNotifySettings.show_previews">
            <summary>If the text of the message shall be displayed in notification</summary>
        </member>
        <member name="F:TL.InputPeerNotifySettings.silent">
            <summary>Peer was muted?</summary>
        </member>
        <member name="F:TL.InputPeerNotifySettings.mute_until">
            <summary>Date until which all notifications shall be switched off</summary>
        </member>
        <member name="F:TL.InputPeerNotifySettings.sound">
            <summary>Identifier of an audio file to play for notifications.</summary>
        </member>
        <member name="F:TL.InputPeerNotifySettings.stories_muted">
            <summary>Whether story notifications should be disabled.</summary>
        </member>
        <member name="F:TL.InputPeerNotifySettings.stories_hide_sender">
            <summary>Whether the sender name should be displayed in story notifications.</summary>
        </member>
        <member name="F:TL.InputPeerNotifySettings.stories_sound">
            <summary>Identifier of an audio file to play for story notifications.</summary>
        </member>
        <member name="F:TL.InputPeerNotifySettings.Flags.has_show_previews">
            <summary>Field <see cref="F:TL.InputPeerNotifySettings.show_previews"/> has a value</summary>
        </member>
        <member name="F:TL.InputPeerNotifySettings.Flags.has_silent">
            <summary>Field <see cref="F:TL.InputPeerNotifySettings.silent"/> has a value</summary>
        </member>
        <member name="F:TL.InputPeerNotifySettings.Flags.has_mute_until">
            <summary>Field <see cref="F:TL.InputPeerNotifySettings.mute_until"/> has a value</summary>
        </member>
        <member name="F:TL.InputPeerNotifySettings.Flags.has_sound">
            <summary>Field <see cref="F:TL.InputPeerNotifySettings.sound"/> has a value</summary>
        </member>
        <member name="F:TL.InputPeerNotifySettings.Flags.has_stories_muted">
            <summary>Field <see cref="F:TL.InputPeerNotifySettings.stories_muted"/> has a value</summary>
        </member>
        <member name="F:TL.InputPeerNotifySettings.Flags.has_stories_hide_sender">
            <summary>Field <see cref="F:TL.InputPeerNotifySettings.stories_hide_sender"/> has a value</summary>
        </member>
        <member name="F:TL.InputPeerNotifySettings.Flags.has_stories_sound">
            <summary>Field <see cref="F:TL.InputPeerNotifySettings.stories_sound"/> has a value</summary>
        </member>
        <member name="T:TL.PeerNotifySettings">
            <summary>Notification settings.		<para>See <a href="https://corefork.telegram.org/constructor/peerNotifySettings"/></para></summary>
        </member>
        <member name="F:TL.PeerNotifySettings.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.PeerNotifySettings.show_previews">
            <summary>(Ternary value) If set, indicates whether or not to display previews of messages in notifications; otherwise the default behavior should be used.</summary>
        </member>
        <member name="F:TL.PeerNotifySettings.silent">
            <summary>(Ternary value) If set, indicates whether to mute or unmute the peer; otherwise the default behavior should be used.</summary>
        </member>
        <member name="F:TL.PeerNotifySettings.mute_until">
            <summary>Mute all notifications until this date</summary>
        </member>
        <member name="F:TL.PeerNotifySettings.ios_sound">
            <summary>Notification sound for the official iOS application</summary>
        </member>
        <member name="F:TL.PeerNotifySettings.android_sound">
            <summary>Notification sound for the official android application</summary>
        </member>
        <member name="F:TL.PeerNotifySettings.other_sound">
            <summary>Notification sound for other applications</summary>
        </member>
        <member name="F:TL.PeerNotifySettings.stories_muted">
            <summary>Whether story notifications should be disabled.</summary>
        </member>
        <member name="F:TL.PeerNotifySettings.stories_hide_sender">
            <summary>Whether the sender name should be displayed in story notifications.</summary>
        </member>
        <member name="F:TL.PeerNotifySettings.stories_ios_sound">
            <summary>Sound for story notifications on the official iOS application</summary>
        </member>
        <member name="F:TL.PeerNotifySettings.stories_android_sound">
            <summary>Sound for story notifications on the official Android application</summary>
        </member>
        <member name="F:TL.PeerNotifySettings.stories_other_sound">
            <summary>Sound for story notifications on other applications</summary>
        </member>
        <member name="F:TL.PeerNotifySettings.Flags.has_show_previews">
            <summary>Field <see cref="F:TL.PeerNotifySettings.show_previews"/> has a value</summary>
        </member>
        <member name="F:TL.PeerNotifySettings.Flags.has_silent">
            <summary>Field <see cref="F:TL.PeerNotifySettings.silent"/> has a value</summary>
        </member>
        <member name="F:TL.PeerNotifySettings.Flags.has_mute_until">
            <summary>Field <see cref="F:TL.PeerNotifySettings.mute_until"/> has a value</summary>
        </member>
        <member name="F:TL.PeerNotifySettings.Flags.has_ios_sound">
            <summary>Field <see cref="F:TL.PeerNotifySettings.ios_sound"/> has a value</summary>
        </member>
        <member name="F:TL.PeerNotifySettings.Flags.has_android_sound">
            <summary>Field <see cref="F:TL.PeerNotifySettings.android_sound"/> has a value</summary>
        </member>
        <member name="F:TL.PeerNotifySettings.Flags.has_other_sound">
            <summary>Field <see cref="F:TL.PeerNotifySettings.other_sound"/> has a value</summary>
        </member>
        <member name="F:TL.PeerNotifySettings.Flags.has_stories_muted">
            <summary>Field <see cref="F:TL.PeerNotifySettings.stories_muted"/> has a value</summary>
        </member>
        <member name="F:TL.PeerNotifySettings.Flags.has_stories_hide_sender">
            <summary>Field <see cref="F:TL.PeerNotifySettings.stories_hide_sender"/> has a value</summary>
        </member>
        <member name="F:TL.PeerNotifySettings.Flags.has_stories_ios_sound">
            <summary>Field <see cref="F:TL.PeerNotifySettings.stories_ios_sound"/> has a value</summary>
        </member>
        <member name="F:TL.PeerNotifySettings.Flags.has_stories_android_sound">
            <summary>Field <see cref="F:TL.PeerNotifySettings.stories_android_sound"/> has a value</summary>
        </member>
        <member name="F:TL.PeerNotifySettings.Flags.has_stories_other_sound">
            <summary>Field <see cref="F:TL.PeerNotifySettings.stories_other_sound"/> has a value</summary>
        </member>
        <member name="T:TL.PeerSettings">
            <summary>List of actions that are possible when interacting with this user, to be shown as suggested actions in the <a href="https://corefork.telegram.org/api/action-bar">chat action bar »</a>, see <a href="https://corefork.telegram.org/api/action-bar">here »</a> for more info.		<para>See <a href="https://corefork.telegram.org/constructor/peerSettings"/></para></summary>
        </member>
        <member name="F:TL.PeerSettings.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.PeerSettings.geo_distance">
            <summary>Distance in meters between us and this peer</summary>
        </member>
        <member name="F:TL.PeerSettings.request_chat_title">
            <summary>If set, this is a private chat with an administrator of a chat or channel to which the user sent a join request, and this field contains the chat/channel's title.</summary>
        </member>
        <member name="F:TL.PeerSettings.request_chat_date">
            <summary>If set, this is a private chat with an administrator of a chat or channel to which the user sent a join request, and this field contains the timestamp when the <a href="https://corefork.telegram.org/api/invites#join-requests">join request »</a> was sent.</summary>
        </member>
        <member name="F:TL.PeerSettings.Flags.report_spam">
            <summary>Whether we can still report the user for spam</summary>
        </member>
        <member name="F:TL.PeerSettings.Flags.add_contact">
            <summary>Whether we can add the user as contact</summary>
        </member>
        <member name="F:TL.PeerSettings.Flags.block_contact">
            <summary>Whether we can block the user</summary>
        </member>
        <member name="F:TL.PeerSettings.Flags.share_contact">
            <summary>Whether we can share the user's contact</summary>
        </member>
        <member name="F:TL.PeerSettings.Flags.need_contacts_exception">
            <summary>Whether a special exception for contacts is needed</summary>
        </member>
        <member name="F:TL.PeerSettings.Flags.report_geo">
            <summary>Whether we can report a geogroup as irrelevant for this location</summary>
        </member>
        <member name="F:TL.PeerSettings.Flags.has_geo_distance">
            <summary>Field <see cref="F:TL.PeerSettings.geo_distance"/> has a value</summary>
        </member>
        <member name="F:TL.PeerSettings.Flags.autoarchived">
            <summary>Whether this peer was automatically archived according to <see cref="T:TL.GlobalPrivacySettings">privacy settings</see> and can be unarchived</summary>
        </member>
        <member name="F:TL.PeerSettings.Flags.invite_members">
            <summary>If set, this is a recently created group chat to which new members can be invited</summary>
        </member>
        <member name="F:TL.PeerSettings.Flags.has_request_chat_title">
            <summary>Fields <see cref="F:TL.PeerSettings.request_chat_title"/> and <see cref="F:TL.PeerSettings.request_chat_date"/> have a value</summary>
        </member>
        <member name="F:TL.PeerSettings.Flags.request_chat_broadcast">
            <summary>This flag is set if <c>request_chat_title</c> and <c>request_chat_date</c> fields are set and the <a href="https://corefork.telegram.org/api/invites#join-requests">join request »</a> is related to a channel (otherwise if only the request fields are set, the <a href="https://corefork.telegram.org/api/invites#join-requests">join request »</a> is related to a chat).</summary>
        </member>
        <member name="F:TL.PeerSettings.Flags.has_business_bot_id">
            <summary>Fields <see cref="F:TL.PeerSettings.business_bot_id"/> and <see cref="F:TL.PeerSettings.business_bot_manage_url"/> have a value</summary>
        </member>
        <member name="T:TL.WallPaperBase">
            <summary>Object contains info on a <a href="https://corefork.telegram.org/api/wallpapers">wallpaper</a>.		<para>See <a href="https://corefork.telegram.org/type/WallPaper"/></para>		<para>Derived classes: <see cref="T:TL.WallPaper"/>, <see cref="T:TL.WallPaperNoFile"/></para></summary>
        </member>
        <member name="P:TL.WallPaperBase.ID">
            <summary>Identifier</summary>
        </member>
        <member name="P:TL.WallPaperBase.Settings">
            <summary>Info on how to generate the wallpaper, according to <a href="https://corefork.telegram.org/api/wallpapers">these instructions »</a>.</summary>
        </member>
        <member name="T:TL.WallPaper">
            <summary>Represents a <a href="https://corefork.telegram.org/api/wallpapers">wallpaper</a> based on an image.		<para>See <a href="https://corefork.telegram.org/constructor/wallPaper"/></para></summary>
        </member>
        <member name="F:TL.WallPaper.id">
            <summary>Identifier</summary>
        </member>
        <member name="F:TL.WallPaper.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.WallPaper.access_hash">
            <summary>Access hash</summary>
        </member>
        <member name="F:TL.WallPaper.slug">
            <summary>Unique wallpaper ID, used when generating <a href="https://corefork.telegram.org/api/links#wallpaper-links">wallpaper links</a> or <a href="https://corefork.telegram.org/api/wallpapers">importing wallpaper links</a>.</summary>
        </member>
        <member name="F:TL.WallPaper.document">
            <summary>The actual wallpaper</summary>
        </member>
        <member name="F:TL.WallPaper.settings">
            <summary>Info on how to generate the wallpaper, according to <a href="https://corefork.telegram.org/api/wallpapers">these instructions »</a>.</summary>
        </member>
        <member name="F:TL.WallPaper.Flags.creator">
            <summary>Whether we created this wallpaper</summary>
        </member>
        <member name="F:TL.WallPaper.Flags.default_">
            <summary>Whether this is the default wallpaper</summary>
        </member>
        <member name="F:TL.WallPaper.Flags.has_settings">
            <summary>Field <see cref="F:TL.WallPaper.settings"/> has a value</summary>
        </member>
        <member name="F:TL.WallPaper.Flags.pattern">
            <summary>Whether this is a <a href="https://corefork.telegram.org/api/wallpapers#pattern-wallpapers">pattern wallpaper »</a></summary>
        </member>
        <member name="F:TL.WallPaper.Flags.dark">
            <summary>Whether this wallpaper should be used in dark mode.</summary>
        </member>
        <member name="P:TL.WallPaper.ID">
            <summary>Identifier</summary>
        </member>
        <member name="P:TL.WallPaper.Settings">
            <summary>Info on how to generate the wallpaper, according to <a href="https://corefork.telegram.org/api/wallpapers">these instructions »</a>.</summary>
        </member>
        <member name="T:TL.WallPaperNoFile">
            <summary>Represents a <a href="https://corefork.telegram.org/api/wallpapers">wallpaper</a> only based on colors/gradients.		<para>See <a href="https://corefork.telegram.org/constructor/wallPaperNoFile"/></para></summary>
        </member>
        <member name="F:TL.WallPaperNoFile.id">
            <summary>Wallpaper ID</summary>
        </member>
        <member name="F:TL.WallPaperNoFile.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.WallPaperNoFile.settings">
            <summary>Info on how to generate the wallpaper.</summary>
        </member>
        <member name="F:TL.WallPaperNoFile.Flags.default_">
            <summary>Whether this is the default wallpaper</summary>
        </member>
        <member name="F:TL.WallPaperNoFile.Flags.has_settings">
            <summary>Field <see cref="F:TL.WallPaperNoFile.settings"/> has a value</summary>
        </member>
        <member name="F:TL.WallPaperNoFile.Flags.dark">
            <summary>Whether this wallpaper should be used in dark mode.</summary>
        </member>
        <member name="P:TL.WallPaperNoFile.ID">
            <summary>Wallpaper ID</summary>
        </member>
        <member name="P:TL.WallPaperNoFile.Settings">
            <summary>Info on how to generate the wallpaper.</summary>
        </member>
        <member name="T:TL.ReportReason">
            <summary>Report reason		<para>See <a href="https://corefork.telegram.org/type/ReportReason"/></para></summary>
        </member>
        <member name="F:TL.ReportReason.Spam">
            <summary>Report for spam</summary>
        </member>
        <member name="F:TL.ReportReason.Violence">
            <summary>Report for violence</summary>
        </member>
        <member name="F:TL.ReportReason.Pornography">
            <summary>Report for pornography</summary>
        </member>
        <member name="F:TL.ReportReason.ChildAbuse">
            <summary>Report for child abuse</summary>
        </member>
        <member name="F:TL.ReportReason.Other">
            <summary>Other</summary>
        </member>
        <member name="F:TL.ReportReason.Copyright">
            <summary>Report for copyrighted content</summary>
        </member>
        <member name="F:TL.ReportReason.GeoIrrelevant">
            <summary>Report an irrelevant geogroup</summary>
        </member>
        <member name="F:TL.ReportReason.Fake">
            <summary>Report for impersonation</summary>
        </member>
        <member name="F:TL.ReportReason.IllegalDrugs">
            <summary>Report for illegal drugs</summary>
        </member>
        <member name="F:TL.ReportReason.PersonalDetails">
            <summary>Report for divulgation of personal details</summary>
        </member>
        <member name="T:TL.UserFull">
            <summary>Extended user info		<para>See <a href="https://corefork.telegram.org/constructor/userFull"/></para></summary>
        </member>
        <member name="F:TL.UserFull.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UserFull.id">
            <summary>User ID</summary>
        </member>
        <member name="F:TL.UserFull.about">
            <summary>Bio of the user</summary>
        </member>
        <member name="F:TL.UserFull.settings">
            <summary>Peer settings</summary>
        </member>
        <member name="F:TL.UserFull.personal_photo">
            <summary>Personal profile photo, to be shown instead of <c>profile_photo</c>.</summary>
        </member>
        <member name="F:TL.UserFull.profile_photo">
            <summary>Profile photo</summary>
        </member>
        <member name="F:TL.UserFull.fallback_photo">
            <summary>Fallback profile photo, displayed if no photo is present in <c>profile_photo</c> or <c>personal_photo</c>, due to privacy settings.</summary>
        </member>
        <member name="F:TL.UserFull.notify_settings">
            <summary>Notification settings</summary>
        </member>
        <member name="F:TL.UserFull.bot_info">
            <summary>For bots, info about the bot (bot commands, etc)</summary>
        </member>
        <member name="F:TL.UserFull.pinned_msg_id">
            <summary>Message ID of the last <a href="https://corefork.telegram.org/api/pin">pinned message</a></summary>
        </member>
        <member name="F:TL.UserFull.common_chats_count">
            <summary>Chats in common with this user</summary>
        </member>
        <member name="F:TL.UserFull.folder_id">
            <summary><a href="https://corefork.telegram.org/api/folders#peer-folders">Peer folder ID, for more info click here</a></summary>
        </member>
        <member name="F:TL.UserFull.ttl_period">
            <summary>Time To Live of all messages in this chat; once a message is this many seconds old, it must be deleted.</summary>
        </member>
        <member name="F:TL.UserFull.theme_emoticon">
            <summary>Emoji associated with chat theme</summary>
        </member>
        <member name="F:TL.UserFull.private_forward_name">
            <summary>Anonymized text to be shown instead of the user's name on forwarded messages</summary>
        </member>
        <member name="F:TL.UserFull.bot_group_admin_rights">
            <summary>A <a href="https://corefork.telegram.org/api/rights#suggested-bot-rights">suggested set of administrator rights</a> for the bot, to be shown when adding the bot as admin to a group, see <a href="https://corefork.telegram.org/api/rights#suggested-bot-rights">here for more info on how to handle them »</a>.</summary>
        </member>
        <member name="F:TL.UserFull.bot_broadcast_admin_rights">
            <summary>A <a href="https://corefork.telegram.org/api/rights#suggested-bot-rights">suggested set of administrator rights</a> for the bot, to be shown when adding the bot as admin to a channel, see <a href="https://corefork.telegram.org/api/rights#suggested-bot-rights">here for more info on how to handle them »</a>.</summary>
        </member>
        <member name="F:TL.UserFull.premium_gifts">
            <summary>Telegram Premium subscriptions gift options</summary>
        </member>
        <member name="F:TL.UserFull.wallpaper">
            <summary><a href="https://corefork.telegram.org/api/wallpapers">Wallpaper</a> to use in the private chat with the user.</summary>
        </member>
        <member name="F:TL.UserFull.stories">
            <summary>Active <a href="https://corefork.telegram.org/api/stories">stories »</a></summary>
        </member>
        <member name="F:TL.UserFull.Flags.blocked">
            <summary>Whether you have blocked this user</summary>
        </member>
        <member name="F:TL.UserFull.Flags.has_about">
            <summary>Field <see cref="F:TL.UserFull.about"/> has a value</summary>
        </member>
        <member name="F:TL.UserFull.Flags.has_profile_photo">
            <summary>Field <see cref="F:TL.UserFull.profile_photo"/> has a value</summary>
        </member>
        <member name="F:TL.UserFull.Flags.has_bot_info">
            <summary>Field <see cref="F:TL.UserFull.bot_info"/> has a value</summary>
        </member>
        <member name="F:TL.UserFull.Flags.phone_calls_available">
            <summary>Whether this user can make VoIP calls</summary>
        </member>
        <member name="F:TL.UserFull.Flags.phone_calls_private">
            <summary>Whether this user's privacy settings allow you to call them</summary>
        </member>
        <member name="F:TL.UserFull.Flags.has_pinned_msg_id">
            <summary>Field <see cref="F:TL.UserFull.pinned_msg_id"/> has a value</summary>
        </member>
        <member name="F:TL.UserFull.Flags.can_pin_message">
            <summary>Whether you can pin messages in the chat with this user, you can do this only for a chat with yourself</summary>
        </member>
        <member name="F:TL.UserFull.Flags.has_folder_id">
            <summary>Field <see cref="F:TL.UserFull.folder_id"/> has a value</summary>
        </member>
        <member name="F:TL.UserFull.Flags.has_scheduled">
            <summary>Whether <a href="https://corefork.telegram.org/api/scheduled-messages">scheduled messages</a> are available</summary>
        </member>
        <member name="F:TL.UserFull.Flags.video_calls_available">
            <summary>Whether the user can receive video calls</summary>
        </member>
        <member name="F:TL.UserFull.Flags.has_ttl_period">
            <summary>Field <see cref="F:TL.UserFull.ttl_period"/> has a value</summary>
        </member>
        <member name="F:TL.UserFull.Flags.has_theme_emoticon">
            <summary>Field <see cref="F:TL.UserFull.theme_emoticon"/> has a value</summary>
        </member>
        <member name="F:TL.UserFull.Flags.has_private_forward_name">
            <summary>Field <see cref="F:TL.UserFull.private_forward_name"/> has a value</summary>
        </member>
        <member name="F:TL.UserFull.Flags.has_bot_group_admin_rights">
            <summary>Field <see cref="F:TL.UserFull.bot_group_admin_rights"/> has a value</summary>
        </member>
        <member name="F:TL.UserFull.Flags.has_bot_broadcast_admin_rights">
            <summary>Field <see cref="F:TL.UserFull.bot_broadcast_admin_rights"/> has a value</summary>
        </member>
        <member name="F:TL.UserFull.Flags.has_premium_gifts">
            <summary>Field <see cref="F:TL.UserFull.premium_gifts"/> has a value</summary>
        </member>
        <member name="F:TL.UserFull.Flags.voice_messages_forbidden">
            <summary>Whether this user doesn't allow sending voice messages in a private chat with them</summary>
        </member>
        <member name="F:TL.UserFull.Flags.has_personal_photo">
            <summary>Field <see cref="F:TL.UserFull.personal_photo"/> has a value</summary>
        </member>
        <member name="F:TL.UserFull.Flags.has_fallback_photo">
            <summary>Field <see cref="F:TL.UserFull.fallback_photo"/> has a value</summary>
        </member>
        <member name="F:TL.UserFull.Flags.translations_disabled">
            <summary>Whether the <a href="https://corefork.telegram.org/api/translation">real-time chat translation popup</a> should be hidden.</summary>
        </member>
        <member name="F:TL.UserFull.Flags.has_wallpaper">
            <summary>Field <see cref="F:TL.UserFull.wallpaper"/> has a value</summary>
        </member>
        <member name="F:TL.UserFull.Flags.has_stories">
            <summary>Field <see cref="F:TL.UserFull.stories"/> has a value</summary>
        </member>
        <member name="F:TL.UserFull.Flags.stories_pinned_available">
            <summary>Whether this user has some <a href="https://corefork.telegram.org/api/stories#pinned-or-archived-stories">pinned stories</a>.</summary>
        </member>
        <member name="F:TL.UserFull.Flags.blocked_my_stories_from">
            <summary>Whether we've <a href="https://corefork.telegram.org/api/block">blocked this user, preventing them from seeing our stories »</a>.</summary>
        </member>
        <member name="F:TL.UserFull.Flags.wallpaper_overridden">
            <summary>Whether the other user has chosen a custom wallpaper for us using <see cref="M:TL.SchemaExtensions.Messages_SetChatWallPaper(WTelegram.Client,TL.InputPeer,TL.InputWallPaperBase,System.Nullable{System.Int32},TL.WallPaperSettings,System.Boolean,System.Boolean)">Messages_SetChatWallPaper</see> and the <c>for_both</c> flag, see <a href="https://corefork.telegram.org/api/wallpapers#installing-wallpapers-in-a-specific-chat-or-channel">here »</a> for more info.</summary>
        </member>
        <member name="F:TL.UserFull.Flags2.has_business_work_hours">
            <summary>Field <see cref="F:TL.UserFull.business_work_hours"/> has a value</summary>
        </member>
        <member name="F:TL.UserFull.Flags2.has_business_location">
            <summary>Field <see cref="F:TL.UserFull.business_location"/> has a value</summary>
        </member>
        <member name="F:TL.UserFull.Flags2.has_business_greeting_message">
            <summary>Field <see cref="F:TL.UserFull.business_greeting_message"/> has a value</summary>
        </member>
        <member name="F:TL.UserFull.Flags2.has_business_away_message">
            <summary>Field <see cref="F:TL.UserFull.business_away_message"/> has a value</summary>
        </member>
        <member name="F:TL.UserFull.Flags2.has_business_intro">
            <summary>Field <see cref="F:TL.UserFull.business_intro"/> has a value</summary>
        </member>
        <member name="F:TL.UserFull.Flags2.has_birthday">
            <summary>Field <see cref="F:TL.UserFull.birthday"/> has a value</summary>
        </member>
        <member name="F:TL.UserFull.Flags2.has_personal_channel_id">
            <summary>Fields <see cref="F:TL.UserFull.personal_channel_id"/> and <see cref="F:TL.UserFull.personal_channel_message"/> have a value</summary>
        </member>
        <member name="T:TL.Contact">
            <summary>A contact of the current user that is registered in the system.		<para>See <a href="https://corefork.telegram.org/constructor/contact"/></para></summary>
        </member>
        <member name="F:TL.Contact.user_id">
            <summary>User identifier</summary>
        </member>
        <member name="F:TL.Contact.mutual">
            <summary>Current user is in the user's contact list</summary>
        </member>
        <member name="T:TL.ImportedContact">
            <summary>Successfully imported contact.		<para>See <a href="https://corefork.telegram.org/constructor/importedContact"/></para></summary>
        </member>
        <member name="F:TL.ImportedContact.user_id">
            <summary>User identifier</summary>
        </member>
        <member name="F:TL.ImportedContact.client_id">
            <summary>The contact's client identifier (passed to one of the <see cref="T:TL.InputContact"/> constructors)</summary>
        </member>
        <member name="T:TL.ContactStatus">
            <summary>Contact status: online / offline.		<para>See <a href="https://corefork.telegram.org/constructor/contactStatus"/></para></summary>
        </member>
        <member name="F:TL.ContactStatus.user_id">
            <summary>User identifier</summary>
        </member>
        <member name="F:TL.ContactStatus.status">
            <summary>Online status</summary>
        </member>
        <member name="T:TL.Contacts_Contacts">
            <summary>The current user's contact list and info on users.		<para>See <a href="https://corefork.telegram.org/constructor/contacts.contacts"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/contacts.contactsNotModified">contacts.contactsNotModified</a></remarks>
        </member>
        <member name="F:TL.Contacts_Contacts.contacts">
            <summary>Contact list</summary>
        </member>
        <member name="F:TL.Contacts_Contacts.saved_count">
            <summary>Number of contacts that were saved successfully</summary>
        </member>
        <member name="F:TL.Contacts_Contacts.users">
            <summary>User list</summary>
        </member>
        <member name="T:TL.Contacts_ImportedContacts">
            <summary>Info on successfully imported contacts.		<para>See <a href="https://corefork.telegram.org/constructor/contacts.importedContacts"/></para></summary>
        </member>
        <member name="F:TL.Contacts_ImportedContacts.imported">
            <summary>List of successfully imported contacts</summary>
        </member>
        <member name="F:TL.Contacts_ImportedContacts.popular_invites">
            <summary>Popular contacts</summary>
        </member>
        <member name="F:TL.Contacts_ImportedContacts.retry_contacts">
            <summary>List of contact ids that could not be imported due to system limitation and will need to be imported at a later date.</summary>
        </member>
        <member name="F:TL.Contacts_ImportedContacts.users">
            <summary>List of users</summary>
        </member>
        <member name="T:TL.Contacts_Blocked">
            <summary>Full list of blocked users.		<para>See <a href="https://corefork.telegram.org/constructor/contacts.blocked"/></para></summary>
        </member>
        <member name="F:TL.Contacts_Blocked.blocked">
            <summary>List of blocked users</summary>
        </member>
        <member name="F:TL.Contacts_Blocked.chats">
            <summary>Blocked chats</summary>
        </member>
        <member name="F:TL.Contacts_Blocked.users">
            <summary>List of users</summary>
        </member>
        <member name="M:TL.Contacts_Blocked.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Contacts_BlockedSlice">
            <summary>Incomplete list of blocked users.		<para>See <a href="https://corefork.telegram.org/constructor/contacts.blockedSlice"/></para></summary>
        </member>
        <member name="F:TL.Contacts_BlockedSlice.count">
            <summary>Total number of elements in the list</summary>
        </member>
        <member name="T:TL.Messages_DialogsBase">
            <summary>Object contains a list of chats with messages and auxiliary data.		<para>See <a href="https://corefork.telegram.org/type/messages.Dialogs"/></para>		<para>Derived classes: <see cref="T:TL.Messages_Dialogs"/>, <see cref="T:TL.Messages_DialogsSlice"/>, <see cref="T:TL.Messages_DialogsNotModified"/></para></summary>
        </member>
        <member name="P:TL.Messages_DialogsBase.Dialogs">
            <summary>List of chats</summary>
        </member>
        <member name="P:TL.Messages_DialogsBase.Messages">
            <summary>List of last messages from each chat</summary>
        </member>
        <member name="M:TL.Messages_DialogsBase.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Messages_Dialogs">
            <summary>Full list of chats with messages and auxiliary data.		<para>See <a href="https://corefork.telegram.org/constructor/messages.dialogs"/></para></summary>
        </member>
        <member name="F:TL.Messages_Dialogs.dialogs">
            <summary>List of chats</summary>
        </member>
        <member name="F:TL.Messages_Dialogs.messages">
            <summary>List of last messages from each chat</summary>
        </member>
        <member name="F:TL.Messages_Dialogs.chats">
            <summary>List of groups mentioned in the chats</summary>
        </member>
        <member name="F:TL.Messages_Dialogs.users">
            <summary>List of users mentioned in messages and groups</summary>
        </member>
        <member name="P:TL.Messages_Dialogs.Dialogs">
            <summary>List of chats</summary>
        </member>
        <member name="P:TL.Messages_Dialogs.Messages">
            <summary>List of last messages from each chat</summary>
        </member>
        <member name="M:TL.Messages_Dialogs.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Messages_DialogsSlice">
            <summary>Incomplete list of dialogs with messages and auxiliary data.		<para>See <a href="https://corefork.telegram.org/constructor/messages.dialogsSlice"/></para></summary>
        </member>
        <member name="F:TL.Messages_DialogsSlice.count">
            <summary>Total number of dialogs</summary>
        </member>
        <member name="T:TL.Messages_DialogsNotModified">
            <summary>Dialogs haven't changed		<para>See <a href="https://corefork.telegram.org/constructor/messages.dialogsNotModified"/></para></summary>
        </member>
        <member name="F:TL.Messages_DialogsNotModified.count">
            <summary>Number of dialogs found server-side by the query</summary>
        </member>
        <member name="M:TL.Messages_DialogsNotModified.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Messages_MessagesBase">
            <summary>Object contains information on list of messages with auxiliary data.		<para>See <a href="https://corefork.telegram.org/type/messages.Messages"/></para>		<para>Derived classes: <see cref="T:TL.Messages_Messages"/>, <see cref="T:TL.Messages_MessagesSlice"/>, <see cref="T:TL.Messages_ChannelMessages"/>, <see cref="T:TL.Messages_MessagesNotModified"/></para></summary>
        </member>
        <member name="P:TL.Messages_MessagesBase.Messages">
            <summary>List of messages</summary>
        </member>
        <member name="M:TL.Messages_MessagesBase.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Messages_Messages">
            <summary>Full list of messages with auxiliary data.		<para>See <a href="https://corefork.telegram.org/constructor/messages.messages"/></para></summary>
        </member>
        <member name="F:TL.Messages_Messages.messages">
            <summary>List of messages</summary>
        </member>
        <member name="F:TL.Messages_Messages.chats">
            <summary>List of chats mentioned in dialogs</summary>
        </member>
        <member name="F:TL.Messages_Messages.users">
            <summary>List of users mentioned in messages and chats</summary>
        </member>
        <member name="P:TL.Messages_Messages.Messages">
            <summary>List of messages</summary>
        </member>
        <member name="M:TL.Messages_Messages.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Messages_MessagesSlice">
            <summary>Incomplete list of messages and auxiliary data.		<para>See <a href="https://corefork.telegram.org/constructor/messages.messagesSlice"/></para></summary>
        </member>
        <member name="F:TL.Messages_MessagesSlice.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Messages_MessagesSlice.count">
            <summary>Total number of messages in the list</summary>
        </member>
        <member name="F:TL.Messages_MessagesSlice.next_rate">
            <summary>Rate to use in the <c>offset_rate</c> parameter in the next call to <see cref="M:TL.SchemaExtensions.Messages_SearchGlobal(WTelegram.Client,System.String,TL.MessagesFilter,System.DateTime,System.DateTime,System.Int32,TL.InputPeer,System.Int32,System.Int32,System.Nullable{System.Int32},System.Boolean)">Messages_SearchGlobal</see></summary>
        </member>
        <member name="F:TL.Messages_MessagesSlice.offset_id_offset">
            <summary>Indicates the absolute position of <c>messages[0]</c> within the total result set with count <c>count</c>. <br/>This is useful, for example, if the result was fetched using <c>offset_id</c>, and we need to display a <c>progress/total</c> counter (like <c>photo 134 of 200</c>, for all media in a chat, we could simply use <c>photo ${offset_id_offset} of ${count}</c>.</summary>
        </member>
        <member name="F:TL.Messages_MessagesSlice.Flags.has_next_rate">
            <summary>Field <see cref="F:TL.Messages_MessagesSlice.next_rate"/> has a value</summary>
        </member>
        <member name="F:TL.Messages_MessagesSlice.Flags.inexact">
            <summary>If set, indicates that the results may be inexact</summary>
        </member>
        <member name="F:TL.Messages_MessagesSlice.Flags.has_offset_id_offset">
            <summary>Field <see cref="F:TL.Messages_MessagesSlice.offset_id_offset"/> has a value</summary>
        </member>
        <member name="T:TL.Messages_ChannelMessages">
            <summary>Channel messages		<para>See <a href="https://corefork.telegram.org/constructor/messages.channelMessages"/></para></summary>
        </member>
        <member name="F:TL.Messages_ChannelMessages.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Messages_ChannelMessages.pts">
            <summary><a href="https://corefork.telegram.org/api/updates">Event count after generation</a></summary>
        </member>
        <member name="F:TL.Messages_ChannelMessages.count">
            <summary>Total number of results were found server-side (may not be all included here)</summary>
        </member>
        <member name="F:TL.Messages_ChannelMessages.offset_id_offset">
            <summary>Indicates the absolute position of <c>messages[0]</c> within the total result set with count <c>count</c>. <br/>This is useful, for example, if the result was fetched using <c>offset_id</c>, and we need to display a <c>progress/total</c> counter (like <c>photo 134 of 200</c>, for all media in a chat, we could simply use <c>photo ${offset_id_offset} of ${count}</c>.</summary>
        </member>
        <member name="F:TL.Messages_ChannelMessages.messages">
            <summary>Found messages</summary>
        </member>
        <member name="F:TL.Messages_ChannelMessages.topics">
            <summary><a href="https://corefork.telegram.org/api/forum#forum-topics">Forum topic</a> information</summary>
        </member>
        <member name="F:TL.Messages_ChannelMessages.chats">
            <summary>Chats</summary>
        </member>
        <member name="F:TL.Messages_ChannelMessages.users">
            <summary>Users</summary>
        </member>
        <member name="F:TL.Messages_ChannelMessages.Flags.inexact">
            <summary>If set, returned results may be inexact</summary>
        </member>
        <member name="F:TL.Messages_ChannelMessages.Flags.has_offset_id_offset">
            <summary>Field <see cref="F:TL.Messages_ChannelMessages.offset_id_offset"/> has a value</summary>
        </member>
        <member name="P:TL.Messages_ChannelMessages.Messages">
            <summary>Found messages</summary>
        </member>
        <member name="M:TL.Messages_ChannelMessages.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Messages_MessagesNotModified">
            <summary>No new messages matching the query were found		<para>See <a href="https://corefork.telegram.org/constructor/messages.messagesNotModified"/></para></summary>
        </member>
        <member name="F:TL.Messages_MessagesNotModified.count">
            <summary>Number of results found server-side by the given query</summary>
        </member>
        <member name="M:TL.Messages_MessagesNotModified.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Messages_Chats">
            <summary>List of chats with auxiliary data.		<para>See <a href="https://corefork.telegram.org/constructor/messages.chats"/></para></summary>
        </member>
        <member name="F:TL.Messages_Chats.chats">
            <summary>List of chats</summary>
        </member>
        <member name="T:TL.Messages_ChatsSlice">
            <summary>Partial list of chats, more would have to be fetched with <a href="https://corefork.telegram.org/api/offsets">pagination</a>		<para>See <a href="https://corefork.telegram.org/constructor/messages.chatsSlice"/></para></summary>
        </member>
        <member name="F:TL.Messages_ChatsSlice.count">
            <summary>Total number of results that were found server-side (not all are included in <c>chats</c>)</summary>
        </member>
        <member name="T:TL.Messages_ChatFull">
            <summary>Full info about a <a href="https://corefork.telegram.org/api/channel#channels">channel</a>, <a href="https://corefork.telegram.org/api/channel#supergroups">supergroup</a>, <a href="https://corefork.telegram.org/api/channel#gigagroups">gigagroup</a> or <a href="https://corefork.telegram.org/api/channel#basic-groups">basic group</a>.		<para>See <a href="https://corefork.telegram.org/constructor/messages.chatFull"/></para></summary>
        </member>
        <member name="F:TL.Messages_ChatFull.full_chat">
            <summary>Full info</summary>
        </member>
        <member name="F:TL.Messages_ChatFull.chats">
            <summary>Mentioned chats</summary>
        </member>
        <member name="F:TL.Messages_ChatFull.users">
            <summary>Mentioned users</summary>
        </member>
        <member name="M:TL.Messages_ChatFull.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Messages_AffectedHistory">
            <summary>Affected part of communication history with the user or in a chat.		<para>See <a href="https://corefork.telegram.org/constructor/messages.affectedHistory"/></para></summary>
        </member>
        <member name="F:TL.Messages_AffectedHistory.offset">
            <summary>If a parameter contains positive value, it is necessary to repeat the method call using the given value; during the proceeding of all the history the value itself shall gradually decrease</summary>
        </member>
        <member name="T:TL.MessagesFilter">
            <summary>Object describes message filter.		<para>See <a href="https://corefork.telegram.org/type/MessagesFilter"/></para>		<para>Derived classes: <see cref="T:TL.InputMessagesFilterPhotos"/>, <see cref="T:TL.InputMessagesFilterVideo"/>, <see cref="T:TL.InputMessagesFilterPhotoVideo"/>, <see cref="T:TL.InputMessagesFilterDocument"/>, <see cref="T:TL.InputMessagesFilterUrl"/>, <see cref="T:TL.InputMessagesFilterGif"/>, <see cref="T:TL.InputMessagesFilterVoice"/>, <see cref="T:TL.InputMessagesFilterMusic"/>, <see cref="T:TL.InputMessagesFilterChatPhotos"/>, <see cref="T:TL.InputMessagesFilterPhoneCalls"/>, <see cref="T:TL.InputMessagesFilterRoundVoice"/>, <see cref="T:TL.InputMessagesFilterRoundVideo"/>, <see cref="T:TL.InputMessagesFilterMyMentions"/>, <see cref="T:TL.InputMessagesFilterGeo"/>, <see cref="T:TL.InputMessagesFilterContacts"/>, <see cref="T:TL.InputMessagesFilterPinned"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/inputMessagesFilterEmpty">inputMessagesFilterEmpty</a></remarks>
        </member>
        <member name="T:TL.InputMessagesFilterPhotos">
            <summary>Filter for messages containing photos.		<para>See <a href="https://corefork.telegram.org/constructor/inputMessagesFilterPhotos"/></para></summary>
        </member>
        <member name="T:TL.InputMessagesFilterVideo">
            <summary>Filter for messages containing videos.		<para>See <a href="https://corefork.telegram.org/constructor/inputMessagesFilterVideo"/></para></summary>
        </member>
        <member name="T:TL.InputMessagesFilterPhotoVideo">
            <summary>Filter for messages containing photos or videos.		<para>See <a href="https://corefork.telegram.org/constructor/inputMessagesFilterPhotoVideo"/></para></summary>
        </member>
        <member name="T:TL.InputMessagesFilterDocument">
            <summary>Filter for messages containing documents.		<para>See <a href="https://corefork.telegram.org/constructor/inputMessagesFilterDocument"/></para></summary>
        </member>
        <member name="T:TL.InputMessagesFilterUrl">
            <summary>Return only messages containing URLs		<para>See <a href="https://corefork.telegram.org/constructor/inputMessagesFilterUrl"/></para></summary>
        </member>
        <member name="T:TL.InputMessagesFilterGif">
            <summary>Return only messages containing gifs		<para>See <a href="https://corefork.telegram.org/constructor/inputMessagesFilterGif"/></para></summary>
        </member>
        <member name="T:TL.InputMessagesFilterVoice">
            <summary>Return only messages containing voice notes		<para>See <a href="https://corefork.telegram.org/constructor/inputMessagesFilterVoice"/></para></summary>
        </member>
        <member name="T:TL.InputMessagesFilterMusic">
            <summary>Return only messages containing audio files		<para>See <a href="https://corefork.telegram.org/constructor/inputMessagesFilterMusic"/></para></summary>
        </member>
        <member name="T:TL.InputMessagesFilterChatPhotos">
            <summary>Return only chat photo changes		<para>See <a href="https://corefork.telegram.org/constructor/inputMessagesFilterChatPhotos"/></para></summary>
        </member>
        <member name="T:TL.InputMessagesFilterPhoneCalls">
            <summary>Return only phone calls		<para>See <a href="https://corefork.telegram.org/constructor/inputMessagesFilterPhoneCalls"/></para></summary>
        </member>
        <member name="F:TL.InputMessagesFilterPhoneCalls.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.InputMessagesFilterPhoneCalls.Flags.missed">
            <summary>Return only missed phone calls</summary>
        </member>
        <member name="T:TL.InputMessagesFilterRoundVoice">
            <summary>Return only round videos and voice notes		<para>See <a href="https://corefork.telegram.org/constructor/inputMessagesFilterRoundVoice"/></para></summary>
        </member>
        <member name="T:TL.InputMessagesFilterRoundVideo">
            <summary>Return only round videos		<para>See <a href="https://corefork.telegram.org/constructor/inputMessagesFilterRoundVideo"/></para></summary>
        </member>
        <member name="T:TL.InputMessagesFilterMyMentions">
            <summary>Return only messages where the current user was <a href="https://corefork.telegram.org/api/mentions">mentioned</a>.		<para>See <a href="https://corefork.telegram.org/constructor/inputMessagesFilterMyMentions"/></para></summary>
        </member>
        <member name="T:TL.InputMessagesFilterGeo">
            <summary>Return only messages containing geolocations		<para>See <a href="https://corefork.telegram.org/constructor/inputMessagesFilterGeo"/></para></summary>
        </member>
        <member name="T:TL.InputMessagesFilterContacts">
            <summary>Return only messages containing contacts		<para>See <a href="https://corefork.telegram.org/constructor/inputMessagesFilterContacts"/></para></summary>
        </member>
        <member name="T:TL.InputMessagesFilterPinned">
            <summary>Fetch only pinned messages		<para>See <a href="https://corefork.telegram.org/constructor/inputMessagesFilterPinned"/></para></summary>
        </member>
        <member name="T:TL.Update">
            <summary>Object contains info on events occurred.		<para>See <a href="https://corefork.telegram.org/type/Update"/></para>		<para>Derived classes: <see cref="T:TL.UpdateNewMessage"/>, <see cref="T:TL.UpdateMessageID"/>, <see cref="T:TL.UpdateDeleteMessages"/>, <see cref="T:TL.UpdateUserTyping"/>, <see cref="T:TL.UpdateChatUserTyping"/>, <see cref="T:TL.UpdateChatParticipants"/>, <see cref="T:TL.UpdateUserStatus"/>, <see cref="T:TL.UpdateUserName"/>, <see cref="T:TL.UpdateNewAuthorization"/>, <see cref="T:TL.UpdateNewEncryptedMessage"/>, <see cref="T:TL.UpdateEncryptedChatTyping"/>, <see cref="T:TL.UpdateEncryption"/>, <see cref="T:TL.UpdateEncryptedMessagesRead"/>, <see cref="T:TL.UpdateChatParticipantAdd"/>, <see cref="T:TL.UpdateChatParticipantDelete"/>, <see cref="T:TL.UpdateDcOptions"/>, <see cref="T:TL.UpdateNotifySettings"/>, <see cref="T:TL.UpdateServiceNotification"/>, <see cref="T:TL.UpdatePrivacy"/>, <see cref="T:TL.UpdateUserPhone"/>, <see cref="T:TL.UpdateReadHistoryInbox"/>, <see cref="T:TL.UpdateReadHistoryOutbox"/>, <see cref="T:TL.UpdateWebPage"/>, <see cref="T:TL.UpdateReadMessagesContents"/>, <see cref="T:TL.UpdateChannelTooLong"/>, <see cref="T:TL.UpdateChannel"/>, <see cref="T:TL.UpdateNewChannelMessage"/>, <see cref="T:TL.UpdateReadChannelInbox"/>, <see cref="T:TL.UpdateDeleteChannelMessages"/>, <see cref="T:TL.UpdateChannelMessageViews"/>, <see cref="T:TL.UpdateChatParticipantAdmin"/>, <see cref="T:TL.UpdateNewStickerSet"/>, <see cref="T:TL.UpdateStickerSetsOrder"/>, <see cref="T:TL.UpdateStickerSets"/>, <see cref="T:TL.UpdateSavedGifs"/>, <see cref="T:TL.UpdateBotInlineQuery"/>, <see cref="T:TL.UpdateBotInlineSend"/>, <see cref="T:TL.UpdateEditChannelMessage"/>, <see cref="T:TL.UpdateBotCallbackQuery"/>, <see cref="T:TL.UpdateEditMessage"/>, <see cref="T:TL.UpdateInlineBotCallbackQuery"/>, <see cref="T:TL.UpdateReadChannelOutbox"/>, <see cref="T:TL.UpdateDraftMessage"/>, <see cref="T:TL.UpdateReadFeaturedStickers"/>, <see cref="T:TL.UpdateRecentStickers"/>, <see cref="T:TL.UpdateConfig"/>, <see cref="T:TL.UpdatePtsChanged"/>, <see cref="T:TL.UpdateChannelWebPage"/>, <see cref="T:TL.UpdateDialogPinned"/>, <see cref="T:TL.UpdatePinnedDialogs"/>, <see cref="T:TL.UpdateBotWebhookJSON"/>, <see cref="T:TL.UpdateBotWebhookJSONQuery"/>, <see cref="T:TL.UpdateBotShippingQuery"/>, <see cref="T:TL.UpdateBotPrecheckoutQuery"/>, <see cref="T:TL.UpdatePhoneCall"/>, <see cref="T:TL.UpdateLangPackTooLong"/>, <see cref="T:TL.UpdateLangPack"/>, <see cref="T:TL.UpdateFavedStickers"/>, <see cref="T:TL.UpdateChannelReadMessagesContents"/>, <see cref="T:TL.UpdateContactsReset"/>, <see cref="T:TL.UpdateChannelAvailableMessages"/>, <see cref="T:TL.UpdateDialogUnreadMark"/>, <see cref="T:TL.UpdateMessagePoll"/>, <see cref="T:TL.UpdateChatDefaultBannedRights"/>, <see cref="T:TL.UpdateFolderPeers"/>, <see cref="T:TL.UpdatePeerSettings"/>, <see cref="T:TL.UpdatePeerLocated"/>, <see cref="T:TL.UpdateNewScheduledMessage"/>, <see cref="T:TL.UpdateDeleteScheduledMessages"/>, <see cref="T:TL.UpdateTheme"/>, <see cref="T:TL.UpdateGeoLiveViewed"/>, <see cref="T:TL.UpdateLoginToken"/>, <see cref="T:TL.UpdateMessagePollVote"/>, <see cref="T:TL.UpdateDialogFilter"/>, <see cref="T:TL.UpdateDialogFilterOrder"/>, <see cref="T:TL.UpdateDialogFilters"/>, <see cref="T:TL.UpdatePhoneCallSignalingData"/>, <see cref="T:TL.UpdateChannelMessageForwards"/>, <see cref="T:TL.UpdateReadChannelDiscussionInbox"/>, <see cref="T:TL.UpdateReadChannelDiscussionOutbox"/>, <see cref="T:TL.UpdatePeerBlocked"/>, <see cref="T:TL.UpdateChannelUserTyping"/>, <see cref="T:TL.UpdatePinnedMessages"/>, <see cref="T:TL.UpdatePinnedChannelMessages"/>, <see cref="T:TL.UpdateChat"/>, <see cref="T:TL.UpdateGroupCallParticipants"/>, <see cref="T:TL.UpdateGroupCall"/>, <see cref="T:TL.UpdatePeerHistoryTTL"/>, <see cref="T:TL.UpdateChatParticipant"/>, <see cref="T:TL.UpdateChannelParticipant"/>, <see cref="T:TL.UpdateBotStopped"/>, <see cref="T:TL.UpdateGroupCallConnection"/>, <see cref="T:TL.UpdateBotCommands"/>, <see cref="T:TL.UpdatePendingJoinRequests"/>, <see cref="T:TL.UpdateBotChatInviteRequester"/>, <see cref="T:TL.UpdateMessageReactions"/>, <see cref="T:TL.UpdateAttachMenuBots"/>, <see cref="T:TL.UpdateWebViewResultSent"/>, <see cref="T:TL.UpdateBotMenuButton"/>, <see cref="T:TL.UpdateSavedRingtones"/>, <see cref="T:TL.UpdateTranscribedAudio"/>, <see cref="T:TL.UpdateReadFeaturedEmojiStickers"/>, <see cref="T:TL.UpdateUserEmojiStatus"/>, <see cref="T:TL.UpdateRecentEmojiStatuses"/>, <see cref="T:TL.UpdateRecentReactions"/>, <see cref="T:TL.UpdateMoveStickerSetToTop"/>, <see cref="T:TL.UpdateMessageExtendedMedia"/>, <see cref="T:TL.UpdateChannelPinnedTopic"/>, <see cref="T:TL.UpdateChannelPinnedTopics"/>, <see cref="T:TL.UpdateUser"/>, <see cref="T:TL.UpdateAutoSaveSettings"/>, <see cref="!:UpdateGroupInvitePrivacyForbidden"/>, <see cref="T:TL.UpdateStory"/>, <see cref="T:TL.UpdateReadStories"/>, <see cref="T:TL.UpdateStoryID"/>, <see cref="T:TL.UpdateStoriesStealthMode"/>, <see cref="T:TL.UpdateSentStoryReaction"/>, <see cref="T:TL.UpdateBotChatBoost"/>, <see cref="T:TL.UpdateChannelViewForumAsMessages"/>, <see cref="T:TL.UpdatePeerWallpaper"/>, <see cref="T:TL.UpdateBotMessageReaction"/>, <see cref="T:TL.UpdateBotMessageReactions"/>, <see cref="T:TL.UpdateSavedDialogPinned"/>, <see cref="T:TL.UpdatePinnedSavedDialogs"/></para></summary>
        </member>
        <member name="T:TL.UpdateNewMessage">
            <summary>New message in a private chat or in a <a href="https://corefork.telegram.org/api/channel#basic-groups">basic group</a>.		<para>See <a href="https://corefork.telegram.org/constructor/updateNewMessage"/></para></summary>
        </member>
        <member name="F:TL.UpdateNewMessage.message">
            <summary>Message</summary>
        </member>
        <member name="F:TL.UpdateNewMessage.pts">
            <summary>New quantity of actions in a message box</summary>
        </member>
        <member name="F:TL.UpdateNewMessage.pts_count">
            <summary>Number of generated events</summary>
        </member>
        <member name="T:TL.UpdateMessageID">
            <summary>Sent message with <strong>random_id</strong> client identifier was assigned an identifier.		<para>See <a href="https://corefork.telegram.org/constructor/updateMessageID"/></para></summary>
        </member>
        <member name="F:TL.UpdateMessageID.id">
            <summary><strong>id</strong> identifier of a respective <see cref="T:TL.MessageBase"/></summary>
        </member>
        <member name="F:TL.UpdateMessageID.random_id">
            <summary>Previously transferred client <strong>random_id</strong> identifier</summary>
        </member>
        <member name="T:TL.UpdateDeleteMessages">
            <summary>Messages were deleted.		<para>See <a href="https://corefork.telegram.org/constructor/updateDeleteMessages"/></para></summary>
        </member>
        <member name="F:TL.UpdateDeleteMessages.messages">
            <summary>List of identifiers of deleted messages</summary>
        </member>
        <member name="F:TL.UpdateDeleteMessages.pts">
            <summary>New quality of actions in a message box</summary>
        </member>
        <member name="F:TL.UpdateDeleteMessages.pts_count">
            <summary>Number of generated <a href="https://corefork.telegram.org/api/updates">events</a></summary>
        </member>
        <member name="T:TL.UpdateUserTyping">
            <summary>The user is preparing a message; typing, recording, uploading, etc. This update is valid for 6 seconds. If no further updates of this kind are received after 6 seconds, it should be considered that the user stopped doing whatever they were doing		<para>See <a href="https://corefork.telegram.org/constructor/updateUserTyping"/></para></summary>
        </member>
        <member name="F:TL.UpdateUserTyping.action">
            <summary>Action type</summary>
        </member>
        <member name="T:TL.UpdateChatUserTyping">
            <summary>The user is preparing a message in a group; typing, recording, uploading, etc. This update is valid for 6 seconds. If no further updates of this kind are received after 6 seconds, it should be considered that the user stopped doing whatever they were doing		<para>See <a href="https://corefork.telegram.org/constructor/updateChatUserTyping"/></para></summary>
        </member>
        <member name="F:TL.UpdateChatUserTyping.from_id">
            <summary>Peer that started typing (can be the chat itself, in case of anonymous admins).</summary>
        </member>
        <member name="F:TL.UpdateChatUserTyping.action">
            <summary>Type of action</summary>
        </member>
        <member name="T:TL.UpdateChatParticipants">
            <summary>Composition of chat participants changed.		<para>See <a href="https://corefork.telegram.org/constructor/updateChatParticipants"/></para></summary>
        </member>
        <member name="F:TL.UpdateChatParticipants.participants">
            <summary>Updated chat participants</summary>
        </member>
        <member name="T:TL.UpdateUserStatus">
            <summary>Contact status update.		<para>See <a href="https://corefork.telegram.org/constructor/updateUserStatus"/></para></summary>
        </member>
        <member name="F:TL.UpdateUserStatus.status">
            <summary>New status</summary>
        </member>
        <member name="T:TL.UpdateUserName">
            <summary>Changes the user's first name, last name and username.		<para>See <a href="https://corefork.telegram.org/constructor/updateUserName"/></para></summary>
        </member>
        <member name="F:TL.UpdateUserName.first_name">
            <summary>New first name. Corresponds to the new value of <strong>real_first_name</strong> field of the <see cref="T:TL.UserFull"/>.</summary>
        </member>
        <member name="F:TL.UpdateUserName.last_name">
            <summary>New last name. Corresponds to the new value of <strong>real_last_name</strong> field of the <see cref="T:TL.UserFull"/>.</summary>
        </member>
        <member name="F:TL.UpdateUserName.usernames">
            <summary>Usernames.</summary>
        </member>
        <member name="T:TL.UpdateNewAuthorization">
            <summary>A new session logged into the current user's account through an unknown device.		<para>See <a href="https://corefork.telegram.org/constructor/updateNewAuthorization"/></para></summary>
        </member>
        <member name="F:TL.UpdateNewAuthorization.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdateNewAuthorization.hash">
            <summary><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></summary>
        </member>
        <member name="F:TL.UpdateNewAuthorization.date">
            <summary>Authorization date</summary>
        </member>
        <member name="F:TL.UpdateNewAuthorization.device">
            <summary>Name of device, for example <em>Android</em></summary>
        </member>
        <member name="F:TL.UpdateNewAuthorization.location">
            <summary>Location, for example <em>USA, NY (IP=1.2.3.4)</em></summary>
        </member>
        <member name="F:TL.UpdateNewAuthorization.Flags.unconfirmed">
            <summary>Whether the session is <a href="https://corefork.telegram.org/api/auth#confirming-login">unconfirmed, see here »</a> for more info.</summary>
        </member>
        <member name="T:TL.UpdateNewEncryptedMessage">
            <summary>New encrypted message.		<para>See <a href="https://corefork.telegram.org/constructor/updateNewEncryptedMessage"/></para></summary>
        </member>
        <member name="F:TL.UpdateNewEncryptedMessage.message">
            <summary>Message</summary>
        </member>
        <member name="F:TL.UpdateNewEncryptedMessage.qts">
            <summary>New <strong>qts</strong> value, see <a href="https://corefork.telegram.org/api/updates">updates »</a> for more info.</summary>
        </member>
        <member name="T:TL.UpdateEncryptedChatTyping">
            <summary>Interlocutor is typing a message in an encrypted chat. Update period is 6 second. If upon this time there is no repeated update, it shall be considered that the interlocutor stopped typing.		<para>See <a href="https://corefork.telegram.org/constructor/updateEncryptedChatTyping"/></para></summary>
        </member>
        <member name="F:TL.UpdateEncryptedChatTyping.chat_id">
            <summary>Chat ID</summary>
        </member>
        <member name="T:TL.UpdateEncryption">
            <summary>Change of state in an encrypted chat.		<para>See <a href="https://corefork.telegram.org/constructor/updateEncryption"/></para></summary>
        </member>
        <member name="F:TL.UpdateEncryption.chat">
            <summary>Encrypted chat</summary>
        </member>
        <member name="F:TL.UpdateEncryption.date">
            <summary>Date of change</summary>
        </member>
        <member name="T:TL.UpdateEncryptedMessagesRead">
            <summary>Communication history in an encrypted chat was marked as read.		<para>See <a href="https://corefork.telegram.org/constructor/updateEncryptedMessagesRead"/></para></summary>
        </member>
        <member name="F:TL.UpdateEncryptedMessagesRead.chat_id">
            <summary>Chat ID</summary>
        </member>
        <member name="F:TL.UpdateEncryptedMessagesRead.max_date">
            <summary>Maximum value of data for read messages</summary>
        </member>
        <member name="F:TL.UpdateEncryptedMessagesRead.date">
            <summary>Time when messages were read</summary>
        </member>
        <member name="T:TL.UpdateChatParticipantAdd">
            <summary>New group member.		<para>See <a href="https://corefork.telegram.org/constructor/updateChatParticipantAdd"/></para></summary>
        </member>
        <member name="F:TL.UpdateChatParticipantAdd.user_id">
            <summary>ID of the new member</summary>
        </member>
        <member name="F:TL.UpdateChatParticipantAdd.inviter_id">
            <summary>ID of the user, who added member to the group</summary>
        </member>
        <member name="F:TL.UpdateChatParticipantAdd.date">
            <summary>When was the participant added</summary>
        </member>
        <member name="F:TL.UpdateChatParticipantAdd.version">
            <summary>Chat version number</summary>
        </member>
        <member name="T:TL.UpdateChatParticipantDelete">
            <summary>A member has left the group.		<para>See <a href="https://corefork.telegram.org/constructor/updateChatParticipantDelete"/></para></summary>
        </member>
        <member name="F:TL.UpdateChatParticipantDelete.user_id">
            <summary>ID of the user</summary>
        </member>
        <member name="F:TL.UpdateChatParticipantDelete.version">
            <summary>Used in basic groups to reorder updates and make sure that all of them was received.</summary>
        </member>
        <member name="T:TL.UpdateDcOptions">
            <summary>Changes in the data center configuration options.		<para>See <a href="https://corefork.telegram.org/constructor/updateDcOptions"/></para></summary>
        </member>
        <member name="F:TL.UpdateDcOptions.dc_options">
            <summary>New connection options</summary>
        </member>
        <member name="T:TL.UpdateNotifySettings">
            <summary>Changes in notification settings.		<para>See <a href="https://corefork.telegram.org/constructor/updateNotifySettings"/></para></summary>
        </member>
        <member name="F:TL.UpdateNotifySettings.peer">
            <summary>Notification source</summary>
        </member>
        <member name="F:TL.UpdateNotifySettings.notify_settings">
            <summary>New notification settings</summary>
        </member>
        <member name="T:TL.UpdateServiceNotification">
            <summary>A service message for the user.		<para>See <a href="https://corefork.telegram.org/constructor/updateServiceNotification"/></para></summary>
        </member>
        <member name="F:TL.UpdateServiceNotification.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdateServiceNotification.inbox_date">
            <summary>When was the notification received<br/>The message must also be stored locally as part of the message history with the user id <c>777000</c> (Telegram Notifications).</summary>
        </member>
        <member name="F:TL.UpdateServiceNotification.type">
            <summary>String, identical in format and contents to the <a href="https://corefork.telegram.org/api/errors#error-type"><strong>type</strong></a> field in API errors. Describes type of service message. It is acceptable to ignore repeated messages of the same <strong>type</strong> within a short period of time (15 minutes).</summary>
        </member>
        <member name="F:TL.UpdateServiceNotification.message">
            <summary>Message text</summary>
        </member>
        <member name="F:TL.UpdateServiceNotification.media">
            <summary>Media content (optional)</summary>
        </member>
        <member name="F:TL.UpdateServiceNotification.entities">
            <summary><a href="https://corefork.telegram.org/api/entities">Message entities for styled text</a></summary>
        </member>
        <member name="F:TL.UpdateServiceNotification.Flags.popup">
            <summary>If set, the message must be displayed in a popup.</summary>
        </member>
        <member name="F:TL.UpdateServiceNotification.Flags.has_inbox_date">
            <summary>Field <see cref="F:TL.UpdateServiceNotification.inbox_date"/> has a value</summary>
        </member>
        <member name="F:TL.UpdateServiceNotification.Flags.invert_media">
            <summary>If set, any eventual webpage preview will be shown on top of the message instead of at the bottom.</summary>
        </member>
        <member name="T:TL.UpdatePrivacy">
            <summary>Privacy rules were changed		<para>See <a href="https://corefork.telegram.org/constructor/updatePrivacy"/></para></summary>
        </member>
        <member name="F:TL.UpdatePrivacy.key">
            <summary>Peers to which the privacy rules apply</summary>
        </member>
        <member name="F:TL.UpdatePrivacy.rules">
            <summary>New privacy rules</summary>
        </member>
        <member name="T:TL.UpdateUserPhone">
            <summary>A user's phone number was changed		<para>See <a href="https://corefork.telegram.org/constructor/updateUserPhone"/></para></summary>
        </member>
        <member name="F:TL.UpdateUserPhone.phone">
            <summary>New phone number</summary>
        </member>
        <member name="T:TL.UpdateReadHistoryInbox">
            <summary>Incoming messages were read		<para>See <a href="https://corefork.telegram.org/constructor/updateReadHistoryInbox"/></para></summary>
        </member>
        <member name="F:TL.UpdateReadHistoryInbox.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdateReadHistoryInbox.folder_id">
            <summary><a href="https://corefork.telegram.org/api/folders#peer-folders">Peer folder ID, for more info click here</a></summary>
        </member>
        <member name="F:TL.UpdateReadHistoryInbox.peer">
            <summary>Peer</summary>
        </member>
        <member name="F:TL.UpdateReadHistoryInbox.max_id">
            <summary>Maximum ID of messages read</summary>
        </member>
        <member name="F:TL.UpdateReadHistoryInbox.still_unread_count">
            <summary>Number of messages that are still unread</summary>
        </member>
        <member name="F:TL.UpdateReadHistoryInbox.pts">
            <summary><a href="https://corefork.telegram.org/api/updates">Event count after generation</a></summary>
        </member>
        <member name="F:TL.UpdateReadHistoryInbox.pts_count">
            <summary><a href="https://corefork.telegram.org/api/updates">Number of events that were generated</a></summary>
        </member>
        <member name="F:TL.UpdateReadHistoryInbox.Flags.has_folder_id">
            <summary>Field <see cref="F:TL.UpdateReadHistoryInbox.folder_id"/> has a value</summary>
        </member>
        <member name="T:TL.UpdateReadHistoryOutbox">
            <summary>Outgoing messages were read		<para>See <a href="https://corefork.telegram.org/constructor/updateReadHistoryOutbox"/></para></summary>
        </member>
        <member name="F:TL.UpdateReadHistoryOutbox.peer">
            <summary>Peer</summary>
        </member>
        <member name="F:TL.UpdateReadHistoryOutbox.max_id">
            <summary>Maximum ID of read outgoing messages</summary>
        </member>
        <member name="F:TL.UpdateReadHistoryOutbox.pts">
            <summary><a href="https://corefork.telegram.org/api/updates">Event count after generation</a></summary>
        </member>
        <member name="F:TL.UpdateReadHistoryOutbox.pts_count">
            <summary><a href="https://corefork.telegram.org/api/updates">Number of events that were generated</a></summary>
        </member>
        <member name="T:TL.UpdateWebPage">
            <summary>An <a href="https://instantview.telegram.org">instant view</a> webpage preview was generated		<para>See <a href="https://corefork.telegram.org/constructor/updateWebPage"/></para></summary>
        </member>
        <member name="F:TL.UpdateWebPage.webpage">
            <summary>Webpage preview</summary>
        </member>
        <member name="F:TL.UpdateWebPage.pts">
            <summary><a href="https://corefork.telegram.org/api/updates">Event count after generation</a></summary>
        </member>
        <member name="F:TL.UpdateWebPage.pts_count">
            <summary><a href="https://corefork.telegram.org/api/updates">Number of events that were generated</a></summary>
        </member>
        <member name="T:TL.UpdateReadMessagesContents">
            <summary>Contents of messages in the common <a href="https://corefork.telegram.org/api/updates">message box</a> were read		<para>See <a href="https://corefork.telegram.org/constructor/updateReadMessagesContents"/></para></summary>
        </member>
        <member name="F:TL.UpdateReadMessagesContents.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdateReadMessagesContents.messages">
            <summary>IDs of read messages</summary>
        </member>
        <member name="F:TL.UpdateReadMessagesContents.pts">
            <summary><a href="https://corefork.telegram.org/api/updates">Event count after generation</a></summary>
        </member>
        <member name="F:TL.UpdateReadMessagesContents.pts_count">
            <summary><a href="https://corefork.telegram.org/api/updates">Number of events that were generated</a></summary>
        </member>
        <member name="F:TL.UpdateReadMessagesContents.date">
            <summary>When was the last message in <c>messages</c> marked as read.</summary>
        </member>
        <member name="F:TL.UpdateReadMessagesContents.Flags.has_date">
            <summary>Field <see cref="F:TL.UpdateReadMessagesContents.date"/> has a value</summary>
        </member>
        <member name="T:TL.UpdateChannelTooLong">
            <summary>There are new updates in the specified channel, the client must fetch them.<br/>If the difference is too long or if the channel isn't currently in the states, start fetching from the specified pts.		<para>See <a href="https://corefork.telegram.org/constructor/updateChannelTooLong"/></para></summary>
        </member>
        <member name="F:TL.UpdateChannelTooLong.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdateChannelTooLong.channel_id">
            <summary>The channel</summary>
        </member>
        <member name="F:TL.UpdateChannelTooLong.pts">
            <summary>The <a href="https://corefork.telegram.org/api/updates">PTS</a>.</summary>
        </member>
        <member name="F:TL.UpdateChannelTooLong.Flags.has_pts">
            <summary>Field <see cref="F:TL.UpdateChannelTooLong.pts"/> has a value</summary>
        </member>
        <member name="T:TL.UpdateChannel">
            <summary>A new channel or supergroup is available, or info about an existing channel has changed and must be refeteched.		<para>See <a href="https://corefork.telegram.org/constructor/updateChannel"/></para></summary>
        </member>
        <member name="F:TL.UpdateChannel.channel_id">
            <summary>Channel ID</summary>
        </member>
        <member name="T:TL.UpdateNewChannelMessage">
            <summary>A new message was sent in a <a href="https://corefork.telegram.org/api/channel">channel/supergroup</a>		<para>See <a href="https://corefork.telegram.org/constructor/updateNewChannelMessage"/></para></summary>
        </member>
        <member name="T:TL.UpdateReadChannelInbox">
            <summary>Incoming messages in a <a href="https://corefork.telegram.org/api/channel">channel/supergroup</a> were read		<para>See <a href="https://corefork.telegram.org/constructor/updateReadChannelInbox"/></para></summary>
        </member>
        <member name="F:TL.UpdateReadChannelInbox.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdateReadChannelInbox.folder_id">
            <summary><a href="https://corefork.telegram.org/api/folders#peer-folders">Peer folder ID, for more info click here</a></summary>
        </member>
        <member name="F:TL.UpdateReadChannelInbox.channel_id">
            <summary>Channel/supergroup ID</summary>
        </member>
        <member name="F:TL.UpdateReadChannelInbox.max_id">
            <summary>Position up to which all incoming messages are read.</summary>
        </member>
        <member name="F:TL.UpdateReadChannelInbox.still_unread_count">
            <summary>Count of messages weren't read yet</summary>
        </member>
        <member name="F:TL.UpdateReadChannelInbox.pts">
            <summary><a href="https://corefork.telegram.org/api/updates">Event count after generation</a></summary>
        </member>
        <member name="F:TL.UpdateReadChannelInbox.Flags.has_folder_id">
            <summary>Field <see cref="F:TL.UpdateReadChannelInbox.folder_id"/> has a value</summary>
        </member>
        <member name="T:TL.UpdateDeleteChannelMessages">
            <summary>Some messages in a <a href="https://corefork.telegram.org/api/channel">supergroup/channel</a> were deleted		<para>See <a href="https://corefork.telegram.org/constructor/updateDeleteChannelMessages"/></para></summary>
        </member>
        <member name="F:TL.UpdateDeleteChannelMessages.channel_id">
            <summary>Channel ID</summary>
        </member>
        <member name="T:TL.UpdateChannelMessageViews">
            <summary>The view counter of a message in a channel has changed		<para>See <a href="https://corefork.telegram.org/constructor/updateChannelMessageViews"/></para></summary>
        </member>
        <member name="F:TL.UpdateChannelMessageViews.id">
            <summary>ID of the message</summary>
        </member>
        <member name="F:TL.UpdateChannelMessageViews.views">
            <summary>New view counter</summary>
        </member>
        <member name="T:TL.UpdateChatParticipantAdmin">
            <summary>Admin permissions of a user in a <a href="https://corefork.telegram.org/api/channel#basic-groups">basic group</a> were changed		<para>See <a href="https://corefork.telegram.org/constructor/updateChatParticipantAdmin"/></para></summary>
        </member>
        <member name="F:TL.UpdateChatParticipantAdmin.user_id">
            <summary>ID of the (de)admined user</summary>
        </member>
        <member name="F:TL.UpdateChatParticipantAdmin.is_admin">
            <summary>Whether the user was rendered admin</summary>
        </member>
        <member name="F:TL.UpdateChatParticipantAdmin.version">
            <summary>Used in basic groups to reorder updates and make sure that all of them was received.</summary>
        </member>
        <member name="T:TL.UpdateNewStickerSet">
            <summary>A new stickerset was installed		<para>See <a href="https://corefork.telegram.org/constructor/updateNewStickerSet"/></para></summary>
        </member>
        <member name="F:TL.UpdateNewStickerSet.stickerset">
            <summary>The installed stickerset</summary>
        </member>
        <member name="T:TL.UpdateStickerSetsOrder">
            <summary>The order of stickersets was changed		<para>See <a href="https://corefork.telegram.org/constructor/updateStickerSetsOrder"/></para></summary>
        </member>
        <member name="F:TL.UpdateStickerSetsOrder.order">
            <summary>New sticker order by sticker ID</summary>
        </member>
        <member name="T:TL.UpdateStickerSets">
            <summary>Installed stickersets have changed, the client should refetch them as <a href="https://corefork.telegram.org/api/stickers#installing-stickersets">described in the docs</a>.		<para>See <a href="https://corefork.telegram.org/constructor/updateStickerSets"/></para></summary>
        </member>
        <member name="F:TL.UpdateStickerSets.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdateStickerSets.Flags.masks">
            <summary>Whether mask stickersets have changed</summary>
        </member>
        <member name="F:TL.UpdateStickerSets.Flags.emojis">
            <summary>Whether the list of installed <a href="https://corefork.telegram.org/api/custom-emoji">custom emoji stickersets</a> has changed</summary>
        </member>
        <member name="T:TL.UpdateSavedGifs">
            <summary>The saved gif list has changed, the client should refetch it using <see cref="M:TL.SchemaExtensions.Messages_GetSavedGifs(WTelegram.Client,System.Int64)">Messages_GetSavedGifs</see>		<para>See <a href="https://corefork.telegram.org/constructor/updateSavedGifs"/></para></summary>
        </member>
        <member name="T:TL.UpdateBotInlineQuery">
            <summary>An incoming inline query		<para>See <a href="https://corefork.telegram.org/constructor/updateBotInlineQuery"/></para></summary>
        </member>
        <member name="F:TL.UpdateBotInlineQuery.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdateBotInlineQuery.query_id">
            <summary>Query ID</summary>
        </member>
        <member name="F:TL.UpdateBotInlineQuery.user_id">
            <summary>User that sent the query</summary>
        </member>
        <member name="F:TL.UpdateBotInlineQuery.query">
            <summary>Text of query</summary>
        </member>
        <member name="F:TL.UpdateBotInlineQuery.geo">
            <summary>Attached geolocation</summary>
        </member>
        <member name="F:TL.UpdateBotInlineQuery.peer_type">
            <summary>Type of the chat from which the inline query was sent.</summary>
        </member>
        <member name="F:TL.UpdateBotInlineQuery.offset">
            <summary>Offset to navigate through results</summary>
        </member>
        <member name="F:TL.UpdateBotInlineQuery.Flags.has_geo">
            <summary>Field <see cref="F:TL.UpdateBotInlineQuery.geo"/> has a value</summary>
        </member>
        <member name="F:TL.UpdateBotInlineQuery.Flags.has_peer_type">
            <summary>Field <see cref="F:TL.UpdateBotInlineQuery.peer_type"/> has a value</summary>
        </member>
        <member name="T:TL.UpdateBotInlineSend">
            <summary>The result of an inline query that was chosen by a user and sent to their chat partner. Please see our documentation on the <a href="https://corefork.telegram.org/bots/inline#collecting-feedback">feedback collecting</a> for details on how to enable these updates for your bot.		<para>See <a href="https://corefork.telegram.org/constructor/updateBotInlineSend"/></para></summary>
        </member>
        <member name="F:TL.UpdateBotInlineSend.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdateBotInlineSend.user_id">
            <summary>The user that chose the result</summary>
        </member>
        <member name="F:TL.UpdateBotInlineSend.query">
            <summary>The query that was used to obtain the result</summary>
        </member>
        <member name="F:TL.UpdateBotInlineSend.geo">
            <summary>Optional. Sender location, only for bots that require user location</summary>
        </member>
        <member name="F:TL.UpdateBotInlineSend.id">
            <summary>The unique identifier for the result that was chosen</summary>
        </member>
        <member name="F:TL.UpdateBotInlineSend.msg_id">
            <summary>Identifier of the sent inline message. Available only if there is an inline keyboard attached to the message. Will be also received in callback queries and can be used to edit the message.</summary>
        </member>
        <member name="F:TL.UpdateBotInlineSend.Flags.has_geo">
            <summary>Field <see cref="F:TL.UpdateBotInlineSend.geo"/> has a value</summary>
        </member>
        <member name="F:TL.UpdateBotInlineSend.Flags.has_msg_id">
            <summary>Field <see cref="F:TL.UpdateBotInlineSend.msg_id"/> has a value</summary>
        </member>
        <member name="T:TL.UpdateEditChannelMessage">
            <summary>A message was edited in a <a href="https://corefork.telegram.org/api/channel">channel/supergroup</a>		<para>See <a href="https://corefork.telegram.org/constructor/updateEditChannelMessage"/></para></summary>
        </member>
        <member name="T:TL.UpdateBotCallbackQuery">
            <summary>A callback button was pressed, and the button data was sent to the bot that created the button		<para>See <a href="https://corefork.telegram.org/constructor/updateBotCallbackQuery"/></para></summary>
        </member>
        <member name="F:TL.UpdateBotCallbackQuery.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdateBotCallbackQuery.query_id">
            <summary>Query ID</summary>
        </member>
        <member name="F:TL.UpdateBotCallbackQuery.user_id">
            <summary>ID of the user that pressed the button</summary>
        </member>
        <member name="F:TL.UpdateBotCallbackQuery.peer">
            <summary>Chat where the inline keyboard was sent</summary>
        </member>
        <member name="F:TL.UpdateBotCallbackQuery.msg_id">
            <summary>Message ID</summary>
        </member>
        <member name="F:TL.UpdateBotCallbackQuery.chat_instance">
            <summary>Global identifier, uniquely corresponding to the chat to which the message with the callback button was sent. Useful for high scores in games.</summary>
        </member>
        <member name="F:TL.UpdateBotCallbackQuery.data">
            <summary>Callback data</summary>
        </member>
        <member name="F:TL.UpdateBotCallbackQuery.game_short_name">
            <summary>Short name of a Game to be returned, serves as the unique identifier for the game</summary>
        </member>
        <member name="F:TL.UpdateBotCallbackQuery.Flags.has_data">
            <summary>Field <see cref="F:TL.UpdateBotCallbackQuery.data"/> has a value</summary>
        </member>
        <member name="F:TL.UpdateBotCallbackQuery.Flags.has_game_short_name">
            <summary>Field <see cref="F:TL.UpdateBotCallbackQuery.game_short_name"/> has a value</summary>
        </member>
        <member name="T:TL.UpdateEditMessage">
            <summary>A message was edited		<para>See <a href="https://corefork.telegram.org/constructor/updateEditMessage"/></para></summary>
        </member>
        <member name="F:TL.UpdateEditMessage.message">
            <summary>The new edited message</summary>
        </member>
        <member name="F:TL.UpdateEditMessage.pts">
            <summary><a href="https://corefork.telegram.org/api/updates">PTS</a></summary>
        </member>
        <member name="F:TL.UpdateEditMessage.pts_count">
            <summary><a href="https://corefork.telegram.org/api/updates">PTS count</a></summary>
        </member>
        <member name="T:TL.UpdateInlineBotCallbackQuery">
            <summary>This notification is received by bots when a button is pressed		<para>See <a href="https://corefork.telegram.org/constructor/updateInlineBotCallbackQuery"/></para></summary>
        </member>
        <member name="F:TL.UpdateInlineBotCallbackQuery.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdateInlineBotCallbackQuery.query_id">
            <summary>Query ID</summary>
        </member>
        <member name="F:TL.UpdateInlineBotCallbackQuery.user_id">
            <summary>ID of the user that pressed the button</summary>
        </member>
        <member name="F:TL.UpdateInlineBotCallbackQuery.msg_id">
            <summary>ID of the inline message with the button</summary>
        </member>
        <member name="F:TL.UpdateInlineBotCallbackQuery.chat_instance">
            <summary>Global identifier, uniquely corresponding to the chat to which the message with the callback button was sent. Useful for high scores in games.</summary>
        </member>
        <member name="F:TL.UpdateInlineBotCallbackQuery.data">
            <summary>Data associated with the callback button. Be aware that a bad client can send arbitrary data in this field.</summary>
        </member>
        <member name="F:TL.UpdateInlineBotCallbackQuery.game_short_name">
            <summary>Short name of a Game to be returned, serves as the unique identifier for the game</summary>
        </member>
        <member name="F:TL.UpdateInlineBotCallbackQuery.Flags.has_data">
            <summary>Field <see cref="F:TL.UpdateInlineBotCallbackQuery.data"/> has a value</summary>
        </member>
        <member name="F:TL.UpdateInlineBotCallbackQuery.Flags.has_game_short_name">
            <summary>Field <see cref="F:TL.UpdateInlineBotCallbackQuery.game_short_name"/> has a value</summary>
        </member>
        <member name="T:TL.UpdateReadChannelOutbox">
            <summary>Outgoing messages in a <a href="https://corefork.telegram.org/api/channel">channel/supergroup</a> were read		<para>See <a href="https://corefork.telegram.org/constructor/updateReadChannelOutbox"/></para></summary>
        </member>
        <member name="F:TL.UpdateReadChannelOutbox.channel_id">
            <summary>Channel/supergroup ID</summary>
        </member>
        <member name="F:TL.UpdateReadChannelOutbox.max_id">
            <summary>Position up to which all outgoing messages are read.</summary>
        </member>
        <member name="T:TL.UpdateDraftMessage">
            <summary>Notifies a change of a message <a href="https://corefork.telegram.org/api/drafts">draft</a>.		<para>See <a href="https://corefork.telegram.org/constructor/updateDraftMessage"/></para></summary>
        </member>
        <member name="F:TL.UpdateDraftMessage.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdateDraftMessage.peer">
            <summary>The peer to which the draft is associated</summary>
        </member>
        <member name="F:TL.UpdateDraftMessage.top_msg_id">
            <summary>ID of the <a href="https://corefork.telegram.org/api/forum#forum-topics">forum topic</a> to which the draft is associated</summary>
        </member>
        <member name="F:TL.UpdateDraftMessage.draft">
            <summary>The draft</summary>
        </member>
        <member name="F:TL.UpdateDraftMessage.Flags.has_top_msg_id">
            <summary>Field <see cref="F:TL.UpdateDraftMessage.top_msg_id"/> has a value</summary>
        </member>
        <member name="T:TL.UpdateReadFeaturedStickers">
            <summary>Some featured stickers were marked as read		<para>See <a href="https://corefork.telegram.org/constructor/updateReadFeaturedStickers"/></para></summary>
        </member>
        <member name="T:TL.UpdateRecentStickers">
            <summary>The recent sticker list was updated		<para>See <a href="https://corefork.telegram.org/constructor/updateRecentStickers"/></para></summary>
        </member>
        <member name="T:TL.UpdateConfig">
            <summary>The server-side configuration has changed; the client should re-fetch the config using <see cref="M:TL.SchemaExtensions.Help_GetConfig(WTelegram.Client)">Help_GetConfig</see>		<para>See <a href="https://corefork.telegram.org/constructor/updateConfig"/></para></summary>
        </member>
        <member name="T:TL.UpdatePtsChanged">
            <summary><a href="https://corefork.telegram.org/api/updates">Common message box sequence PTS</a> has changed, <a href="https://corefork.telegram.org/api/updates#fetching-state">state has to be refetched using updates.getState</a>		<para>See <a href="https://corefork.telegram.org/constructor/updatePtsChanged"/></para></summary>
        </member>
        <member name="T:TL.UpdateChannelWebPage">
            <summary>A webpage preview of a link in a <a href="https://corefork.telegram.org/api/channel">channel/supergroup</a> message was generated		<para>See <a href="https://corefork.telegram.org/constructor/updateChannelWebPage"/></para></summary>
        </member>
        <member name="F:TL.UpdateChannelWebPage.channel_id">
            <summary><a href="https://corefork.telegram.org/api/channel">Channel/supergroup</a> ID</summary>
        </member>
        <member name="T:TL.UpdateDialogPinned">
            <summary>A dialog was pinned/unpinned		<para>See <a href="https://corefork.telegram.org/constructor/updateDialogPinned"/></para></summary>
        </member>
        <member name="F:TL.UpdateDialogPinned.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdateDialogPinned.folder_id">
            <summary><a href="https://corefork.telegram.org/api/folders#peer-folders">Peer folder ID, for more info click here</a></summary>
        </member>
        <member name="F:TL.UpdateDialogPinned.peer">
            <summary>The dialog</summary>
        </member>
        <member name="F:TL.UpdateDialogPinned.Flags.pinned">
            <summary>Whether the dialog was pinned</summary>
        </member>
        <member name="F:TL.UpdateDialogPinned.Flags.has_folder_id">
            <summary>Field <see cref="F:TL.UpdateDialogPinned.folder_id"/> has a value</summary>
        </member>
        <member name="T:TL.UpdatePinnedDialogs">
            <summary>Pinned dialogs were updated		<para>See <a href="https://corefork.telegram.org/constructor/updatePinnedDialogs"/></para></summary>
        </member>
        <member name="F:TL.UpdatePinnedDialogs.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdatePinnedDialogs.folder_id">
            <summary><a href="https://corefork.telegram.org/api/folders#peer-folders">Peer folder ID, for more info click here</a></summary>
        </member>
        <member name="F:TL.UpdatePinnedDialogs.order">
            <summary>New order of pinned dialogs</summary>
        </member>
        <member name="F:TL.UpdatePinnedDialogs.Flags.has_order">
            <summary>Field <see cref="F:TL.UpdatePinnedDialogs.order"/> has a value</summary>
        </member>
        <member name="F:TL.UpdatePinnedDialogs.Flags.has_folder_id">
            <summary>Field <see cref="F:TL.UpdatePinnedDialogs.folder_id"/> has a value</summary>
        </member>
        <member name="T:TL.UpdateBotWebhookJSON">
            <summary>A new incoming event; for bots only		<para>See <a href="https://corefork.telegram.org/constructor/updateBotWebhookJSON"/></para></summary>
        </member>
        <member name="F:TL.UpdateBotWebhookJSON.data">
            <summary>The event</summary>
        </member>
        <member name="T:TL.UpdateBotWebhookJSONQuery">
            <summary>A new incoming query; for bots only		<para>See <a href="https://corefork.telegram.org/constructor/updateBotWebhookJSONQuery"/></para></summary>
        </member>
        <member name="F:TL.UpdateBotWebhookJSONQuery.query_id">
            <summary>Query identifier</summary>
        </member>
        <member name="F:TL.UpdateBotWebhookJSONQuery.data">
            <summary>Query data</summary>
        </member>
        <member name="F:TL.UpdateBotWebhookJSONQuery.timeout">
            <summary>Query timeout</summary>
        </member>
        <member name="T:TL.UpdateBotShippingQuery">
            <summary>This object contains information about an incoming shipping query.		<para>See <a href="https://corefork.telegram.org/constructor/updateBotShippingQuery"/></para></summary>
        </member>
        <member name="F:TL.UpdateBotShippingQuery.query_id">
            <summary>Unique query identifier</summary>
        </member>
        <member name="F:TL.UpdateBotShippingQuery.user_id">
            <summary>User who sent the query</summary>
        </member>
        <member name="F:TL.UpdateBotShippingQuery.payload">
            <summary>Bot specified invoice payload</summary>
        </member>
        <member name="F:TL.UpdateBotShippingQuery.shipping_address">
            <summary>User specified shipping address</summary>
        </member>
        <member name="T:TL.UpdateBotPrecheckoutQuery">
            <summary>This object contains information about an incoming pre-checkout query.		<para>See <a href="https://corefork.telegram.org/constructor/updateBotPrecheckoutQuery"/></para></summary>
        </member>
        <member name="F:TL.UpdateBotPrecheckoutQuery.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdateBotPrecheckoutQuery.query_id">
            <summary>Unique query identifier</summary>
        </member>
        <member name="F:TL.UpdateBotPrecheckoutQuery.user_id">
            <summary>User who sent the query</summary>
        </member>
        <member name="F:TL.UpdateBotPrecheckoutQuery.payload">
            <summary>Bot specified invoice payload</summary>
        </member>
        <member name="F:TL.UpdateBotPrecheckoutQuery.info">
            <summary>Order info provided by the user</summary>
        </member>
        <member name="F:TL.UpdateBotPrecheckoutQuery.shipping_option_id">
            <summary>Identifier of the shipping option chosen by the user</summary>
        </member>
        <member name="F:TL.UpdateBotPrecheckoutQuery.currency">
            <summary>Three-letter ISO 4217 <a href="https://corefork.telegram.org/bots/payments#supported-currencies">currency</a> code</summary>
        </member>
        <member name="F:TL.UpdateBotPrecheckoutQuery.total_amount">
            <summary>Total amount in the smallest units of the currency (integer, not float/double). For example, for a price of <c>US$ 1.45</c> pass <c>amount = 145</c>. See the exp parameter in <a href="https://corefork.telegram.org/bots/payments/currencies.json">currencies.json</a>, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies).</summary>
        </member>
        <member name="F:TL.UpdateBotPrecheckoutQuery.Flags.has_info">
            <summary>Field <see cref="F:TL.UpdateBotPrecheckoutQuery.info"/> has a value</summary>
        </member>
        <member name="F:TL.UpdateBotPrecheckoutQuery.Flags.has_shipping_option_id">
            <summary>Field <see cref="F:TL.UpdateBotPrecheckoutQuery.shipping_option_id"/> has a value</summary>
        </member>
        <member name="T:TL.UpdatePhoneCall">
            <summary>An incoming phone call		<para>See <a href="https://corefork.telegram.org/constructor/updatePhoneCall"/></para></summary>
        </member>
        <member name="F:TL.UpdatePhoneCall.phone_call">
            <summary>Phone call</summary>
        </member>
        <member name="T:TL.UpdateLangPackTooLong">
            <summary>A language pack has changed, the client should manually fetch the changed strings using <see cref="M:TL.SchemaExtensions.Langpack_GetDifference(WTelegram.Client,System.String,System.String,System.Int32)">Langpack_GetDifference</see>		<para>See <a href="https://corefork.telegram.org/constructor/updateLangPackTooLong"/></para></summary>
        </member>
        <member name="F:TL.UpdateLangPackTooLong.lang_code">
            <summary>Language code</summary>
        </member>
        <member name="T:TL.UpdateLangPack">
            <summary>Language pack updated		<para>See <a href="https://corefork.telegram.org/constructor/updateLangPack"/></para></summary>
        </member>
        <member name="F:TL.UpdateLangPack.difference">
            <summary>Changed strings</summary>
        </member>
        <member name="T:TL.UpdateFavedStickers">
            <summary>The list of favorited stickers was changed, the client should call <see cref="M:TL.SchemaExtensions.Messages_GetFavedStickers(WTelegram.Client,System.Int64)">Messages_GetFavedStickers</see> to refetch the new list		<para>See <a href="https://corefork.telegram.org/constructor/updateFavedStickers"/></para></summary>
        </member>
        <member name="T:TL.UpdateChannelReadMessagesContents">
            <summary>The specified <a href="https://corefork.telegram.org/api/channel">channel/supergroup</a> messages were read		<para>See <a href="https://corefork.telegram.org/constructor/updateChannelReadMessagesContents"/></para></summary>
        </member>
        <member name="F:TL.UpdateChannelReadMessagesContents.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdateChannelReadMessagesContents.channel_id">
            <summary><a href="https://corefork.telegram.org/api/channel">Channel/supergroup</a> ID</summary>
        </member>
        <member name="F:TL.UpdateChannelReadMessagesContents.top_msg_id">
            <summary><a href="https://corefork.telegram.org/api/forum#forum-topics">Forum topic ID</a>.</summary>
        </member>
        <member name="F:TL.UpdateChannelReadMessagesContents.messages">
            <summary>IDs of messages that were read</summary>
        </member>
        <member name="F:TL.UpdateChannelReadMessagesContents.Flags.has_top_msg_id">
            <summary>Field <see cref="F:TL.UpdateChannelReadMessagesContents.top_msg_id"/> has a value</summary>
        </member>
        <member name="T:TL.UpdateContactsReset">
            <summary>All contacts were deleted		<para>See <a href="https://corefork.telegram.org/constructor/updateContactsReset"/></para></summary>
        </member>
        <member name="T:TL.UpdateChannelAvailableMessages">
            <summary>The history of a <a href="https://corefork.telegram.org/api/channel">channel/supergroup</a> was hidden.		<para>See <a href="https://corefork.telegram.org/constructor/updateChannelAvailableMessages"/></para></summary>
        </member>
        <member name="F:TL.UpdateChannelAvailableMessages.available_min_id">
            <summary>Identifier of a maximum unavailable message in a channel due to hidden history.</summary>
        </member>
        <member name="T:TL.UpdateDialogUnreadMark">
            <summary>The manual unread mark of a chat was changed		<para>See <a href="https://corefork.telegram.org/constructor/updateDialogUnreadMark"/></para></summary>
        </member>
        <member name="F:TL.UpdateDialogUnreadMark.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdateDialogUnreadMark.peer">
            <summary>The dialog</summary>
        </member>
        <member name="F:TL.UpdateDialogUnreadMark.Flags.unread">
            <summary>Was the chat marked or unmarked as read</summary>
        </member>
        <member name="T:TL.UpdateMessagePoll">
            <summary>The results of a poll have changed		<para>See <a href="https://corefork.telegram.org/constructor/updateMessagePoll"/></para></summary>
        </member>
        <member name="F:TL.UpdateMessagePoll.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdateMessagePoll.poll_id">
            <summary>Poll ID</summary>
        </member>
        <member name="F:TL.UpdateMessagePoll.poll">
            <summary>If the server knows the client hasn't cached this poll yet, the poll itself</summary>
        </member>
        <member name="F:TL.UpdateMessagePoll.results">
            <summary>New poll results</summary>
        </member>
        <member name="F:TL.UpdateMessagePoll.Flags.has_poll">
            <summary>Field <see cref="F:TL.UpdateMessagePoll.poll"/> has a value</summary>
        </member>
        <member name="T:TL.UpdateChatDefaultBannedRights">
            <summary>Default banned rights in a <a href="https://corefork.telegram.org/api/channel">normal chat</a> were updated		<para>See <a href="https://corefork.telegram.org/constructor/updateChatDefaultBannedRights"/></para></summary>
        </member>
        <member name="F:TL.UpdateChatDefaultBannedRights.peer">
            <summary>The chat</summary>
        </member>
        <member name="F:TL.UpdateChatDefaultBannedRights.default_banned_rights">
            <summary>New default banned rights</summary>
        </member>
        <member name="F:TL.UpdateChatDefaultBannedRights.version">
            <summary>Version</summary>
        </member>
        <member name="T:TL.UpdateFolderPeers">
            <summary>The peer list of a <a href="https://corefork.telegram.org/api/folders#peer-folders">peer folder</a> was updated		<para>See <a href="https://corefork.telegram.org/constructor/updateFolderPeers"/></para></summary>
        </member>
        <member name="F:TL.UpdateFolderPeers.folder_peers">
            <summary>New peer list</summary>
        </member>
        <member name="F:TL.UpdateFolderPeers.pts">
            <summary><a href="https://corefork.telegram.org/api/updates">Event count after generation</a></summary>
        </member>
        <member name="F:TL.UpdateFolderPeers.pts_count">
            <summary><a href="https://corefork.telegram.org/api/updates">Number of events that were generated</a></summary>
        </member>
        <member name="T:TL.UpdatePeerSettings">
            <summary>Settings of a certain peer have changed		<para>See <a href="https://corefork.telegram.org/constructor/updatePeerSettings"/></para></summary>
        </member>
        <member name="F:TL.UpdatePeerSettings.peer">
            <summary>The peer</summary>
        </member>
        <member name="F:TL.UpdatePeerSettings.settings">
            <summary>Associated peer settings</summary>
        </member>
        <member name="T:TL.UpdatePeerLocated">
            <summary>List of peers near you was updated		<para>See <a href="https://corefork.telegram.org/constructor/updatePeerLocated"/></para></summary>
        </member>
        <member name="F:TL.UpdatePeerLocated.peers">
            <summary>Geolocated peer list update</summary>
        </member>
        <member name="T:TL.UpdateNewScheduledMessage">
            <summary>A message was added to the <a href="https://corefork.telegram.org/api/scheduled-messages">schedule queue of a chat</a>		<para>See <a href="https://corefork.telegram.org/constructor/updateNewScheduledMessage"/></para></summary>
        </member>
        <member name="F:TL.UpdateNewScheduledMessage.message">
            <summary>Message</summary>
        </member>
        <member name="T:TL.UpdateDeleteScheduledMessages">
            <summary>Some <a href="https://corefork.telegram.org/api/scheduled-messages">scheduled messages</a> were deleted from the schedule queue of a chat		<para>See <a href="https://corefork.telegram.org/constructor/updateDeleteScheduledMessages"/></para></summary>
        </member>
        <member name="F:TL.UpdateDeleteScheduledMessages.peer">
            <summary>Peer</summary>
        </member>
        <member name="F:TL.UpdateDeleteScheduledMessages.messages">
            <summary>Deleted scheduled messages</summary>
        </member>
        <member name="T:TL.UpdateTheme">
            <summary>A cloud theme was updated		<para>See <a href="https://corefork.telegram.org/constructor/updateTheme"/></para></summary>
        </member>
        <member name="F:TL.UpdateTheme.theme">
            <summary>Theme</summary>
        </member>
        <member name="T:TL.UpdateGeoLiveViewed">
            <summary>Live geoposition message was viewed		<para>See <a href="https://corefork.telegram.org/constructor/updateGeoLiveViewed"/></para></summary>
        </member>
        <member name="F:TL.UpdateGeoLiveViewed.peer">
            <summary>The user that viewed the live geoposition</summary>
        </member>
        <member name="F:TL.UpdateGeoLiveViewed.msg_id">
            <summary>Message ID of geoposition message</summary>
        </member>
        <member name="T:TL.UpdateLoginToken">
            <summary>A login token (for login via QR code) was accepted.		<para>See <a href="https://corefork.telegram.org/constructor/updateLoginToken"/></para></summary>
        </member>
        <member name="T:TL.UpdateMessagePollVote">
            <summary>A specific peer has voted in a poll		<para>See <a href="https://corefork.telegram.org/constructor/updateMessagePollVote"/></para></summary>
        </member>
        <member name="F:TL.UpdateMessagePollVote.poll_id">
            <summary>Poll ID</summary>
        </member>
        <member name="F:TL.UpdateMessagePollVote.peer">
            <summary>The peer that voted in the poll</summary>
        </member>
        <member name="F:TL.UpdateMessagePollVote.options">
            <summary>Chosen option(s)</summary>
        </member>
        <member name="F:TL.UpdateMessagePollVote.qts">
            <summary>New <strong>qts</strong> value, see <a href="https://corefork.telegram.org/api/updates">updates »</a> for more info.</summary>
        </member>
        <member name="T:TL.UpdateDialogFilter">
            <summary>A new <a href="https://corefork.telegram.org/api/folders">folder</a> was added		<para>See <a href="https://corefork.telegram.org/constructor/updateDialogFilter"/></para></summary>
        </member>
        <member name="F:TL.UpdateDialogFilter.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdateDialogFilter.id">
            <summary><a href="https://corefork.telegram.org/api/folders">Folder</a> ID</summary>
        </member>
        <member name="F:TL.UpdateDialogFilter.filter">
            <summary><a href="https://corefork.telegram.org/api/folders">Folder</a> info</summary>
        </member>
        <member name="F:TL.UpdateDialogFilter.Flags.has_filter">
            <summary>Field <see cref="F:TL.UpdateDialogFilter.filter"/> has a value</summary>
        </member>
        <member name="T:TL.UpdateDialogFilterOrder">
            <summary>New <a href="https://corefork.telegram.org/api/folders">folder</a> order		<para>See <a href="https://corefork.telegram.org/constructor/updateDialogFilterOrder"/></para></summary>
        </member>
        <member name="F:TL.UpdateDialogFilterOrder.order">
            <summary>Ordered <a href="https://corefork.telegram.org/api/folders">folder IDs</a></summary>
        </member>
        <member name="T:TL.UpdateDialogFilters">
            <summary>Clients should update <a href="https://corefork.telegram.org/api/folders">folder</a> info		<para>See <a href="https://corefork.telegram.org/constructor/updateDialogFilters"/></para></summary>
        </member>
        <member name="T:TL.UpdatePhoneCallSignalingData">
            <summary>Incoming phone call signaling payload		<para>See <a href="https://corefork.telegram.org/constructor/updatePhoneCallSignalingData"/></para></summary>
        </member>
        <member name="F:TL.UpdatePhoneCallSignalingData.phone_call_id">
            <summary>Phone call ID</summary>
        </member>
        <member name="F:TL.UpdatePhoneCallSignalingData.data">
            <summary>Signaling payload</summary>
        </member>
        <member name="T:TL.UpdateChannelMessageForwards">
            <summary>The forward counter of a message in a channel has changed		<para>See <a href="https://corefork.telegram.org/constructor/updateChannelMessageForwards"/></para></summary>
        </member>
        <member name="F:TL.UpdateChannelMessageForwards.id">
            <summary>ID of the message</summary>
        </member>
        <member name="F:TL.UpdateChannelMessageForwards.forwards">
            <summary>New forward counter</summary>
        </member>
        <member name="T:TL.UpdateReadChannelDiscussionInbox">
            <summary>Incoming comments in a <a href="https://corefork.telegram.org/api/threads">discussion thread</a> were marked as read		<para>See <a href="https://corefork.telegram.org/constructor/updateReadChannelDiscussionInbox"/></para></summary>
        </member>
        <member name="F:TL.UpdateReadChannelDiscussionInbox.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdateReadChannelDiscussionInbox.channel_id">
            <summary><a href="https://corefork.telegram.org/api/channel">Discussion group ID</a></summary>
        </member>
        <member name="F:TL.UpdateReadChannelDiscussionInbox.top_msg_id">
            <summary>ID of the group message that started the <a href="https://corefork.telegram.org/api/threads">thread</a> (message in linked discussion group)</summary>
        </member>
        <member name="F:TL.UpdateReadChannelDiscussionInbox.read_max_id">
            <summary>Message ID of latest read incoming message for this <a href="https://corefork.telegram.org/api/threads">thread</a></summary>
        </member>
        <member name="F:TL.UpdateReadChannelDiscussionInbox.broadcast_id">
            <summary>If set, contains the ID of the <a href="https://corefork.telegram.org/api/channel">channel</a> that contains the post that started the <a href="https://corefork.telegram.org/api/threads">comment thread</a> in the discussion group (<c>channel_id</c>)</summary>
        </member>
        <member name="F:TL.UpdateReadChannelDiscussionInbox.broadcast_post">
            <summary>If set, contains the ID of the channel post that started the <a href="https://corefork.telegram.org/api/threads">comment thread</a></summary>
        </member>
        <member name="F:TL.UpdateReadChannelDiscussionInbox.Flags.has_broadcast_id">
            <summary>Fields <see cref="F:TL.UpdateReadChannelDiscussionInbox.broadcast_id"/> and <see cref="F:TL.UpdateReadChannelDiscussionInbox.broadcast_post"/> have a value</summary>
        </member>
        <member name="T:TL.UpdateReadChannelDiscussionOutbox">
            <summary>Outgoing comments in a <a href="https://corefork.telegram.org/api/threads">discussion thread</a> were marked as read		<para>See <a href="https://corefork.telegram.org/constructor/updateReadChannelDiscussionOutbox"/></para></summary>
        </member>
        <member name="F:TL.UpdateReadChannelDiscussionOutbox.channel_id">
            <summary><a href="https://corefork.telegram.org/api/channel">Supergroup ID</a></summary>
        </member>
        <member name="F:TL.UpdateReadChannelDiscussionOutbox.top_msg_id">
            <summary>ID of the group message that started the <a href="https://corefork.telegram.org/api/threads">thread</a></summary>
        </member>
        <member name="F:TL.UpdateReadChannelDiscussionOutbox.read_max_id">
            <summary>Message ID of latest read outgoing message for this <a href="https://corefork.telegram.org/api/threads">thread</a></summary>
        </member>
        <member name="T:TL.UpdatePeerBlocked">
            <summary>We blocked a peer, see <a href="https://corefork.telegram.org/api/block">here »</a> for more info on blocklists.		<para>See <a href="https://corefork.telegram.org/constructor/updatePeerBlocked"/></para></summary>
        </member>
        <member name="F:TL.UpdatePeerBlocked.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdatePeerBlocked.peer_id">
            <summary>The (un)blocked peer</summary>
        </member>
        <member name="F:TL.UpdatePeerBlocked.Flags.blocked">
            <summary>Whether the peer was blocked or unblocked</summary>
        </member>
        <member name="F:TL.UpdatePeerBlocked.Flags.blocked_my_stories_from">
            <summary>Whether the peer was added/removed to/from the story blocklist; if not set, this update affects the main blocklist, see <a href="https://corefork.telegram.org/api/block">here »</a> for more info.</summary>
        </member>
        <member name="T:TL.UpdateChannelUserTyping">
            <summary>A user is typing in a <a href="https://corefork.telegram.org/api/channel">supergroup, channel</a> or <a href="https://corefork.telegram.org/api/threads">message thread</a>		<para>See <a href="https://corefork.telegram.org/constructor/updateChannelUserTyping"/></para></summary>
        </member>
        <member name="F:TL.UpdateChannelUserTyping.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdateChannelUserTyping.channel_id">
            <summary>Channel ID</summary>
        </member>
        <member name="F:TL.UpdateChannelUserTyping.top_msg_id">
            <summary><a href="https://corefork.telegram.org/api/threads">Thread ID</a></summary>
        </member>
        <member name="F:TL.UpdateChannelUserTyping.from_id">
            <summary>The peer that is typing</summary>
        </member>
        <member name="F:TL.UpdateChannelUserTyping.action">
            <summary>Whether the user is typing, sending a media or doing something else</summary>
        </member>
        <member name="F:TL.UpdateChannelUserTyping.Flags.has_top_msg_id">
            <summary>Field <see cref="F:TL.UpdateChannelUserTyping.top_msg_id"/> has a value</summary>
        </member>
        <member name="T:TL.UpdatePinnedMessages">
            <summary>Some messages were pinned in a chat		<para>See <a href="https://corefork.telegram.org/constructor/updatePinnedMessages"/></para></summary>
        </member>
        <member name="F:TL.UpdatePinnedMessages.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdatePinnedMessages.peer">
            <summary>Peer</summary>
        </member>
        <member name="F:TL.UpdatePinnedMessages.messages">
            <summary>Message IDs</summary>
        </member>
        <member name="F:TL.UpdatePinnedMessages.pts">
            <summary><a href="https://corefork.telegram.org/api/updates">Event count after generation</a></summary>
        </member>
        <member name="F:TL.UpdatePinnedMessages.pts_count">
            <summary><a href="https://corefork.telegram.org/api/updates">Number of events that were generated</a></summary>
        </member>
        <member name="F:TL.UpdatePinnedMessages.Flags.pinned">
            <summary>Whether the messages were pinned or unpinned</summary>
        </member>
        <member name="T:TL.UpdatePinnedChannelMessages">
            <summary>Messages were pinned/unpinned in a <a href="https://corefork.telegram.org/api/channel">channel/supergroup</a>		<para>See <a href="https://corefork.telegram.org/constructor/updatePinnedChannelMessages"/></para></summary>
        </member>
        <member name="F:TL.UpdatePinnedChannelMessages.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdatePinnedChannelMessages.channel_id">
            <summary>Channel ID</summary>
        </member>
        <member name="F:TL.UpdatePinnedChannelMessages.messages">
            <summary>Messages</summary>
        </member>
        <member name="F:TL.UpdatePinnedChannelMessages.pts">
            <summary><a href="https://corefork.telegram.org/api/updates">Event count after generation</a></summary>
        </member>
        <member name="F:TL.UpdatePinnedChannelMessages.pts_count">
            <summary><a href="https://corefork.telegram.org/api/updates">Number of events that were generated</a></summary>
        </member>
        <member name="F:TL.UpdatePinnedChannelMessages.Flags.pinned">
            <summary>Whether the messages were pinned or unpinned</summary>
        </member>
        <member name="T:TL.UpdateChat">
            <summary>A new chat is available		<para>See <a href="https://corefork.telegram.org/constructor/updateChat"/></para></summary>
        </member>
        <member name="F:TL.UpdateChat.chat_id">
            <summary>Chat ID</summary>
        </member>
        <member name="T:TL.UpdateGroupCallParticipants">
            <summary>The participant list of a certain group call has changed		<para>See <a href="https://corefork.telegram.org/constructor/updateGroupCallParticipants"/></para></summary>
        </member>
        <member name="F:TL.UpdateGroupCallParticipants.call">
            <summary>Group call</summary>
        </member>
        <member name="F:TL.UpdateGroupCallParticipants.participants">
            <summary>New participant list</summary>
        </member>
        <member name="F:TL.UpdateGroupCallParticipants.version">
            <summary>Version</summary>
        </member>
        <member name="T:TL.UpdateGroupCall">
            <summary>A new groupcall was started		<para>See <a href="https://corefork.telegram.org/constructor/updateGroupCall"/></para></summary>
        </member>
        <member name="F:TL.UpdateGroupCall.chat_id">
            <summary>The <a href="https://corefork.telegram.org/api/channel">channel/supergroup</a> where this group call or livestream takes place</summary>
        </member>
        <member name="F:TL.UpdateGroupCall.call">
            <summary>Info about the group call or livestream</summary>
        </member>
        <member name="T:TL.UpdatePeerHistoryTTL">
            <summary>The Time-To-Live for messages sent by the current user in a specific chat has changed		<para>See <a href="https://corefork.telegram.org/constructor/updatePeerHistoryTTL"/></para></summary>
        </member>
        <member name="F:TL.UpdatePeerHistoryTTL.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdatePeerHistoryTTL.peer">
            <summary>The chat</summary>
        </member>
        <member name="F:TL.UpdatePeerHistoryTTL.ttl_period">
            <summary>The new Time-To-Live</summary>
        </member>
        <member name="F:TL.UpdatePeerHistoryTTL.Flags.has_ttl_period">
            <summary>Field <see cref="F:TL.UpdatePeerHistoryTTL.ttl_period"/> has a value</summary>
        </member>
        <member name="T:TL.UpdateChatParticipant">
            <summary>A user has joined or left a specific chat		<para>See <a href="https://corefork.telegram.org/constructor/updateChatParticipant"/></para></summary>
        </member>
        <member name="F:TL.UpdateChatParticipant.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdateChatParticipant.chat_id">
            <summary><a href="https://corefork.telegram.org/api/channel">Chat</a> ID</summary>
        </member>
        <member name="F:TL.UpdateChatParticipant.date">
            <summary>When did this event occur</summary>
        </member>
        <member name="F:TL.UpdateChatParticipant.actor_id">
            <summary>User that triggered the change (inviter, admin that kicked the user, or the even the <strong>user_id</strong> itself)</summary>
        </member>
        <member name="F:TL.UpdateChatParticipant.user_id">
            <summary>User that was affected by the change</summary>
        </member>
        <member name="F:TL.UpdateChatParticipant.prev_participant">
            <summary>Previous participant info (empty if this participant just joined)</summary>
        </member>
        <member name="F:TL.UpdateChatParticipant.new_participant">
            <summary>New participant info (empty if this participant just left)</summary>
        </member>
        <member name="F:TL.UpdateChatParticipant.invite">
            <summary>The invite that was used to join the group</summary>
        </member>
        <member name="F:TL.UpdateChatParticipant.qts">
            <summary>New <strong>qts</strong> value, see <a href="https://corefork.telegram.org/api/updates">updates »</a> for more info.</summary>
        </member>
        <member name="F:TL.UpdateChatParticipant.Flags.has_prev_participant">
            <summary>Field <see cref="F:TL.UpdateChatParticipant.prev_participant"/> has a value</summary>
        </member>
        <member name="F:TL.UpdateChatParticipant.Flags.has_new_participant">
            <summary>Field <see cref="F:TL.UpdateChatParticipant.new_participant"/> has a value</summary>
        </member>
        <member name="F:TL.UpdateChatParticipant.Flags.has_invite">
            <summary>Field <see cref="F:TL.UpdateChatParticipant.invite"/> has a value</summary>
        </member>
        <member name="T:TL.UpdateChannelParticipant">
            <summary>A participant has left, joined, was banned or admined in a <a href="https://corefork.telegram.org/api/channel">channel or supergroup</a>.		<para>See <a href="https://corefork.telegram.org/constructor/updateChannelParticipant"/></para></summary>
        </member>
        <member name="F:TL.UpdateChannelParticipant.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdateChannelParticipant.channel_id">
            <summary>Channel ID</summary>
        </member>
        <member name="F:TL.UpdateChannelParticipant.date">
            <summary>Date of the event</summary>
        </member>
        <member name="F:TL.UpdateChannelParticipant.actor_id">
            <summary>User that triggered the change (inviter, admin that kicked the user, or the even the <strong>user_id</strong> itself)</summary>
        </member>
        <member name="F:TL.UpdateChannelParticipant.user_id">
            <summary>User that was affected by the change</summary>
        </member>
        <member name="F:TL.UpdateChannelParticipant.prev_participant">
            <summary>Previous participant status</summary>
        </member>
        <member name="F:TL.UpdateChannelParticipant.new_participant">
            <summary>New participant status</summary>
        </member>
        <member name="F:TL.UpdateChannelParticipant.invite">
            <summary>Chat invite used to join the <a href="https://corefork.telegram.org/api/channel">channel/supergroup</a></summary>
        </member>
        <member name="F:TL.UpdateChannelParticipant.qts">
            <summary>New <strong>qts</strong> value, see <a href="https://corefork.telegram.org/api/updates">updates »</a> for more info.</summary>
        </member>
        <member name="F:TL.UpdateChannelParticipant.Flags.has_prev_participant">
            <summary>Field <see cref="F:TL.UpdateChannelParticipant.prev_participant"/> has a value</summary>
        </member>
        <member name="F:TL.UpdateChannelParticipant.Flags.has_new_participant">
            <summary>Field <see cref="F:TL.UpdateChannelParticipant.new_participant"/> has a value</summary>
        </member>
        <member name="F:TL.UpdateChannelParticipant.Flags.has_invite">
            <summary>Field <see cref="F:TL.UpdateChannelParticipant.invite"/> has a value</summary>
        </member>
        <member name="F:TL.UpdateChannelParticipant.Flags.via_chatlist">
            <summary>Whether the participant joined using a <a href="https://corefork.telegram.org/api/links#chat-folder-links">chat folder deep link »</a>.</summary>
        </member>
        <member name="T:TL.UpdateBotStopped">
            <summary>A bot was stopped or re-started.		<para>See <a href="https://corefork.telegram.org/constructor/updateBotStopped"/></para></summary>
        </member>
        <member name="F:TL.UpdateBotStopped.user_id">
            <summary>The user ID</summary>
        </member>
        <member name="F:TL.UpdateBotStopped.date">
            <summary>When did this action occur</summary>
        </member>
        <member name="F:TL.UpdateBotStopped.stopped">
            <summary>Whether the bot was stopped or started</summary>
        </member>
        <member name="F:TL.UpdateBotStopped.qts">
            <summary>New <strong>qts</strong> value, see <a href="https://corefork.telegram.org/api/updates">updates »</a> for more info.</summary>
        </member>
        <member name="T:TL.UpdateGroupCallConnection">
            <summary>New WebRTC parameters		<para>See <a href="https://corefork.telegram.org/constructor/updateGroupCallConnection"/></para></summary>
        </member>
        <member name="F:TL.UpdateGroupCallConnection.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdateGroupCallConnection.params_">
            <summary>WebRTC parameters</summary>
        </member>
        <member name="F:TL.UpdateGroupCallConnection.Flags.presentation">
            <summary>Are these parameters related to the screen capture session currently in progress?</summary>
        </member>
        <member name="T:TL.UpdateBotCommands">
            <summary>The <a href="https://corefork.telegram.org/api/bots/commands">command set</a> of a certain bot in a certain chat has changed.		<para>See <a href="https://corefork.telegram.org/constructor/updateBotCommands"/></para></summary>
        </member>
        <member name="F:TL.UpdateBotCommands.peer">
            <summary>The affected chat</summary>
        </member>
        <member name="F:TL.UpdateBotCommands.bot_id">
            <summary>ID of the bot that changed its command set</summary>
        </member>
        <member name="F:TL.UpdateBotCommands.commands">
            <summary>New bot commands</summary>
        </member>
        <member name="T:TL.UpdatePendingJoinRequests">
            <summary>Someone has requested to join a chat or channel		<para>See <a href="https://corefork.telegram.org/constructor/updatePendingJoinRequests"/></para></summary>
        </member>
        <member name="F:TL.UpdatePendingJoinRequests.peer">
            <summary>Chat or channel</summary>
        </member>
        <member name="F:TL.UpdatePendingJoinRequests.requests_pending">
            <summary>Number of pending <a href="https://corefork.telegram.org/api/invites#join-requests">join requests »</a> for the chat or channel</summary>
        </member>
        <member name="F:TL.UpdatePendingJoinRequests.recent_requesters">
            <summary>IDs of users that have recently requested to join</summary>
        </member>
        <member name="T:TL.UpdateBotChatInviteRequester">
            <summary>Someone has requested to join a chat or channel (bots only, users will receive an <see cref="T:TL.UpdatePendingJoinRequests"/>, instead)		<para>See <a href="https://corefork.telegram.org/constructor/updateBotChatInviteRequester"/></para></summary>
        </member>
        <member name="F:TL.UpdateBotChatInviteRequester.peer">
            <summary>The chat or channel in question</summary>
        </member>
        <member name="F:TL.UpdateBotChatInviteRequester.date">
            <summary>When was the <a href="https://corefork.telegram.org/api/invites#join-requests">join request »</a> made</summary>
        </member>
        <member name="F:TL.UpdateBotChatInviteRequester.user_id">
            <summary>The user ID that is asking to join the chat or channel</summary>
        </member>
        <member name="F:TL.UpdateBotChatInviteRequester.about">
            <summary>Bio of the user</summary>
        </member>
        <member name="F:TL.UpdateBotChatInviteRequester.invite">
            <summary>Chat invite link that was used by the user to send the <a href="https://corefork.telegram.org/api/invites#join-requests">join request »</a></summary>
        </member>
        <member name="F:TL.UpdateBotChatInviteRequester.qts">
            <summary><a href="https://corefork.telegram.org/api/updates">QTS</a> event sequence identifier</summary>
        </member>
        <member name="T:TL.UpdateMessageReactions">
            <summary>New <a href="https://corefork.telegram.org/api/reactions">message reactions »</a> are available		<para>See <a href="https://corefork.telegram.org/constructor/updateMessageReactions"/></para></summary>
        </member>
        <member name="F:TL.UpdateMessageReactions.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdateMessageReactions.peer">
            <summary>Peer</summary>
        </member>
        <member name="F:TL.UpdateMessageReactions.msg_id">
            <summary>Message ID</summary>
        </member>
        <member name="F:TL.UpdateMessageReactions.top_msg_id">
            <summary><a href="https://corefork.telegram.org/api/forum#forum-topics">Forum topic ID</a></summary>
        </member>
        <member name="F:TL.UpdateMessageReactions.reactions">
            <summary>Reactions</summary>
        </member>
        <member name="F:TL.UpdateMessageReactions.Flags.has_top_msg_id">
            <summary>Field <see cref="F:TL.UpdateMessageReactions.top_msg_id"/> has a value</summary>
        </member>
        <member name="T:TL.UpdateAttachMenuBots">
            <summary>The list of installed <a href="https://corefork.telegram.org/api/bots/attach">attachment menu entries »</a> has changed, use <see cref="M:TL.SchemaExtensions.Messages_GetAttachMenuBots(WTelegram.Client,System.Int64)">Messages_GetAttachMenuBots</see> to fetch the updated list.		<para>See <a href="https://corefork.telegram.org/constructor/updateAttachMenuBots"/></para></summary>
        </member>
        <member name="T:TL.UpdateWebViewResultSent">
            <summary>Indicates to a bot that a webview was closed and an inline message was sent on behalf of the user using <see cref="M:TL.SchemaExtensions.Messages_SendWebViewResultMessage(WTelegram.Client,System.String,TL.InputBotInlineResultBase)">Messages_SendWebViewResultMessage</see>		<para>See <a href="https://corefork.telegram.org/constructor/updateWebViewResultSent"/></para></summary>
        </member>
        <member name="F:TL.UpdateWebViewResultSent.query_id">
            <summary>Web app interaction ID</summary>
        </member>
        <member name="T:TL.UpdateBotMenuButton">
            <summary>The menu button behavior for the specified bot has changed		<para>See <a href="https://corefork.telegram.org/constructor/updateBotMenuButton"/></para></summary>
        </member>
        <member name="F:TL.UpdateBotMenuButton.bot_id">
            <summary>Bot ID</summary>
        </member>
        <member name="F:TL.UpdateBotMenuButton.button">
            <summary>New menu button</summary>
        </member>
        <member name="T:TL.UpdateSavedRingtones">
            <summary>The list of saved notification sounds has changed, use <see cref="M:TL.SchemaExtensions.Account_GetSavedRingtones(WTelegram.Client,System.Int64)">Account_GetSavedRingtones</see> to fetch the new list.		<para>See <a href="https://corefork.telegram.org/constructor/updateSavedRingtones"/></para></summary>
        </member>
        <member name="T:TL.UpdateTranscribedAudio">
            <summary>A pending <a href="https://corefork.telegram.org/api/transcribe">voice message transcription »</a> initiated with <see cref="M:TL.SchemaExtensions.Messages_TranscribeAudio(WTelegram.Client,TL.InputPeer,System.Int32)">Messages_TranscribeAudio</see> was updated.		<para>See <a href="https://corefork.telegram.org/constructor/updateTranscribedAudio"/></para></summary>
        </member>
        <member name="F:TL.UpdateTranscribedAudio.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdateTranscribedAudio.peer">
            <summary>Peer of the transcribed message</summary>
        </member>
        <member name="F:TL.UpdateTranscribedAudio.msg_id">
            <summary>Transcribed message ID</summary>
        </member>
        <member name="F:TL.UpdateTranscribedAudio.transcription_id">
            <summary>Transcription ID</summary>
        </member>
        <member name="F:TL.UpdateTranscribedAudio.text">
            <summary>Transcribed text</summary>
        </member>
        <member name="F:TL.UpdateTranscribedAudio.Flags.pending">
            <summary>Whether this transcription is still pending and further <see cref="T:TL.UpdateTranscribedAudio"/> about it will be sent in the future.</summary>
        </member>
        <member name="T:TL.UpdateReadFeaturedEmojiStickers">
            <summary>Some featured <a href="https://corefork.telegram.org/api/custom-emoji">custom emoji stickers</a> were marked as read		<para>See <a href="https://corefork.telegram.org/constructor/updateReadFeaturedEmojiStickers"/></para></summary>
        </member>
        <member name="T:TL.UpdateUserEmojiStatus">
            <summary>The <a href="https://corefork.telegram.org/api/emoji-status">emoji status</a> of a certain user has changed		<para>See <a href="https://corefork.telegram.org/constructor/updateUserEmojiStatus"/></para></summary>
        </member>
        <member name="F:TL.UpdateUserEmojiStatus.emoji_status">
            <summary>New <a href="https://corefork.telegram.org/api/emoji-status">emoji status</a></summary>
        </member>
        <member name="T:TL.UpdateRecentEmojiStatuses">
            <summary>The list of recent <a href="https://corefork.telegram.org/api/emoji-status">emoji statuses</a> has changed		<para>See <a href="https://corefork.telegram.org/constructor/updateRecentEmojiStatuses"/></para></summary>
        </member>
        <member name="T:TL.UpdateRecentReactions">
            <summary>The list of recent <a href="https://corefork.telegram.org/api/reactions">message reactions</a> has changed		<para>See <a href="https://corefork.telegram.org/constructor/updateRecentReactions"/></para></summary>
        </member>
        <member name="T:TL.UpdateMoveStickerSetToTop">
            <summary>A stickerset was just moved to top, <a href="https://corefork.telegram.org/api/stickers#recent-stickersets">see here for more info »</a>		<para>See <a href="https://corefork.telegram.org/constructor/updateMoveStickerSetToTop"/></para></summary>
        </member>
        <member name="F:TL.UpdateMoveStickerSetToTop.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdateMoveStickerSetToTop.stickerset">
            <summary><a href="https://corefork.telegram.org/api/stickers">Stickerset</a> ID</summary>
        </member>
        <member name="F:TL.UpdateMoveStickerSetToTop.Flags.masks">
            <summary>This update is referring to a <a href="https://corefork.telegram.org/api/stickers#mask-stickers">mask stickerset</a></summary>
        </member>
        <member name="F:TL.UpdateMoveStickerSetToTop.Flags.emojis">
            <summary>This update is referring to a <a href="https://corefork.telegram.org/api/custom-emoji">custom emoji stickerset</a></summary>
        </member>
        <member name="T:TL.UpdateMessageExtendedMedia">
            <summary>Extended media update		<para>See <a href="https://corefork.telegram.org/constructor/updateMessageExtendedMedia"/></para></summary>
        </member>
        <member name="F:TL.UpdateMessageExtendedMedia.peer">
            <summary>Peer</summary>
        </member>
        <member name="F:TL.UpdateMessageExtendedMedia.msg_id">
            <summary>Message ID</summary>
        </member>
        <member name="F:TL.UpdateMessageExtendedMedia.extended_media">
            <summary>Extended media</summary>
        </member>
        <member name="T:TL.UpdateChannelPinnedTopic">
            <summary>A <a href="https://corefork.telegram.org/api/forum#forum-topics">forum topic »</a> was pinned or unpinned.		<para>See <a href="https://corefork.telegram.org/constructor/updateChannelPinnedTopic"/></para></summary>
        </member>
        <member name="F:TL.UpdateChannelPinnedTopic.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdateChannelPinnedTopic.channel_id">
            <summary>The forum ID</summary>
        </member>
        <member name="F:TL.UpdateChannelPinnedTopic.topic_id">
            <summary>The topic ID</summary>
        </member>
        <member name="F:TL.UpdateChannelPinnedTopic.Flags.pinned">
            <summary>Whether the topic was pinned or unpinned</summary>
        </member>
        <member name="T:TL.UpdateChannelPinnedTopics">
            <summary>The <a href="https://corefork.telegram.org/api/forum#forum-topics">pinned topics</a> of a forum have changed.		<para>See <a href="https://corefork.telegram.org/constructor/updateChannelPinnedTopics"/></para></summary>
        </member>
        <member name="F:TL.UpdateChannelPinnedTopics.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdateChannelPinnedTopics.channel_id">
            <summary>Forum ID.</summary>
        </member>
        <member name="F:TL.UpdateChannelPinnedTopics.order">
            <summary>Ordered list containing the IDs of all pinned topics.</summary>
        </member>
        <member name="F:TL.UpdateChannelPinnedTopics.Flags.has_order">
            <summary>Field <see cref="F:TL.UpdateChannelPinnedTopics.order"/> has a value</summary>
        </member>
        <member name="T:TL.UpdateUser">
            <summary>User information was updated, it must be refetched using <see cref="M:TL.SchemaExtensions.Users_GetFullUser(WTelegram.Client,TL.InputUserBase)">Users_GetFullUser</see>.		<para>See <a href="https://corefork.telegram.org/constructor/updateUser"/></para></summary>
        </member>
        <member name="F:TL.UpdateUser.user_id">
            <summary>User ID</summary>
        </member>
        <member name="T:TL.UpdateAutoSaveSettings">
            <summary>Media autosave settings have changed and must be refetched using <see cref="M:TL.SchemaExtensions.Account_GetAutoSaveSettings(WTelegram.Client)">Account_GetAutoSaveSettings</see>.		<para>See <a href="https://corefork.telegram.org/constructor/updateAutoSaveSettings"/></para></summary>
        </member>
        <member name="T:TL.UpdateStory">
            <summary>A new story was posted.		<para>See <a href="https://corefork.telegram.org/constructor/updateStory"/></para></summary>
        </member>
        <member name="F:TL.UpdateStory.peer">
            <summary>ID of the poster.</summary>
        </member>
        <member name="F:TL.UpdateStory.story">
            <summary>The story that was posted.</summary>
        </member>
        <member name="T:TL.UpdateReadStories">
            <summary>Stories of a specific peer were marked as read.		<para>See <a href="https://corefork.telegram.org/constructor/updateReadStories"/></para></summary>
        </member>
        <member name="F:TL.UpdateReadStories.peer">
            <summary>The peer</summary>
        </member>
        <member name="F:TL.UpdateReadStories.max_id">
            <summary>ID of the last story that was marked as read</summary>
        </member>
        <member name="T:TL.UpdateStoryID">
            <summary>A story was successfully uploaded.		<para>See <a href="https://corefork.telegram.org/constructor/updateStoryID"/></para></summary>
        </member>
        <member name="F:TL.UpdateStoryID.id">
            <summary>The <c>id</c> that was attributed to the story.</summary>
        </member>
        <member name="F:TL.UpdateStoryID.random_id">
            <summary>The <c>random_id</c> that was passed to <see cref="M:TL.SchemaExtensions.Stories_SendStory(WTelegram.Client,TL.InputPeer,TL.InputMedia,TL.InputPrivacyRule[],System.Int64,System.String,TL.MessageEntity[],System.Nullable{System.Int32},TL.MediaArea[],TL.InputPeer,System.Nullable{System.Int32},System.Boolean,System.Boolean,System.Boolean)">Stories_SendStory</see>.</summary>
        </member>
        <member name="T:TL.UpdateStoriesStealthMode">
            <summary>Indicates that <a href="https://corefork.telegram.org/api/stories#stealth-mode">stories stealth mode</a> was activated.		<para>See <a href="https://corefork.telegram.org/constructor/updateStoriesStealthMode"/></para></summary>
        </member>
        <member name="F:TL.UpdateStoriesStealthMode.stealth_mode">
            <summary>Information about the current <a href="https://corefork.telegram.org/api/stories#stealth-mode">stealth mode</a> session.</summary>
        </member>
        <member name="T:TL.UpdateSentStoryReaction">
            <summary>Indicates we <a href="https://corefork.telegram.org/api/stories#reactions">reacted to a story »</a>.		<para>See <a href="https://corefork.telegram.org/constructor/updateSentStoryReaction"/></para></summary>
        </member>
        <member name="F:TL.UpdateSentStoryReaction.peer">
            <summary>The peer that sent the story</summary>
        </member>
        <member name="F:TL.UpdateSentStoryReaction.story_id">
            <summary>ID of the story we reacted to</summary>
        </member>
        <member name="F:TL.UpdateSentStoryReaction.reaction">
            <summary>The reaction that was sent</summary>
        </member>
        <member name="T:TL.UpdateBotChatBoost">
            <summary>A <a href="https://corefork.telegram.org/api/boost">channel boost</a> has changed (bots only)		<para>See <a href="https://corefork.telegram.org/constructor/updateBotChatBoost"/></para></summary>
        </member>
        <member name="F:TL.UpdateBotChatBoost.peer">
            <summary>Channel</summary>
        </member>
        <member name="F:TL.UpdateBotChatBoost.boost">
            <summary>New boost information</summary>
        </member>
        <member name="F:TL.UpdateBotChatBoost.qts">
            <summary><a href="https://corefork.telegram.org/api/updates">QTS</a> event sequence identifier</summary>
        </member>
        <member name="T:TL.UpdateChannelViewForumAsMessages">
            <summary>Users may also choose to display messages from all topics as if they were sent to a normal group, using a "View as messages" setting in the local client.<br/>This setting only affects the current account, and is synced to other logged in sessions using the <see cref="M:TL.SchemaExtensions.Channels_ToggleViewForumAsMessages(WTelegram.Client,TL.InputChannelBase,System.Boolean)">Channels_ToggleViewForumAsMessages</see> method; invoking this method will update the value of the <c>view_forum_as_messages</c> flag of <see cref="T:TL.ChannelFull"/> or <see cref="T:TL.Dialog"/> and emit an <see cref="T:TL.UpdateChannelViewForumAsMessages"/>.		<para>See <a href="https://corefork.telegram.org/constructor/updateChannelViewForumAsMessages"/></para></summary>
        </member>
        <member name="F:TL.UpdateChannelViewForumAsMessages.enabled">
            <summary>The new value of the toggle.</summary>
        </member>
        <member name="T:TL.UpdatePeerWallpaper">
            <summary>The <a href="https://corefork.telegram.org/api/wallpapers">wallpaper »</a> of a given peer has changed.		<para>See <a href="https://corefork.telegram.org/constructor/updatePeerWallpaper"/></para></summary>
        </member>
        <member name="F:TL.UpdatePeerWallpaper.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdatePeerWallpaper.peer">
            <summary>The peer where the wallpaper has changed.</summary>
        </member>
        <member name="F:TL.UpdatePeerWallpaper.wallpaper">
            <summary>The new wallpaper, if none the wallpaper was removed and the default wallpaper should be used.</summary>
        </member>
        <member name="F:TL.UpdatePeerWallpaper.Flags.has_wallpaper">
            <summary>Field <see cref="F:TL.UpdatePeerWallpaper.wallpaper"/> has a value</summary>
        </member>
        <member name="F:TL.UpdatePeerWallpaper.Flags.wallpaper_overridden">
            <summary>Whether the other user has chosen a custom wallpaper for us using <see cref="M:TL.SchemaExtensions.Messages_SetChatWallPaper(WTelegram.Client,TL.InputPeer,TL.InputWallPaperBase,System.Nullable{System.Int32},TL.WallPaperSettings,System.Boolean,System.Boolean)">Messages_SetChatWallPaper</see> and the <c>for_both</c> flag, see <a href="https://corefork.telegram.org/api/wallpapers#installing-wallpapers-in-a-specific-chat-or-channel">here »</a> for more info.</summary>
        </member>
        <member name="T:TL.UpdateBotMessageReaction">
            <summary>Bots only: a user has changed their reactions on a message with public reactions.		<para>See <a href="https://corefork.telegram.org/constructor/updateBotMessageReaction"/></para></summary>
        </member>
        <member name="F:TL.UpdateBotMessageReaction.peer">
            <summary>Peer of the reacted-to message.</summary>
        </member>
        <member name="F:TL.UpdateBotMessageReaction.msg_id">
            <summary>ID of the reacted-to message.</summary>
        </member>
        <member name="F:TL.UpdateBotMessageReaction.date">
            <summary>Date of the change.</summary>
        </member>
        <member name="F:TL.UpdateBotMessageReaction.actor">
            <summary>The user that (un)reacted to the message.</summary>
        </member>
        <member name="F:TL.UpdateBotMessageReaction.old_reactions">
            <summary>Old reactions</summary>
        </member>
        <member name="F:TL.UpdateBotMessageReaction.new_reactions">
            <summary>New reactions</summary>
        </member>
        <member name="F:TL.UpdateBotMessageReaction.qts">
            <summary><a href="https://corefork.telegram.org/api/updates">QTS</a> event sequence identifier</summary>
        </member>
        <member name="T:TL.UpdateBotMessageReactions">
            <summary>Bots only: the number of reactions on a message with anonymous reactions has changed.		<para>See <a href="https://corefork.telegram.org/constructor/updateBotMessageReactions"/></para></summary>
        </member>
        <member name="F:TL.UpdateBotMessageReactions.peer">
            <summary>Peer of the reacted-to message.</summary>
        </member>
        <member name="F:TL.UpdateBotMessageReactions.msg_id">
            <summary>ID of the reacted-to message.</summary>
        </member>
        <member name="F:TL.UpdateBotMessageReactions.date">
            <summary>Date of the change.</summary>
        </member>
        <member name="F:TL.UpdateBotMessageReactions.reactions">
            <summary>New reaction counters.</summary>
        </member>
        <member name="F:TL.UpdateBotMessageReactions.qts">
            <summary><a href="https://corefork.telegram.org/api/updates">QTS</a> event sequence identifier</summary>
        </member>
        <member name="T:TL.UpdateSavedDialogPinned">
            <summary>A <a href="https://corefork.telegram.org/api/saved-messages">saved message dialog</a> was pinned/unpinned		<para>See <a href="https://corefork.telegram.org/constructor/updateSavedDialogPinned"/></para></summary>
        </member>
        <member name="F:TL.UpdateSavedDialogPinned.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdateSavedDialogPinned.peer">
            <summary>The dialog</summary>
        </member>
        <member name="F:TL.UpdateSavedDialogPinned.Flags.pinned">
            <summary>Whether the dialog was pinned</summary>
        </member>
        <member name="T:TL.UpdatePinnedSavedDialogs">
            <summary><a href="https://corefork.telegram.org/api/saved-messages">Pinned saved dialogs »</a> were updated		<para>See <a href="https://corefork.telegram.org/constructor/updatePinnedSavedDialogs"/></para></summary>
        </member>
        <member name="F:TL.UpdatePinnedSavedDialogs.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdatePinnedSavedDialogs.order">
            <summary>New order of pinned saved dialogs</summary>
        </member>
        <member name="F:TL.UpdatePinnedSavedDialogs.Flags.has_order">
            <summary>Field <see cref="F:TL.UpdatePinnedSavedDialogs.order"/> has a value</summary>
        </member>
        <member name="T:TL.UpdateSavedReactionTags">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/updateSavedReactionTags"/></para></summary>
        </member>
        <member name="T:TL.UpdateSmsJob">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/updateSmsJob"/></para></summary>
        </member>
        <member name="T:TL.UpdateQuickReplies">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/updateQuickReplies"/></para></summary>
        </member>
        <member name="T:TL.UpdateNewQuickReply">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/updateNewQuickReply"/></para></summary>
        </member>
        <member name="T:TL.UpdateDeleteQuickReply">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/updateDeleteQuickReply"/></para></summary>
        </member>
        <member name="T:TL.UpdateQuickReplyMessage">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/updateQuickReplyMessage"/></para></summary>
        </member>
        <member name="T:TL.UpdateDeleteQuickReplyMessages">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/updateDeleteQuickReplyMessages"/></para></summary>
        </member>
        <member name="T:TL.UpdateBotBusinessConnect">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/updateBotBusinessConnect"/></para></summary>
        </member>
        <member name="T:TL.UpdateBotNewBusinessMessage">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/updateBotNewBusinessMessage"/></para></summary>
        </member>
        <member name="T:TL.UpdateBotEditBusinessMessage">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/updateBotEditBusinessMessage"/></para></summary>
        </member>
        <member name="T:TL.UpdateBotDeleteBusinessMessage">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/updateBotDeleteBusinessMessage"/></para></summary>
        </member>
        <member name="T:TL.UpdateNewStoryReaction">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/updateNewStoryReaction"/></para></summary>
        </member>
        <member name="T:TL.Updates_State">
            <summary>Updates state.		<para>See <a href="https://corefork.telegram.org/constructor/updates.state"/></para></summary>
        </member>
        <member name="F:TL.Updates_State.pts">
            <summary>Number of events occurred in a text box</summary>
        </member>
        <member name="F:TL.Updates_State.qts">
            <summary>Position in a sequence of updates in secret chats. For further details refer to article <a href="https://corefork.telegram.org/api/end-to-end">secret chats</a></summary>
        </member>
        <member name="F:TL.Updates_State.date">
            <summary>Date of condition</summary>
        </member>
        <member name="F:TL.Updates_State.seq">
            <summary>Number of sent updates</summary>
        </member>
        <member name="F:TL.Updates_State.unread_count">
            <summary>Number of unread messages</summary>
        </member>
        <member name="T:TL.Updates_DifferenceBase">
            <summary>Occurred changes.		<para>See <a href="https://corefork.telegram.org/type/updates.Difference"/></para>		<para>Derived classes: <see cref="T:TL.Updates_DifferenceEmpty"/>, <see cref="T:TL.Updates_Difference"/>, <see cref="T:TL.Updates_DifferenceSlice"/>, <see cref="T:TL.Updates_DifferenceTooLong"/></para></summary>
        </member>
        <member name="P:TL.Updates_DifferenceBase.NewMessages">
            <summary>List of new messages</summary>
        </member>
        <member name="P:TL.Updates_DifferenceBase.NewEncryptedMessages">
            <summary>List of new encrypted secret chat messages</summary>
        </member>
        <member name="P:TL.Updates_DifferenceBase.OtherUpdates">
            <summary>List of updates</summary>
        </member>
        <member name="M:TL.Updates_DifferenceBase.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Updates_DifferenceEmpty">
            <summary>No events.		<para>See <a href="https://corefork.telegram.org/constructor/updates.differenceEmpty"/></para></summary>
        </member>
        <member name="F:TL.Updates_DifferenceEmpty.date">
            <summary>Current date</summary>
        </member>
        <member name="F:TL.Updates_DifferenceEmpty.seq">
            <summary>Number of sent updates</summary>
        </member>
        <member name="M:TL.Updates_DifferenceEmpty.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Updates_Difference">
            <summary>Full list of occurred events.		<para>See <a href="https://corefork.telegram.org/constructor/updates.difference"/></para></summary>
        </member>
        <member name="F:TL.Updates_Difference.new_messages">
            <summary>List of new messages</summary>
        </member>
        <member name="F:TL.Updates_Difference.new_encrypted_messages">
            <summary>List of new encrypted secret chat messages</summary>
        </member>
        <member name="F:TL.Updates_Difference.other_updates">
            <summary>List of updates</summary>
        </member>
        <member name="F:TL.Updates_Difference.chats">
            <summary>List of chats mentioned in events</summary>
        </member>
        <member name="F:TL.Updates_Difference.users">
            <summary>List of users mentioned in events</summary>
        </member>
        <member name="F:TL.Updates_Difference.state">
            <summary>Current state</summary>
        </member>
        <member name="P:TL.Updates_Difference.NewMessages">
            <summary>List of new messages</summary>
        </member>
        <member name="P:TL.Updates_Difference.NewEncryptedMessages">
            <summary>List of new encrypted secret chat messages</summary>
        </member>
        <member name="P:TL.Updates_Difference.OtherUpdates">
            <summary>List of updates</summary>
        </member>
        <member name="M:TL.Updates_Difference.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Updates_DifferenceSlice">
            <summary>Incomplete list of occurred events.		<para>See <a href="https://corefork.telegram.org/constructor/updates.differenceSlice"/></para></summary>
        </member>
        <member name="F:TL.Updates_DifferenceSlice.new_messages">
            <summary>List of new messages</summary>
        </member>
        <member name="F:TL.Updates_DifferenceSlice.new_encrypted_messages">
            <summary>New messages from the <a href="https://corefork.telegram.org/api/updates">encrypted event sequence</a></summary>
        </member>
        <member name="F:TL.Updates_DifferenceSlice.other_updates">
            <summary>List of updates</summary>
        </member>
        <member name="F:TL.Updates_DifferenceSlice.chats">
            <summary>List of chats mentioned in events</summary>
        </member>
        <member name="F:TL.Updates_DifferenceSlice.users">
            <summary>List of users mentioned in events</summary>
        </member>
        <member name="F:TL.Updates_DifferenceSlice.intermediate_state">
            <summary>Intermediary state</summary>
        </member>
        <member name="P:TL.Updates_DifferenceSlice.NewMessages">
            <summary>List of new messages</summary>
        </member>
        <member name="P:TL.Updates_DifferenceSlice.NewEncryptedMessages">
            <summary>New messages from the <a href="https://corefork.telegram.org/api/updates">encrypted event sequence</a></summary>
        </member>
        <member name="P:TL.Updates_DifferenceSlice.OtherUpdates">
            <summary>List of updates</summary>
        </member>
        <member name="M:TL.Updates_DifferenceSlice.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Updates_DifferenceTooLong">
            <summary>The difference is <a href="https://corefork.telegram.org/api/updates#recovering-gaps">too long</a>, and the specified state must be used to refetch updates.		<para>See <a href="https://corefork.telegram.org/constructor/updates.differenceTooLong"/></para></summary>
        </member>
        <member name="F:TL.Updates_DifferenceTooLong.pts">
            <summary>The new state to use.</summary>
        </member>
        <member name="M:TL.Updates_DifferenceTooLong.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.UpdatesBase">
            <summary>Object which is perceived by the client without a call on its part when an event occurs.		<para>See <a href="https://corefork.telegram.org/type/Updates"/></para>		<para>Derived classes: <see cref="T:TL.UpdatesTooLong"/>, <see cref="T:TL.UpdateShortMessage"/>, <see cref="T:TL.UpdateShortChatMessage"/>, <see cref="T:TL.UpdateShort"/>, <see cref="T:TL.UpdatesCombined"/>, <see cref="T:TL.Updates"/>, <see cref="T:TL.UpdateShortSentMessage"/></para></summary>
        </member>
        <member name="P:TL.UpdatesBase.Date">
            <summary><a href="https://corefork.telegram.org/api/updates">date</a></summary>
        </member>
        <member name="M:TL.UpdatesBase.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.UpdatesTooLong">
            <summary>Too many updates, it is necessary to execute <see cref="M:TL.SchemaExtensions.Updates_GetDifference(WTelegram.Client,System.Int32,System.DateTime,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">Updates_GetDifference</see>.		<para>See <a href="https://corefork.telegram.org/constructor/updatesTooLong"/></para></summary>
        </member>
        <member name="M:TL.UpdatesTooLong.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.UpdateShortMessage">
            <summary>Info about a message sent to (received from) another user		<para>See <a href="https://corefork.telegram.org/constructor/updateShortMessage"/></para></summary>
        </member>
        <member name="F:TL.UpdateShortMessage.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdateShortMessage.id">
            <summary>The message ID</summary>
        </member>
        <member name="F:TL.UpdateShortMessage.user_id">
            <summary>The ID of the sender (if <c>outgoing</c> will be the ID of the destination) of the message</summary>
        </member>
        <member name="F:TL.UpdateShortMessage.message">
            <summary>The message</summary>
        </member>
        <member name="F:TL.UpdateShortMessage.pts">
            <summary><a href="https://corefork.telegram.org/api/updates">PTS</a></summary>
        </member>
        <member name="F:TL.UpdateShortMessage.pts_count">
            <summary><a href="https://corefork.telegram.org/api/updates">PTS count</a></summary>
        </member>
        <member name="F:TL.UpdateShortMessage.date">
            <summary><a href="https://corefork.telegram.org/api/updates">date</a></summary>
        </member>
        <member name="F:TL.UpdateShortMessage.fwd_from">
            <summary>Info about a forwarded message</summary>
        </member>
        <member name="F:TL.UpdateShortMessage.via_bot_id">
            <summary>Info about the inline bot used to generate this message</summary>
        </member>
        <member name="F:TL.UpdateShortMessage.reply_to">
            <summary>Reply and <a href="https://corefork.telegram.org/api/threads">thread</a> information</summary>
        </member>
        <member name="F:TL.UpdateShortMessage.entities">
            <summary><a href="https://corefork.telegram.org/api/entities">Entities</a> for styled text</summary>
        </member>
        <member name="F:TL.UpdateShortMessage.ttl_period">
            <summary>Time To Live of the message, once message.date+message.ttl_period === time(), the message will be deleted on the server, and must be deleted locally as well.</summary>
        </member>
        <member name="F:TL.UpdateShortMessage.Flags.out_">
            <summary>Whether the message is outgoing</summary>
        </member>
        <member name="F:TL.UpdateShortMessage.Flags.has_fwd_from">
            <summary>Field <see cref="F:TL.UpdateShortMessage.fwd_from"/> has a value</summary>
        </member>
        <member name="F:TL.UpdateShortMessage.Flags.has_reply_to">
            <summary>Field <see cref="F:TL.UpdateShortMessage.reply_to"/> has a value</summary>
        </member>
        <member name="F:TL.UpdateShortMessage.Flags.mentioned">
            <summary>Whether we were mentioned in the message</summary>
        </member>
        <member name="F:TL.UpdateShortMessage.Flags.media_unread">
            <summary>Whether there are some <strong>unread</strong> mentions in this message</summary>
        </member>
        <member name="F:TL.UpdateShortMessage.Flags.has_entities">
            <summary>Field <see cref="F:TL.UpdateShortMessage.entities"/> has a value</summary>
        </member>
        <member name="F:TL.UpdateShortMessage.Flags.has_via_bot_id">
            <summary>Field <see cref="F:TL.UpdateShortMessage.via_bot_id"/> has a value</summary>
        </member>
        <member name="F:TL.UpdateShortMessage.Flags.silent">
            <summary>If true, the message is a silent message, no notifications should be triggered</summary>
        </member>
        <member name="F:TL.UpdateShortMessage.Flags.has_ttl_period">
            <summary>Field <see cref="F:TL.UpdateShortMessage.ttl_period"/> has a value</summary>
        </member>
        <member name="P:TL.UpdateShortMessage.Date">
            <summary><a href="https://corefork.telegram.org/api/updates">date</a></summary>
        </member>
        <member name="M:TL.UpdateShortMessage.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.UpdateShortChatMessage">
            <summary>Shortened constructor containing info on one new incoming text message from a chat		<para>See <a href="https://corefork.telegram.org/constructor/updateShortChatMessage"/></para></summary>
        </member>
        <member name="F:TL.UpdateShortChatMessage.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdateShortChatMessage.id">
            <summary>ID of the message</summary>
        </member>
        <member name="F:TL.UpdateShortChatMessage.from_id">
            <summary>ID of the sender of the message</summary>
        </member>
        <member name="F:TL.UpdateShortChatMessage.chat_id">
            <summary>ID of the chat where the message was sent</summary>
        </member>
        <member name="F:TL.UpdateShortChatMessage.message">
            <summary>Message</summary>
        </member>
        <member name="F:TL.UpdateShortChatMessage.pts">
            <summary><a href="https://corefork.telegram.org/api/updates">PTS</a></summary>
        </member>
        <member name="F:TL.UpdateShortChatMessage.pts_count">
            <summary><a href="https://corefork.telegram.org/api/updates">PTS count</a></summary>
        </member>
        <member name="F:TL.UpdateShortChatMessage.date">
            <summary><a href="https://corefork.telegram.org/api/updates">date</a></summary>
        </member>
        <member name="F:TL.UpdateShortChatMessage.fwd_from">
            <summary>Info about a forwarded message</summary>
        </member>
        <member name="F:TL.UpdateShortChatMessage.via_bot_id">
            <summary>Info about the inline bot used to generate this message</summary>
        </member>
        <member name="F:TL.UpdateShortChatMessage.reply_to">
            <summary>Reply (thread) information</summary>
        </member>
        <member name="F:TL.UpdateShortChatMessage.entities">
            <summary><a href="https://corefork.telegram.org/api/entities">Entities</a> for styled text</summary>
        </member>
        <member name="F:TL.UpdateShortChatMessage.ttl_period">
            <summary>Time To Live of the message, once updateShortChatMessage.date+updateShortChatMessage.ttl_period === time(), the message will be deleted on the server, and must be deleted locally as well.</summary>
        </member>
        <member name="F:TL.UpdateShortChatMessage.Flags.out_">
            <summary>Whether the message is outgoing</summary>
        </member>
        <member name="F:TL.UpdateShortChatMessage.Flags.has_fwd_from">
            <summary>Field <see cref="F:TL.UpdateShortChatMessage.fwd_from"/> has a value</summary>
        </member>
        <member name="F:TL.UpdateShortChatMessage.Flags.has_reply_to">
            <summary>Field <see cref="F:TL.UpdateShortChatMessage.reply_to"/> has a value</summary>
        </member>
        <member name="F:TL.UpdateShortChatMessage.Flags.mentioned">
            <summary>Whether we were mentioned in this message</summary>
        </member>
        <member name="F:TL.UpdateShortChatMessage.Flags.media_unread">
            <summary>Whether the message contains some <strong>unread</strong> mentions</summary>
        </member>
        <member name="F:TL.UpdateShortChatMessage.Flags.has_entities">
            <summary>Field <see cref="F:TL.UpdateShortChatMessage.entities"/> has a value</summary>
        </member>
        <member name="F:TL.UpdateShortChatMessage.Flags.has_via_bot_id">
            <summary>Field <see cref="F:TL.UpdateShortChatMessage.via_bot_id"/> has a value</summary>
        </member>
        <member name="F:TL.UpdateShortChatMessage.Flags.silent">
            <summary>If true, the message is a silent message, no notifications should be triggered</summary>
        </member>
        <member name="F:TL.UpdateShortChatMessage.Flags.has_ttl_period">
            <summary>Field <see cref="F:TL.UpdateShortChatMessage.ttl_period"/> has a value</summary>
        </member>
        <member name="P:TL.UpdateShortChatMessage.Date">
            <summary><a href="https://corefork.telegram.org/api/updates">date</a></summary>
        </member>
        <member name="M:TL.UpdateShortChatMessage.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.UpdateShort">
            <summary>Shortened constructor containing info on one update not requiring auxiliary data		<para>See <a href="https://corefork.telegram.org/constructor/updateShort"/></para></summary>
        </member>
        <member name="F:TL.UpdateShort.update">
            <summary>Update</summary>
        </member>
        <member name="F:TL.UpdateShort.date">
            <summary>Date of event</summary>
        </member>
        <member name="P:TL.UpdateShort.Date">
            <summary>Date of event</summary>
        </member>
        <member name="M:TL.UpdateShort.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.UpdatesCombined">
            <summary>Constructor for a group of updates.		<para>See <a href="https://corefork.telegram.org/constructor/updatesCombined"/></para></summary>
        </member>
        <member name="F:TL.UpdatesCombined.updates">
            <summary>List of updates</summary>
        </member>
        <member name="F:TL.UpdatesCombined.users">
            <summary>List of users mentioned in updates</summary>
        </member>
        <member name="F:TL.UpdatesCombined.chats">
            <summary>List of chats mentioned in updates</summary>
        </member>
        <member name="F:TL.UpdatesCombined.date">
            <summary>Current date</summary>
        </member>
        <member name="F:TL.UpdatesCombined.seq_start">
            <summary>Value <strong>seq</strong> for the earliest update in a group</summary>
        </member>
        <member name="F:TL.UpdatesCombined.seq">
            <summary>Value <strong>seq</strong> for the latest update in a group</summary>
        </member>
        <member name="P:TL.UpdatesCombined.Date">
            <summary>Current date</summary>
        </member>
        <member name="M:TL.UpdatesCombined.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Updates">
            <summary>Full constructor of updates		<para>See <a href="https://corefork.telegram.org/constructor/updates"/></para></summary>
        </member>
        <member name="F:TL.Updates.updates">
            <summary>List of updates</summary>
        </member>
        <member name="F:TL.Updates.users">
            <summary>List of users mentioned in updates</summary>
        </member>
        <member name="F:TL.Updates.chats">
            <summary>List of chats mentioned in updates</summary>
        </member>
        <member name="F:TL.Updates.date">
            <summary>Current date</summary>
        </member>
        <member name="F:TL.Updates.seq">
            <summary>Total number of sent updates</summary>
        </member>
        <member name="P:TL.Updates.Date">
            <summary>Current date</summary>
        </member>
        <member name="M:TL.Updates.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.UpdateShortSentMessage">
            <summary>Shortened constructor containing info on one outgoing message to a contact (the destination chat has to be extracted from the method call that returned this object).		<para>See <a href="https://corefork.telegram.org/constructor/updateShortSentMessage"/></para></summary>
        </member>
        <member name="F:TL.UpdateShortSentMessage.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UpdateShortSentMessage.id">
            <summary>ID of the sent message</summary>
        </member>
        <member name="F:TL.UpdateShortSentMessage.pts">
            <summary><a href="https://corefork.telegram.org/api/updates">PTS</a></summary>
        </member>
        <member name="F:TL.UpdateShortSentMessage.pts_count">
            <summary><a href="https://corefork.telegram.org/api/updates">PTS count</a></summary>
        </member>
        <member name="F:TL.UpdateShortSentMessage.date">
            <summary><a href="https://corefork.telegram.org/api/updates">date</a></summary>
        </member>
        <member name="F:TL.UpdateShortSentMessage.media">
            <summary>Attached media</summary>
        </member>
        <member name="F:TL.UpdateShortSentMessage.entities">
            <summary><a href="https://corefork.telegram.org/api/entities">Entities</a> for styled text</summary>
        </member>
        <member name="F:TL.UpdateShortSentMessage.ttl_period">
            <summary>Time To Live of the message, once message.date+message.ttl_period === time(), the message will be deleted on the server, and must be deleted locally as well.</summary>
        </member>
        <member name="F:TL.UpdateShortSentMessage.Flags.out_">
            <summary>Whether the message is outgoing</summary>
        </member>
        <member name="F:TL.UpdateShortSentMessage.Flags.has_entities">
            <summary>Field <see cref="F:TL.UpdateShortSentMessage.entities"/> has a value</summary>
        </member>
        <member name="F:TL.UpdateShortSentMessage.Flags.has_media">
            <summary>Field <see cref="F:TL.UpdateShortSentMessage.media"/> has a value</summary>
        </member>
        <member name="F:TL.UpdateShortSentMessage.Flags.has_ttl_period">
            <summary>Field <see cref="F:TL.UpdateShortSentMessage.ttl_period"/> has a value</summary>
        </member>
        <member name="P:TL.UpdateShortSentMessage.Date">
            <summary><a href="https://corefork.telegram.org/api/updates">date</a></summary>
        </member>
        <member name="M:TL.UpdateShortSentMessage.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Photos_Photos">
            <summary>Full list of photos with auxiliary data.		<para>See <a href="https://corefork.telegram.org/constructor/photos.photos"/></para></summary>
        </member>
        <member name="F:TL.Photos_Photos.photos">
            <summary>List of photos</summary>
        </member>
        <member name="F:TL.Photos_Photos.users">
            <summary>List of mentioned users</summary>
        </member>
        <member name="T:TL.Photos_PhotosSlice">
            <summary>Incomplete list of photos with auxiliary data.		<para>See <a href="https://corefork.telegram.org/constructor/photos.photosSlice"/></para></summary>
        </member>
        <member name="F:TL.Photos_PhotosSlice.count">
            <summary>Total number of photos</summary>
        </member>
        <member name="T:TL.Photos_Photo">
            <summary>Photo with auxiliary data.		<para>See <a href="https://corefork.telegram.org/constructor/photos.photo"/></para></summary>
        </member>
        <member name="F:TL.Photos_Photo.photo">
            <summary>Photo</summary>
        </member>
        <member name="F:TL.Photos_Photo.users">
            <summary>Users</summary>
        </member>
        <member name="T:TL.Upload_FileBase">
            <summary>Contains info on file.		<para>See <a href="https://corefork.telegram.org/type/upload.File"/></para>		<para>Derived classes: <see cref="T:TL.Upload_File"/>, <see cref="T:TL.Upload_FileCdnRedirect"/></para></summary>
        </member>
        <member name="T:TL.Upload_File">
            <summary>File content.		<para>See <a href="https://corefork.telegram.org/constructor/upload.file"/></para></summary>
        </member>
        <member name="F:TL.Upload_File.type">
            <summary>File type</summary>
        </member>
        <member name="F:TL.Upload_File.mtime">
            <summary>Modification time</summary>
        </member>
        <member name="F:TL.Upload_File.bytes">
            <summary>Binary data, file content</summary>
        </member>
        <member name="T:TL.Upload_FileCdnRedirect">
            <summary>The file must be downloaded from a <a href="https://corefork.telegram.org/cdn">CDN DC</a>.		<para>See <a href="https://corefork.telegram.org/constructor/upload.fileCdnRedirect"/></para></summary>
        </member>
        <member name="F:TL.Upload_FileCdnRedirect.dc_id">
            <summary><a href="https://corefork.telegram.org/cdn">CDN DC</a> ID</summary>
        </member>
        <member name="F:TL.Upload_FileCdnRedirect.file_token">
            <summary>File token (see <a href="https://corefork.telegram.org/cdn">CDN files</a>)</summary>
        </member>
        <member name="F:TL.Upload_FileCdnRedirect.encryption_key">
            <summary>Encryption key (see <a href="https://corefork.telegram.org/cdn">CDN files</a>)</summary>
        </member>
        <member name="F:TL.Upload_FileCdnRedirect.encryption_iv">
            <summary>Encryption IV (see <a href="https://corefork.telegram.org/cdn">CDN files</a>)</summary>
        </member>
        <member name="F:TL.Upload_FileCdnRedirect.file_hashes">
            <summary>File hashes (see <a href="https://corefork.telegram.org/cdn">CDN files</a>)</summary>
        </member>
        <member name="T:TL.DcOption">
            <summary>Data center		<para>See <a href="https://corefork.telegram.org/constructor/dcOption"/></para></summary>
        </member>
        <member name="F:TL.DcOption.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.DcOption.id">
            <summary>DC ID</summary>
        </member>
        <member name="F:TL.DcOption.ip_address">
            <summary>IP address of DC</summary>
        </member>
        <member name="F:TL.DcOption.port">
            <summary>Port</summary>
        </member>
        <member name="F:TL.DcOption.secret">
            <summary>If the <c>tcpo_only</c> flag is set, specifies the secret to use when connecting using <a href="https://corefork.telegram.org/mtproto/mtproto-transports#transport-obfuscation">transport obfuscation</a></summary>
        </member>
        <member name="F:TL.DcOption.Flags.ipv6">
            <summary>Whether the specified IP is an IPv6 address</summary>
        </member>
        <member name="F:TL.DcOption.Flags.media_only">
            <summary>Whether this DC should only be used to <a href="https://corefork.telegram.org/api/files">download or upload files</a></summary>
        </member>
        <member name="F:TL.DcOption.Flags.tcpo_only">
            <summary>Whether this DC only supports connection with <a href="https://corefork.telegram.org/mtproto/mtproto-transports#transport-obfuscation">transport obfuscation</a></summary>
        </member>
        <member name="F:TL.DcOption.Flags.cdn">
            <summary>Whether this is a <a href="https://corefork.telegram.org/cdn">CDN DC</a>.</summary>
        </member>
        <member name="F:TL.DcOption.Flags.static_">
            <summary>If set, this IP should be used when connecting through a proxy</summary>
        </member>
        <member name="F:TL.DcOption.Flags.this_port_only">
            <summary>If set, clients must connect using only the specified port, without trying any other port.</summary>
        </member>
        <member name="F:TL.DcOption.Flags.has_secret">
            <summary>Field <see cref="F:TL.DcOption.secret"/> has a value</summary>
        </member>
        <member name="T:TL.Config">
            <summary>Current configuration		<para>See <a href="https://corefork.telegram.org/constructor/config"/></para></summary>
        </member>
        <member name="F:TL.Config.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Config.date">
            <summary>Current date at the server</summary>
        </member>
        <member name="F:TL.Config.expires">
            <summary>Expiration date of this config: when it expires it'll have to be refetched using <see cref="M:TL.SchemaExtensions.Help_GetConfig(WTelegram.Client)">Help_GetConfig</see></summary>
        </member>
        <member name="F:TL.Config.test_mode">
            <summary>Whether we're connected to the test DCs</summary>
        </member>
        <member name="F:TL.Config.this_dc">
            <summary>ID of the DC that returned the reply</summary>
        </member>
        <member name="F:TL.Config.dc_options">
            <summary>DC IP list</summary>
        </member>
        <member name="F:TL.Config.dc_txt_domain_name">
            <summary>Domain name for fetching encrypted DC list from DNS TXT record</summary>
        </member>
        <member name="F:TL.Config.chat_size_max">
            <summary>Maximum member count for normal <a href="https://corefork.telegram.org/api/channel">groups</a></summary>
        </member>
        <member name="F:TL.Config.megagroup_size_max">
            <summary>Maximum member count for <a href="https://corefork.telegram.org/api/channel">supergroups</a></summary>
        </member>
        <member name="F:TL.Config.forwarded_count_max">
            <summary>Maximum number of messages that can be forwarded at once using <see cref="M:TL.SchemaExtensions.Messages_ForwardMessages(WTelegram.Client,TL.InputPeer,System.Int32[],System.Int64[],TL.InputPeer,System.Nullable{System.Int32},System.Nullable{System.DateTime},TL.InputPeer,TL.InputQuickReplyShortcutBase,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">Messages_ForwardMessages</see>.</summary>
        </member>
        <member name="F:TL.Config.online_update_period_ms">
            <summary>The client should <see cref="M:TL.SchemaExtensions.Account_UpdateStatus(WTelegram.Client,System.Boolean)">Account_UpdateStatus</see> every N milliseconds</summary>
        </member>
        <member name="F:TL.Config.offline_blur_timeout_ms">
            <summary>Delay before offline status needs to be sent to the server</summary>
        </member>
        <member name="F:TL.Config.offline_idle_timeout_ms">
            <summary>Time without any user activity after which it should be treated offline</summary>
        </member>
        <member name="F:TL.Config.online_cloud_timeout_ms">
            <summary>If we are offline, but were online from some other client in last <c>online_cloud_timeout_ms</c> milliseconds after we had gone offline, then delay offline notification for <c>notify_cloud_delay_ms</c> milliseconds.</summary>
        </member>
        <member name="F:TL.Config.notify_cloud_delay_ms">
            <summary>If we are offline, but online from some other client then delay sending the offline notification for <c>notify_cloud_delay_ms</c> milliseconds.</summary>
        </member>
        <member name="F:TL.Config.notify_default_delay_ms">
            <summary>If some other client is online, then delay notification for <c>notification_default_delay_ms</c> milliseconds</summary>
        </member>
        <member name="F:TL.Config.push_chat_period_ms">
            <summary>Not for client use</summary>
        </member>
        <member name="F:TL.Config.push_chat_limit">
            <summary>Not for client use</summary>
        </member>
        <member name="F:TL.Config.edit_time_limit">
            <summary>Only messages with age smaller than the one specified can be edited</summary>
        </member>
        <member name="F:TL.Config.revoke_time_limit">
            <summary>Only channel/supergroup messages with age smaller than the specified can be deleted</summary>
        </member>
        <member name="F:TL.Config.revoke_pm_time_limit">
            <summary>Only private messages with age smaller than the specified can be deleted</summary>
        </member>
        <member name="F:TL.Config.rating_e_decay">
            <summary>Exponential decay rate for computing <a href="https://corefork.telegram.org/api/top-rating">top peer rating</a></summary>
        </member>
        <member name="F:TL.Config.stickers_recent_limit">
            <summary>Maximum number of recent stickers</summary>
        </member>
        <member name="F:TL.Config.channels_read_media_period">
            <summary>Indicates that round videos (video notes) and voice messages sent in channels and older than the specified period must be marked as read</summary>
        </member>
        <member name="F:TL.Config.tmp_sessions">
            <summary>Temporary <a href="https://corefork.telegram.org/passport">passport</a> sessions</summary>
        </member>
        <member name="F:TL.Config.call_receive_timeout_ms">
            <summary>Maximum allowed outgoing ring time in VoIP calls: if the user we're calling doesn't reply within the specified time (in milliseconds), we should hang up the call</summary>
        </member>
        <member name="F:TL.Config.call_ring_timeout_ms">
            <summary>Maximum allowed incoming ring time in VoIP calls: if the current user doesn't reply within the specified time (in milliseconds), the call will be automatically refused</summary>
        </member>
        <member name="F:TL.Config.call_connect_timeout_ms">
            <summary>VoIP connection timeout: if the instance of libtgvoip on the other side of the call doesn't connect to our instance of libtgvoip within the specified time (in milliseconds), the call must be aborted</summary>
        </member>
        <member name="F:TL.Config.call_packet_timeout_ms">
            <summary>If during a VoIP call a packet isn't received for the specified period of time, the call must be aborted</summary>
        </member>
        <member name="F:TL.Config.me_url_prefix">
            <summary>The domain to use to parse <a href="https://corefork.telegram.org/api/links">deep links »</a>.</summary>
        </member>
        <member name="F:TL.Config.autoupdate_url_prefix">
            <summary>URL to use to auto-update the current app</summary>
        </member>
        <member name="F:TL.Config.gif_search_username">
            <summary>Username of the bot to use to search for GIFs</summary>
        </member>
        <member name="F:TL.Config.venue_search_username">
            <summary>Username of the bot to use to search for venues</summary>
        </member>
        <member name="F:TL.Config.img_search_username">
            <summary>Username of the bot to use for image search</summary>
        </member>
        <member name="F:TL.Config.static_maps_provider">
            <summary>ID of the map provider to use for venues</summary>
        </member>
        <member name="F:TL.Config.caption_length_max">
            <summary>Maximum length of caption (length in utf8 codepoints)</summary>
        </member>
        <member name="F:TL.Config.message_length_max">
            <summary>Maximum length of messages (length in utf8 codepoints)</summary>
        </member>
        <member name="F:TL.Config.webfile_dc_id">
            <summary>DC ID to use to download <a href="https://corefork.telegram.org/api/files#downloading-webfiles">webfiles</a></summary>
        </member>
        <member name="F:TL.Config.suggested_lang_code">
            <summary>Suggested language code</summary>
        </member>
        <member name="F:TL.Config.lang_pack_version">
            <summary>Language pack version</summary>
        </member>
        <member name="F:TL.Config.base_lang_pack_version">
            <summary>Basic language pack version</summary>
        </member>
        <member name="F:TL.Config.reactions_default">
            <summary>Default <a href="https://corefork.telegram.org/api/reactions">message reaction</a></summary>
        </member>
        <member name="F:TL.Config.autologin_token">
            <summary>Autologin token, <a href="https://corefork.telegram.org/api/url-authorization#link-url-authorization">click here for more info on URL authorization »</a>.</summary>
        </member>
        <member name="F:TL.Config.Flags.has_tmp_sessions">
            <summary>Field <see cref="F:TL.Config.tmp_sessions"/> has a value</summary>
        </member>
        <member name="F:TL.Config.Flags.has_suggested_lang_code">
            <summary>Fields <see cref="F:TL.Config.suggested_lang_code"/>, <see cref="F:TL.Config.lang_pack_version"/> and <see cref="F:TL.Config.base_lang_pack_version"/> have a value</summary>
        </member>
        <member name="F:TL.Config.Flags.default_p2p_contacts">
            <summary>Whether the client should use P2P by default for phone calls with contacts</summary>
        </member>
        <member name="F:TL.Config.Flags.preload_featured_stickers">
            <summary>Whether the client should preload featured stickers</summary>
        </member>
        <member name="F:TL.Config.Flags.revoke_pm_inbox">
            <summary>Whether incoming private messages can be deleted for both participants</summary>
        </member>
        <member name="F:TL.Config.Flags.has_autoupdate_url_prefix">
            <summary>Field <see cref="F:TL.Config.autoupdate_url_prefix"/> has a value</summary>
        </member>
        <member name="F:TL.Config.Flags.blocked_mode">
            <summary>Indicates that telegram is <em>probably</em> censored by governments/ISPs in the current region</summary>
        </member>
        <member name="F:TL.Config.Flags.has_gif_search_username">
            <summary>Field <see cref="F:TL.Config.gif_search_username"/> has a value</summary>
        </member>
        <member name="F:TL.Config.Flags.has_venue_search_username">
            <summary>Field <see cref="F:TL.Config.venue_search_username"/> has a value</summary>
        </member>
        <member name="F:TL.Config.Flags.has_img_search_username">
            <summary>Field <see cref="F:TL.Config.img_search_username"/> has a value</summary>
        </member>
        <member name="F:TL.Config.Flags.has_static_maps_provider">
            <summary>Field <see cref="F:TL.Config.static_maps_provider"/> has a value</summary>
        </member>
        <member name="F:TL.Config.Flags.force_try_ipv6">
            <summary>Whether to forcefully connect using IPv6 <see cref="T:TL.DcOption"/>, even if the client knows that IPv4 is available.</summary>
        </member>
        <member name="F:TL.Config.Flags.has_reactions_default">
            <summary>Field <see cref="F:TL.Config.reactions_default"/> has a value</summary>
        </member>
        <member name="F:TL.Config.Flags.has_autologin_token">
            <summary>Field <see cref="F:TL.Config.autologin_token"/> has a value</summary>
        </member>
        <member name="T:TL.NearestDc">
            <summary>Nearest data center, according to geo-ip.		<para>See <a href="https://corefork.telegram.org/constructor/nearestDc"/></para></summary>
        </member>
        <member name="F:TL.NearestDc.country">
            <summary>Country code determined by geo-ip</summary>
        </member>
        <member name="F:TL.NearestDc.this_dc">
            <summary>Number of current data center</summary>
        </member>
        <member name="F:TL.NearestDc.nearest_dc">
            <summary>Number of nearest data center</summary>
        </member>
        <member name="T:TL.Help_AppUpdate">
            <summary>An update is available for the application.		<para>See <a href="https://corefork.telegram.org/constructor/help.appUpdate"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/help.noAppUpdate">help.noAppUpdate</a></remarks>
        </member>
        <member name="F:TL.Help_AppUpdate.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Help_AppUpdate.id">
            <summary>Update ID</summary>
        </member>
        <member name="F:TL.Help_AppUpdate.version">
            <summary>New version name</summary>
        </member>
        <member name="F:TL.Help_AppUpdate.text">
            <summary>Text description of the update</summary>
        </member>
        <member name="F:TL.Help_AppUpdate.entities">
            <summary><a href="https://corefork.telegram.org/api/entities">Message entities for styled text</a></summary>
        </member>
        <member name="F:TL.Help_AppUpdate.document">
            <summary>Application binary</summary>
        </member>
        <member name="F:TL.Help_AppUpdate.url">
            <summary>Application download URL</summary>
        </member>
        <member name="F:TL.Help_AppUpdate.sticker">
            <summary>Associated sticker</summary>
        </member>
        <member name="F:TL.Help_AppUpdate.Flags.can_not_skip">
            <summary>Unskippable, the new info must be shown to the user (with a popup or something else)</summary>
        </member>
        <member name="F:TL.Help_AppUpdate.Flags.has_document">
            <summary>Field <see cref="F:TL.Help_AppUpdate.document"/> has a value</summary>
        </member>
        <member name="F:TL.Help_AppUpdate.Flags.has_url">
            <summary>Field <see cref="F:TL.Help_AppUpdate.url"/> has a value</summary>
        </member>
        <member name="F:TL.Help_AppUpdate.Flags.has_sticker">
            <summary>Field <see cref="F:TL.Help_AppUpdate.sticker"/> has a value</summary>
        </member>
        <member name="T:TL.Help_InviteText">
            <summary>Text of a text message with an invitation to install Telegram.		<para>See <a href="https://corefork.telegram.org/constructor/help.inviteText"/></para></summary>
        </member>
        <member name="F:TL.Help_InviteText.message">
            <summary>Text of the message</summary>
        </member>
        <member name="T:TL.EncryptedChatBase">
            <summary>Object contains info on an encrypted chat.		<para>See <a href="https://corefork.telegram.org/type/EncryptedChat"/></para>		<para>Derived classes: <see cref="T:TL.EncryptedChatEmpty"/>, <see cref="T:TL.EncryptedChatWaiting"/>, <see cref="T:TL.EncryptedChatRequested"/>, <see cref="T:TL.EncryptedChat"/>, <see cref="T:TL.EncryptedChatDiscarded"/></para></summary>
        </member>
        <member name="P:TL.EncryptedChatBase.ID">
            <summary>Chat ID</summary>
        </member>
        <member name="P:TL.EncryptedChatBase.AccessHash">
            <summary>Checking sum depending on user ID</summary>
        </member>
        <member name="P:TL.EncryptedChatBase.Date">
            <summary>Date of chat creation</summary>
        </member>
        <member name="P:TL.EncryptedChatBase.AdminId">
            <summary>Chat creator ID</summary>
        </member>
        <member name="P:TL.EncryptedChatBase.ParticipantId">
            <summary>ID of second chat participant</summary>
        </member>
        <member name="T:TL.EncryptedChatEmpty">
            <summary>Empty constructor.		<para>See <a href="https://corefork.telegram.org/constructor/encryptedChatEmpty"/></para></summary>
        </member>
        <member name="F:TL.EncryptedChatEmpty.id">
            <summary>Chat ID</summary>
        </member>
        <member name="P:TL.EncryptedChatEmpty.ID">
            <summary>Chat ID</summary>
        </member>
        <member name="T:TL.EncryptedChatWaiting">
            <summary>Chat waiting for approval of second participant.		<para>See <a href="https://corefork.telegram.org/constructor/encryptedChatWaiting"/></para></summary>
        </member>
        <member name="F:TL.EncryptedChatWaiting.id">
            <summary>Chat ID</summary>
        </member>
        <member name="F:TL.EncryptedChatWaiting.access_hash">
            <summary>Checking sum depending on user ID</summary>
        </member>
        <member name="F:TL.EncryptedChatWaiting.date">
            <summary>Date of chat creation</summary>
        </member>
        <member name="F:TL.EncryptedChatWaiting.admin_id">
            <summary>Chat creator ID</summary>
        </member>
        <member name="F:TL.EncryptedChatWaiting.participant_id">
            <summary>ID of second chat participant</summary>
        </member>
        <member name="P:TL.EncryptedChatWaiting.ID">
            <summary>Chat ID</summary>
        </member>
        <member name="P:TL.EncryptedChatWaiting.AccessHash">
            <summary>Checking sum depending on user ID</summary>
        </member>
        <member name="P:TL.EncryptedChatWaiting.Date">
            <summary>Date of chat creation</summary>
        </member>
        <member name="P:TL.EncryptedChatWaiting.AdminId">
            <summary>Chat creator ID</summary>
        </member>
        <member name="P:TL.EncryptedChatWaiting.ParticipantId">
            <summary>ID of second chat participant</summary>
        </member>
        <member name="T:TL.EncryptedChatRequested">
            <summary>Request to create an encrypted chat.		<para>See <a href="https://corefork.telegram.org/constructor/encryptedChatRequested"/></para></summary>
        </member>
        <member name="F:TL.EncryptedChatRequested.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.EncryptedChatRequested.folder_id">
            <summary><a href="https://corefork.telegram.org/api/folders#peer-folders">Peer folder ID, for more info click here</a></summary>
        </member>
        <member name="F:TL.EncryptedChatRequested.id">
            <summary>Chat ID</summary>
        </member>
        <member name="F:TL.EncryptedChatRequested.access_hash">
            <summary>Check sum depending on user ID</summary>
        </member>
        <member name="F:TL.EncryptedChatRequested.date">
            <summary>Chat creation date</summary>
        </member>
        <member name="F:TL.EncryptedChatRequested.admin_id">
            <summary>Chat creator ID</summary>
        </member>
        <member name="F:TL.EncryptedChatRequested.participant_id">
            <summary>ID of second chat participant</summary>
        </member>
        <member name="F:TL.EncryptedChatRequested.g_a">
            <summary><c>A = g ^ a mod p</c>, see <a href="https://en.wikipedia.org/wiki/Diffie%E2%80%93Hellman_key_exchange">Wikipedia</a></summary>
        </member>
        <member name="F:TL.EncryptedChatRequested.Flags.has_folder_id">
            <summary>Field <see cref="F:TL.EncryptedChatRequested.folder_id"/> has a value</summary>
        </member>
        <member name="P:TL.EncryptedChatRequested.ID">
            <summary>Chat ID</summary>
        </member>
        <member name="P:TL.EncryptedChatRequested.AccessHash">
            <summary>Check sum depending on user ID</summary>
        </member>
        <member name="P:TL.EncryptedChatRequested.Date">
            <summary>Chat creation date</summary>
        </member>
        <member name="P:TL.EncryptedChatRequested.AdminId">
            <summary>Chat creator ID</summary>
        </member>
        <member name="P:TL.EncryptedChatRequested.ParticipantId">
            <summary>ID of second chat participant</summary>
        </member>
        <member name="T:TL.EncryptedChat">
            <summary>Encrypted chat		<para>See <a href="https://corefork.telegram.org/constructor/encryptedChat"/></para></summary>
        </member>
        <member name="F:TL.EncryptedChat.id">
            <summary>Chat ID</summary>
        </member>
        <member name="F:TL.EncryptedChat.access_hash">
            <summary>Check sum dependent on the user ID</summary>
        </member>
        <member name="F:TL.EncryptedChat.date">
            <summary>Date chat was created</summary>
        </member>
        <member name="F:TL.EncryptedChat.admin_id">
            <summary>Chat creator ID</summary>
        </member>
        <member name="F:TL.EncryptedChat.participant_id">
            <summary>ID of the second chat participant</summary>
        </member>
        <member name="F:TL.EncryptedChat.g_a_or_b">
            <summary><c>B = g ^ b mod p</c>, if the currently authorized user is the chat's creator,<br/>or <c>A = g ^ a mod p</c> otherwise<br/>See <a href="https://en.wikipedia.org/wiki/Diffie%E2%80%93Hellman_key_exchange">Wikipedia</a> for more info</summary>
        </member>
        <member name="F:TL.EncryptedChat.key_fingerprint">
            <summary>64-bit fingerprint of received key</summary>
        </member>
        <member name="P:TL.EncryptedChat.ID">
            <summary>Chat ID</summary>
        </member>
        <member name="P:TL.EncryptedChat.AccessHash">
            <summary>Check sum dependent on the user ID</summary>
        </member>
        <member name="P:TL.EncryptedChat.Date">
            <summary>Date chat was created</summary>
        </member>
        <member name="P:TL.EncryptedChat.AdminId">
            <summary>Chat creator ID</summary>
        </member>
        <member name="P:TL.EncryptedChat.ParticipantId">
            <summary>ID of the second chat participant</summary>
        </member>
        <member name="T:TL.EncryptedChatDiscarded">
            <summary>Discarded or deleted chat.		<para>See <a href="https://corefork.telegram.org/constructor/encryptedChatDiscarded"/></para></summary>
        </member>
        <member name="F:TL.EncryptedChatDiscarded.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.EncryptedChatDiscarded.id">
            <summary>Chat ID</summary>
        </member>
        <member name="F:TL.EncryptedChatDiscarded.Flags.history_deleted">
            <summary>Whether both users of this secret chat should also remove all of its messages</summary>
        </member>
        <member name="P:TL.EncryptedChatDiscarded.ID">
            <summary>Chat ID</summary>
        </member>
        <member name="T:TL.InputEncryptedChat">
            <summary>Creates an encrypted chat.		<para>See <a href="https://corefork.telegram.org/constructor/inputEncryptedChat"/></para></summary>
        </member>
        <member name="F:TL.InputEncryptedChat.chat_id">
            <summary>Chat ID</summary>
        </member>
        <member name="F:TL.InputEncryptedChat.access_hash">
            <summary>⚠ <b>REQUIRED FIELD</b>. See <see href="https://wiz0u.github.io/WTelegramClient/FAQ#access-hash">how to obtain it</see><br/>Checking sum from constructor <see cref="T:TL.EncryptedChat"/>, <see cref="T:TL.EncryptedChatWaiting"/> or <see cref="T:TL.EncryptedChatRequested"/></summary>
        </member>
        <member name="T:TL.EncryptedFile">
            <summary>Encrypted file.		<para>See <a href="https://corefork.telegram.org/constructor/encryptedFile"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/encryptedFileEmpty">encryptedFileEmpty</a></remarks>
        </member>
        <member name="F:TL.EncryptedFile.id">
            <summary>File ID</summary>
        </member>
        <member name="F:TL.EncryptedFile.access_hash">
            <summary>Checking sum depending on user ID</summary>
        </member>
        <member name="F:TL.EncryptedFile.size">
            <summary>File size in bytes</summary>
        </member>
        <member name="F:TL.EncryptedFile.dc_id">
            <summary>Number of data center</summary>
        </member>
        <member name="F:TL.EncryptedFile.key_fingerprint">
            <summary>32-bit fingerprint of key used for file encryption</summary>
        </member>
        <member name="T:TL.InputEncryptedFileBase">
            <summary>Object sets encrypted file for attachment		<para>See <a href="https://corefork.telegram.org/type/InputEncryptedFile"/></para>		<para>Derived classes: <see cref="T:TL.InputEncryptedFileUploaded"/>, <see cref="T:TL.InputEncryptedFile"/>, <see cref="T:TL.InputEncryptedFileBigUploaded"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/inputEncryptedFileEmpty">inputEncryptedFileEmpty</a></remarks>
        </member>
        <member name="P:TL.InputEncryptedFileBase.ID">
            <summary>Random file ID created by client</summary>
        </member>
        <member name="T:TL.InputEncryptedFileUploaded">
            <summary>Sets new encrypted file saved by parts using upload.saveFilePart method.		<para>See <a href="https://corefork.telegram.org/constructor/inputEncryptedFileUploaded"/></para></summary>
        </member>
        <member name="F:TL.InputEncryptedFileUploaded.id">
            <summary>Random file ID created by client</summary>
        </member>
        <member name="F:TL.InputEncryptedFileUploaded.parts">
            <summary>Number of saved parts</summary>
        </member>
        <member name="F:TL.InputEncryptedFileUploaded.md5_checksum">
            <summary>In case <a href="https://en.wikipedia.org/wiki/MD5">md5-HASH</a> of the (already encrypted) file was transmitted, file content will be checked prior to use</summary>
        </member>
        <member name="F:TL.InputEncryptedFileUploaded.key_fingerprint">
            <summary>32-bit fingerprint of the key used to encrypt a file</summary>
        </member>
        <member name="P:TL.InputEncryptedFileUploaded.ID">
            <summary>Random file ID created by client</summary>
        </member>
        <member name="T:TL.InputEncryptedFile">
            <summary>Sets forwarded encrypted file for attachment.		<para>See <a href="https://corefork.telegram.org/constructor/inputEncryptedFile"/></para></summary>
        </member>
        <member name="F:TL.InputEncryptedFile.id">
            <summary>File ID, value of <strong>id</strong> parameter from <see cref="T:TL.EncryptedFile"/></summary>
        </member>
        <member name="F:TL.InputEncryptedFile.access_hash">
            <summary>⚠ <b>REQUIRED FIELD</b>. See <see href="https://wiz0u.github.io/WTelegramClient/FAQ#access-hash">how to obtain it</see><br/>Checking sum, value of <strong>access_hash</strong> parameter from <see cref="T:TL.EncryptedFile"/></summary>
        </member>
        <member name="P:TL.InputEncryptedFile.ID">
            <summary>File ID, value of <strong>id</strong> parameter from <see cref="T:TL.EncryptedFile"/></summary>
        </member>
        <member name="T:TL.InputEncryptedFileBigUploaded">
            <summary>Assigns a new big encrypted file (over 10 MB in size), saved in parts using the method <see cref="M:TL.SchemaExtensions.Upload_SaveBigFilePart(WTelegram.Client,System.Int64,System.Int32,System.Int32,System.Byte[])">Upload_SaveBigFilePart</see>.		<para>See <a href="https://corefork.telegram.org/constructor/inputEncryptedFileBigUploaded"/></para></summary>
        </member>
        <member name="F:TL.InputEncryptedFileBigUploaded.id">
            <summary>Random file id, created by the client</summary>
        </member>
        <member name="F:TL.InputEncryptedFileBigUploaded.parts">
            <summary>Number of saved parts</summary>
        </member>
        <member name="F:TL.InputEncryptedFileBigUploaded.key_fingerprint">
            <summary>32-bit imprint of the key used to encrypt the file</summary>
        </member>
        <member name="P:TL.InputEncryptedFileBigUploaded.ID">
            <summary>Random file id, created by the client</summary>
        </member>
        <member name="T:TL.EncryptedMessageBase">
            <summary>Object contains encrypted message.		<para>See <a href="https://corefork.telegram.org/type/EncryptedMessage"/></para>		<para>Derived classes: <see cref="T:TL.EncryptedMessage"/>, <see cref="T:TL.EncryptedMessageService"/></para></summary>
        </member>
        <member name="P:TL.EncryptedMessageBase.RandomId">
            <summary>Random message ID, assigned by the author of message</summary>
        </member>
        <member name="P:TL.EncryptedMessageBase.ChatId">
            <summary>ID of encrypted chat</summary>
        </member>
        <member name="P:TL.EncryptedMessageBase.Date">
            <summary>Date of sending</summary>
        </member>
        <member name="P:TL.EncryptedMessageBase.Bytes">
            <summary>TL-serialization of <see cref="T:TL.DecryptedMessageBase"/> type, encrypted with the key created at chat initialization</summary>
        </member>
        <member name="T:TL.EncryptedMessage">
            <summary>Encrypted message.		<para>See <a href="https://corefork.telegram.org/constructor/encryptedMessage"/></para></summary>
        </member>
        <member name="F:TL.EncryptedMessage.random_id">
            <summary>Random message ID, assigned by the author of message</summary>
        </member>
        <member name="F:TL.EncryptedMessage.chat_id">
            <summary>ID of encrypted chat</summary>
        </member>
        <member name="F:TL.EncryptedMessage.date">
            <summary>Date of sending</summary>
        </member>
        <member name="F:TL.EncryptedMessage.bytes">
            <summary>TL-serialization of <see cref="T:TL.DecryptedMessageBase"/> type, encrypted with the key created at chat initialization</summary>
        </member>
        <member name="F:TL.EncryptedMessage.file">
            <summary>Attached encrypted file</summary>
        </member>
        <member name="P:TL.EncryptedMessage.RandomId">
            <summary>Random message ID, assigned by the author of message</summary>
        </member>
        <member name="P:TL.EncryptedMessage.ChatId">
            <summary>ID of encrypted chat</summary>
        </member>
        <member name="P:TL.EncryptedMessage.Date">
            <summary>Date of sending</summary>
        </member>
        <member name="P:TL.EncryptedMessage.Bytes">
            <summary>TL-serialization of <see cref="T:TL.DecryptedMessageBase"/> type, encrypted with the key created at chat initialization</summary>
        </member>
        <member name="T:TL.EncryptedMessageService">
            <summary>Encrypted service message		<para>See <a href="https://corefork.telegram.org/constructor/encryptedMessageService"/></para></summary>
        </member>
        <member name="F:TL.EncryptedMessageService.random_id">
            <summary>Random message ID, assigned by the author of message</summary>
        </member>
        <member name="F:TL.EncryptedMessageService.chat_id">
            <summary>ID of encrypted chat</summary>
        </member>
        <member name="F:TL.EncryptedMessageService.date">
            <summary>Date of sending</summary>
        </member>
        <member name="F:TL.EncryptedMessageService.bytes">
            <summary>TL-serialization of the <see cref="T:TL.DecryptedMessageBase"/> type, encrypted with the key created at chat initialization</summary>
        </member>
        <member name="P:TL.EncryptedMessageService.RandomId">
            <summary>Random message ID, assigned by the author of message</summary>
        </member>
        <member name="P:TL.EncryptedMessageService.ChatId">
            <summary>ID of encrypted chat</summary>
        </member>
        <member name="P:TL.EncryptedMessageService.Date">
            <summary>Date of sending</summary>
        </member>
        <member name="P:TL.EncryptedMessageService.Bytes">
            <summary>TL-serialization of the <see cref="T:TL.DecryptedMessageBase"/> type, encrypted with the key created at chat initialization</summary>
        </member>
        <member name="T:TL.Messages_DhConfigBase">
            <summary>Contains Diffie-Hellman key generation protocol parameters.		<para>See <a href="https://corefork.telegram.org/type/messages.DhConfig"/></para>		<para>Derived classes: <see cref="T:TL.Messages_DhConfigNotModified"/>, <see cref="T:TL.Messages_DhConfig"/></para></summary>
        </member>
        <member name="T:TL.Messages_DhConfigNotModified">
            <summary>Configuring parameters did not change.		<para>See <a href="https://corefork.telegram.org/constructor/messages.dhConfigNotModified"/></para></summary>
        </member>
        <member name="F:TL.Messages_DhConfigNotModified.random">
            <summary>Random sequence of bytes of assigned length</summary>
        </member>
        <member name="T:TL.Messages_DhConfig">
            <summary>New set of configuring parameters.		<para>See <a href="https://corefork.telegram.org/constructor/messages.dhConfig"/></para></summary>
        </member>
        <member name="F:TL.Messages_DhConfig.g">
            <summary>New value <strong>prime</strong>, see <a href="https://en.wikipedia.org/wiki/Diffie%E2%80%93Hellman_key_exchange">Wikipedia</a></summary>
        </member>
        <member name="F:TL.Messages_DhConfig.p">
            <summary>New value <strong>primitive root</strong>, see <a href="https://en.wikipedia.org/wiki/Diffie%E2%80%93Hellman_key_exchange">Wikipedia</a></summary>
        </member>
        <member name="F:TL.Messages_DhConfig.version">
            <summary>Version of set of parameters</summary>
        </member>
        <member name="F:TL.Messages_DhConfig.random">
            <summary>Random sequence of bytes of assigned length</summary>
        </member>
        <member name="T:TL.Messages_SentEncryptedMessage">
            <summary>Message without file attachments sent to an encrypted file.		<para>See <a href="https://corefork.telegram.org/constructor/messages.sentEncryptedMessage"/></para></summary>
        </member>
        <member name="F:TL.Messages_SentEncryptedMessage.date">
            <summary>Date of sending</summary>
        </member>
        <member name="T:TL.Messages_SentEncryptedFile">
            <summary>Message with a file enclosure sent to a protected chat		<para>See <a href="https://corefork.telegram.org/constructor/messages.sentEncryptedFile"/></para></summary>
        </member>
        <member name="F:TL.Messages_SentEncryptedFile.file">
            <summary>Attached file</summary>
        </member>
        <member name="T:TL.InputDocument">
            <summary>Defines a document for subsequent interaction.		<para>See <a href="https://corefork.telegram.org/constructor/inputDocument"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/inputDocumentEmpty">inputDocumentEmpty</a></remarks>
        </member>
        <member name="F:TL.InputDocument.id">
            <summary>Document ID</summary>
        </member>
        <member name="F:TL.InputDocument.access_hash">
            <summary>⚠ <b>REQUIRED FIELD</b>. See <see href="https://wiz0u.github.io/WTelegramClient/FAQ#access-hash">how to obtain it</see><br/><strong>access_hash</strong> parameter from the <see cref="T:TL.Document"/></summary>
        </member>
        <member name="F:TL.InputDocument.file_reference">
            <summary><a href="https://corefork.telegram.org/api/file_reference">File reference</a></summary>
        </member>
        <member name="T:TL.DocumentBase">
            <summary>A document.		<para>See <a href="https://corefork.telegram.org/type/Document"/></para>		<para>Derived classes: <see cref="T:TL.DocumentEmpty"/>, <see cref="T:TL.Document"/></para></summary>
        </member>
        <member name="T:TL.DocumentEmpty">
            <summary>Empty constructor, document doesn't exist.		<para>See <a href="https://corefork.telegram.org/constructor/documentEmpty"/></para></summary>
        </member>
        <member name="F:TL.DocumentEmpty.id">
            <summary>Document ID or <c>0</c></summary>
        </member>
        <member name="T:TL.Document">
            <summary>Document		<para>See <a href="https://corefork.telegram.org/constructor/document"/></para></summary>
        </member>
        <member name="F:TL.Document.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Document.id">
            <summary>Document ID</summary>
        </member>
        <member name="F:TL.Document.access_hash">
            <summary>Check sum, dependent on document ID</summary>
        </member>
        <member name="F:TL.Document.file_reference">
            <summary><a href="https://corefork.telegram.org/api/file_reference">File reference</a></summary>
        </member>
        <member name="F:TL.Document.date">
            <summary>Creation date</summary>
        </member>
        <member name="F:TL.Document.mime_type">
            <summary>MIME type</summary>
        </member>
        <member name="F:TL.Document.size">
            <summary>Size</summary>
        </member>
        <member name="F:TL.Document.thumbs">
            <summary>Thumbnails</summary>
        </member>
        <member name="F:TL.Document.video_thumbs">
            <summary>Video thumbnails</summary>
        </member>
        <member name="F:TL.Document.dc_id">
            <summary>DC ID</summary>
        </member>
        <member name="F:TL.Document.attributes">
            <summary>Attributes</summary>
        </member>
        <member name="F:TL.Document.Flags.has_thumbs">
            <summary>Field <see cref="F:TL.Document.thumbs"/> has a value</summary>
        </member>
        <member name="F:TL.Document.Flags.has_video_thumbs">
            <summary>Field <see cref="F:TL.Document.video_thumbs"/> has a value</summary>
        </member>
        <member name="T:TL.Help_Support">
            <summary>Info on support user.		<para>See <a href="https://corefork.telegram.org/constructor/help.support"/></para></summary>
        </member>
        <member name="F:TL.Help_Support.phone_number">
            <summary>Phone number</summary>
        </member>
        <member name="F:TL.Help_Support.user">
            <summary>User</summary>
        </member>
        <member name="T:TL.NotifyPeerBase">
            <summary>Object defines the set of users and/or groups that generate notifications.		<para>See <a href="https://corefork.telegram.org/type/NotifyPeer"/></para>		<para>Derived classes: <see cref="T:TL.NotifyPeer"/>, <see cref="T:TL.NotifyUsers"/>, <see cref="T:TL.NotifyChats"/>, <see cref="T:TL.NotifyBroadcasts"/>, <see cref="T:TL.NotifyForumTopic"/></para></summary>
        </member>
        <member name="T:TL.NotifyPeer">
            <summary>Notifications generated by a certain user or group.		<para>See <a href="https://corefork.telegram.org/constructor/notifyPeer"/></para></summary>
        </member>
        <member name="F:TL.NotifyPeer.peer">
            <summary>user or group</summary>
        </member>
        <member name="T:TL.NotifyUsers">
            <summary>Notifications generated by all users.		<para>See <a href="https://corefork.telegram.org/constructor/notifyUsers"/></para></summary>
        </member>
        <member name="T:TL.NotifyChats">
            <summary>Notifications generated by all groups.		<para>See <a href="https://corefork.telegram.org/constructor/notifyChats"/></para></summary>
        </member>
        <member name="T:TL.NotifyBroadcasts">
            <summary>Channel notification settings		<para>See <a href="https://corefork.telegram.org/constructor/notifyBroadcasts"/></para></summary>
        </member>
        <member name="T:TL.NotifyForumTopic">
            <summary>Notifications generated by a <a href="https://corefork.telegram.org/api/forum#forum-topics">topic</a> in a <a href="https://corefork.telegram.org/api/forum">forum</a>.		<para>See <a href="https://corefork.telegram.org/constructor/notifyForumTopic"/></para></summary>
        </member>
        <member name="F:TL.NotifyForumTopic.peer">
            <summary>Forum ID</summary>
        </member>
        <member name="F:TL.NotifyForumTopic.top_msg_id">
            <summary><a href="https://corefork.telegram.org/api/forum#forum-topics">Topic ID</a></summary>
        </member>
        <member name="T:TL.SendMessageAction">
            <summary>User actions. Use this to provide users with detailed info about their chat partner's actions: typing or sending attachments of all kinds.		<para>See <a href="https://corefork.telegram.org/type/SendMessageAction"/></para>		<para>Derived classes: <see cref="T:TL.SendMessageTypingAction"/>, <see cref="T:TL.SendMessageCancelAction"/>, <see cref="T:TL.SendMessageRecordVideoAction"/>, <see cref="T:TL.SendMessageUploadVideoAction"/>, <see cref="T:TL.SendMessageRecordAudioAction"/>, <see cref="T:TL.SendMessageUploadAudioAction"/>, <see cref="T:TL.SendMessageUploadPhotoAction"/>, <see cref="T:TL.SendMessageUploadDocumentAction"/>, <see cref="T:TL.SendMessageGeoLocationAction"/>, <see cref="T:TL.SendMessageChooseContactAction"/>, <see cref="T:TL.SendMessageGamePlayAction"/>, <see cref="T:TL.SendMessageRecordRoundAction"/>, <see cref="T:TL.SendMessageUploadRoundAction"/>, <see cref="T:TL.SpeakingInGroupCallAction"/>, <see cref="T:TL.SendMessageHistoryImportAction"/>, <see cref="T:TL.SendMessageChooseStickerAction"/>, <see cref="T:TL.SendMessageEmojiInteraction"/>, <see cref="T:TL.SendMessageEmojiInteractionSeen"/></para></summary>
        </member>
        <member name="T:TL.SendMessageTypingAction">
            <summary>User is typing.		<para>See <a href="https://corefork.telegram.org/constructor/sendMessageTypingAction"/></para></summary>
        </member>
        <member name="T:TL.SendMessageCancelAction">
            <summary>Invalidate all previous action updates. E.g. when user deletes entered text or aborts a video upload.		<para>See <a href="https://corefork.telegram.org/constructor/sendMessageCancelAction"/></para></summary>
        </member>
        <member name="T:TL.SendMessageRecordVideoAction">
            <summary>User is recording a video.		<para>See <a href="https://corefork.telegram.org/constructor/sendMessageRecordVideoAction"/></para></summary>
        </member>
        <member name="T:TL.SendMessageUploadVideoAction">
            <summary>User is uploading a video.		<para>See <a href="https://corefork.telegram.org/constructor/sendMessageUploadVideoAction"/></para></summary>
        </member>
        <member name="F:TL.SendMessageUploadVideoAction.progress">
            <summary>Progress percentage</summary>
        </member>
        <member name="T:TL.SendMessageRecordAudioAction">
            <summary>User is recording a voice message.		<para>See <a href="https://corefork.telegram.org/constructor/sendMessageRecordAudioAction"/></para></summary>
        </member>
        <member name="T:TL.SendMessageUploadAudioAction">
            <summary>User is uploading a voice message.		<para>See <a href="https://corefork.telegram.org/constructor/sendMessageUploadAudioAction"/></para></summary>
        </member>
        <member name="F:TL.SendMessageUploadAudioAction.progress">
            <summary>Progress percentage</summary>
        </member>
        <member name="T:TL.SendMessageUploadPhotoAction">
            <summary>User is uploading a photo.		<para>See <a href="https://corefork.telegram.org/constructor/sendMessageUploadPhotoAction"/></para></summary>
        </member>
        <member name="F:TL.SendMessageUploadPhotoAction.progress">
            <summary>Progress percentage</summary>
        </member>
        <member name="T:TL.SendMessageUploadDocumentAction">
            <summary>User is uploading a file.		<para>See <a href="https://corefork.telegram.org/constructor/sendMessageUploadDocumentAction"/></para></summary>
        </member>
        <member name="F:TL.SendMessageUploadDocumentAction.progress">
            <summary>Progress percentage</summary>
        </member>
        <member name="T:TL.SendMessageGeoLocationAction">
            <summary>User is selecting a location to share.		<para>See <a href="https://corefork.telegram.org/constructor/sendMessageGeoLocationAction"/></para></summary>
        </member>
        <member name="T:TL.SendMessageChooseContactAction">
            <summary>User is selecting a contact to share.		<para>See <a href="https://corefork.telegram.org/constructor/sendMessageChooseContactAction"/></para></summary>
        </member>
        <member name="T:TL.SendMessageGamePlayAction">
            <summary>User is playing a game		<para>See <a href="https://corefork.telegram.org/constructor/sendMessageGamePlayAction"/></para></summary>
        </member>
        <member name="T:TL.SendMessageRecordRoundAction">
            <summary>User is recording a round video to share		<para>See <a href="https://corefork.telegram.org/constructor/sendMessageRecordRoundAction"/></para></summary>
        </member>
        <member name="T:TL.SendMessageUploadRoundAction">
            <summary>User is uploading a round video		<para>See <a href="https://corefork.telegram.org/constructor/sendMessageUploadRoundAction"/></para></summary>
        </member>
        <member name="F:TL.SendMessageUploadRoundAction.progress">
            <summary>Progress percentage</summary>
        </member>
        <member name="T:TL.SpeakingInGroupCallAction">
            <summary>User is currently speaking in the group call		<para>See <a href="https://corefork.telegram.org/constructor/speakingInGroupCallAction"/></para></summary>
        </member>
        <member name="T:TL.SendMessageHistoryImportAction">
            <summary>Chat history is being imported		<para>See <a href="https://corefork.telegram.org/constructor/sendMessageHistoryImportAction"/></para></summary>
        </member>
        <member name="F:TL.SendMessageHistoryImportAction.progress">
            <summary>Progress percentage</summary>
        </member>
        <member name="T:TL.SendMessageChooseStickerAction">
            <summary>User is choosing a sticker		<para>See <a href="https://corefork.telegram.org/constructor/sendMessageChooseStickerAction"/></para></summary>
        </member>
        <member name="T:TL.SendMessageEmojiInteraction">
            <summary>User has clicked on an animated emoji triggering a <a href="https://corefork.telegram.org/api/animated-emojis#emoji-reactions">reaction, click here for more info »</a>.		<para>See <a href="https://corefork.telegram.org/constructor/sendMessageEmojiInteraction"/></para></summary>
        </member>
        <member name="F:TL.SendMessageEmojiInteraction.emoticon">
            <summary>Emoji</summary>
        </member>
        <member name="F:TL.SendMessageEmojiInteraction.msg_id">
            <summary>Message ID of the animated emoji that was clicked</summary>
        </member>
        <member name="F:TL.SendMessageEmojiInteraction.interaction">
            <summary>A JSON object with interaction info, <a href="https://corefork.telegram.org/api/animated-emojis#emoji-reactions">click here for more info »</a></summary>
        </member>
        <member name="T:TL.SendMessageEmojiInteractionSeen">
            <summary>User is watching an animated emoji reaction triggered by another user, <a href="https://corefork.telegram.org/api/animated-emojis#emoji-reactions">click here for more info »</a>.		<para>See <a href="https://corefork.telegram.org/constructor/sendMessageEmojiInteractionSeen"/></para></summary>
        </member>
        <member name="F:TL.SendMessageEmojiInteractionSeen.emoticon">
            <summary>Emoji</summary>
        </member>
        <member name="T:TL.Contacts_Found">
            <summary>Users found by name substring and auxiliary data.		<para>See <a href="https://corefork.telegram.org/constructor/contacts.found"/></para></summary>
        </member>
        <member name="F:TL.Contacts_Found.my_results">
            <summary>Personalized results</summary>
        </member>
        <member name="F:TL.Contacts_Found.results">
            <summary>List of found user identifiers</summary>
        </member>
        <member name="F:TL.Contacts_Found.chats">
            <summary>Found chats</summary>
        </member>
        <member name="F:TL.Contacts_Found.users">
            <summary>List of users</summary>
        </member>
        <member name="M:TL.Contacts_Found.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.InputPrivacyKey">
            <summary>Privacy <strong>keys</strong> together with <a href="https://corefork.telegram.org/api/privacy#privacy-rules">privacy rules »</a> indicate <em>what</em> can or can't someone do and are specified by a <see cref="T:TL.PrivacyKey"/> constructor, and its input counterpart <see cref="T:TL.InputPrivacyKey"/>.		<para>See <a href="https://corefork.telegram.org/type/InputPrivacyKey"/></para></summary>
        </member>
        <member name="F:TL.InputPrivacyKey.StatusTimestamp">
            <summary>Whether people will be able to see your exact last online timestamp</summary>
        </member>
        <member name="F:TL.InputPrivacyKey.ChatInvite">
            <summary>Whether people will be able to invite you to chats</summary>
        </member>
        <member name="F:TL.InputPrivacyKey.PhoneCall">
            <summary>Whether you will accept phone calls</summary>
        </member>
        <member name="F:TL.InputPrivacyKey.PhoneP2P">
            <summary>Whether to allow P2P communication during VoIP calls</summary>
        </member>
        <member name="F:TL.InputPrivacyKey.Forwards">
            <summary>Whether messages forwarded from you will be <a href="https://telegram.org/blog/unsend-privacy-emoji#anonymous-forwarding">anonymous</a></summary>
        </member>
        <member name="F:TL.InputPrivacyKey.ProfilePhoto">
            <summary>Whether people will be able to see your profile picture</summary>
        </member>
        <member name="F:TL.InputPrivacyKey.PhoneNumber">
            <summary>Whether people will be able to see your phone number</summary>
        </member>
        <member name="F:TL.InputPrivacyKey.AddedByPhone">
            <summary>Whether people can add you to their contact list by your phone number</summary>
        </member>
        <member name="F:TL.InputPrivacyKey.VoiceMessages">
            <summary>Whether people can send you voice messages</summary>
        </member>
        <member name="F:TL.InputPrivacyKey.About">
            <summary>Whether people can see your bio</summary>
        </member>
        <member name="F:TL.InputPrivacyKey.Birthday">
            <summary>See <a href="https://corefork.telegram.org/constructor/inputPrivacyKeyBirthday"/></summary>
        </member>
        <member name="T:TL.PrivacyKey">
            <summary>Privacy <strong>keys</strong> together with <a href="https://corefork.telegram.org/api/privacy#privacy-rules">privacy rules »</a> indicate <em>what</em> can or can't someone do and are specified by a <see cref="T:TL.PrivacyKey"/> constructor, and its input counterpart <see cref="T:TL.InputPrivacyKey"/>.		<para>See <a href="https://corefork.telegram.org/type/PrivacyKey"/></para></summary>
        </member>
        <member name="F:TL.PrivacyKey.StatusTimestamp">
            <summary>Whether we can see the last online timestamp of this user</summary>
        </member>
        <member name="F:TL.PrivacyKey.ChatInvite">
            <summary>Whether the user can be invited to chats</summary>
        </member>
        <member name="F:TL.PrivacyKey.PhoneCall">
            <summary>Whether the user accepts phone calls</summary>
        </member>
        <member name="F:TL.PrivacyKey.PhoneP2P">
            <summary>Whether P2P connections in phone calls with this user are allowed</summary>
        </member>
        <member name="F:TL.PrivacyKey.Forwards">
            <summary>Whether messages forwarded from the user will be <a href="https://telegram.org/blog/unsend-privacy-emoji#anonymous-forwarding">anonymously forwarded</a></summary>
        </member>
        <member name="F:TL.PrivacyKey.ProfilePhoto">
            <summary>Whether the profile picture of the user is visible</summary>
        </member>
        <member name="F:TL.PrivacyKey.PhoneNumber">
            <summary>Whether the user allows us to see his phone number</summary>
        </member>
        <member name="F:TL.PrivacyKey.AddedByPhone">
            <summary>Whether this user can be added to our contact list by their phone number</summary>
        </member>
        <member name="F:TL.PrivacyKey.VoiceMessages">
            <summary>Whether the user accepts voice messages</summary>
        </member>
        <member name="F:TL.PrivacyKey.About">
            <summary>Whether people can see your bio</summary>
        </member>
        <member name="F:TL.PrivacyKey.Birthday">
            <summary>See <a href="https://corefork.telegram.org/constructor/privacyKeyBirthday"/></summary>
        </member>
        <member name="T:TL.InputPrivacyRule">
            <summary>Privacy <strong>rules</strong> indicate <em>who</em> can or can't do something and are specified by a <see cref="T:TL.PrivacyRule"/>, and its input counterpart <see cref="T:TL.InputPrivacyRule"/>.		<para>See <a href="https://corefork.telegram.org/type/InputPrivacyRule"/></para>		<para>Derived classes: <see cref="T:TL.InputPrivacyValueAllowContacts"/>, <see cref="T:TL.InputPrivacyValueAllowAll"/>, <see cref="T:TL.InputPrivacyValueAllowUsers"/>, <see cref="T:TL.InputPrivacyValueDisallowContacts"/>, <see cref="T:TL.InputPrivacyValueDisallowAll"/>, <see cref="T:TL.InputPrivacyValueDisallowUsers"/>, <see cref="T:TL.InputPrivacyValueAllowChatParticipants"/>, <see cref="T:TL.InputPrivacyValueDisallowChatParticipants"/>, <see cref="T:TL.InputPrivacyValueAllowCloseFriends"/></para></summary>
        </member>
        <member name="T:TL.InputPrivacyValueAllowContacts">
            <summary>Allow only contacts		<para>See <a href="https://corefork.telegram.org/constructor/inputPrivacyValueAllowContacts"/></para></summary>
        </member>
        <member name="T:TL.InputPrivacyValueAllowAll">
            <summary>Allow all users		<para>See <a href="https://corefork.telegram.org/constructor/inputPrivacyValueAllowAll"/></para></summary>
        </member>
        <member name="T:TL.InputPrivacyValueAllowUsers">
            <summary>Allow only certain users		<para>See <a href="https://corefork.telegram.org/constructor/inputPrivacyValueAllowUsers"/></para></summary>
        </member>
        <member name="F:TL.InputPrivacyValueAllowUsers.users">
            <summary>Allowed users</summary>
        </member>
        <member name="T:TL.InputPrivacyValueDisallowContacts">
            <summary>Disallow only contacts		<para>See <a href="https://corefork.telegram.org/constructor/inputPrivacyValueDisallowContacts"/></para></summary>
        </member>
        <member name="T:TL.InputPrivacyValueDisallowAll">
            <summary>Disallow all		<para>See <a href="https://corefork.telegram.org/constructor/inputPrivacyValueDisallowAll"/></para></summary>
        </member>
        <member name="T:TL.InputPrivacyValueDisallowUsers">
            <summary>Disallow only certain users		<para>See <a href="https://corefork.telegram.org/constructor/inputPrivacyValueDisallowUsers"/></para></summary>
        </member>
        <member name="F:TL.InputPrivacyValueDisallowUsers.users">
            <summary>Users to disallow</summary>
        </member>
        <member name="T:TL.InputPrivacyValueAllowChatParticipants">
            <summary>Allow only participants of certain chats		<para>See <a href="https://corefork.telegram.org/constructor/inputPrivacyValueAllowChatParticipants"/></para></summary>
        </member>
        <member name="F:TL.InputPrivacyValueAllowChatParticipants.chats">
            <summary>Allowed chat IDs</summary>
        </member>
        <member name="T:TL.InputPrivacyValueDisallowChatParticipants">
            <summary>Disallow only participants of certain chats		<para>See <a href="https://corefork.telegram.org/constructor/inputPrivacyValueDisallowChatParticipants"/></para></summary>
        </member>
        <member name="F:TL.InputPrivacyValueDisallowChatParticipants.chats">
            <summary>Disallowed chat IDs</summary>
        </member>
        <member name="T:TL.InputPrivacyValueAllowCloseFriends">
            <summary>Allow only <a href="https://corefork.telegram.org/api/privacy">close friends »</a>		<para>See <a href="https://corefork.telegram.org/constructor/inputPrivacyValueAllowCloseFriends"/></para></summary>
        </member>
        <member name="T:TL.InputPrivacyValueAllowPremium">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/inputPrivacyValueAllowPremium"/></para></summary>
        </member>
        <member name="T:TL.PrivacyRule">
            <summary>Privacy <strong>rules</strong> together with <a href="https://corefork.telegram.org/api/privacy#privacy-keys">privacy keys</a> indicate <em>what</em> can or can't someone do and are specified by a <see cref="T:TL.PrivacyRule"/> constructor, and its input counterpart <see cref="T:TL.InputPrivacyRule"/>.		<para>See <a href="https://corefork.telegram.org/type/PrivacyRule"/></para>		<para>Derived classes: <see cref="T:TL.PrivacyValueAllowContacts"/>, <see cref="T:TL.PrivacyValueAllowAll"/>, <see cref="T:TL.PrivacyValueAllowUsers"/>, <see cref="T:TL.PrivacyValueDisallowContacts"/>, <see cref="T:TL.PrivacyValueDisallowAll"/>, <see cref="T:TL.PrivacyValueDisallowUsers"/>, <see cref="T:TL.PrivacyValueAllowChatParticipants"/>, <see cref="T:TL.PrivacyValueDisallowChatParticipants"/>, <see cref="T:TL.PrivacyValueAllowCloseFriends"/></para></summary>
        </member>
        <member name="T:TL.PrivacyValueAllowContacts">
            <summary>Allow all contacts		<para>See <a href="https://corefork.telegram.org/constructor/privacyValueAllowContacts"/></para></summary>
        </member>
        <member name="T:TL.PrivacyValueAllowAll">
            <summary>Allow all users		<para>See <a href="https://corefork.telegram.org/constructor/privacyValueAllowAll"/></para></summary>
        </member>
        <member name="T:TL.PrivacyValueAllowUsers">
            <summary>Allow only certain users		<para>See <a href="https://corefork.telegram.org/constructor/privacyValueAllowUsers"/></para></summary>
        </member>
        <member name="F:TL.PrivacyValueAllowUsers.users">
            <summary>Allowed users</summary>
        </member>
        <member name="T:TL.PrivacyValueDisallowContacts">
            <summary>Disallow only contacts		<para>See <a href="https://corefork.telegram.org/constructor/privacyValueDisallowContacts"/></para></summary>
        </member>
        <member name="T:TL.PrivacyValueDisallowAll">
            <summary>Disallow all users		<para>See <a href="https://corefork.telegram.org/constructor/privacyValueDisallowAll"/></para></summary>
        </member>
        <member name="T:TL.PrivacyValueDisallowUsers">
            <summary>Disallow only certain users		<para>See <a href="https://corefork.telegram.org/constructor/privacyValueDisallowUsers"/></para></summary>
        </member>
        <member name="F:TL.PrivacyValueDisallowUsers.users">
            <summary>Disallowed users</summary>
        </member>
        <member name="T:TL.PrivacyValueAllowChatParticipants">
            <summary>Allow all participants of certain chats		<para>See <a href="https://corefork.telegram.org/constructor/privacyValueAllowChatParticipants"/></para></summary>
        </member>
        <member name="F:TL.PrivacyValueAllowChatParticipants.chats">
            <summary>Allowed chats</summary>
        </member>
        <member name="T:TL.PrivacyValueDisallowChatParticipants">
            <summary>Disallow only participants of certain chats		<para>See <a href="https://corefork.telegram.org/constructor/privacyValueDisallowChatParticipants"/></para></summary>
        </member>
        <member name="F:TL.PrivacyValueDisallowChatParticipants.chats">
            <summary>Disallowed chats</summary>
        </member>
        <member name="T:TL.PrivacyValueAllowCloseFriends">
            <summary>Allow only <a href="https://corefork.telegram.org/api/privacy">close friends »</a>		<para>See <a href="https://corefork.telegram.org/constructor/privacyValueAllowCloseFriends"/></para></summary>
        </member>
        <member name="T:TL.PrivacyValueAllowPremium">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/privacyValueAllowPremium"/></para></summary>
        </member>
        <member name="T:TL.Account_PrivacyRules">
            <summary>Privacy rules		<para>See <a href="https://corefork.telegram.org/constructor/account.privacyRules"/></para></summary>
        </member>
        <member name="F:TL.Account_PrivacyRules.rules">
            <summary>Privacy rules</summary>
        </member>
        <member name="F:TL.Account_PrivacyRules.chats">
            <summary>Chats to which the rules apply</summary>
        </member>
        <member name="F:TL.Account_PrivacyRules.users">
            <summary>Users to which the rules apply</summary>
        </member>
        <member name="M:TL.Account_PrivacyRules.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.AccountDaysTTL">
            <summary>Time to live in days of the current account		<para>See <a href="https://corefork.telegram.org/constructor/accountDaysTTL"/></para></summary>
        </member>
        <member name="F:TL.AccountDaysTTL.days">
            <summary>This account will self-destruct in the specified number of days</summary>
        </member>
        <member name="T:TL.DocumentAttribute">
            <summary>Various possible attributes of a document (used to define if it's a sticker, a GIF, a video, a mask sticker, an image, an audio, and so on)		<para>See <a href="https://corefork.telegram.org/type/DocumentAttribute"/></para>		<para>Derived classes: <see cref="T:TL.DocumentAttributeImageSize"/>, <see cref="T:TL.DocumentAttributeAnimated"/>, <see cref="T:TL.DocumentAttributeSticker"/>, <see cref="T:TL.DocumentAttributeVideo"/>, <see cref="T:TL.DocumentAttributeAudio"/>, <see cref="T:TL.DocumentAttributeFilename"/>, <see cref="T:TL.DocumentAttributeHasStickers"/>, <see cref="T:TL.DocumentAttributeCustomEmoji"/></para></summary>
        </member>
        <member name="T:TL.DocumentAttributeImageSize">
            <summary>Defines the width and height of an image uploaded as document		<para>See <a href="https://corefork.telegram.org/constructor/documentAttributeImageSize"/></para></summary>
        </member>
        <member name="F:TL.DocumentAttributeImageSize.w">
            <summary>Width of image</summary>
        </member>
        <member name="F:TL.DocumentAttributeImageSize.h">
            <summary>Height of image</summary>
        </member>
        <member name="T:TL.DocumentAttributeAnimated">
            <summary>Defines an animated GIF		<para>See <a href="https://corefork.telegram.org/constructor/documentAttributeAnimated"/></para></summary>
        </member>
        <member name="T:TL.DocumentAttributeSticker">
            <summary>Defines a sticker		<para>See <a href="https://corefork.telegram.org/constructor/documentAttributeSticker"/></para></summary>
        </member>
        <member name="F:TL.DocumentAttributeSticker.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.DocumentAttributeSticker.alt">
            <summary>Alternative emoji representation of sticker</summary>
        </member>
        <member name="F:TL.DocumentAttributeSticker.stickerset">
            <summary>Associated stickerset</summary>
        </member>
        <member name="F:TL.DocumentAttributeSticker.mask_coords">
            <summary>Mask coordinates (if this is a mask sticker, attached to a photo)</summary>
        </member>
        <member name="F:TL.DocumentAttributeSticker.Flags.has_mask_coords">
            <summary>Field <see cref="F:TL.DocumentAttributeSticker.mask_coords"/> has a value</summary>
        </member>
        <member name="F:TL.DocumentAttributeSticker.Flags.mask">
            <summary>Whether this is a mask sticker</summary>
        </member>
        <member name="T:TL.DocumentAttributeVideo">
            <summary>Defines a video		<para>See <a href="https://corefork.telegram.org/constructor/documentAttributeVideo"/></para></summary>
        </member>
        <member name="F:TL.DocumentAttributeVideo.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.DocumentAttributeVideo.duration">
            <summary>Duration in seconds</summary>
        </member>
        <member name="F:TL.DocumentAttributeVideo.w">
            <summary>Video width</summary>
        </member>
        <member name="F:TL.DocumentAttributeVideo.h">
            <summary>Video height</summary>
        </member>
        <member name="F:TL.DocumentAttributeVideo.preload_prefix_size">
            <summary>Number of bytes to preload when preloading videos (particularly <a href="https://corefork.telegram.org/api/stories">video stories</a>).</summary>
        </member>
        <member name="F:TL.DocumentAttributeVideo.Flags.round_message">
            <summary>Whether this is a round video</summary>
        </member>
        <member name="F:TL.DocumentAttributeVideo.Flags.supports_streaming">
            <summary>Whether the video supports streaming</summary>
        </member>
        <member name="F:TL.DocumentAttributeVideo.Flags.has_preload_prefix_size">
            <summary>Field <see cref="F:TL.DocumentAttributeVideo.preload_prefix_size"/> has a value</summary>
        </member>
        <member name="F:TL.DocumentAttributeVideo.Flags.nosound">
            <summary>Whether the specified document is a video file with no audio tracks (a GIF animation (even as MPEG4), for example)</summary>
        </member>
        <member name="T:TL.DocumentAttributeAudio">
            <summary>Represents an audio file		<para>See <a href="https://corefork.telegram.org/constructor/documentAttributeAudio"/></para></summary>
        </member>
        <member name="F:TL.DocumentAttributeAudio.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.DocumentAttributeAudio.duration">
            <summary>Duration in seconds</summary>
        </member>
        <member name="F:TL.DocumentAttributeAudio.title">
            <summary>Name of song</summary>
        </member>
        <member name="F:TL.DocumentAttributeAudio.performer">
            <summary>Performer</summary>
        </member>
        <member name="F:TL.DocumentAttributeAudio.waveform">
            <summary>Waveform: consists in a series of bitpacked 5-bit values. <br/>Example implementation: <a href="https://github.com/DrKLO/Telegram/blob/96dce2c9aabc33b87db61d830aa087b6b03fe397/TMessagesProj/jni/audio.c#L546">android</a>.</summary>
        </member>
        <member name="F:TL.DocumentAttributeAudio.Flags.has_title">
            <summary>Field <see cref="F:TL.DocumentAttributeAudio.title"/> has a value</summary>
        </member>
        <member name="F:TL.DocumentAttributeAudio.Flags.has_performer">
            <summary>Field <see cref="F:TL.DocumentAttributeAudio.performer"/> has a value</summary>
        </member>
        <member name="F:TL.DocumentAttributeAudio.Flags.has_waveform">
            <summary>Field <see cref="F:TL.DocumentAttributeAudio.waveform"/> has a value</summary>
        </member>
        <member name="F:TL.DocumentAttributeAudio.Flags.voice">
            <summary>Whether this is a voice message</summary>
        </member>
        <member name="T:TL.DocumentAttributeFilename">
            <summary>A simple document with a file name		<para>See <a href="https://corefork.telegram.org/constructor/documentAttributeFilename"/></para></summary>
        </member>
        <member name="F:TL.DocumentAttributeFilename.file_name">
            <summary>The file name</summary>
        </member>
        <member name="T:TL.DocumentAttributeHasStickers">
            <summary>Whether the current document has stickers attached		<para>See <a href="https://corefork.telegram.org/constructor/documentAttributeHasStickers"/></para></summary>
        </member>
        <member name="T:TL.DocumentAttributeCustomEmoji">
            <summary>Info about a custom emoji		<para>See <a href="https://corefork.telegram.org/constructor/documentAttributeCustomEmoji"/></para></summary>
        </member>
        <member name="F:TL.DocumentAttributeCustomEmoji.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.DocumentAttributeCustomEmoji.alt">
            <summary>The actual emoji</summary>
        </member>
        <member name="F:TL.DocumentAttributeCustomEmoji.stickerset">
            <summary>The emoji stickerset to which this emoji belongs.</summary>
        </member>
        <member name="F:TL.DocumentAttributeCustomEmoji.Flags.free">
            <summary>Whether this custom emoji can be sent by non-Premium users</summary>
        </member>
        <member name="F:TL.DocumentAttributeCustomEmoji.Flags.text_color">
            <summary>Whether the color of this TGS custom emoji should be changed to the text color when used in messages, the accent color if used as emoji status, white on chat photos, or another appropriate color based on context.</summary>
        </member>
        <member name="T:TL.Messages_Stickers">
            <summary>Found stickers		<para>See <a href="https://corefork.telegram.org/constructor/messages.stickers"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/messages.stickersNotModified">messages.stickersNotModified</a></remarks>
        </member>
        <member name="F:TL.Messages_Stickers.hash">
            <summary><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></summary>
        </member>
        <member name="F:TL.Messages_Stickers.stickers">
            <summary>Stickers</summary>
        </member>
        <member name="T:TL.StickerPack">
            <summary>A stickerpack is a group of stickers associated to the same emoji.<br/>It is <strong>not</strong> a sticker pack the way it is usually intended, you may be looking for a <see cref="T:TL.StickerSet"/>.		<para>See <a href="https://corefork.telegram.org/constructor/stickerPack"/></para></summary>
        </member>
        <member name="F:TL.StickerPack.emoticon">
            <summary>Emoji</summary>
        </member>
        <member name="F:TL.StickerPack.documents">
            <summary>Stickers</summary>
        </member>
        <member name="T:TL.Messages_AllStickers">
            <summary>Info about all installed stickers		<para>See <a href="https://corefork.telegram.org/constructor/messages.allStickers"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/messages.allStickersNotModified">messages.allStickersNotModified</a></remarks>
        </member>
        <member name="F:TL.Messages_AllStickers.hash">
            <summary><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></summary>
        </member>
        <member name="F:TL.Messages_AllStickers.sets">
            <summary>All stickersets</summary>
        </member>
        <member name="T:TL.Messages_AffectedMessages">
            <summary>Events affected by operation		<para>See <a href="https://corefork.telegram.org/constructor/messages.affectedMessages"/></para></summary>
        </member>
        <member name="F:TL.Messages_AffectedMessages.pts">
            <summary><a href="https://corefork.telegram.org/api/updates">Event count after generation</a></summary>
        </member>
        <member name="F:TL.Messages_AffectedMessages.pts_count">
            <summary><a href="https://corefork.telegram.org/api/updates">Number of events that were generated</a></summary>
        </member>
        <member name="T:TL.WebPageBase">
            <summary><a href="https://instantview.telegram.org">Instant View</a> webpage preview		<para>See <a href="https://corefork.telegram.org/type/WebPage"/></para>		<para>Derived classes: <see cref="T:TL.WebPageEmpty"/>, <see cref="T:TL.WebPagePending"/>, <see cref="T:TL.WebPage"/>, <see cref="T:TL.WebPageNotModified"/></para></summary>
        </member>
        <member name="P:TL.WebPageBase.ID">
            <summary>Preview ID</summary>
        </member>
        <member name="P:TL.WebPageBase.Url">
            <summary>URL of the webpage.</summary>
        </member>
        <member name="T:TL.WebPageEmpty">
            <summary>No preview is available for the webpage		<para>See <a href="https://corefork.telegram.org/constructor/webPageEmpty"/></para></summary>
        </member>
        <member name="F:TL.WebPageEmpty.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.WebPageEmpty.id">
            <summary>Preview ID</summary>
        </member>
        <member name="F:TL.WebPageEmpty.url">
            <summary>URL of the webpage.</summary>
        </member>
        <member name="F:TL.WebPageEmpty.Flags.has_url">
            <summary>Field <see cref="F:TL.WebPageEmpty.url"/> has a value</summary>
        </member>
        <member name="P:TL.WebPageEmpty.ID">
            <summary>Preview ID</summary>
        </member>
        <member name="P:TL.WebPageEmpty.Url">
            <summary>URL of the webpage.</summary>
        </member>
        <member name="T:TL.WebPagePending">
            <summary>A preview of the webpage is currently being generated		<para>See <a href="https://corefork.telegram.org/constructor/webPagePending"/></para></summary>
        </member>
        <member name="F:TL.WebPagePending.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.WebPagePending.id">
            <summary>ID of preview</summary>
        </member>
        <member name="F:TL.WebPagePending.url">
            <summary>URL of the webpage</summary>
        </member>
        <member name="F:TL.WebPagePending.date">
            <summary>When was the processing started</summary>
        </member>
        <member name="F:TL.WebPagePending.Flags.has_url">
            <summary>Field <see cref="F:TL.WebPagePending.url"/> has a value</summary>
        </member>
        <member name="P:TL.WebPagePending.ID">
            <summary>ID of preview</summary>
        </member>
        <member name="P:TL.WebPagePending.Url">
            <summary>URL of the webpage</summary>
        </member>
        <member name="T:TL.WebPage">
            <summary>Webpage preview		<para>See <a href="https://corefork.telegram.org/constructor/webPage"/></para></summary>
        </member>
        <member name="F:TL.WebPage.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.WebPage.id">
            <summary>Preview ID</summary>
        </member>
        <member name="F:TL.WebPage.url">
            <summary>URL of previewed webpage</summary>
        </member>
        <member name="F:TL.WebPage.display_url">
            <summary>Webpage URL to be displayed to the user</summary>
        </member>
        <member name="F:TL.WebPage.hash">
            <summary><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></summary>
        </member>
        <member name="F:TL.WebPage.type">
            <summary>Type of the web page. Can be: article, photo, audio, video, document, profile, app, or something else</summary>
        </member>
        <member name="F:TL.WebPage.site_name">
            <summary>Short name of the site (e.g., Google Docs, App Store)</summary>
        </member>
        <member name="F:TL.WebPage.title">
            <summary>Title of the content</summary>
        </member>
        <member name="F:TL.WebPage.description">
            <summary>Content description</summary>
        </member>
        <member name="F:TL.WebPage.photo">
            <summary>Image representing the content</summary>
        </member>
        <member name="F:TL.WebPage.embed_url">
            <summary>URL to show in the embedded preview</summary>
        </member>
        <member name="F:TL.WebPage.embed_type">
            <summary>MIME type of the embedded preview, (e.g., text/html or video/mp4)</summary>
        </member>
        <member name="F:TL.WebPage.embed_width">
            <summary>Width of the embedded preview</summary>
        </member>
        <member name="F:TL.WebPage.embed_height">
            <summary>Height of the embedded preview</summary>
        </member>
        <member name="F:TL.WebPage.duration">
            <summary>Duration of the content, in seconds</summary>
        </member>
        <member name="F:TL.WebPage.author">
            <summary>Author of the content</summary>
        </member>
        <member name="F:TL.WebPage.document">
            <summary>Preview of the content as a media file</summary>
        </member>
        <member name="F:TL.WebPage.cached_page">
            <summary>Page contents in <a href="https://instantview.telegram.org">instant view</a> format</summary>
        </member>
        <member name="F:TL.WebPage.attributes">
            <summary>Webpage attributes</summary>
        </member>
        <member name="F:TL.WebPage.Flags.has_type">
            <summary>Field <see cref="F:TL.WebPage.type"/> has a value</summary>
        </member>
        <member name="F:TL.WebPage.Flags.has_site_name">
            <summary>Field <see cref="F:TL.WebPage.site_name"/> has a value</summary>
        </member>
        <member name="F:TL.WebPage.Flags.has_title">
            <summary>Field <see cref="F:TL.WebPage.title"/> has a value</summary>
        </member>
        <member name="F:TL.WebPage.Flags.has_description">
            <summary>Field <see cref="F:TL.WebPage.description"/> has a value</summary>
        </member>
        <member name="F:TL.WebPage.Flags.has_photo">
            <summary>Field <see cref="F:TL.WebPage.photo"/> has a value</summary>
        </member>
        <member name="F:TL.WebPage.Flags.has_embed_url">
            <summary>Fields <see cref="F:TL.WebPage.embed_url"/> and <see cref="F:TL.WebPage.embed_type"/> have a value</summary>
        </member>
        <member name="F:TL.WebPage.Flags.has_embed_width">
            <summary>Fields <see cref="F:TL.WebPage.embed_width"/> and <see cref="F:TL.WebPage.embed_height"/> have a value</summary>
        </member>
        <member name="F:TL.WebPage.Flags.has_duration">
            <summary>Field <see cref="F:TL.WebPage.duration"/> has a value</summary>
        </member>
        <member name="F:TL.WebPage.Flags.has_author">
            <summary>Field <see cref="F:TL.WebPage.author"/> has a value</summary>
        </member>
        <member name="F:TL.WebPage.Flags.has_document">
            <summary>Field <see cref="F:TL.WebPage.document"/> has a value</summary>
        </member>
        <member name="F:TL.WebPage.Flags.has_cached_page">
            <summary>Field <see cref="F:TL.WebPage.cached_page"/> has a value</summary>
        </member>
        <member name="F:TL.WebPage.Flags.has_attributes">
            <summary>Field <see cref="F:TL.WebPage.attributes"/> has a value</summary>
        </member>
        <member name="F:TL.WebPage.Flags.has_large_media">
            <summary>Whether the size of the media in the preview can be changed.</summary>
        </member>
        <member name="P:TL.WebPage.ID">
            <summary>Preview ID</summary>
        </member>
        <member name="P:TL.WebPage.Url">
            <summary>URL of previewed webpage</summary>
        </member>
        <member name="T:TL.WebPageNotModified">
            <summary>The preview of the webpage hasn't changed		<para>See <a href="https://corefork.telegram.org/constructor/webPageNotModified"/></para></summary>
        </member>
        <member name="F:TL.WebPageNotModified.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.WebPageNotModified.cached_page_views">
            <summary>Page view count</summary>
        </member>
        <member name="F:TL.WebPageNotModified.Flags.has_cached_page_views">
            <summary>Field <see cref="F:TL.WebPageNotModified.cached_page_views"/> has a value</summary>
        </member>
        <member name="T:TL.Authorization">
            <summary>Logged-in session		<para>See <a href="https://corefork.telegram.org/constructor/authorization"/></para></summary>
        </member>
        <member name="F:TL.Authorization.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Authorization.hash">
            <summary>Identifier</summary>
        </member>
        <member name="F:TL.Authorization.device_model">
            <summary>Device model</summary>
        </member>
        <member name="F:TL.Authorization.platform">
            <summary>Platform</summary>
        </member>
        <member name="F:TL.Authorization.system_version">
            <summary>System version</summary>
        </member>
        <member name="F:TL.Authorization.api_id">
            <summary><a href="https://corefork.telegram.org/api/obtaining_api_id">API ID</a></summary>
        </member>
        <member name="F:TL.Authorization.app_name">
            <summary>App name</summary>
        </member>
        <member name="F:TL.Authorization.app_version">
            <summary>App version</summary>
        </member>
        <member name="F:TL.Authorization.date_created">
            <summary>When was the session created</summary>
        </member>
        <member name="F:TL.Authorization.date_active">
            <summary>When was the session last active</summary>
        </member>
        <member name="F:TL.Authorization.ip">
            <summary>Last known IP</summary>
        </member>
        <member name="F:TL.Authorization.country">
            <summary>Country determined from IP</summary>
        </member>
        <member name="F:TL.Authorization.region">
            <summary>Region determined from IP</summary>
        </member>
        <member name="F:TL.Authorization.Flags.current">
            <summary>Whether this is the current session</summary>
        </member>
        <member name="F:TL.Authorization.Flags.official_app">
            <summary>Whether the session is from an official app</summary>
        </member>
        <member name="F:TL.Authorization.Flags.password_pending">
            <summary>Whether the session is still waiting for a 2FA password</summary>
        </member>
        <member name="F:TL.Authorization.Flags.encrypted_requests_disabled">
            <summary>Whether this session will accept encrypted chats</summary>
        </member>
        <member name="F:TL.Authorization.Flags.call_requests_disabled">
            <summary>Whether this session will accept phone calls</summary>
        </member>
        <member name="F:TL.Authorization.Flags.unconfirmed">
            <summary>Whether the session is <a href="https://corefork.telegram.org/api/auth#confirming-login">unconfirmed, see here »</a> for more info.</summary>
        </member>
        <member name="T:TL.Account_Authorizations">
            <summary>Logged-in sessions		<para>See <a href="https://corefork.telegram.org/constructor/account.authorizations"/></para></summary>
        </member>
        <member name="F:TL.Account_Authorizations.authorization_ttl_days">
            <summary>Time-to-live of session</summary>
        </member>
        <member name="F:TL.Account_Authorizations.authorizations">
            <summary>Logged-in sessions</summary>
        </member>
        <member name="T:TL.Account_Password">
            <summary>Configuration for two-factor authorization		<para>See <a href="https://corefork.telegram.org/constructor/account.password"/></para></summary>
        </member>
        <member name="F:TL.Account_Password.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Account_Password.current_algo">
            <summary>The <a href="https://corefork.telegram.org/api/srp">KDF algorithm for SRP two-factor authentication</a> of the current password</summary>
        </member>
        <member name="F:TL.Account_Password.srp_B">
            <summary>Srp B param for <a href="https://corefork.telegram.org/api/srp">SRP authorization</a></summary>
        </member>
        <member name="F:TL.Account_Password.srp_id">
            <summary>Srp ID param for <a href="https://corefork.telegram.org/api/srp">SRP authorization</a></summary>
        </member>
        <member name="F:TL.Account_Password.hint">
            <summary>Text hint for the password</summary>
        </member>
        <member name="F:TL.Account_Password.email_unconfirmed_pattern">
            <summary>A <a href="https://corefork.telegram.org/api/srp#email-verification">password recovery email</a> with the specified <a href="https://corefork.telegram.org/api/pattern">pattern</a> is still awaiting verification</summary>
        </member>
        <member name="F:TL.Account_Password.new_algo">
            <summary>The <a href="https://corefork.telegram.org/api/srp">KDF algorithm for SRP two-factor authentication</a> to use when creating new passwords</summary>
        </member>
        <member name="F:TL.Account_Password.new_secure_algo">
            <summary>The KDF algorithm for telegram <a href="https://corefork.telegram.org/passport">passport</a></summary>
        </member>
        <member name="F:TL.Account_Password.secure_random">
            <summary>Secure random string</summary>
        </member>
        <member name="F:TL.Account_Password.pending_reset_date">
            <summary>The 2FA password will be automatically removed at this date, unless the user cancels the operation</summary>
        </member>
        <member name="F:TL.Account_Password.login_email_pattern">
            <summary>A verified login email with the specified <a href="https://corefork.telegram.org/api/pattern">pattern</a> is configured</summary>
        </member>
        <member name="F:TL.Account_Password.Flags.has_recovery">
            <summary>Whether the user has a recovery method configured</summary>
        </member>
        <member name="F:TL.Account_Password.Flags.has_secure_values">
            <summary>Whether telegram <a href="https://corefork.telegram.org/passport">passport</a> is enabled</summary>
        </member>
        <member name="F:TL.Account_Password.Flags.has_password">
            <summary>Whether the user has a password</summary>
        </member>
        <member name="F:TL.Account_Password.Flags.has_hint">
            <summary>Field <see cref="F:TL.Account_Password.hint"/> has a value</summary>
        </member>
        <member name="F:TL.Account_Password.Flags.has_email_unconfirmed_pattern">
            <summary>Field <see cref="F:TL.Account_Password.email_unconfirmed_pattern"/> has a value</summary>
        </member>
        <member name="F:TL.Account_Password.Flags.has_pending_reset_date">
            <summary>Field <see cref="F:TL.Account_Password.pending_reset_date"/> has a value</summary>
        </member>
        <member name="F:TL.Account_Password.Flags.has_login_email_pattern">
            <summary>Field <see cref="F:TL.Account_Password.login_email_pattern"/> has a value</summary>
        </member>
        <member name="T:TL.Account_PasswordSettings">
            <summary>Private info associated to the password info (recovery email, telegram <a href="https://corefork.telegram.org/passport">passport</a> info &amp; so on)		<para>See <a href="https://corefork.telegram.org/constructor/account.passwordSettings"/></para></summary>
        </member>
        <member name="F:TL.Account_PasswordSettings.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Account_PasswordSettings.email">
            <summary><a href="https://corefork.telegram.org/api/srp#email-verification">2FA Recovery email</a></summary>
        </member>
        <member name="F:TL.Account_PasswordSettings.secure_settings">
            <summary>Telegram <a href="https://corefork.telegram.org/passport">passport</a> settings</summary>
        </member>
        <member name="F:TL.Account_PasswordSettings.Flags.has_email">
            <summary>Field <see cref="F:TL.Account_PasswordSettings.email"/> has a value</summary>
        </member>
        <member name="F:TL.Account_PasswordSettings.Flags.has_secure_settings">
            <summary>Field <see cref="F:TL.Account_PasswordSettings.secure_settings"/> has a value</summary>
        </member>
        <member name="T:TL.Account_PasswordInputSettings">
            <summary>Settings for setting up a new password		<para>See <a href="https://corefork.telegram.org/constructor/account.passwordInputSettings"/></para></summary>
        </member>
        <member name="F:TL.Account_PasswordInputSettings.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Account_PasswordInputSettings.new_algo">
            <summary>The <a href="https://corefork.telegram.org/api/srp">SRP algorithm</a> to use</summary>
        </member>
        <member name="F:TL.Account_PasswordInputSettings.new_password_hash">
            <summary>The <a href="https://corefork.telegram.org/api/srp">computed password hash</a></summary>
        </member>
        <member name="F:TL.Account_PasswordInputSettings.hint">
            <summary>Text hint for the password</summary>
        </member>
        <member name="F:TL.Account_PasswordInputSettings.email">
            <summary>Password recovery email</summary>
        </member>
        <member name="F:TL.Account_PasswordInputSettings.new_secure_settings">
            <summary>Telegram <a href="https://corefork.telegram.org/passport">passport</a> settings</summary>
        </member>
        <member name="F:TL.Account_PasswordInputSettings.Flags.has_new_algo">
            <summary>Fields <see cref="F:TL.Account_PasswordInputSettings.new_algo"/>, <see cref="F:TL.Account_PasswordInputSettings.new_password_hash"/> and <see cref="F:TL.Account_PasswordInputSettings.hint"/> have a value</summary>
        </member>
        <member name="F:TL.Account_PasswordInputSettings.Flags.has_email">
            <summary>Field <see cref="F:TL.Account_PasswordInputSettings.email"/> has a value</summary>
        </member>
        <member name="F:TL.Account_PasswordInputSettings.Flags.has_new_secure_settings">
            <summary>Field <see cref="F:TL.Account_PasswordInputSettings.new_secure_settings"/> has a value</summary>
        </member>
        <member name="T:TL.Auth_PasswordRecovery">
            <summary>Recovery info of a <a href="https://corefork.telegram.org/api/srp">2FA password</a>, only for accounts with a <a href="https://corefork.telegram.org/api/srp#email-verification">recovery email configured</a>.		<para>See <a href="https://corefork.telegram.org/constructor/auth.passwordRecovery"/></para></summary>
        </member>
        <member name="F:TL.Auth_PasswordRecovery.email_pattern">
            <summary>The email to which the recovery code was sent must match this <a href="https://corefork.telegram.org/api/pattern">pattern</a>.</summary>
        </member>
        <member name="T:TL.ReceivedNotifyMessage">
            <summary>Message ID, for which PUSH-notifications were cancelled.		<para>See <a href="https://corefork.telegram.org/constructor/receivedNotifyMessage"/></para></summary>
        </member>
        <member name="F:TL.ReceivedNotifyMessage.id">
            <summary>Message ID, for which PUSH-notifications were canceled</summary>
        </member>
        <member name="F:TL.ReceivedNotifyMessage.flags">
            <summary>Reserved for future use</summary>
        </member>
        <member name="T:TL.ExportedChatInvite">
            <summary>Exported chat invite		<para>See <a href="https://corefork.telegram.org/type/ExportedChatInvite"/></para>		<para>Derived classes: <see cref="T:TL.ChatInviteExported"/>, <see cref="T:TL.ChatInvitePublicJoinRequests"/></para></summary>
        </member>
        <member name="T:TL.ChatInviteExported">
            <summary>Exported chat invite		<para>See <a href="https://corefork.telegram.org/constructor/chatInviteExported"/></para></summary>
        </member>
        <member name="F:TL.ChatInviteExported.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.ChatInviteExported.link">
            <summary>Chat invitation link</summary>
        </member>
        <member name="F:TL.ChatInviteExported.admin_id">
            <summary>ID of the admin that created this chat invite</summary>
        </member>
        <member name="F:TL.ChatInviteExported.date">
            <summary>When was this chat invite created</summary>
        </member>
        <member name="F:TL.ChatInviteExported.start_date">
            <summary>When was this chat invite last modified</summary>
        </member>
        <member name="F:TL.ChatInviteExported.expire_date">
            <summary>When does this chat invite expire</summary>
        </member>
        <member name="F:TL.ChatInviteExported.usage_limit">
            <summary>Maximum number of users that can join using this link</summary>
        </member>
        <member name="F:TL.ChatInviteExported.usage">
            <summary>How many users joined using this link</summary>
        </member>
        <member name="F:TL.ChatInviteExported.requested">
            <summary>Number of users that have already used this link to join</summary>
        </member>
        <member name="F:TL.ChatInviteExported.title">
            <summary>Custom description for the invite link, visible only to admins</summary>
        </member>
        <member name="F:TL.ChatInviteExported.Flags.revoked">
            <summary>Whether this chat invite was revoked</summary>
        </member>
        <member name="F:TL.ChatInviteExported.Flags.has_expire_date">
            <summary>Field <see cref="F:TL.ChatInviteExported.expire_date"/> has a value</summary>
        </member>
        <member name="F:TL.ChatInviteExported.Flags.has_usage_limit">
            <summary>Field <see cref="F:TL.ChatInviteExported.usage_limit"/> has a value</summary>
        </member>
        <member name="F:TL.ChatInviteExported.Flags.has_usage">
            <summary>Field <see cref="F:TL.ChatInviteExported.usage"/> has a value</summary>
        </member>
        <member name="F:TL.ChatInviteExported.Flags.has_start_date">
            <summary>Field <see cref="F:TL.ChatInviteExported.start_date"/> has a value</summary>
        </member>
        <member name="F:TL.ChatInviteExported.Flags.permanent">
            <summary>Whether this chat invite has no expiration</summary>
        </member>
        <member name="F:TL.ChatInviteExported.Flags.request_needed">
            <summary>Whether users importing this invite link will have to be approved to join the channel or group</summary>
        </member>
        <member name="F:TL.ChatInviteExported.Flags.has_requested">
            <summary>Field <see cref="F:TL.ChatInviteExported.requested"/> has a value</summary>
        </member>
        <member name="F:TL.ChatInviteExported.Flags.has_title">
            <summary>Field <see cref="F:TL.ChatInviteExported.title"/> has a value</summary>
        </member>
        <member name="T:TL.ChatInvitePublicJoinRequests">
            <summary>Used in updates and in the channel log to indicate when a user is requesting to join or has joined a <a href="https://corefork.telegram.org/api/discussion#requiring-users-to-join-the-group">discussion group</a>		<para>See <a href="https://corefork.telegram.org/constructor/chatInvitePublicJoinRequests"/></para></summary>
        </member>
        <member name="T:TL.ChatInviteBase">
            <summary>Chat invite		<para>See <a href="https://corefork.telegram.org/type/ChatInvite"/></para>		<para>Derived classes: <see cref="T:TL.ChatInviteAlready"/>, <see cref="T:TL.ChatInvite"/>, <see cref="T:TL.ChatInvitePeek"/></para></summary>
        </member>
        <member name="T:TL.ChatInviteAlready">
            <summary>The user has already joined this chat		<para>See <a href="https://corefork.telegram.org/constructor/chatInviteAlready"/></para></summary>
        </member>
        <member name="F:TL.ChatInviteAlready.chat">
            <summary>The chat connected to the invite</summary>
        </member>
        <member name="T:TL.ChatInvite">
            <summary>Chat invite info		<para>See <a href="https://corefork.telegram.org/constructor/chatInvite"/></para></summary>
        </member>
        <member name="F:TL.ChatInvite.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.ChatInvite.title">
            <summary>Chat/supergroup/channel title</summary>
        </member>
        <member name="F:TL.ChatInvite.about">
            <summary>Description of the group of channel</summary>
        </member>
        <member name="F:TL.ChatInvite.photo">
            <summary>Chat/supergroup/channel photo</summary>
        </member>
        <member name="F:TL.ChatInvite.participants_count">
            <summary>Participant count</summary>
        </member>
        <member name="F:TL.ChatInvite.participants">
            <summary>A few of the participants that are in the group</summary>
        </member>
        <member name="F:TL.ChatInvite.color">
            <summary><a href="https://corefork.telegram.org/api/colors">Profile color palette ID</a></summary>
        </member>
        <member name="F:TL.ChatInvite.Flags.channel">
            <summary>Whether this is a <a href="https://corefork.telegram.org/api/channel">channel/supergroup</a> or a <a href="https://corefork.telegram.org/api/channel">normal group</a></summary>
        </member>
        <member name="F:TL.ChatInvite.Flags.broadcast">
            <summary>Whether this is a <a href="https://corefork.telegram.org/api/channel">channel</a></summary>
        </member>
        <member name="F:TL.ChatInvite.Flags.public_">
            <summary>Whether this is a public <a href="https://corefork.telegram.org/api/channel">channel/supergroup</a></summary>
        </member>
        <member name="F:TL.ChatInvite.Flags.megagroup">
            <summary>Whether this is a <a href="https://corefork.telegram.org/api/channel">supergroup</a></summary>
        </member>
        <member name="F:TL.ChatInvite.Flags.has_participants">
            <summary>Field <see cref="F:TL.ChatInvite.participants"/> has a value</summary>
        </member>
        <member name="F:TL.ChatInvite.Flags.has_about">
            <summary>Field <see cref="F:TL.ChatInvite.about"/> has a value</summary>
        </member>
        <member name="F:TL.ChatInvite.Flags.request_needed">
            <summary>Whether the <a href="https://corefork.telegram.org/api/invites#join-requests">join request »</a> must be first approved by an administrator</summary>
        </member>
        <member name="F:TL.ChatInvite.Flags.verified">
            <summary>Is this chat or channel verified by Telegram?</summary>
        </member>
        <member name="F:TL.ChatInvite.Flags.scam">
            <summary>This chat is probably a scam</summary>
        </member>
        <member name="F:TL.ChatInvite.Flags.fake">
            <summary>If set, this chat was reported by many users as a fake or scam: be careful when interacting with it.</summary>
        </member>
        <member name="T:TL.ChatInvitePeek">
            <summary>A chat invitation that also allows peeking into the group to read messages without joining it.		<para>See <a href="https://corefork.telegram.org/constructor/chatInvitePeek"/></para></summary>
        </member>
        <member name="F:TL.ChatInvitePeek.chat">
            <summary>Chat information</summary>
        </member>
        <member name="F:TL.ChatInvitePeek.expires">
            <summary>Read-only anonymous access to this group will be revoked at this date</summary>
        </member>
        <member name="T:TL.InputStickerSet">
            <summary>Represents a stickerset		<para>See <a href="https://corefork.telegram.org/type/InputStickerSet"/></para>		<para>Derived classes: <see cref="T:TL.InputStickerSetID"/>, <see cref="T:TL.InputStickerSetShortName"/>, <see cref="T:TL.InputStickerSetAnimatedEmoji"/>, <see cref="T:TL.InputStickerSetDice"/>, <see cref="T:TL.InputStickerSetAnimatedEmojiAnimations"/>, <see cref="T:TL.InputStickerSetPremiumGifts"/>, <see cref="T:TL.InputStickerSetEmojiGenericAnimations"/>, <see cref="T:TL.InputStickerSetEmojiDefaultStatuses"/>, <see cref="T:TL.InputStickerSetEmojiDefaultTopicIcons"/>, <see cref="T:TL.InputStickerSetEmojiChannelDefaultStatuses"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/inputStickerSetEmpty">inputStickerSetEmpty</a></remarks>
        </member>
        <member name="T:TL.InputStickerSetID">
            <summary>Stickerset by ID		<para>See <a href="https://corefork.telegram.org/constructor/inputStickerSetID"/></para></summary>
        </member>
        <member name="F:TL.InputStickerSetID.id">
            <summary>ID</summary>
        </member>
        <member name="F:TL.InputStickerSetID.access_hash">
            <summary>⚠ <b>REQUIRED FIELD</b>. See <see href="https://wiz0u.github.io/WTelegramClient/FAQ#access-hash">how to obtain it</see><br/>Access hash</summary>
        </member>
        <member name="T:TL.InputStickerSetShortName">
            <summary>Stickerset by short name, from a <a href="https://corefork.telegram.org/api/links#stickerset-links">stickerset deep link »</a>		<para>See <a href="https://corefork.telegram.org/constructor/inputStickerSetShortName"/></para></summary>
        </member>
        <member name="F:TL.InputStickerSetShortName.short_name">
            <summary>Short name from a <a href="https://corefork.telegram.org/api/links#stickerset-links">stickerset deep link »</a></summary>
        </member>
        <member name="T:TL.InputStickerSetAnimatedEmoji">
            <summary>Animated emojis stickerset		<para>See <a href="https://corefork.telegram.org/constructor/inputStickerSetAnimatedEmoji"/></para></summary>
        </member>
        <member name="T:TL.InputStickerSetDice">
            <summary>Used for fetching <a href="https://corefork.telegram.org/api/dice">animated dice stickers</a>		<para>See <a href="https://corefork.telegram.org/constructor/inputStickerSetDice"/></para></summary>
        </member>
        <member name="F:TL.InputStickerSetDice.emoticon">
            <summary>The emoji, for now 🏀, 🎲 and 🎯 are supported</summary>
        </member>
        <member name="T:TL.InputStickerSetAnimatedEmojiAnimations">
            <summary>Animated emoji reaction stickerset (contains animations to play when a user clicks on a given animated emoji)		<para>See <a href="https://corefork.telegram.org/constructor/inputStickerSetAnimatedEmojiAnimations"/></para></summary>
        </member>
        <member name="T:TL.InputStickerSetPremiumGifts">
            <summary>Stickers to show when receiving a gifted Telegram Premium subscription		<para>See <a href="https://corefork.telegram.org/constructor/inputStickerSetPremiumGifts"/></para></summary>
        </member>
        <member name="T:TL.InputStickerSetEmojiGenericAnimations">
            <summary>Generic animation stickerset containing animations to play when <a href="https://corefork.telegram.org/api/reactions">reacting to messages using a normal emoji without a custom animation</a>		<para>See <a href="https://corefork.telegram.org/constructor/inputStickerSetEmojiGenericAnimations"/></para></summary>
        </member>
        <member name="T:TL.InputStickerSetEmojiDefaultStatuses">
            <summary>Default <a href="https://corefork.telegram.org/api/emoji-status">custom emoji status</a> stickerset		<para>See <a href="https://corefork.telegram.org/constructor/inputStickerSetEmojiDefaultStatuses"/></para></summary>
        </member>
        <member name="T:TL.InputStickerSetEmojiDefaultTopicIcons">
            <summary>Default <a href="https://corefork.telegram.org/api/custom-emoji">custom emoji</a> stickerset for <a href="https://corefork.telegram.org/api/forum#forum-topics">forum topic icons</a>		<para>See <a href="https://corefork.telegram.org/constructor/inputStickerSetEmojiDefaultTopicIcons"/></para></summary>
        </member>
        <member name="T:TL.InputStickerSetEmojiChannelDefaultStatuses">
            <summary>Default <a href="https://corefork.telegram.org/api/emoji-status">custom emoji status</a> stickerset for channel statuses		<para>See <a href="https://corefork.telegram.org/constructor/inputStickerSetEmojiChannelDefaultStatuses"/></para></summary>
        </member>
        <member name="T:TL.StickerSet">
            <summary>Represents a stickerset (stickerpack)		<para>See <a href="https://corefork.telegram.org/constructor/stickerSet"/></para></summary>
        </member>
        <member name="F:TL.StickerSet.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.StickerSet.installed_date">
            <summary>When was this stickerset installed</summary>
        </member>
        <member name="F:TL.StickerSet.id">
            <summary>ID of the stickerset</summary>
        </member>
        <member name="F:TL.StickerSet.access_hash">
            <summary>Access hash of stickerset</summary>
        </member>
        <member name="F:TL.StickerSet.title">
            <summary>Title of stickerset</summary>
        </member>
        <member name="F:TL.StickerSet.short_name">
            <summary>Short name of stickerset, used when sharing stickerset using <a href="https://corefork.telegram.org/api/links#stickerset-links">stickerset deep links</a>.</summary>
        </member>
        <member name="F:TL.StickerSet.thumbs">
            <summary>Stickerset thumbnail</summary>
        </member>
        <member name="F:TL.StickerSet.thumb_dc_id">
            <summary>DC ID of thumbnail</summary>
        </member>
        <member name="F:TL.StickerSet.thumb_version">
            <summary>Thumbnail version</summary>
        </member>
        <member name="F:TL.StickerSet.thumb_document_id">
            <summary>Document ID of custom emoji thumbnail, fetch the document using <see cref="M:TL.SchemaExtensions.Messages_GetCustomEmojiDocuments(WTelegram.Client,System.Int64[])">Messages_GetCustomEmojiDocuments</see></summary>
        </member>
        <member name="F:TL.StickerSet.count">
            <summary>Number of stickers in pack</summary>
        </member>
        <member name="F:TL.StickerSet.hash">
            <summary>Hash</summary>
        </member>
        <member name="F:TL.StickerSet.Flags.has_installed_date">
            <summary>Field <see cref="F:TL.StickerSet.installed_date"/> has a value</summary>
        </member>
        <member name="F:TL.StickerSet.Flags.archived">
            <summary>Whether this stickerset was archived (due to too many saved stickers in the current account)</summary>
        </member>
        <member name="F:TL.StickerSet.Flags.official">
            <summary>Is this stickerset official</summary>
        </member>
        <member name="F:TL.StickerSet.Flags.masks">
            <summary>Is this a mask stickerset</summary>
        </member>
        <member name="F:TL.StickerSet.Flags.has_thumbs">
            <summary>Fields <see cref="F:TL.StickerSet.thumbs"/>, <see cref="F:TL.StickerSet.thumb_dc_id"/> and <see cref="F:TL.StickerSet.thumb_version"/> have a value</summary>
        </member>
        <member name="F:TL.StickerSet.Flags.emojis">
            <summary>This is a custom emoji stickerset</summary>
        </member>
        <member name="F:TL.StickerSet.Flags.has_thumb_document_id">
            <summary>Field <see cref="F:TL.StickerSet.thumb_document_id"/> has a value</summary>
        </member>
        <member name="F:TL.StickerSet.Flags.text_color">
            <summary>Whether the color of this TGS custom emoji stickerset should be changed to the text color when used in messages, the accent color if used as emoji status, white on chat photos, or another appropriate color based on context.</summary>
        </member>
        <member name="F:TL.StickerSet.Flags.channel_emoji_status">
            <summary>If set, this custom emoji stickerset can be used in <a href="https://corefork.telegram.org/api/emoji-status">channel emoji statuses</a>.</summary>
        </member>
        <member name="T:TL.Messages_StickerSet">
            <summary>Stickerset and stickers inside it		<para>See <a href="https://corefork.telegram.org/constructor/messages.stickerSet"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/messages.stickerSetNotModified">messages.stickerSetNotModified</a></remarks>
        </member>
        <member name="F:TL.Messages_StickerSet.set">
            <summary>The stickerset</summary>
        </member>
        <member name="F:TL.Messages_StickerSet.packs">
            <summary>Emoji info for stickers</summary>
        </member>
        <member name="F:TL.Messages_StickerSet.keywords">
            <summary>Keywords for some or every sticker in the stickerset.</summary>
        </member>
        <member name="F:TL.Messages_StickerSet.documents">
            <summary>Stickers in stickerset</summary>
        </member>
        <member name="T:TL.BotCommand">
            <summary>Describes a bot command that can be used in a chat		<para>See <a href="https://corefork.telegram.org/constructor/botCommand"/></para></summary>
        </member>
        <member name="F:TL.BotCommand.command">
            <summary><c>/command</c> name</summary>
        </member>
        <member name="F:TL.BotCommand.description">
            <summary>Description of the command</summary>
        </member>
        <member name="T:TL.BotInfo">
            <summary>Info about bots (available bot commands, etc)		<para>See <a href="https://corefork.telegram.org/constructor/botInfo"/></para></summary>
        </member>
        <member name="F:TL.BotInfo.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.BotInfo.user_id">
            <summary>ID of the bot</summary>
        </member>
        <member name="F:TL.BotInfo.description">
            <summary>Description of the bot</summary>
        </member>
        <member name="F:TL.BotInfo.description_photo">
            <summary>Description photo</summary>
        </member>
        <member name="F:TL.BotInfo.description_document">
            <summary>Description animation in MPEG4 format</summary>
        </member>
        <member name="F:TL.BotInfo.commands">
            <summary>Bot commands that can be used in the chat</summary>
        </member>
        <member name="F:TL.BotInfo.menu_button">
            <summary>Indicates the action to execute when pressing the in-UI menu button for bots</summary>
        </member>
        <member name="F:TL.BotInfo.Flags.has_user_id">
            <summary>Field <see cref="F:TL.BotInfo.user_id"/> has a value</summary>
        </member>
        <member name="F:TL.BotInfo.Flags.has_description">
            <summary>Field <see cref="F:TL.BotInfo.description"/> has a value</summary>
        </member>
        <member name="F:TL.BotInfo.Flags.has_commands">
            <summary>Field <see cref="F:TL.BotInfo.commands"/> has a value</summary>
        </member>
        <member name="F:TL.BotInfo.Flags.has_menu_button">
            <summary>Field <see cref="F:TL.BotInfo.menu_button"/> has a value</summary>
        </member>
        <member name="F:TL.BotInfo.Flags.has_description_photo">
            <summary>Field <see cref="F:TL.BotInfo.description_photo"/> has a value</summary>
        </member>
        <member name="F:TL.BotInfo.Flags.has_description_document">
            <summary>Field <see cref="F:TL.BotInfo.description_document"/> has a value</summary>
        </member>
        <member name="T:TL.KeyboardButtonBase">
            <summary>Bot or inline keyboard buttons		<para>See <a href="https://corefork.telegram.org/type/KeyboardButton"/></para>		<para>Derived classes: <see cref="T:TL.KeyboardButton"/>, <see cref="T:TL.KeyboardButtonUrl"/>, <see cref="T:TL.KeyboardButtonCallback"/>, <see cref="T:TL.KeyboardButtonRequestPhone"/>, <see cref="T:TL.KeyboardButtonRequestGeoLocation"/>, <see cref="T:TL.KeyboardButtonSwitchInline"/>, <see cref="T:TL.KeyboardButtonGame"/>, <see cref="T:TL.KeyboardButtonBuy"/>, <see cref="T:TL.KeyboardButtonUrlAuth"/>, <see cref="T:TL.InputKeyboardButtonUrlAuth"/>, <see cref="T:TL.KeyboardButtonRequestPoll"/>, <see cref="T:TL.InputKeyboardButtonUserProfile"/>, <see cref="T:TL.KeyboardButtonUserProfile"/>, <see cref="T:TL.KeyboardButtonWebView"/>, <see cref="T:TL.KeyboardButtonSimpleWebView"/>, <see cref="T:TL.KeyboardButtonRequestPeer"/></para></summary>
        </member>
        <member name="P:TL.KeyboardButtonBase.Text">
            <summary>Button text</summary>
        </member>
        <member name="T:TL.KeyboardButton">
            <summary>Bot keyboard button		<para>See <a href="https://corefork.telegram.org/constructor/keyboardButton"/></para></summary>
        </member>
        <member name="F:TL.KeyboardButton.text">
            <summary>Button text</summary>
        </member>
        <member name="P:TL.KeyboardButton.Text">
            <summary>Button text</summary>
        </member>
        <member name="T:TL.KeyboardButtonUrl">
            <summary>URL button		<para>See <a href="https://corefork.telegram.org/constructor/keyboardButtonUrl"/></para></summary>
        </member>
        <member name="F:TL.KeyboardButtonUrl.url">
            <summary>URL</summary>
        </member>
        <member name="T:TL.KeyboardButtonCallback">
            <summary>Callback button		<para>See <a href="https://corefork.telegram.org/constructor/keyboardButtonCallback"/></para></summary>
        </member>
        <member name="F:TL.KeyboardButtonCallback.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.KeyboardButtonCallback.text">
            <summary>Button text</summary>
        </member>
        <member name="F:TL.KeyboardButtonCallback.data">
            <summary>Callback data</summary>
        </member>
        <member name="F:TL.KeyboardButtonCallback.Flags.requires_password">
            <summary>Whether the user should verify his identity by entering his <a href="https://corefork.telegram.org/api/srp">2FA SRP parameters</a> to the <see cref="M:TL.SchemaExtensions.Messages_GetBotCallbackAnswer(WTelegram.Client,TL.InputPeer,System.Int32,System.Byte[],TL.InputCheckPasswordSRP,System.Boolean)">Messages_GetBotCallbackAnswer</see> method. NOTE: telegram and the bot WILL NOT have access to the plaintext password, thanks to <a href="https://corefork.telegram.org/api/srp">SRP</a>. This button is mainly used by the official <a href="https://t.me/botfather">@botfather</a> bot, for verifying the user's identity before transferring ownership of a bot to another user.</summary>
        </member>
        <member name="P:TL.KeyboardButtonCallback.Text">
            <summary>Button text</summary>
        </member>
        <member name="T:TL.KeyboardButtonRequestPhone">
            <summary>Button to request a user's phone number		<para>See <a href="https://corefork.telegram.org/constructor/keyboardButtonRequestPhone"/></para></summary>
        </member>
        <member name="T:TL.KeyboardButtonRequestGeoLocation">
            <summary>Button to request a user's geolocation		<para>See <a href="https://corefork.telegram.org/constructor/keyboardButtonRequestGeoLocation"/></para></summary>
        </member>
        <member name="T:TL.KeyboardButtonSwitchInline">
            <summary>Button to force a user to switch to inline mode: pressing the button will prompt the user to select one of their chats, open that chat and insert the bot's username and the specified inline query in the input field.		<para>See <a href="https://corefork.telegram.org/constructor/keyboardButtonSwitchInline"/></para></summary>
        </member>
        <member name="F:TL.KeyboardButtonSwitchInline.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.KeyboardButtonSwitchInline.text">
            <summary>Button label</summary>
        </member>
        <member name="F:TL.KeyboardButtonSwitchInline.query">
            <summary>The inline query to use</summary>
        </member>
        <member name="F:TL.KeyboardButtonSwitchInline.peer_types">
            <summary>Filter to use when selecting chats.</summary>
        </member>
        <member name="F:TL.KeyboardButtonSwitchInline.Flags.same_peer">
            <summary>If set, pressing the button will insert the bot's username and the specified inline <c>query</c> in the current chat's input field.</summary>
        </member>
        <member name="F:TL.KeyboardButtonSwitchInline.Flags.has_peer_types">
            <summary>Field <see cref="F:TL.KeyboardButtonSwitchInline.peer_types"/> has a value</summary>
        </member>
        <member name="P:TL.KeyboardButtonSwitchInline.Text">
            <summary>Button label</summary>
        </member>
        <member name="T:TL.KeyboardButtonGame">
            <summary>Button to start a game		<para>See <a href="https://corefork.telegram.org/constructor/keyboardButtonGame"/></para></summary>
        </member>
        <member name="T:TL.KeyboardButtonBuy">
            <summary>Button to buy a product		<para>See <a href="https://corefork.telegram.org/constructor/keyboardButtonBuy"/></para></summary>
        </member>
        <member name="T:TL.KeyboardButtonUrlAuth">
            <summary>Button to request a user to authorize via URL using <a href="https://telegram.org/blog/privacy-discussions-web-bots#meet-seamless-web-bots">Seamless Telegram Login</a>. When the user clicks on such a button, <see cref="M:TL.SchemaExtensions.Messages_RequestUrlAuth(WTelegram.Client,TL.InputPeer,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">Messages_RequestUrlAuth</see> should be called, providing the <c>button_id</c> and the ID of the container message. The returned <see cref="T:TL.UrlAuthResultRequest"/> object will contain more details about the authorization request (<c>request_write_access</c> if the bot would like to send messages to the user along with the username of the bot which will be used for user authorization). Finally, the user can choose to call <see cref="M:TL.SchemaExtensions.Messages_AcceptUrlAuth(WTelegram.Client,TL.InputPeer,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Boolean)">Messages_AcceptUrlAuth</see> to get a <see cref="T:TL.UrlAuthResultAccepted"/> with the URL to open instead of the <c>url</c> of this constructor, or a <see langword="null"/>, in which case the <c>url</c> of this constructor must be opened, instead. If the user refuses the authorization request but still wants to open the link, the <c>url</c> of this constructor must be used.		<para>See <a href="https://corefork.telegram.org/constructor/keyboardButtonUrlAuth"/></para></summary>
        </member>
        <member name="F:TL.KeyboardButtonUrlAuth.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.KeyboardButtonUrlAuth.text">
            <summary>Button label</summary>
        </member>
        <member name="F:TL.KeyboardButtonUrlAuth.fwd_text">
            <summary>New text of the button in forwarded messages.</summary>
        </member>
        <member name="F:TL.KeyboardButtonUrlAuth.url">
            <summary>An HTTP URL to be opened with user authorization data added to the query string when the button is pressed. If the user refuses to provide authorization data, the original URL without information about the user will be opened. The data added is the same as described in <a href="https://corefork.telegram.org/widgets/login#receiving-authorization-data">Receiving authorization data</a>.<br/><br/><strong>NOTE</strong>: Services must <strong>always</strong> check the hash of the received data to verify the authentication and the integrity of the data as described in <a href="https://corefork.telegram.org/widgets/login#checking-authorization">Checking authorization</a>.</summary>
        </member>
        <member name="F:TL.KeyboardButtonUrlAuth.button_id">
            <summary>ID of the button to pass to <see cref="M:TL.SchemaExtensions.Messages_RequestUrlAuth(WTelegram.Client,TL.InputPeer,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">Messages_RequestUrlAuth</see></summary>
        </member>
        <member name="F:TL.KeyboardButtonUrlAuth.Flags.has_fwd_text">
            <summary>Field <see cref="F:TL.KeyboardButtonUrlAuth.fwd_text"/> has a value</summary>
        </member>
        <member name="P:TL.KeyboardButtonUrlAuth.Text">
            <summary>Button label</summary>
        </member>
        <member name="T:TL.InputKeyboardButtonUrlAuth">
            <summary>Button to request a user to <see cref="M:TL.SchemaExtensions.Messages_AcceptUrlAuth(WTelegram.Client,TL.InputPeer,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Boolean)">Messages_AcceptUrlAuth</see> via URL using <a href="https://telegram.org/blog/privacy-discussions-web-bots#meet-seamless-web-bots">Seamless Telegram Login</a>.		<para>See <a href="https://corefork.telegram.org/constructor/inputKeyboardButtonUrlAuth"/></para></summary>
        </member>
        <member name="F:TL.InputKeyboardButtonUrlAuth.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.InputKeyboardButtonUrlAuth.text">
            <summary>Button text</summary>
        </member>
        <member name="F:TL.InputKeyboardButtonUrlAuth.fwd_text">
            <summary>New text of the button in forwarded messages.</summary>
        </member>
        <member name="F:TL.InputKeyboardButtonUrlAuth.url">
            <summary>An HTTP URL to be opened with user authorization data added to the query string when the button is pressed. If the user refuses to provide authorization data, the original URL without information about the user will be opened. The data added is the same as described in <a href="https://corefork.telegram.org/widgets/login#receiving-authorization-data">Receiving authorization data</a>.<br/>NOTE: You must always check the hash of the received data to verify the authentication and the integrity of the data as described in <a href="https://corefork.telegram.org/widgets/login#checking-authorization">Checking authorization</a>.</summary>
        </member>
        <member name="F:TL.InputKeyboardButtonUrlAuth.bot">
            <summary>Username of a bot, which will be used for user authorization. See <a href="https://corefork.telegram.org/widgets/login#setting-up-a-bot">Setting up a bot</a> for more details. If not specified, the current bot's username will be assumed. The url's domain must be the same as the domain linked with the bot. See <a href="https://corefork.telegram.org/widgets/login#linking-your-domain-to-the-bot">Linking your domain to the bot</a> for more details.</summary>
        </member>
        <member name="F:TL.InputKeyboardButtonUrlAuth.Flags.request_write_access">
            <summary>Set this flag to request the permission for your bot to send messages to the user.</summary>
        </member>
        <member name="F:TL.InputKeyboardButtonUrlAuth.Flags.has_fwd_text">
            <summary>Field <see cref="F:TL.InputKeyboardButtonUrlAuth.fwd_text"/> has a value</summary>
        </member>
        <member name="P:TL.InputKeyboardButtonUrlAuth.Text">
            <summary>Button text</summary>
        </member>
        <member name="T:TL.KeyboardButtonRequestPoll">
            <summary>A button that allows the user to create and send a poll when pressed; available only in private		<para>See <a href="https://corefork.telegram.org/constructor/keyboardButtonRequestPoll"/></para></summary>
        </member>
        <member name="F:TL.KeyboardButtonRequestPoll.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.KeyboardButtonRequestPoll.quiz">
            <summary>If set, only quiz polls can be sent</summary>
        </member>
        <member name="F:TL.KeyboardButtonRequestPoll.Flags.has_quiz">
            <summary>Field <see cref="F:TL.KeyboardButtonRequestPoll.quiz"/> has a value</summary>
        </member>
        <member name="T:TL.InputKeyboardButtonUserProfile">
            <summary>Button that links directly to a user profile		<para>See <a href="https://corefork.telegram.org/constructor/inputKeyboardButtonUserProfile"/></para></summary>
        </member>
        <member name="F:TL.InputKeyboardButtonUserProfile.text">
            <summary>Button text</summary>
        </member>
        <member name="F:TL.InputKeyboardButtonUserProfile.user_id">
            <summary>User ID</summary>
        </member>
        <member name="P:TL.InputKeyboardButtonUserProfile.Text">
            <summary>Button text</summary>
        </member>
        <member name="T:TL.KeyboardButtonUserProfile">
            <summary>Button that links directly to a user profile		<para>See <a href="https://corefork.telegram.org/constructor/keyboardButtonUserProfile"/></para></summary>
        </member>
        <member name="F:TL.KeyboardButtonUserProfile.user_id">
            <summary>User ID</summary>
        </member>
        <member name="T:TL.KeyboardButtonWebView">
            <summary>Button to open a <a href="https://corefork.telegram.org/api/bots/webapps">bot mini app</a> using <see cref="M:TL.SchemaExtensions.Messages_RequestWebView(WTelegram.Client,TL.InputPeer,TL.InputUserBase,System.String,TL.InputReplyTo,System.String,TL.DataJSON,System.String,TL.InputPeer,System.Boolean,System.Boolean)">Messages_RequestWebView</see>, sending over user information after user confirmation.		<para>See <a href="https://corefork.telegram.org/constructor/keyboardButtonWebView"/></para></summary>
        </member>
        <member name="F:TL.KeyboardButtonWebView.url">
            <summary><a href="https://corefork.telegram.org/api/bots/webapps">Web app url</a></summary>
        </member>
        <member name="T:TL.KeyboardButtonSimpleWebView">
            <summary>Button to open a <a href="https://corefork.telegram.org/api/bots/webapps">bot mini app</a> using <see cref="M:TL.SchemaExtensions.Messages_RequestSimpleWebView(WTelegram.Client,TL.InputUserBase,System.String,TL.DataJSON,System.String,System.String,System.Boolean,System.Boolean)">Messages_RequestSimpleWebView</see>, without sending user information to the web app.		<para>See <a href="https://corefork.telegram.org/constructor/keyboardButtonSimpleWebView"/></para></summary>
        </member>
        <member name="T:TL.KeyboardButtonRequestPeer">
            <summary>Prompts the user to select and share one or more peers with the bot using <see cref="M:TL.SchemaExtensions.Messages_SendBotRequestedPeer(WTelegram.Client,TL.InputPeer,System.Int32,System.Int32,TL.InputPeer[])">Messages_SendBotRequestedPeer</see>		<para>See <a href="https://corefork.telegram.org/constructor/keyboardButtonRequestPeer"/></para></summary>
        </member>
        <member name="F:TL.KeyboardButtonRequestPeer.button_id">
            <summary>Button ID, to be passed to <see cref="M:TL.SchemaExtensions.Messages_SendBotRequestedPeer(WTelegram.Client,TL.InputPeer,System.Int32,System.Int32,TL.InputPeer[])">Messages_SendBotRequestedPeer</see>.</summary>
        </member>
        <member name="F:TL.KeyboardButtonRequestPeer.peer_type">
            <summary>Filtering criteria to use for the peer selection list shown to the user. <br/>The list should display all existing peers of the specified type, and should also offer an option for the user to create and immediately use one or more (up to <c>max_quantity</c>) peers of the specified type, if needed.</summary>
        </member>
        <member name="F:TL.KeyboardButtonRequestPeer.max_quantity">
            <summary>Maximum number of peers that can be chosne.</summary>
        </member>
        <member name="T:TL.InputKeyboardButtonRequestPeer">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/inputKeyboardButtonRequestPeer"/></para></summary>
        </member>
        <member name="T:TL.KeyboardButtonRow">
            <summary>Inline keyboard row		<para>See <a href="https://corefork.telegram.org/constructor/keyboardButtonRow"/></para></summary>
        </member>
        <member name="F:TL.KeyboardButtonRow.buttons">
            <summary>Bot or inline keyboard buttons</summary>
        </member>
        <member name="T:TL.ReplyMarkup">
            <summary>Reply markup for bot and inline keyboards		<para>See <a href="https://corefork.telegram.org/type/ReplyMarkup"/></para>		<para>Derived classes: <see cref="T:TL.ReplyKeyboardHide"/>, <see cref="T:TL.ReplyKeyboardForceReply"/>, <see cref="T:TL.ReplyKeyboardMarkup"/>, <see cref="T:TL.ReplyInlineMarkup"/></para></summary>
        </member>
        <member name="T:TL.ReplyKeyboardHide">
            <summary>Hide sent bot keyboard		<para>See <a href="https://corefork.telegram.org/constructor/replyKeyboardHide"/></para></summary>
        </member>
        <member name="F:TL.ReplyKeyboardHide.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.ReplyKeyboardHide.Flags.selective">
            <summary>Use this flag if you want to remove the keyboard for specific users only. Targets: 1) users that are @mentioned in the text of the Message object; 2) if the bot's message is a reply (has reply_to_message_id), sender of the original message.<br/><br/>Example: A user votes in a poll, bot returns confirmation message in reply to the vote and removes the keyboard for that user, while still showing the keyboard with poll options to users who haven't voted yet</summary>
        </member>
        <member name="T:TL.ReplyKeyboardForceReply">
            <summary>Force the user to send a reply		<para>See <a href="https://corefork.telegram.org/constructor/replyKeyboardForceReply"/></para></summary>
        </member>
        <member name="F:TL.ReplyKeyboardForceReply.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.ReplyKeyboardForceReply.placeholder">
            <summary>The placeholder to be shown in the input field when the keyboard is active; 1-64 characters.</summary>
        </member>
        <member name="F:TL.ReplyKeyboardForceReply.Flags.single_use">
            <summary>Requests clients to hide the keyboard as soon as it's been used. The keyboard will still be available, but clients will automatically display the usual letter-keyboard in the chat – the user can press a special button in the input field to see the custom keyboard again.</summary>
        </member>
        <member name="F:TL.ReplyKeyboardForceReply.Flags.selective">
            <summary>Use this parameter if you want to show the keyboard to specific users only. Targets: 1) users that are @mentioned in the text of the Message object; 2) if the bot's message is a reply (has reply_to_message_id), sender of the original message. <br/>Example: A user requests to change the bot's language, bot replies to the request with a keyboard to select the new language. Other users in the group don't see the keyboard.</summary>
        </member>
        <member name="F:TL.ReplyKeyboardForceReply.Flags.has_placeholder">
            <summary>Field <see cref="F:TL.ReplyKeyboardForceReply.placeholder"/> has a value</summary>
        </member>
        <member name="T:TL.ReplyKeyboardMarkup">
            <summary>Bot keyboard		<para>See <a href="https://corefork.telegram.org/constructor/replyKeyboardMarkup"/></para></summary>
        </member>
        <member name="F:TL.ReplyKeyboardMarkup.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.ReplyKeyboardMarkup.rows">
            <summary>Button row</summary>
        </member>
        <member name="F:TL.ReplyKeyboardMarkup.placeholder">
            <summary>The placeholder to be shown in the input field when the keyboard is active; 1-64 characters.</summary>
        </member>
        <member name="F:TL.ReplyKeyboardMarkup.Flags.resize">
            <summary>Requests clients to resize the keyboard vertically for optimal fit (e.g., make the keyboard smaller if there are just two rows of buttons). If not set, the custom keyboard is always of the same height as the app's standard keyboard.</summary>
        </member>
        <member name="F:TL.ReplyKeyboardMarkup.Flags.single_use">
            <summary>Requests clients to hide the keyboard as soon as it's been used. The keyboard will still be available, but clients will automatically display the usual letter-keyboard in the chat – the user can press a special button in the input field to see the custom keyboard again.</summary>
        </member>
        <member name="F:TL.ReplyKeyboardMarkup.Flags.selective">
            <summary>Use this parameter if you want to show the keyboard to specific users only. Targets: 1) users that are @mentioned in the text of the Message object; 2) if the bot's message is a reply (has reply_to_message_id), sender of the original message.<br/><br/>Example: A user requests to change the bot's language, bot replies to the request with a keyboard to select the new language. Other users in the group don't see the keyboard.</summary>
        </member>
        <member name="F:TL.ReplyKeyboardMarkup.Flags.has_placeholder">
            <summary>Field <see cref="F:TL.ReplyKeyboardMarkup.placeholder"/> has a value</summary>
        </member>
        <member name="F:TL.ReplyKeyboardMarkup.Flags.persistent">
            <summary>Requests clients to always show the keyboard when the regular keyboard is hidden.</summary>
        </member>
        <member name="T:TL.ReplyInlineMarkup">
            <summary>Bot or inline keyboard		<para>See <a href="https://corefork.telegram.org/constructor/replyInlineMarkup"/></para></summary>
        </member>
        <member name="F:TL.ReplyInlineMarkup.rows">
            <summary>Bot or inline keyboard rows</summary>
        </member>
        <member name="T:TL.MessageEntity">
            <summary>Message entities, representing styled text in a message		<para>See <a href="https://corefork.telegram.org/type/MessageEntity"/></para>		<para>Derived classes: <see cref="T:TL.MessageEntityUnknown"/>, <see cref="T:TL.MessageEntityMention"/>, <see cref="T:TL.MessageEntityHashtag"/>, <see cref="T:TL.MessageEntityBotCommand"/>, <see cref="T:TL.MessageEntityUrl"/>, <see cref="T:TL.MessageEntityEmail"/>, <see cref="T:TL.MessageEntityBold"/>, <see cref="T:TL.MessageEntityItalic"/>, <see cref="T:TL.MessageEntityCode"/>, <see cref="T:TL.MessageEntityPre"/>, <see cref="T:TL.MessageEntityTextUrl"/>, <see cref="T:TL.MessageEntityMentionName"/>, <see cref="T:TL.InputMessageEntityMentionName"/>, <see cref="T:TL.MessageEntityPhone"/>, <see cref="T:TL.MessageEntityCashtag"/>, <see cref="T:TL.MessageEntityUnderline"/>, <see cref="T:TL.MessageEntityStrike"/>, <see cref="T:TL.MessageEntityBankCard"/>, <see cref="T:TL.MessageEntitySpoiler"/>, <see cref="T:TL.MessageEntityCustomEmoji"/>, <see cref="T:TL.MessageEntityBlockquote"/></para></summary>
        </member>
        <member name="F:TL.MessageEntity.offset">
            <summary>Offset of message entity within message (in <a href="https://corefork.telegram.org/api/entities#entity-length">UTF-16 code units</a>)</summary>
        </member>
        <member name="F:TL.MessageEntity.length">
            <summary>Length of message entity within message (in <a href="https://corefork.telegram.org/api/entities#entity-length">UTF-16 code units</a>)</summary>
        </member>
        <member name="T:TL.MessageEntityUnknown">
            <summary>Unknown message entity		<para>See <a href="https://corefork.telegram.org/constructor/messageEntityUnknown"/></para></summary>
        </member>
        <member name="T:TL.MessageEntityMention">
            <summary>Message entity <a href="https://corefork.telegram.org/api/mentions">mentioning</a> a user by <c>@username</c>; <see cref="T:TL.MessageEntityMentionName"/> can also be used to mention users by their ID.		<para>See <a href="https://corefork.telegram.org/constructor/messageEntityMention"/></para></summary>
        </member>
        <member name="T:TL.MessageEntityHashtag">
            <summary><strong>#hashtag</strong> message entity		<para>See <a href="https://corefork.telegram.org/constructor/messageEntityHashtag"/></para></summary>
        </member>
        <member name="T:TL.MessageEntityBotCommand">
            <summary>Message entity representing a bot /command		<para>See <a href="https://corefork.telegram.org/constructor/messageEntityBotCommand"/></para></summary>
        </member>
        <member name="T:TL.MessageEntityUrl">
            <summary>Message entity representing an in-text url: <a href="https://google.com">https://google.com</a>; for <a href="https://google.com">text urls</a>, use <see cref="T:TL.MessageEntityTextUrl"/>.		<para>See <a href="https://corefork.telegram.org/constructor/messageEntityUrl"/></para></summary>
        </member>
        <member name="T:TL.MessageEntityEmail">
            <summary>Message entity representing an <a href="mailto:email@example.com">email@example.com</a>.		<para>See <a href="https://corefork.telegram.org/constructor/messageEntityEmail"/></para></summary>
        </member>
        <member name="T:TL.MessageEntityBold">
            <summary>Message entity representing <strong>bold text</strong>.		<para>See <a href="https://corefork.telegram.org/constructor/messageEntityBold"/></para></summary>
        </member>
        <member name="T:TL.MessageEntityItalic">
            <summary>Message entity representing <em>italic text</em>.		<para>See <a href="https://corefork.telegram.org/constructor/messageEntityItalic"/></para></summary>
        </member>
        <member name="T:TL.MessageEntityCode">
            <summary>Message entity representing a <c>codeblock</c>.		<para>See <a href="https://corefork.telegram.org/constructor/messageEntityCode"/></para></summary>
        </member>
        <member name="T:TL.MessageEntityPre">
            <summary>Message entity representing a preformatted <c>codeblock</c>, allowing the user to specify a programming language for the codeblock.		<para>See <a href="https://corefork.telegram.org/constructor/messageEntityPre"/></para></summary>
        </member>
        <member name="F:TL.MessageEntityPre.language">
            <summary>Programming language of the code</summary>
        </member>
        <member name="T:TL.MessageEntityTextUrl">
            <summary>Message entity representing a <a href="https://google.com">text url</a>: for in-text urls like <a href="https://google.com">https://google.com</a> use <see cref="T:TL.MessageEntityUrl"/>.		<para>See <a href="https://corefork.telegram.org/constructor/messageEntityTextUrl"/></para></summary>
        </member>
        <member name="F:TL.MessageEntityTextUrl.url">
            <summary>The actual URL</summary>
        </member>
        <member name="T:TL.MessageEntityMentionName">
            <summary>Message entity representing a <a href="https://corefork.telegram.org/api/mentions">user mention</a>: for <em>creating</em> a mention use <see cref="T:TL.InputMessageEntityMentionName"/>.		<para>See <a href="https://corefork.telegram.org/constructor/messageEntityMentionName"/></para></summary>
        </member>
        <member name="F:TL.MessageEntityMentionName.user_id">
            <summary>Identifier of the user that was mentioned</summary>
        </member>
        <member name="T:TL.InputMessageEntityMentionName">
            <summary>Message entity that can be used to create a user <a href="https://corefork.telegram.org/api/mentions">user mention</a>: received mentions use the <see cref="T:TL.MessageEntityMentionName"/>, instead.		<para>See <a href="https://corefork.telegram.org/constructor/inputMessageEntityMentionName"/></para></summary>
        </member>
        <member name="F:TL.InputMessageEntityMentionName.user_id">
            <summary>Identifier of the user that was mentioned</summary>
        </member>
        <member name="T:TL.MessageEntityPhone">
            <summary>Message entity representing a phone number.		<para>See <a href="https://corefork.telegram.org/constructor/messageEntityPhone"/></para></summary>
        </member>
        <member name="T:TL.MessageEntityCashtag">
            <summary>Message entity representing a <strong>$cashtag</strong>.		<para>See <a href="https://corefork.telegram.org/constructor/messageEntityCashtag"/></para></summary>
        </member>
        <member name="T:TL.MessageEntityUnderline">
            <summary>Message entity representing underlined text.		<para>See <a href="https://corefork.telegram.org/constructor/messageEntityUnderline"/></para></summary>
        </member>
        <member name="T:TL.MessageEntityStrike">
            <summary>Message entity representing <del>strikethrough</del> text.		<para>See <a href="https://corefork.telegram.org/constructor/messageEntityStrike"/></para></summary>
        </member>
        <member name="T:TL.MessageEntityBankCard">
            <summary>Indicates a credit card number		<para>See <a href="https://corefork.telegram.org/constructor/messageEntityBankCard"/></para></summary>
        </member>
        <member name="T:TL.MessageEntitySpoiler">
            <summary>Message entity representing a spoiler		<para>See <a href="https://corefork.telegram.org/constructor/messageEntitySpoiler"/></para></summary>
        </member>
        <member name="T:TL.MessageEntityCustomEmoji">
            <summary>Represents a custom emoji.<br/>Note that this entity must wrap exactly one regular emoji (the one contained in <see cref="T:TL.DocumentAttributeCustomEmoji"/>.<c>alt</c>) in the related text, otherwise the server will ignore it.		<para>See <a href="https://corefork.telegram.org/constructor/messageEntityCustomEmoji"/></para></summary>
        </member>
        <member name="F:TL.MessageEntityCustomEmoji.document_id">
            <summary>Document ID of the <a href="https://corefork.telegram.org/api/custom-emoji">custom emoji</a>, use <see cref="M:TL.SchemaExtensions.Messages_GetCustomEmojiDocuments(WTelegram.Client,System.Int64[])">Messages_GetCustomEmojiDocuments</see> to fetch the emoji animation and the actual emoji it represents.</summary>
        </member>
        <member name="T:TL.MessageEntityBlockquote">
            <summary>Message entity representing a block quote.		<para>See <a href="https://corefork.telegram.org/constructor/messageEntityBlockquote"/></para></summary>
        </member>
        <member name="T:TL.InputChannelBase">
            <summary>Represents a channel		<para>See <a href="https://corefork.telegram.org/type/InputChannel"/></para>		<para>Derived classes: <see cref="T:TL.InputChannel"/>, <see cref="T:TL.InputChannelFromMessage"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/inputChannelEmpty">inputChannelEmpty</a></remarks>
        </member>
        <member name="P:TL.InputChannelBase.ChannelId">
            <summary>Channel ID</summary>
        </member>
        <member name="T:TL.InputChannel">
            <summary>Represents a channel		<para>See <a href="https://corefork.telegram.org/constructor/inputChannel"/></para></summary>
        </member>
        <member name="F:TL.InputChannel.channel_id">
            <summary>Channel ID</summary>
        </member>
        <member name="F:TL.InputChannel.access_hash">
            <summary>⚠ <b>REQUIRED FIELD</b>. See <see href="https://wiz0u.github.io/WTelegramClient/FAQ#access-hash">how to obtain it</see><br/>Access hash taken from the <see cref="T:TL.Channel"/></summary>
        </member>
        <member name="P:TL.InputChannel.ChannelId">
            <summary>Channel ID</summary>
        </member>
        <member name="M:TL.InputChannel.#ctor(System.Int64,System.Int64)">
            <param name="channel_id">Channel identifier</param>
            <param name="access_hash">⚠ <b>REQUIRED FIELD</b>. See FAQ for how to obtain it<br/><strong>access_hash</strong> value from the <see cref="T:TL.Channel"/> structure</param>
        </member>
        <member name="T:TL.InputChannelFromMessage">
            <summary>Defines a <a href="https://corefork.telegram.org/api/min">min</a> channel that was seen in a certain message of a certain chat.		<para>See <a href="https://corefork.telegram.org/constructor/inputChannelFromMessage"/></para></summary>
        </member>
        <member name="F:TL.InputChannelFromMessage.peer">
            <summary>The chat where the channel was seen</summary>
        </member>
        <member name="F:TL.InputChannelFromMessage.msg_id">
            <summary>The message ID in the chat where the channel was seen</summary>
        </member>
        <member name="F:TL.InputChannelFromMessage.channel_id">
            <summary>The channel ID</summary>
        </member>
        <member name="P:TL.InputChannelFromMessage.ChannelId">
            <summary>The channel ID</summary>
        </member>
        <member name="T:TL.Contacts_ResolvedPeer">
            <summary>Resolved peer		<para>See <a href="https://corefork.telegram.org/constructor/contacts.resolvedPeer"/></para></summary>
        </member>
        <member name="F:TL.Contacts_ResolvedPeer.peer">
            <summary>The peer</summary>
        </member>
        <member name="F:TL.Contacts_ResolvedPeer.chats">
            <summary>Chats</summary>
        </member>
        <member name="F:TL.Contacts_ResolvedPeer.users">
            <summary>Users</summary>
        </member>
        <member name="P:TL.Contacts_ResolvedPeer.UserOrChat">
            <summary>returns a <see cref="P:TL.Contacts_ResolvedPeer.User"/> or <see cref="T:TL.ChatBase"/> for the result</summary>
        </member>
        <member name="P:TL.Contacts_ResolvedPeer.User">
            <returns>A <see cref="T:TL.User"/>, or <see langword="null"/> if the username was for a channel</returns>
        </member>
        <member name="P:TL.Contacts_ResolvedPeer.Chat">
            <returns>A <see cref="T:TL.Channel"/> or <see cref="T:TL.ChannelForbidden"/>, or <see langword="null"/> if the username was for a user</returns>
        </member>
        <member name="P:TL.Contacts_ResolvedPeer.Channel">
            <returns>A <see cref="T:TL.Channel"/>, or <see langword="null"/> if the username was for a user or for a forbidden channel</returns>
        </member>
        <member name="T:TL.MessageRange">
            <summary>Indicates a range of chat messages		<para>See <a href="https://corefork.telegram.org/constructor/messageRange"/></para></summary>
        </member>
        <member name="F:TL.MessageRange.min_id">
            <summary>Start of range (message ID)</summary>
        </member>
        <member name="F:TL.MessageRange.max_id">
            <summary>End of range (message ID)</summary>
        </member>
        <member name="T:TL.Updates_ChannelDifferenceBase">
            <summary>Contains the difference (new messages) between our local channel state and the remote state		<para>See <a href="https://corefork.telegram.org/type/updates.ChannelDifference"/></para>		<para>Derived classes: <see cref="T:TL.Updates_ChannelDifferenceEmpty"/>, <see cref="T:TL.Updates_ChannelDifferenceTooLong"/>, <see cref="T:TL.Updates_ChannelDifference"/></para></summary>
        </member>
        <member name="M:TL.Updates_ChannelDifferenceBase.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Updates_ChannelDifferenceEmpty">
            <summary>There are no new updates		<para>See <a href="https://corefork.telegram.org/constructor/updates.channelDifferenceEmpty"/></para></summary>
        </member>
        <member name="F:TL.Updates_ChannelDifferenceEmpty.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Updates_ChannelDifferenceEmpty.pts">
            <summary>The latest <a href="https://corefork.telegram.org/api/updates">PTS</a></summary>
        </member>
        <member name="F:TL.Updates_ChannelDifferenceEmpty.timeout">
            <summary>Clients are supposed to refetch the channel difference after timeout seconds have elapsed</summary>
        </member>
        <member name="F:TL.Updates_ChannelDifferenceEmpty.Flags.final">
            <summary>Whether there are more updates that must be fetched (always false)</summary>
        </member>
        <member name="F:TL.Updates_ChannelDifferenceEmpty.Flags.has_timeout">
            <summary>Field <see cref="F:TL.Updates_ChannelDifferenceEmpty.timeout"/> has a value</summary>
        </member>
        <member name="M:TL.Updates_ChannelDifferenceEmpty.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Updates_ChannelDifferenceTooLong">
            <summary>The provided <c>pts + limit &lt; remote pts</c>. Simply, there are too many updates to be fetched (more than <c>limit</c>), the client has to resolve the update gap in one of the following ways (assuming the existence of a persistent database to locally store messages):		<para>See <a href="https://corefork.telegram.org/constructor/updates.channelDifferenceTooLong"/></para></summary>
        </member>
        <member name="F:TL.Updates_ChannelDifferenceTooLong.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Updates_ChannelDifferenceTooLong.timeout">
            <summary>Clients are supposed to refetch the channel difference after timeout seconds have elapsed</summary>
        </member>
        <member name="F:TL.Updates_ChannelDifferenceTooLong.dialog">
            <summary>Dialog containing the latest <a href="https://corefork.telegram.org/api/updates">PTS</a> that can be used to reset the channel state</summary>
        </member>
        <member name="F:TL.Updates_ChannelDifferenceTooLong.messages">
            <summary>The latest messages</summary>
        </member>
        <member name="F:TL.Updates_ChannelDifferenceTooLong.chats">
            <summary>Chats from messages</summary>
        </member>
        <member name="F:TL.Updates_ChannelDifferenceTooLong.users">
            <summary>Users from messages</summary>
        </member>
        <member name="F:TL.Updates_ChannelDifferenceTooLong.Flags.final">
            <summary>Whether there are more updates that must be fetched (always false)</summary>
        </member>
        <member name="F:TL.Updates_ChannelDifferenceTooLong.Flags.has_timeout">
            <summary>Field <see cref="F:TL.Updates_ChannelDifferenceTooLong.timeout"/> has a value</summary>
        </member>
        <member name="M:TL.Updates_ChannelDifferenceTooLong.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Updates_ChannelDifference">
            <summary>The new updates		<para>See <a href="https://corefork.telegram.org/constructor/updates.channelDifference"/></para></summary>
        </member>
        <member name="F:TL.Updates_ChannelDifference.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Updates_ChannelDifference.pts">
            <summary>The <a href="https://corefork.telegram.org/api/updates">PTS</a> from which to start getting updates the next time</summary>
        </member>
        <member name="F:TL.Updates_ChannelDifference.timeout">
            <summary>Clients are supposed to refetch the channel difference after timeout seconds have elapsed</summary>
        </member>
        <member name="F:TL.Updates_ChannelDifference.new_messages">
            <summary>New messages</summary>
        </member>
        <member name="F:TL.Updates_ChannelDifference.other_updates">
            <summary>Other updates</summary>
        </member>
        <member name="F:TL.Updates_ChannelDifference.chats">
            <summary>Chats</summary>
        </member>
        <member name="F:TL.Updates_ChannelDifference.users">
            <summary>Users</summary>
        </member>
        <member name="F:TL.Updates_ChannelDifference.Flags.final">
            <summary>Whether there are more updates to be fetched using getDifference, starting from the provided <c>pts</c></summary>
        </member>
        <member name="F:TL.Updates_ChannelDifference.Flags.has_timeout">
            <summary>Field <see cref="F:TL.Updates_ChannelDifference.timeout"/> has a value</summary>
        </member>
        <member name="M:TL.Updates_ChannelDifference.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.ChannelMessagesFilter">
            <summary>Filter for getting only certain types of channel messages		<para>See <a href="https://corefork.telegram.org/constructor/channelMessagesFilter"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/channelMessagesFilterEmpty">channelMessagesFilterEmpty</a></remarks>
        </member>
        <member name="F:TL.ChannelMessagesFilter.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.ChannelMessagesFilter.ranges">
            <summary>A range of messages to fetch</summary>
        </member>
        <member name="F:TL.ChannelMessagesFilter.Flags.exclude_new_messages">
            <summary>Whether to exclude new messages from the search</summary>
        </member>
        <member name="T:TL.ChannelParticipantBase">
            <summary>Channel participant		<para>See <a href="https://corefork.telegram.org/type/ChannelParticipant"/></para>		<para>Derived classes: <see cref="T:TL.ChannelParticipant"/>, <see cref="T:TL.ChannelParticipantSelf"/>, <see cref="T:TL.ChannelParticipantCreator"/>, <see cref="T:TL.ChannelParticipantAdmin"/>, <see cref="T:TL.ChannelParticipantBanned"/>, <see cref="T:TL.ChannelParticipantLeft"/></para></summary>
        </member>
        <member name="T:TL.ChannelParticipant">
            <summary>Channel/supergroup participant		<para>See <a href="https://corefork.telegram.org/constructor/channelParticipant"/></para></summary>
        </member>
        <member name="F:TL.ChannelParticipant.user_id">
            <summary>Participant user ID</summary>
        </member>
        <member name="F:TL.ChannelParticipant.date">
            <summary>Date joined</summary>
        </member>
        <member name="T:TL.ChannelParticipantSelf">
            <summary>Myself		<para>See <a href="https://corefork.telegram.org/constructor/channelParticipantSelf"/></para></summary>
        </member>
        <member name="F:TL.ChannelParticipantSelf.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.ChannelParticipantSelf.user_id">
            <summary>User ID</summary>
        </member>
        <member name="F:TL.ChannelParticipantSelf.inviter_id">
            <summary>User that invited me to the channel/supergroup</summary>
        </member>
        <member name="F:TL.ChannelParticipantSelf.date">
            <summary>When did I join the channel/supergroup</summary>
        </member>
        <member name="F:TL.ChannelParticipantSelf.Flags.via_request">
            <summary>Whether I joined upon specific approval of an admin</summary>
        </member>
        <member name="T:TL.ChannelParticipantCreator">
            <summary>Channel/supergroup creator		<para>See <a href="https://corefork.telegram.org/constructor/channelParticipantCreator"/></para></summary>
        </member>
        <member name="F:TL.ChannelParticipantCreator.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.ChannelParticipantCreator.user_id">
            <summary>User ID</summary>
        </member>
        <member name="F:TL.ChannelParticipantCreator.admin_rights">
            <summary>Creator admin rights</summary>
        </member>
        <member name="F:TL.ChannelParticipantCreator.rank">
            <summary>The role (rank) of the group creator in the group: just an arbitrary string, <c>admin</c> by default</summary>
        </member>
        <member name="F:TL.ChannelParticipantCreator.Flags.has_rank">
            <summary>Field <see cref="F:TL.ChannelParticipantCreator.rank"/> has a value</summary>
        </member>
        <member name="T:TL.ChannelParticipantAdmin">
            <summary>Admin		<para>See <a href="https://corefork.telegram.org/constructor/channelParticipantAdmin"/></para></summary>
        </member>
        <member name="F:TL.ChannelParticipantAdmin.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.ChannelParticipantAdmin.user_id">
            <summary>Admin user ID</summary>
        </member>
        <member name="F:TL.ChannelParticipantAdmin.inviter_id">
            <summary>User that invited the admin to the channel/group</summary>
        </member>
        <member name="F:TL.ChannelParticipantAdmin.promoted_by">
            <summary>User that promoted the user to admin</summary>
        </member>
        <member name="F:TL.ChannelParticipantAdmin.date">
            <summary>When did the user join</summary>
        </member>
        <member name="F:TL.ChannelParticipantAdmin.admin_rights">
            <summary>Admin <a href="https://corefork.telegram.org/api/rights">rights</a></summary>
        </member>
        <member name="F:TL.ChannelParticipantAdmin.rank">
            <summary>The role (rank) of the admin in the group: just an arbitrary string, <c>admin</c> by default</summary>
        </member>
        <member name="F:TL.ChannelParticipantAdmin.Flags.can_edit">
            <summary>Can this admin promote other admins with the same permissions?</summary>
        </member>
        <member name="F:TL.ChannelParticipantAdmin.Flags.self">
            <summary>Is this the current user</summary>
        </member>
        <member name="F:TL.ChannelParticipantAdmin.Flags.has_rank">
            <summary>Field <see cref="F:TL.ChannelParticipantAdmin.rank"/> has a value</summary>
        </member>
        <member name="T:TL.ChannelParticipantBanned">
            <summary>Banned/kicked user		<para>See <a href="https://corefork.telegram.org/constructor/channelParticipantBanned"/></para></summary>
        </member>
        <member name="F:TL.ChannelParticipantBanned.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.ChannelParticipantBanned.peer">
            <summary>The banned peer</summary>
        </member>
        <member name="F:TL.ChannelParticipantBanned.kicked_by">
            <summary>User was kicked by the specified admin</summary>
        </member>
        <member name="F:TL.ChannelParticipantBanned.date">
            <summary>When did the user join the group</summary>
        </member>
        <member name="F:TL.ChannelParticipantBanned.banned_rights">
            <summary>Banned <a href="https://corefork.telegram.org/api/rights">rights</a></summary>
        </member>
        <member name="F:TL.ChannelParticipantBanned.Flags.left">
            <summary>Whether the user has left the group</summary>
        </member>
        <member name="T:TL.ChannelParticipantLeft">
            <summary>A participant that left the channel/supergroup		<para>See <a href="https://corefork.telegram.org/constructor/channelParticipantLeft"/></para></summary>
        </member>
        <member name="F:TL.ChannelParticipantLeft.peer">
            <summary>The peer that left</summary>
        </member>
        <member name="T:TL.ChannelParticipantsFilter">
            <summary>Filter for fetching channel participants		<para>See <a href="https://corefork.telegram.org/type/ChannelParticipantsFilter"/></para>		<para>Derived classes: <see cref="T:TL.ChannelParticipantsRecent"/>, <see cref="T:TL.ChannelParticipantsAdmins"/>, <see cref="T:TL.ChannelParticipantsKicked"/>, <see cref="T:TL.ChannelParticipantsBots"/>, <see cref="T:TL.ChannelParticipantsBanned"/>, <see cref="T:TL.ChannelParticipantsSearch"/>, <see cref="T:TL.ChannelParticipantsContacts"/>, <see cref="T:TL.ChannelParticipantsMentions"/></para></summary>
        </member>
        <member name="T:TL.ChannelParticipantsRecent">
            <summary>Fetch only recent participants		<para>See <a href="https://corefork.telegram.org/constructor/channelParticipantsRecent"/></para></summary>
        </member>
        <member name="T:TL.ChannelParticipantsAdmins">
            <summary>Fetch only admin participants		<para>See <a href="https://corefork.telegram.org/constructor/channelParticipantsAdmins"/></para></summary>
        </member>
        <member name="T:TL.ChannelParticipantsKicked">
            <summary>Fetch only kicked participants		<para>See <a href="https://corefork.telegram.org/constructor/channelParticipantsKicked"/></para></summary>
        </member>
        <member name="F:TL.ChannelParticipantsKicked.q">
            <summary>Optional filter for searching kicked participants by name (otherwise empty)</summary>
        </member>
        <member name="T:TL.ChannelParticipantsBots">
            <summary>Fetch only bot participants		<para>See <a href="https://corefork.telegram.org/constructor/channelParticipantsBots"/></para></summary>
        </member>
        <member name="T:TL.ChannelParticipantsBanned">
            <summary>Fetch only banned participants		<para>See <a href="https://corefork.telegram.org/constructor/channelParticipantsBanned"/></para></summary>
        </member>
        <member name="F:TL.ChannelParticipantsBanned.q">
            <summary>Optional filter for searching banned participants by name (otherwise empty)</summary>
        </member>
        <member name="T:TL.ChannelParticipantsSearch">
            <summary>Query participants by name		<para>See <a href="https://corefork.telegram.org/constructor/channelParticipantsSearch"/></para></summary>
        </member>
        <member name="F:TL.ChannelParticipantsSearch.q">
            <summary>Search query</summary>
        </member>
        <member name="T:TL.ChannelParticipantsContacts">
            <summary>Fetch only participants that are also contacts		<para>See <a href="https://corefork.telegram.org/constructor/channelParticipantsContacts"/></para></summary>
        </member>
        <member name="F:TL.ChannelParticipantsContacts.q">
            <summary>Optional search query for searching contact participants by name</summary>
        </member>
        <member name="T:TL.ChannelParticipantsMentions">
            <summary>This filter is used when looking for supergroup members to mention.<br/>This filter will automatically remove anonymous admins, and return even non-participant users that replied to a specific <a href="https://corefork.telegram.org/api/threads">thread</a> through the <a href="https://corefork.telegram.org/api/threads#channel-comments">comment section</a> of a channel.		<para>See <a href="https://corefork.telegram.org/constructor/channelParticipantsMentions"/></para></summary>
        </member>
        <member name="F:TL.ChannelParticipantsMentions.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.ChannelParticipantsMentions.q">
            <summary>Filter by user name or username</summary>
        </member>
        <member name="F:TL.ChannelParticipantsMentions.top_msg_id">
            <summary>Look only for users that posted in this <a href="https://corefork.telegram.org/api/threads">thread</a></summary>
        </member>
        <member name="F:TL.ChannelParticipantsMentions.Flags.has_q">
            <summary>Field <see cref="F:TL.ChannelParticipantsMentions.q"/> has a value</summary>
        </member>
        <member name="F:TL.ChannelParticipantsMentions.Flags.has_top_msg_id">
            <summary>Field <see cref="F:TL.ChannelParticipantsMentions.top_msg_id"/> has a value</summary>
        </member>
        <member name="T:TL.Channels_ChannelParticipants">
            <summary>Represents multiple channel participants		<para>See <a href="https://corefork.telegram.org/constructor/channels.channelParticipants"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/channels.channelParticipantsNotModified">channels.channelParticipantsNotModified</a></remarks>
        </member>
        <member name="F:TL.Channels_ChannelParticipants.count">
            <summary>Total number of participants that correspond to the given query</summary>
        </member>
        <member name="F:TL.Channels_ChannelParticipants.participants">
            <summary>Participants</summary>
        </member>
        <member name="F:TL.Channels_ChannelParticipants.chats">
            <summary>Mentioned chats</summary>
        </member>
        <member name="F:TL.Channels_ChannelParticipants.users">
            <summary>Users mentioned in participant info</summary>
        </member>
        <member name="M:TL.Channels_ChannelParticipants.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Channels_ChannelParticipant">
            <summary>Represents a channel participant		<para>See <a href="https://corefork.telegram.org/constructor/channels.channelParticipant"/></para></summary>
        </member>
        <member name="F:TL.Channels_ChannelParticipant.participant">
            <summary>The channel participant</summary>
        </member>
        <member name="F:TL.Channels_ChannelParticipant.chats">
            <summary>Mentioned chats</summary>
        </member>
        <member name="F:TL.Channels_ChannelParticipant.users">
            <summary>Users</summary>
        </member>
        <member name="M:TL.Channels_ChannelParticipant.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Help_TermsOfService">
            <summary>Info about the latest telegram Terms Of Service		<para>See <a href="https://corefork.telegram.org/constructor/help.termsOfService"/></para></summary>
        </member>
        <member name="F:TL.Help_TermsOfService.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Help_TermsOfService.id">
            <summary>ID of the new terms</summary>
        </member>
        <member name="F:TL.Help_TermsOfService.text">
            <summary>Text of the new terms</summary>
        </member>
        <member name="F:TL.Help_TermsOfService.entities">
            <summary><a href="https://corefork.telegram.org/api/entities">Message entities for styled text</a></summary>
        </member>
        <member name="F:TL.Help_TermsOfService.min_age_confirm">
            <summary>Minimum age required to sign up to telegram, the user must confirm that they is older than the minimum age.</summary>
        </member>
        <member name="F:TL.Help_TermsOfService.Flags.popup">
            <summary>Whether a prompt must be showed to the user, in order to accept the new terms.</summary>
        </member>
        <member name="F:TL.Help_TermsOfService.Flags.has_min_age_confirm">
            <summary>Field <see cref="F:TL.Help_TermsOfService.min_age_confirm"/> has a value</summary>
        </member>
        <member name="T:TL.Messages_SavedGifs">
            <summary>Saved gifs		<para>See <a href="https://corefork.telegram.org/constructor/messages.savedGifs"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/messages.savedGifsNotModified">messages.savedGifsNotModified</a></remarks>
        </member>
        <member name="F:TL.Messages_SavedGifs.hash">
            <summary><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></summary>
        </member>
        <member name="F:TL.Messages_SavedGifs.gifs">
            <summary>List of saved gifs</summary>
        </member>
        <member name="T:TL.InputBotInlineMessage">
            <summary>Represents a sent inline message from the perspective of a bot		<para>See <a href="https://corefork.telegram.org/type/InputBotInlineMessage"/></para>		<para>Derived classes: <see cref="T:TL.InputBotInlineMessageMediaAuto"/>, <see cref="T:TL.InputBotInlineMessageText"/>, <see cref="T:TL.InputBotInlineMessageMediaGeo"/>, <see cref="T:TL.InputBotInlineMessageMediaVenue"/>, <see cref="T:TL.InputBotInlineMessageMediaContact"/>, <see cref="T:TL.InputBotInlineMessageGame"/>, <see cref="T:TL.InputBotInlineMessageMediaInvoice"/>, <see cref="T:TL.InputBotInlineMessageMediaWebPage"/></para></summary>
        </member>
        <member name="T:TL.InputBotInlineMessageMediaAuto">
            <summary>A media		<para>See <a href="https://corefork.telegram.org/constructor/inputBotInlineMessageMediaAuto"/></para></summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaAuto.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaAuto.message">
            <summary>Caption</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaAuto.entities">
            <summary><a href="https://corefork.telegram.org/api/entities">Message entities for styled text</a></summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaAuto.reply_markup">
            <summary>Inline keyboard</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaAuto.Flags.has_entities">
            <summary>Field <see cref="F:TL.InputBotInlineMessageMediaAuto.entities"/> has a value</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaAuto.Flags.has_reply_markup">
            <summary>Field <see cref="F:TL.InputBotInlineMessageMediaAuto.reply_markup"/> has a value</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaAuto.Flags.invert_media">
            <summary>If set, any eventual webpage preview will be shown on top of the message instead of at the bottom.</summary>
        </member>
        <member name="T:TL.InputBotInlineMessageText">
            <summary>Simple text message		<para>See <a href="https://corefork.telegram.org/constructor/inputBotInlineMessageText"/></para></summary>
        </member>
        <member name="F:TL.InputBotInlineMessageText.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageText.message">
            <summary>Message</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageText.entities">
            <summary><a href="https://corefork.telegram.org/api/entities">Message entities for styled text</a></summary>
        </member>
        <member name="F:TL.InputBotInlineMessageText.reply_markup">
            <summary>Inline keyboard</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageText.Flags.no_webpage">
            <summary>Disable webpage preview</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageText.Flags.has_entities">
            <summary>Field <see cref="F:TL.InputBotInlineMessageText.entities"/> has a value</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageText.Flags.has_reply_markup">
            <summary>Field <see cref="F:TL.InputBotInlineMessageText.reply_markup"/> has a value</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageText.Flags.invert_media">
            <summary>If set, any eventual webpage preview will be shown on top of the message instead of at the bottom.</summary>
        </member>
        <member name="T:TL.InputBotInlineMessageMediaGeo">
            <summary>Geolocation		<para>See <a href="https://corefork.telegram.org/constructor/inputBotInlineMessageMediaGeo"/></para></summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaGeo.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaGeo.geo_point">
            <summary>Geolocation</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaGeo.heading">
            <summary>For <a href="https://corefork.telegram.org/api/live-location">live locations</a>, a direction in which the location moves, in degrees; 1-360</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaGeo.period">
            <summary>Validity period</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaGeo.proximity_notification_radius">
            <summary>For <a href="https://corefork.telegram.org/api/live-location">live locations</a>, a maximum distance to another chat member for proximity alerts, in meters (0-100000)</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaGeo.reply_markup">
            <summary>Reply markup for bot/inline keyboards</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaGeo.Flags.has_heading">
            <summary>Field <see cref="F:TL.InputBotInlineMessageMediaGeo.heading"/> has a value</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaGeo.Flags.has_period">
            <summary>Field <see cref="F:TL.InputBotInlineMessageMediaGeo.period"/> has a value</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaGeo.Flags.has_reply_markup">
            <summary>Field <see cref="F:TL.InputBotInlineMessageMediaGeo.reply_markup"/> has a value</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaGeo.Flags.has_proximity_notification_radius">
            <summary>Field <see cref="F:TL.InputBotInlineMessageMediaGeo.proximity_notification_radius"/> has a value</summary>
        </member>
        <member name="T:TL.InputBotInlineMessageMediaVenue">
            <summary>Venue		<para>See <a href="https://corefork.telegram.org/constructor/inputBotInlineMessageMediaVenue"/></para></summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaVenue.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaVenue.geo_point">
            <summary>Geolocation</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaVenue.title">
            <summary>Venue name</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaVenue.address">
            <summary>Address</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaVenue.provider">
            <summary>Venue provider: currently only "foursquare" and "gplaces" (Google Places) need to be supported</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaVenue.venue_id">
            <summary>Venue ID in the provider's database</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaVenue.venue_type">
            <summary>Venue type in the provider's database</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaVenue.reply_markup">
            <summary>Inline keyboard</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaVenue.Flags.has_reply_markup">
            <summary>Field <see cref="F:TL.InputBotInlineMessageMediaVenue.reply_markup"/> has a value</summary>
        </member>
        <member name="T:TL.InputBotInlineMessageMediaContact">
            <summary>A contact		<para>See <a href="https://corefork.telegram.org/constructor/inputBotInlineMessageMediaContact"/></para></summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaContact.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaContact.phone_number">
            <summary>Phone number</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaContact.first_name">
            <summary>First name</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaContact.last_name">
            <summary>Last name</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaContact.vcard">
            <summary>VCard info</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaContact.reply_markup">
            <summary>Inline keyboard</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaContact.Flags.has_reply_markup">
            <summary>Field <see cref="F:TL.InputBotInlineMessageMediaContact.reply_markup"/> has a value</summary>
        </member>
        <member name="T:TL.InputBotInlineMessageGame">
            <summary>A game		<para>See <a href="https://corefork.telegram.org/constructor/inputBotInlineMessageGame"/></para></summary>
        </member>
        <member name="F:TL.InputBotInlineMessageGame.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageGame.reply_markup">
            <summary>Inline keyboard</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageGame.Flags.has_reply_markup">
            <summary>Field <see cref="F:TL.InputBotInlineMessageGame.reply_markup"/> has a value</summary>
        </member>
        <member name="T:TL.InputBotInlineMessageMediaInvoice">
            <summary>An invoice		<para>See <a href="https://corefork.telegram.org/constructor/inputBotInlineMessageMediaInvoice"/></para></summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaInvoice.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaInvoice.title">
            <summary>Product name, 1-32 characters</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaInvoice.description">
            <summary>Product description, 1-255 characters</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaInvoice.photo">
            <summary>Invoice photo</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaInvoice.invoice">
            <summary>The invoice</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaInvoice.payload">
            <summary>Bot-defined invoice payload, 1-128 bytes. This will not be displayed to the user, use for your internal processes.</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaInvoice.provider">
            <summary>Payments provider token, obtained via <a href="https://t.me/botfather">Botfather</a></summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaInvoice.provider_data">
            <summary>A JSON-serialized object for data about the invoice, which will be shared with the payment provider. A detailed description of the required fields should be provided by the payment provider.</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaInvoice.reply_markup">
            <summary>Inline keyboard</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaInvoice.Flags.has_photo">
            <summary>Field <see cref="F:TL.InputBotInlineMessageMediaInvoice.photo"/> has a value</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaInvoice.Flags.has_reply_markup">
            <summary>Field <see cref="F:TL.InputBotInlineMessageMediaInvoice.reply_markup"/> has a value</summary>
        </member>
        <member name="T:TL.InputBotInlineMessageMediaWebPage">
            <summary>Specifies options that will be used to generate the link preview for the message, or even a standalone link preview without an attached message.		<para>See <a href="https://corefork.telegram.org/constructor/inputBotInlineMessageMediaWebPage"/></para></summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaWebPage.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaWebPage.message">
            <summary>The message, can be empty.</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaWebPage.entities">
            <summary><a href="https://corefork.telegram.org/api/entities">Message entities for styled text</a></summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaWebPage.url">
            <summary>The URL to use for the link preview.</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaWebPage.reply_markup">
            <summary>Inline keyboard</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaWebPage.Flags.has_entities">
            <summary>Field <see cref="F:TL.InputBotInlineMessageMediaWebPage.entities"/> has a value</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaWebPage.Flags.has_reply_markup">
            <summary>Field <see cref="F:TL.InputBotInlineMessageMediaWebPage.reply_markup"/> has a value</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaWebPage.Flags.invert_media">
            <summary>If set, any eventual webpage preview will be shown on top of the message instead of at the bottom.</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaWebPage.Flags.force_large_media">
            <summary>If set, specifies that a large media preview should be used.</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaWebPage.Flags.force_small_media">
            <summary>If set, specifies that a small media preview should be used.</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageMediaWebPage.Flags.optional">
            <summary>If <strong>not</strong> set, a <c>WEBPAGE_NOT_FOUND</c> RPC error will be emitted if a webpage preview cannot be generated for the specified <c>url</c>; otherwise, no error will be emitted (unless the provided message is also empty, in which case a <c>MESSAGE_EMPTY</c> will be emitted, instead).</summary>
        </member>
        <member name="T:TL.InputBotInlineResultBase">
            <summary>Inline bot result		<para>See <a href="https://corefork.telegram.org/type/InputBotInlineResult"/></para>		<para>Derived classes: <see cref="T:TL.InputBotInlineResult"/>, <see cref="T:TL.InputBotInlineResultPhoto"/>, <see cref="T:TL.InputBotInlineResultDocument"/>, <see cref="T:TL.InputBotInlineResultGame"/></para></summary>
        </member>
        <member name="P:TL.InputBotInlineResultBase.ID">
            <summary>ID of result</summary>
        </member>
        <member name="P:TL.InputBotInlineResultBase.SendMessage">
            <summary>Message to send when the result is selected</summary>
        </member>
        <member name="T:TL.InputBotInlineResult">
            <summary>An inline bot result		<para>See <a href="https://corefork.telegram.org/constructor/inputBotInlineResult"/></para></summary>
        </member>
        <member name="F:TL.InputBotInlineResult.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.InputBotInlineResult.id">
            <summary>ID of result</summary>
        </member>
        <member name="F:TL.InputBotInlineResult.type">
            <summary>Result type (see <a href="https://corefork.telegram.org/bots/api#inlinequeryresult">bot API docs</a>)</summary>
        </member>
        <member name="F:TL.InputBotInlineResult.title">
            <summary>Result title</summary>
        </member>
        <member name="F:TL.InputBotInlineResult.description">
            <summary>Result description</summary>
        </member>
        <member name="F:TL.InputBotInlineResult.url">
            <summary>URL of result</summary>
        </member>
        <member name="F:TL.InputBotInlineResult.thumb">
            <summary>Thumbnail for result</summary>
        </member>
        <member name="F:TL.InputBotInlineResult.content">
            <summary>Result contents</summary>
        </member>
        <member name="F:TL.InputBotInlineResult.send_message">
            <summary>Message to send when the result is selected</summary>
        </member>
        <member name="F:TL.InputBotInlineResult.Flags.has_title">
            <summary>Field <see cref="F:TL.InputBotInlineResult.title"/> has a value</summary>
        </member>
        <member name="F:TL.InputBotInlineResult.Flags.has_description">
            <summary>Field <see cref="F:TL.InputBotInlineResult.description"/> has a value</summary>
        </member>
        <member name="F:TL.InputBotInlineResult.Flags.has_url">
            <summary>Field <see cref="F:TL.InputBotInlineResult.url"/> has a value</summary>
        </member>
        <member name="F:TL.InputBotInlineResult.Flags.has_thumb">
            <summary>Field <see cref="F:TL.InputBotInlineResult.thumb"/> has a value</summary>
        </member>
        <member name="F:TL.InputBotInlineResult.Flags.has_content">
            <summary>Field <see cref="F:TL.InputBotInlineResult.content"/> has a value</summary>
        </member>
        <member name="P:TL.InputBotInlineResult.ID">
            <summary>ID of result</summary>
        </member>
        <member name="P:TL.InputBotInlineResult.SendMessage">
            <summary>Message to send when the result is selected</summary>
        </member>
        <member name="T:TL.InputBotInlineResultPhoto">
            <summary>Photo		<para>See <a href="https://corefork.telegram.org/constructor/inputBotInlineResultPhoto"/></para></summary>
        </member>
        <member name="F:TL.InputBotInlineResultPhoto.id">
            <summary>Result ID</summary>
        </member>
        <member name="F:TL.InputBotInlineResultPhoto.type">
            <summary>Result type (see <a href="https://corefork.telegram.org/bots/api#inlinequeryresult">bot API docs</a>)</summary>
        </member>
        <member name="F:TL.InputBotInlineResultPhoto.photo">
            <summary>Photo to send</summary>
        </member>
        <member name="F:TL.InputBotInlineResultPhoto.send_message">
            <summary>Message to send when the result is selected</summary>
        </member>
        <member name="P:TL.InputBotInlineResultPhoto.ID">
            <summary>Result ID</summary>
        </member>
        <member name="P:TL.InputBotInlineResultPhoto.SendMessage">
            <summary>Message to send when the result is selected</summary>
        </member>
        <member name="T:TL.InputBotInlineResultDocument">
            <summary>Document (media of any type except for photos)		<para>See <a href="https://corefork.telegram.org/constructor/inputBotInlineResultDocument"/></para></summary>
        </member>
        <member name="F:TL.InputBotInlineResultDocument.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.InputBotInlineResultDocument.id">
            <summary>Result ID</summary>
        </member>
        <member name="F:TL.InputBotInlineResultDocument.type">
            <summary>Result type (see <a href="https://corefork.telegram.org/bots/api#inlinequeryresult">bot API docs</a>)</summary>
        </member>
        <member name="F:TL.InputBotInlineResultDocument.title">
            <summary>Result title</summary>
        </member>
        <member name="F:TL.InputBotInlineResultDocument.description">
            <summary>Result description</summary>
        </member>
        <member name="F:TL.InputBotInlineResultDocument.document">
            <summary>Document to send</summary>
        </member>
        <member name="F:TL.InputBotInlineResultDocument.send_message">
            <summary>Message to send when the result is selected</summary>
        </member>
        <member name="F:TL.InputBotInlineResultDocument.Flags.has_title">
            <summary>Field <see cref="F:TL.InputBotInlineResultDocument.title"/> has a value</summary>
        </member>
        <member name="F:TL.InputBotInlineResultDocument.Flags.has_description">
            <summary>Field <see cref="F:TL.InputBotInlineResultDocument.description"/> has a value</summary>
        </member>
        <member name="P:TL.InputBotInlineResultDocument.ID">
            <summary>Result ID</summary>
        </member>
        <member name="P:TL.InputBotInlineResultDocument.SendMessage">
            <summary>Message to send when the result is selected</summary>
        </member>
        <member name="T:TL.InputBotInlineResultGame">
            <summary>Game		<para>See <a href="https://corefork.telegram.org/constructor/inputBotInlineResultGame"/></para></summary>
        </member>
        <member name="F:TL.InputBotInlineResultGame.id">
            <summary>Result ID</summary>
        </member>
        <member name="F:TL.InputBotInlineResultGame.short_name">
            <summary>Game short name</summary>
        </member>
        <member name="F:TL.InputBotInlineResultGame.send_message">
            <summary>Message to send when the result is selected</summary>
        </member>
        <member name="P:TL.InputBotInlineResultGame.ID">
            <summary>Result ID</summary>
        </member>
        <member name="P:TL.InputBotInlineResultGame.SendMessage">
            <summary>Message to send when the result is selected</summary>
        </member>
        <member name="T:TL.BotInlineMessage">
            <summary>Inline message		<para>See <a href="https://corefork.telegram.org/type/BotInlineMessage"/></para>		<para>Derived classes: <see cref="T:TL.BotInlineMessageMediaAuto"/>, <see cref="T:TL.BotInlineMessageText"/>, <see cref="T:TL.BotInlineMessageMediaGeo"/>, <see cref="T:TL.BotInlineMessageMediaVenue"/>, <see cref="T:TL.BotInlineMessageMediaContact"/>, <see cref="T:TL.BotInlineMessageMediaInvoice"/>, <see cref="T:TL.BotInlineMessageMediaWebPage"/></para></summary>
        </member>
        <member name="T:TL.BotInlineMessageMediaAuto">
            <summary>Send whatever media is attached to the <see cref="T:TL.BotInlineMediaResult"/>		<para>See <a href="https://corefork.telegram.org/constructor/botInlineMessageMediaAuto"/></para></summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaAuto.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaAuto.message">
            <summary>Caption</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaAuto.entities">
            <summary><a href="https://corefork.telegram.org/api/entities">Message entities for styled text</a></summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaAuto.reply_markup">
            <summary>Inline keyboard</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaAuto.Flags.has_entities">
            <summary>Field <see cref="F:TL.BotInlineMessageMediaAuto.entities"/> has a value</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaAuto.Flags.has_reply_markup">
            <summary>Field <see cref="F:TL.BotInlineMessageMediaAuto.reply_markup"/> has a value</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaAuto.Flags.invert_media">
            <summary>If set, any eventual webpage preview will be shown on top of the message instead of at the bottom.</summary>
        </member>
        <member name="T:TL.BotInlineMessageText">
            <summary>Send a simple text message		<para>See <a href="https://corefork.telegram.org/constructor/botInlineMessageText"/></para></summary>
        </member>
        <member name="F:TL.BotInlineMessageText.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.BotInlineMessageText.message">
            <summary>The message</summary>
        </member>
        <member name="F:TL.BotInlineMessageText.entities">
            <summary><a href="https://corefork.telegram.org/api/entities">Message entities for styled text</a></summary>
        </member>
        <member name="F:TL.BotInlineMessageText.reply_markup">
            <summary>Inline keyboard</summary>
        </member>
        <member name="F:TL.BotInlineMessageText.Flags.no_webpage">
            <summary>Disable webpage preview</summary>
        </member>
        <member name="F:TL.BotInlineMessageText.Flags.has_entities">
            <summary>Field <see cref="F:TL.BotInlineMessageText.entities"/> has a value</summary>
        </member>
        <member name="F:TL.BotInlineMessageText.Flags.has_reply_markup">
            <summary>Field <see cref="F:TL.BotInlineMessageText.reply_markup"/> has a value</summary>
        </member>
        <member name="F:TL.BotInlineMessageText.Flags.invert_media">
            <summary>If set, any eventual webpage preview will be shown on top of the message instead of at the bottom.</summary>
        </member>
        <member name="T:TL.BotInlineMessageMediaGeo">
            <summary>Send a geolocation		<para>See <a href="https://corefork.telegram.org/constructor/botInlineMessageMediaGeo"/></para></summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaGeo.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaGeo.geo">
            <summary>Geolocation</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaGeo.heading">
            <summary>For <a href="https://corefork.telegram.org/api/live-location">live locations</a>, a direction in which the location moves, in degrees; 1-360.</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaGeo.period">
            <summary>Validity period</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaGeo.proximity_notification_radius">
            <summary>For <a href="https://corefork.telegram.org/api/live-location">live locations</a>, a maximum distance to another chat member for proximity alerts, in meters (0-100000).</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaGeo.reply_markup">
            <summary>Inline keyboard</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaGeo.Flags.has_heading">
            <summary>Field <see cref="F:TL.BotInlineMessageMediaGeo.heading"/> has a value</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaGeo.Flags.has_period">
            <summary>Field <see cref="F:TL.BotInlineMessageMediaGeo.period"/> has a value</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaGeo.Flags.has_reply_markup">
            <summary>Field <see cref="F:TL.BotInlineMessageMediaGeo.reply_markup"/> has a value</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaGeo.Flags.has_proximity_notification_radius">
            <summary>Field <see cref="F:TL.BotInlineMessageMediaGeo.proximity_notification_radius"/> has a value</summary>
        </member>
        <member name="T:TL.BotInlineMessageMediaVenue">
            <summary>Send a venue		<para>See <a href="https://corefork.telegram.org/constructor/botInlineMessageMediaVenue"/></para></summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaVenue.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaVenue.geo">
            <summary>Geolocation of venue</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaVenue.title">
            <summary>Venue name</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaVenue.address">
            <summary>Address</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaVenue.provider">
            <summary>Venue provider: currently only "foursquare" and "gplaces" (Google Places) need to be supported</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaVenue.venue_id">
            <summary>Venue ID in the provider's database</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaVenue.venue_type">
            <summary>Venue type in the provider's database</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaVenue.reply_markup">
            <summary>Inline keyboard</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaVenue.Flags.has_reply_markup">
            <summary>Field <see cref="F:TL.BotInlineMessageMediaVenue.reply_markup"/> has a value</summary>
        </member>
        <member name="T:TL.BotInlineMessageMediaContact">
            <summary>Send a contact		<para>See <a href="https://corefork.telegram.org/constructor/botInlineMessageMediaContact"/></para></summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaContact.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaContact.phone_number">
            <summary>Phone number</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaContact.first_name">
            <summary>First name</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaContact.last_name">
            <summary>Last name</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaContact.vcard">
            <summary>VCard info</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaContact.reply_markup">
            <summary>Inline keyboard</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaContact.Flags.has_reply_markup">
            <summary>Field <see cref="F:TL.BotInlineMessageMediaContact.reply_markup"/> has a value</summary>
        </member>
        <member name="T:TL.BotInlineMessageMediaInvoice">
            <summary>Send an invoice		<para>See <a href="https://corefork.telegram.org/constructor/botInlineMessageMediaInvoice"/></para></summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaInvoice.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaInvoice.title">
            <summary>Product name, 1-32 characters</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaInvoice.description">
            <summary>Product description, 1-255 characters</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaInvoice.photo">
            <summary>Product photo</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaInvoice.currency">
            <summary>Three-letter ISO 4217 <a href="https://corefork.telegram.org/bots/payments#supported-currencies">currency</a> code</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaInvoice.total_amount">
            <summary>Total price in the smallest units of the currency (integer, not float/double). For example, for a price of <c>US$ 1.45</c> pass <c>amount = 145</c>. See the exp parameter in <a href="https://corefork.telegram.org/bots/payments/currencies.json">currencies.json</a>, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies).</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaInvoice.reply_markup">
            <summary>Inline keyboard</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaInvoice.Flags.has_photo">
            <summary>Field <see cref="F:TL.BotInlineMessageMediaInvoice.photo"/> has a value</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaInvoice.Flags.shipping_address_requested">
            <summary>Set this flag if you require the user's shipping address to complete the order</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaInvoice.Flags.has_reply_markup">
            <summary>Field <see cref="F:TL.BotInlineMessageMediaInvoice.reply_markup"/> has a value</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaInvoice.Flags.test">
            <summary>Test invoice</summary>
        </member>
        <member name="T:TL.BotInlineMessageMediaWebPage">
            <summary>Specifies options that must be used to generate the link preview for the message, or even a standalone link preview without an attached message.		<para>See <a href="https://corefork.telegram.org/constructor/botInlineMessageMediaWebPage"/></para></summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaWebPage.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaWebPage.message">
            <summary>The message, can be empty.</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaWebPage.entities">
            <summary><a href="https://corefork.telegram.org/api/entities">Message entities for styled text</a></summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaWebPage.url">
            <summary>The URL to use for the link preview.</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaWebPage.reply_markup">
            <summary>Reply markup for sending bot buttons</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaWebPage.Flags.has_entities">
            <summary>Field <see cref="F:TL.BotInlineMessageMediaWebPage.entities"/> has a value</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaWebPage.Flags.has_reply_markup">
            <summary>Field <see cref="F:TL.BotInlineMessageMediaWebPage.reply_markup"/> has a value</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaWebPage.Flags.invert_media">
            <summary>If set, any eventual webpage preview will be shown on top of the message instead of at the bottom.</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaWebPage.Flags.force_large_media">
            <summary>If set, specifies that a large media preview should be used.</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaWebPage.Flags.force_small_media">
            <summary>If set, specifies that a small media preview should be used.</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaWebPage.Flags.manual">
            <summary>If set, indicates that the URL used for the webpage preview was specified manually using <see cref="T:TL.InputMediaWebPage"/>, and may not be related to any of the URLs specified in the message.</summary>
        </member>
        <member name="F:TL.BotInlineMessageMediaWebPage.Flags.safe">
            <summary>If set, the link can be opened directly without user confirmation.</summary>
        </member>
        <member name="T:TL.BotInlineResultBase">
            <summary>Results of an inline query		<para>See <a href="https://corefork.telegram.org/type/BotInlineResult"/></para>		<para>Derived classes: <see cref="T:TL.BotInlineResult"/>, <see cref="T:TL.BotInlineMediaResult"/></para></summary>
        </member>
        <member name="P:TL.BotInlineResultBase.ID">
            <summary>Result ID</summary>
        </member>
        <member name="P:TL.BotInlineResultBase.Type">
            <summary>Result type (see <a href="https://corefork.telegram.org/bots/api#inlinequeryresult">bot API docs</a>)</summary>
        </member>
        <member name="P:TL.BotInlineResultBase.Title">
            <summary>Result title</summary>
        </member>
        <member name="P:TL.BotInlineResultBase.Description">
            <summary>Result description</summary>
        </member>
        <member name="P:TL.BotInlineResultBase.SendMessage">
            <summary>Message to send</summary>
        </member>
        <member name="T:TL.BotInlineResult">
            <summary>Generic result		<para>See <a href="https://corefork.telegram.org/constructor/botInlineResult"/></para></summary>
        </member>
        <member name="F:TL.BotInlineResult.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.BotInlineResult.id">
            <summary>Result ID</summary>
        </member>
        <member name="F:TL.BotInlineResult.type">
            <summary>Result type (see <a href="https://corefork.telegram.org/bots/api#inlinequeryresult">bot API docs</a>)</summary>
        </member>
        <member name="F:TL.BotInlineResult.title">
            <summary>Result title</summary>
        </member>
        <member name="F:TL.BotInlineResult.description">
            <summary>Result description</summary>
        </member>
        <member name="F:TL.BotInlineResult.url">
            <summary>URL of article or webpage</summary>
        </member>
        <member name="F:TL.BotInlineResult.thumb">
            <summary>Thumbnail for the result</summary>
        </member>
        <member name="F:TL.BotInlineResult.content">
            <summary>Content of the result</summary>
        </member>
        <member name="F:TL.BotInlineResult.send_message">
            <summary>Message to send</summary>
        </member>
        <member name="F:TL.BotInlineResult.Flags.has_title">
            <summary>Field <see cref="F:TL.BotInlineResult.title"/> has a value</summary>
        </member>
        <member name="F:TL.BotInlineResult.Flags.has_description">
            <summary>Field <see cref="F:TL.BotInlineResult.description"/> has a value</summary>
        </member>
        <member name="F:TL.BotInlineResult.Flags.has_url">
            <summary>Field <see cref="F:TL.BotInlineResult.url"/> has a value</summary>
        </member>
        <member name="F:TL.BotInlineResult.Flags.has_thumb">
            <summary>Field <see cref="F:TL.BotInlineResult.thumb"/> has a value</summary>
        </member>
        <member name="F:TL.BotInlineResult.Flags.has_content">
            <summary>Field <see cref="F:TL.BotInlineResult.content"/> has a value</summary>
        </member>
        <member name="P:TL.BotInlineResult.ID">
            <summary>Result ID</summary>
        </member>
        <member name="P:TL.BotInlineResult.Type">
            <summary>Result type (see <a href="https://corefork.telegram.org/bots/api#inlinequeryresult">bot API docs</a>)</summary>
        </member>
        <member name="P:TL.BotInlineResult.Title">
            <summary>Result title</summary>
        </member>
        <member name="P:TL.BotInlineResult.Description">
            <summary>Result description</summary>
        </member>
        <member name="P:TL.BotInlineResult.SendMessage">
            <summary>Message to send</summary>
        </member>
        <member name="T:TL.BotInlineMediaResult">
            <summary>Media result		<para>See <a href="https://corefork.telegram.org/constructor/botInlineMediaResult"/></para></summary>
        </member>
        <member name="F:TL.BotInlineMediaResult.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.BotInlineMediaResult.id">
            <summary>Result ID</summary>
        </member>
        <member name="F:TL.BotInlineMediaResult.type">
            <summary>Result type (see <a href="https://corefork.telegram.org/bots/api#inlinequeryresult">bot API docs</a>)</summary>
        </member>
        <member name="F:TL.BotInlineMediaResult.photo">
            <summary>If type is <c>photo</c>, the photo to send</summary>
        </member>
        <member name="F:TL.BotInlineMediaResult.document">
            <summary>If type is <c>document</c>, the document to send</summary>
        </member>
        <member name="F:TL.BotInlineMediaResult.title">
            <summary>Result title</summary>
        </member>
        <member name="F:TL.BotInlineMediaResult.description">
            <summary>Description</summary>
        </member>
        <member name="F:TL.BotInlineMediaResult.send_message">
            <summary>Depending on the <c>type</c> and on the <see cref="T:TL.BotInlineMessage"/>, contains the caption of the media or the content of the message to be sent <strong>instead</strong> of the media</summary>
        </member>
        <member name="F:TL.BotInlineMediaResult.Flags.has_photo">
            <summary>Field <see cref="F:TL.BotInlineMediaResult.photo"/> has a value</summary>
        </member>
        <member name="F:TL.BotInlineMediaResult.Flags.has_document">
            <summary>Field <see cref="F:TL.BotInlineMediaResult.document"/> has a value</summary>
        </member>
        <member name="F:TL.BotInlineMediaResult.Flags.has_title">
            <summary>Field <see cref="F:TL.BotInlineMediaResult.title"/> has a value</summary>
        </member>
        <member name="F:TL.BotInlineMediaResult.Flags.has_description">
            <summary>Field <see cref="F:TL.BotInlineMediaResult.description"/> has a value</summary>
        </member>
        <member name="P:TL.BotInlineMediaResult.ID">
            <summary>Result ID</summary>
        </member>
        <member name="P:TL.BotInlineMediaResult.Type">
            <summary>Result type (see <a href="https://corefork.telegram.org/bots/api#inlinequeryresult">bot API docs</a>)</summary>
        </member>
        <member name="P:TL.BotInlineMediaResult.Title">
            <summary>Result title</summary>
        </member>
        <member name="P:TL.BotInlineMediaResult.Description">
            <summary>Description</summary>
        </member>
        <member name="P:TL.BotInlineMediaResult.SendMessage">
            <summary>Depending on the <c>type</c> and on the <see cref="T:TL.BotInlineMessage"/>, contains the caption of the media or the content of the message to be sent <strong>instead</strong> of the media</summary>
        </member>
        <member name="T:TL.Messages_BotResults">
            <summary>Result of a query to an inline bot		<para>See <a href="https://corefork.telegram.org/constructor/messages.botResults"/></para></summary>
        </member>
        <member name="F:TL.Messages_BotResults.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Messages_BotResults.query_id">
            <summary>Query ID</summary>
        </member>
        <member name="F:TL.Messages_BotResults.next_offset">
            <summary>The next offset to use when navigating through results</summary>
        </member>
        <member name="F:TL.Messages_BotResults.switch_pm">
            <summary>Shown as a button on top of the remaining inline result list; if clicked, redirects the user to a private chat with the bot with the specified start parameter.</summary>
        </member>
        <member name="F:TL.Messages_BotResults.switch_webview">
            <summary>Shown as a button on top of the remaining inline result list; if clicked, opens the specified <a href="https://corefork.telegram.org/api/bots/webapps#inline-mode-mini-apps">inline mode mini app</a>.</summary>
        </member>
        <member name="F:TL.Messages_BotResults.results">
            <summary>The results</summary>
        </member>
        <member name="F:TL.Messages_BotResults.cache_time">
            <summary>Caching validity of the results</summary>
        </member>
        <member name="F:TL.Messages_BotResults.users">
            <summary>Users mentioned in the results</summary>
        </member>
        <member name="F:TL.Messages_BotResults.Flags.gallery">
            <summary>Whether the result is a picture gallery</summary>
        </member>
        <member name="F:TL.Messages_BotResults.Flags.has_next_offset">
            <summary>Field <see cref="F:TL.Messages_BotResults.next_offset"/> has a value</summary>
        </member>
        <member name="F:TL.Messages_BotResults.Flags.has_switch_pm">
            <summary>Field <see cref="F:TL.Messages_BotResults.switch_pm"/> has a value</summary>
        </member>
        <member name="F:TL.Messages_BotResults.Flags.has_switch_webview">
            <summary>Field <see cref="F:TL.Messages_BotResults.switch_webview"/> has a value</summary>
        </member>
        <member name="T:TL.ExportedMessageLink">
            <summary>Link to a message in a supergroup/channel		<para>See <a href="https://corefork.telegram.org/constructor/exportedMessageLink"/></para></summary>
        </member>
        <member name="F:TL.ExportedMessageLink.link">
            <summary>URL</summary>
        </member>
        <member name="F:TL.ExportedMessageLink.html">
            <summary>Embed code</summary>
        </member>
        <member name="T:TL.MessageFwdHeader">
            <summary>Info about a forwarded message		<para>See <a href="https://corefork.telegram.org/constructor/messageFwdHeader"/></para></summary>
        </member>
        <member name="F:TL.MessageFwdHeader.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.MessageFwdHeader.from_id">
            <summary>The ID of the user that originally sent the message</summary>
        </member>
        <member name="F:TL.MessageFwdHeader.from_name">
            <summary>The name of the user that originally sent the message</summary>
        </member>
        <member name="F:TL.MessageFwdHeader.date">
            <summary>When was the message originally sent</summary>
        </member>
        <member name="F:TL.MessageFwdHeader.channel_post">
            <summary>ID of the channel message that was forwarded</summary>
        </member>
        <member name="F:TL.MessageFwdHeader.post_author">
            <summary>For channels and if signatures are enabled, author of the channel message</summary>
        </member>
        <member name="F:TL.MessageFwdHeader.saved_from_peer">
            <summary>Only for messages forwarded to <a href="https://corefork.telegram.org/api/saved-messages">saved messages »</a>, contains the dialog where the message was originally sent.</summary>
        </member>
        <member name="F:TL.MessageFwdHeader.saved_from_msg_id">
            <summary>Only for messages forwarded to <a href="https://corefork.telegram.org/api/saved-messages">saved messages »</a>, contains the original ID of the message in <c>saved_from_peer</c>.</summary>
        </member>
        <member name="F:TL.MessageFwdHeader.saved_from_id">
            <summary>Only for forwarded messages reforwarded to <a href="https://corefork.telegram.org/api/saved-messages">saved messages »</a>, contains the sender of the original message (i.e. if user A sends a message, then user B forwards it somewhere, then user C saves it to saved messages, this field will contain the ID of user B and <c>from_id</c> will contain the ID of user A).</summary>
        </member>
        <member name="F:TL.MessageFwdHeader.saved_from_name">
            <summary>Only for forwarded messages from users with forward privacy enabled, sent by users with forward privacy enabled, reforwarded to <a href="https://corefork.telegram.org/api/saved-messages">saved messages »</a>, contains the sender of the original message (i.e. if user A (fwd privacy enabled) sends a message, then user B (fwd privacy enabled) forwards it somewhere, then user C saves it to saved messages, this field will contain the name of user B and <c>from_name</c> will contain the name of user A).</summary>
        </member>
        <member name="F:TL.MessageFwdHeader.saved_date">
            <summary>Only for forwarded messages reforwarded to <a href="https://corefork.telegram.org/api/saved-messages">saved messages »</a>, indicates when was the original message sent (i.e. if user A sends a message @ unixtime 1, then user B forwards it somewhere @ unixtime 2, then user C saves it to saved messages @ unixtime 3, this field will contain 2, <c>date</c> will contain 1 and the <c>date</c> of the containing <see cref="T:TL.Message"/> will contain 3).</summary>
        </member>
        <member name="F:TL.MessageFwdHeader.psa_type">
            <summary>PSA type</summary>
        </member>
        <member name="F:TL.MessageFwdHeader.Flags.has_from_id">
            <summary>Field <see cref="F:TL.MessageFwdHeader.from_id"/> has a value</summary>
        </member>
        <member name="F:TL.MessageFwdHeader.Flags.has_channel_post">
            <summary>Field <see cref="F:TL.MessageFwdHeader.channel_post"/> has a value</summary>
        </member>
        <member name="F:TL.MessageFwdHeader.Flags.has_post_author">
            <summary>Field <see cref="F:TL.MessageFwdHeader.post_author"/> has a value</summary>
        </member>
        <member name="F:TL.MessageFwdHeader.Flags.has_saved_from_peer">
            <summary>Fields <see cref="F:TL.MessageFwdHeader.saved_from_peer"/> and <see cref="F:TL.MessageFwdHeader.saved_from_msg_id"/> have a value</summary>
        </member>
        <member name="F:TL.MessageFwdHeader.Flags.has_from_name">
            <summary>Field <see cref="F:TL.MessageFwdHeader.from_name"/> has a value</summary>
        </member>
        <member name="F:TL.MessageFwdHeader.Flags.has_psa_type">
            <summary>Field <see cref="F:TL.MessageFwdHeader.psa_type"/> has a value</summary>
        </member>
        <member name="F:TL.MessageFwdHeader.Flags.imported">
            <summary>Whether this message was <a href="https://corefork.telegram.org/api/import">imported from a foreign chat service, click here for more info »</a></summary>
        </member>
        <member name="F:TL.MessageFwdHeader.Flags.has_saved_from_id">
            <summary>Field <see cref="F:TL.MessageFwdHeader.saved_from_id"/> has a value</summary>
        </member>
        <member name="F:TL.MessageFwdHeader.Flags.has_saved_from_name">
            <summary>Field <see cref="F:TL.MessageFwdHeader.saved_from_name"/> has a value</summary>
        </member>
        <member name="F:TL.MessageFwdHeader.Flags.has_saved_date">
            <summary>Field <see cref="F:TL.MessageFwdHeader.saved_date"/> has a value</summary>
        </member>
        <member name="F:TL.MessageFwdHeader.Flags.saved_out">
            <summary>Only for messages forwarded to <a href="https://corefork.telegram.org/api/saved-messages">saved messages »</a>, set if the original message was outgoing (though the message may have been originally outgoing even if this flag is not set, if <c>from_id</c> points to the current user).</summary>
        </member>
        <member name="T:TL.Auth_CodeType">
            <summary>Type of verification code that will be sent next if you call the resendCode method		<para>See <a href="https://corefork.telegram.org/type/auth.CodeType"/></para></summary>
        </member>
        <member name="F:TL.Auth_CodeType.Sms">
            <summary>The next time, the authentication code will be delivered via an immediately canceled incoming call.</summary>
        </member>
        <member name="F:TL.Auth_CodeType.Call">
            <summary>The next time, the authentication code is to be delivered via an outgoing phone call.</summary>
        </member>
        <member name="F:TL.Auth_CodeType.FlashCall">
            <summary>The next time, the authentication code will be delivered via an immediately canceled incoming call.</summary>
        </member>
        <member name="F:TL.Auth_CodeType.MissedCall">
            <summary>The next time, the authentication code will be delivered via an immediately canceled incoming call, handled manually by the user.</summary>
        </member>
        <member name="F:TL.Auth_CodeType.FragmentSms">
            <summary>The next time, the authentication code will be delivered via <a href="https://fragment.com">fragment.com</a></summary>
        </member>
        <member name="T:TL.Auth_SentCodeType">
            <summary>Type of the verification code that was sent		<para>See <a href="https://corefork.telegram.org/type/auth.SentCodeType"/></para>		<para>Derived classes: <see cref="T:TL.Auth_SentCodeTypeApp"/>, <see cref="T:TL.Auth_SentCodeTypeSms"/>, <see cref="T:TL.Auth_SentCodeTypeCall"/>, <see cref="T:TL.Auth_SentCodeTypeFlashCall"/>, <see cref="T:TL.Auth_SentCodeTypeMissedCall"/>, <see cref="T:TL.Auth_SentCodeTypeEmailCode"/>, <see cref="T:TL.Auth_SentCodeTypeSetUpEmailRequired"/>, <see cref="T:TL.Auth_SentCodeTypeFragmentSms"/>, <see cref="T:TL.Auth_SentCodeTypeFirebaseSms"/></para></summary>
        </member>
        <member name="T:TL.Auth_SentCodeTypeApp">
            <summary>The code was sent through the telegram app		<para>See <a href="https://corefork.telegram.org/constructor/auth.sentCodeTypeApp"/></para></summary>
        </member>
        <member name="F:TL.Auth_SentCodeTypeApp.length">
            <summary>Length of the code in bytes</summary>
        </member>
        <member name="T:TL.Auth_SentCodeTypeSms">
            <summary>The code was sent via SMS		<para>See <a href="https://corefork.telegram.org/constructor/auth.sentCodeTypeSms"/></para></summary>
        </member>
        <member name="F:TL.Auth_SentCodeTypeSms.length">
            <summary>Length of the code in bytes</summary>
        </member>
        <member name="T:TL.Auth_SentCodeTypeCall">
            <summary>The code will be sent via a phone call: a synthesized voice will tell the user which verification code to input.		<para>See <a href="https://corefork.telegram.org/constructor/auth.sentCodeTypeCall"/></para></summary>
        </member>
        <member name="F:TL.Auth_SentCodeTypeCall.length">
            <summary>Length of the verification code</summary>
        </member>
        <member name="T:TL.Auth_SentCodeTypeFlashCall">
            <summary>The code will be sent via a flash phone call, that will be closed immediately. The phone code will then be the phone number itself, just make sure that the phone number matches the specified pattern.		<para>See <a href="https://corefork.telegram.org/constructor/auth.sentCodeTypeFlashCall"/></para></summary>
        </member>
        <member name="F:TL.Auth_SentCodeTypeFlashCall.pattern">
            <summary><a href="https://corefork.telegram.org/api/pattern">pattern</a> to match</summary>
        </member>
        <member name="T:TL.Auth_SentCodeTypeMissedCall">
            <summary>The code will be sent via a flash phone call, that will be closed immediately. The last digits of the phone number that calls are the code that must be entered manually by the user.		<para>See <a href="https://corefork.telegram.org/constructor/auth.sentCodeTypeMissedCall"/></para></summary>
        </member>
        <member name="F:TL.Auth_SentCodeTypeMissedCall.prefix">
            <summary>Prefix of the phone number from which the call will be made</summary>
        </member>
        <member name="T:TL.Auth_SentCodeTypeEmailCode">
            <summary>The code was sent via the <a href="https://corefork.telegram.org/api/auth#email-verification">previously configured login email »</a>		<para>See <a href="https://corefork.telegram.org/constructor/auth.sentCodeTypeEmailCode"/></para></summary>
        </member>
        <member name="F:TL.Auth_SentCodeTypeEmailCode.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Auth_SentCodeTypeEmailCode.email_pattern">
            <summary><a href="https://corefork.telegram.org/api/pattern">Pattern</a> of the email</summary>
        </member>
        <member name="F:TL.Auth_SentCodeTypeEmailCode.length">
            <summary>Length of the sent verification code</summary>
        </member>
        <member name="F:TL.Auth_SentCodeTypeEmailCode.reset_available_period">
            <summary>Clients should wait for the specified amount of seconds before allowing the user to invoke <see cref="M:TL.SchemaExtensions.Auth_ResetLoginEmail(WTelegram.Client,System.String,System.String)">Auth_ResetLoginEmail</see> (will be 0 for <a href="https://corefork.telegram.org/api/premium">Premium</a> users).</summary>
        </member>
        <member name="F:TL.Auth_SentCodeTypeEmailCode.reset_pending_date">
            <summary>An email reset was already requested, and will occur at the specified date.</summary>
        </member>
        <member name="F:TL.Auth_SentCodeTypeEmailCode.Flags.apple_signin_allowed">
            <summary>Whether authorization through Apple ID is allowed</summary>
        </member>
        <member name="F:TL.Auth_SentCodeTypeEmailCode.Flags.google_signin_allowed">
            <summary>Whether authorization through Google ID is allowed</summary>
        </member>
        <member name="F:TL.Auth_SentCodeTypeEmailCode.Flags.has_reset_available_period">
            <summary>Field <see cref="F:TL.Auth_SentCodeTypeEmailCode.reset_available_period"/> has a value</summary>
        </member>
        <member name="F:TL.Auth_SentCodeTypeEmailCode.Flags.has_reset_pending_date">
            <summary>Field <see cref="F:TL.Auth_SentCodeTypeEmailCode.reset_pending_date"/> has a value</summary>
        </member>
        <member name="T:TL.Auth_SentCodeTypeSetUpEmailRequired">
            <summary>The user should add and verify an email address in order to login as described <a href="https://corefork.telegram.org/api/auth#email-verification">here »</a>.		<para>See <a href="https://corefork.telegram.org/constructor/auth.sentCodeTypeSetUpEmailRequired"/></para></summary>
        </member>
        <member name="F:TL.Auth_SentCodeTypeSetUpEmailRequired.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Auth_SentCodeTypeSetUpEmailRequired.Flags.apple_signin_allowed">
            <summary>Whether authorization through Apple ID is allowed</summary>
        </member>
        <member name="F:TL.Auth_SentCodeTypeSetUpEmailRequired.Flags.google_signin_allowed">
            <summary>Whether authorization through Google ID is allowed</summary>
        </member>
        <member name="T:TL.Auth_SentCodeTypeFragmentSms">
            <summary>The code was delivered via <a href="https://fragment.com">fragment.com</a>.		<para>See <a href="https://corefork.telegram.org/constructor/auth.sentCodeTypeFragmentSms"/></para></summary>
        </member>
        <member name="F:TL.Auth_SentCodeTypeFragmentSms.url">
            <summary>Open the specified URL to log into <a href="https://fragment.com">fragment.com</a> with the wallet that owns the specified phone number and view the code.</summary>
        </member>
        <member name="T:TL.Auth_SentCodeTypeFirebaseSms">
            <summary>An authentication code should be delivered via SMS after Firebase attestation, as described in the <a href="https://corefork.telegram.org/api/auth">auth documentation »</a>.		<para>See <a href="https://corefork.telegram.org/constructor/auth.sentCodeTypeFirebaseSms"/></para></summary>
        </member>
        <member name="F:TL.Auth_SentCodeTypeFirebaseSms.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Auth_SentCodeTypeFirebaseSms.nonce">
            <summary>On Android, the nonce to be used as described in the <a href="https://corefork.telegram.org/api/auth">auth documentation »</a></summary>
        </member>
        <member name="F:TL.Auth_SentCodeTypeFirebaseSms.receipt">
            <summary>On iOS, must be compared with the <c>receipt</c> extracted from the received push notification.</summary>
        </member>
        <member name="F:TL.Auth_SentCodeTypeFirebaseSms.push_timeout">
            <summary>On iOS: if a push notification with the <c>ios_push_secret</c> isn't received within <c>push_timeout</c> seconds, the <c>next_type</c> authentication method must be used, with <see cref="M:TL.SchemaExtensions.Auth_ResendCode(WTelegram.Client,System.String,System.String)">Auth_ResendCode</see>.</summary>
        </member>
        <member name="F:TL.Auth_SentCodeTypeFirebaseSms.Flags.has_nonce">
            <summary>Field <see cref="F:TL.Auth_SentCodeTypeFirebaseSms.nonce"/> has a value</summary>
        </member>
        <member name="F:TL.Auth_SentCodeTypeFirebaseSms.Flags.has_receipt">
            <summary>Fields <see cref="F:TL.Auth_SentCodeTypeFirebaseSms.receipt"/> and <see cref="F:TL.Auth_SentCodeTypeFirebaseSms.push_timeout"/> have a value</summary>
        </member>
        <member name="T:TL.Auth_SentCodeTypeSmsWord">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/auth.sentCodeTypeSmsWord"/></para></summary>
        </member>
        <member name="T:TL.Auth_SentCodeTypeSmsPhrase">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/auth.sentCodeTypeSmsPhrase"/></para></summary>
        </member>
        <member name="T:TL.Messages_BotCallbackAnswer">
            <summary>Callback answer sent by the bot in response to a button press		<para>See <a href="https://corefork.telegram.org/constructor/messages.botCallbackAnswer"/></para></summary>
        </member>
        <member name="F:TL.Messages_BotCallbackAnswer.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Messages_BotCallbackAnswer.message">
            <summary>Alert to show</summary>
        </member>
        <member name="F:TL.Messages_BotCallbackAnswer.url">
            <summary>URL to open</summary>
        </member>
        <member name="F:TL.Messages_BotCallbackAnswer.cache_time">
            <summary>For how long should this answer be cached</summary>
        </member>
        <member name="F:TL.Messages_BotCallbackAnswer.Flags.has_message">
            <summary>Field <see cref="F:TL.Messages_BotCallbackAnswer.message"/> has a value</summary>
        </member>
        <member name="F:TL.Messages_BotCallbackAnswer.Flags.alert">
            <summary>Whether an alert should be shown to the user instead of a toast notification</summary>
        </member>
        <member name="F:TL.Messages_BotCallbackAnswer.Flags.has_url_field">
            <summary>Field <see cref="F:TL.Messages_BotCallbackAnswer.url"/> has a value</summary>
        </member>
        <member name="F:TL.Messages_BotCallbackAnswer.Flags.has_url">
            <summary>Whether an URL is present</summary>
        </member>
        <member name="F:TL.Messages_BotCallbackAnswer.Flags.native_ui">
            <summary>Whether to show games in WebView or in native UI.</summary>
        </member>
        <member name="T:TL.Messages_MessageEditData">
            <summary>Message edit data for media		<para>See <a href="https://corefork.telegram.org/constructor/messages.messageEditData"/></para></summary>
        </member>
        <member name="F:TL.Messages_MessageEditData.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Messages_MessageEditData.Flags.caption">
            <summary>Media caption, if the specified media's caption can be edited</summary>
        </member>
        <member name="T:TL.InputBotInlineMessageIDBase">
            <summary>Represents a sent inline message from the perspective of a bot		<para>See <a href="https://corefork.telegram.org/type/InputBotInlineMessageID"/></para>		<para>Derived classes: <see cref="T:TL.InputBotInlineMessageID"/>, <see cref="T:TL.InputBotInlineMessageID64"/></para></summary>
        </member>
        <member name="P:TL.InputBotInlineMessageIDBase.DcId">
            <summary>DC ID to use when working with this inline message</summary>
        </member>
        <member name="P:TL.InputBotInlineMessageIDBase.AccessHash">
            <summary>Access hash of message</summary>
        </member>
        <member name="T:TL.InputBotInlineMessageID">
            <summary>Represents a sent inline message from the perspective of a bot (legacy constructor)		<para>See <a href="https://corefork.telegram.org/constructor/inputBotInlineMessageID"/></para></summary>
        </member>
        <member name="F:TL.InputBotInlineMessageID.dc_id">
            <summary>DC ID to use when working with this inline message</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageID.id">
            <summary>ID of message, contains both the (32-bit, legacy) owner ID and the message ID, used only for Bot API backwards compatibility with 32-bit user ID.</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageID.access_hash">
            <summary>⚠ <b>REQUIRED FIELD</b>. See <see href="https://wiz0u.github.io/WTelegramClient/FAQ#access-hash">how to obtain it</see><br/>Access hash of message</summary>
        </member>
        <member name="P:TL.InputBotInlineMessageID.DcId">
            <summary>DC ID to use when working with this inline message</summary>
        </member>
        <member name="P:TL.InputBotInlineMessageID.AccessHash">
            <summary>Access hash of message</summary>
        </member>
        <member name="T:TL.InputBotInlineMessageID64">
            <summary>Represents a sent inline message from the perspective of a bot		<para>See <a href="https://corefork.telegram.org/constructor/inputBotInlineMessageID64"/></para></summary>
        </member>
        <member name="F:TL.InputBotInlineMessageID64.dc_id">
            <summary>DC ID to use when working with this inline message</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageID64.owner_id">
            <summary>ID of the owner of this message</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageID64.id">
            <summary>ID of message</summary>
        </member>
        <member name="F:TL.InputBotInlineMessageID64.access_hash">
            <summary>⚠ <b>REQUIRED FIELD</b>. See <see href="https://wiz0u.github.io/WTelegramClient/FAQ#access-hash">how to obtain it</see><br/>Access hash of message</summary>
        </member>
        <member name="P:TL.InputBotInlineMessageID64.DcId">
            <summary>DC ID to use when working with this inline message</summary>
        </member>
        <member name="P:TL.InputBotInlineMessageID64.AccessHash">
            <summary>Access hash of message</summary>
        </member>
        <member name="T:TL.InlineBotSwitchPM">
            <summary>The bot requested the user to message them in private		<para>See <a href="https://corefork.telegram.org/constructor/inlineBotSwitchPM"/></para></summary>
        </member>
        <member name="F:TL.InlineBotSwitchPM.text">
            <summary>Text for the button that switches the user to a private chat with the bot and sends the bot a start message with the parameter <c>start_parameter</c> (can be empty)</summary>
        </member>
        <member name="F:TL.InlineBotSwitchPM.start_param">
            <summary>The parameter for the <c>/start parameter</c></summary>
        </member>
        <member name="T:TL.Messages_PeerDialogs">
            <summary>Dialog info of multiple peers		<para>See <a href="https://corefork.telegram.org/constructor/messages.peerDialogs"/></para></summary>
        </member>
        <member name="F:TL.Messages_PeerDialogs.dialogs">
            <summary>Dialog info</summary>
        </member>
        <member name="F:TL.Messages_PeerDialogs.messages">
            <summary>Messages mentioned in dialog info</summary>
        </member>
        <member name="F:TL.Messages_PeerDialogs.chats">
            <summary>Chats</summary>
        </member>
        <member name="F:TL.Messages_PeerDialogs.users">
            <summary>Users</summary>
        </member>
        <member name="F:TL.Messages_PeerDialogs.state">
            <summary>Current <a href="https://corefork.telegram.org/api/updates">update state of dialog</a></summary>
        </member>
        <member name="M:TL.Messages_PeerDialogs.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.TopPeer">
            <summary>Top peer		<para>See <a href="https://corefork.telegram.org/constructor/topPeer"/></para></summary>
        </member>
        <member name="F:TL.TopPeer.peer">
            <summary>Peer</summary>
        </member>
        <member name="F:TL.TopPeer.rating">
            <summary>Rating as computed in <a href="https://corefork.telegram.org/api/top-rating">top peer rating »</a></summary>
        </member>
        <member name="T:TL.TopPeerCategory">
            <summary>Top peer category		<para>See <a href="https://corefork.telegram.org/type/TopPeerCategory"/></para></summary>
        </member>
        <member name="F:TL.TopPeerCategory.BotsPM">
            <summary>Most used bots</summary>
        </member>
        <member name="F:TL.TopPeerCategory.BotsInline">
            <summary>Most used inline bots</summary>
        </member>
        <member name="F:TL.TopPeerCategory.Correspondents">
            <summary>Users we've chatted most frequently with</summary>
        </member>
        <member name="F:TL.TopPeerCategory.Groups">
            <summary>Often-opened groups and supergroups</summary>
        </member>
        <member name="F:TL.TopPeerCategory.Channels">
            <summary>Most frequently visited channels</summary>
        </member>
        <member name="F:TL.TopPeerCategory.PhoneCalls">
            <summary>Most frequently called users</summary>
        </member>
        <member name="F:TL.TopPeerCategory.ForwardUsers">
            <summary>Users to which the users often forwards messages to</summary>
        </member>
        <member name="F:TL.TopPeerCategory.ForwardChats">
            <summary>Chats to which the users often forwards messages to</summary>
        </member>
        <member name="T:TL.TopPeerCategoryPeers">
            <summary>Top peer category		<para>See <a href="https://corefork.telegram.org/constructor/topPeerCategoryPeers"/></para></summary>
        </member>
        <member name="F:TL.TopPeerCategoryPeers.category">
            <summary>Top peer category of peers</summary>
        </member>
        <member name="F:TL.TopPeerCategoryPeers.count">
            <summary>Count of peers</summary>
        </member>
        <member name="F:TL.TopPeerCategoryPeers.peers">
            <summary>Peers</summary>
        </member>
        <member name="T:TL.Contacts_TopPeersBase">
            <summary>Top peers		<para>See <a href="https://corefork.telegram.org/type/contacts.TopPeers"/></para>		<para>Derived classes: <see cref="T:TL.Contacts_TopPeers"/>, <see cref="T:TL.Contacts_TopPeersDisabled"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/contacts.topPeersNotModified">contacts.topPeersNotModified</a></remarks>
        </member>
        <member name="T:TL.Contacts_TopPeers">
            <summary>Top peers		<para>See <a href="https://corefork.telegram.org/constructor/contacts.topPeers"/></para></summary>
        </member>
        <member name="F:TL.Contacts_TopPeers.categories">
            <summary>Top peers by top peer category</summary>
        </member>
        <member name="F:TL.Contacts_TopPeers.chats">
            <summary>Chats</summary>
        </member>
        <member name="F:TL.Contacts_TopPeers.users">
            <summary>Users</summary>
        </member>
        <member name="M:TL.Contacts_TopPeers.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Contacts_TopPeersDisabled">
            <summary>Top peers disabled		<para>See <a href="https://corefork.telegram.org/constructor/contacts.topPeersDisabled"/></para></summary>
        </member>
        <member name="T:TL.DraftMessageBase">
            <summary>Represents a message <a href="https://corefork.telegram.org/api/drafts">draft</a>.		<para>See <a href="https://corefork.telegram.org/type/DraftMessage"/></para>		<para>Derived classes: <see cref="T:TL.DraftMessageEmpty"/>, <see cref="T:TL.DraftMessage"/></para></summary>
        </member>
        <member name="T:TL.DraftMessageEmpty">
            <summary>Empty draft		<para>See <a href="https://corefork.telegram.org/constructor/draftMessageEmpty"/></para></summary>
        </member>
        <member name="F:TL.DraftMessageEmpty.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.DraftMessageEmpty.date">
            <summary>When was the draft last updated</summary>
        </member>
        <member name="F:TL.DraftMessageEmpty.Flags.has_date">
            <summary>Field <see cref="F:TL.DraftMessageEmpty.date"/> has a value</summary>
        </member>
        <member name="T:TL.DraftMessage">
            <summary>Represents a message <a href="https://corefork.telegram.org/api/drafts">draft</a>.		<para>See <a href="https://corefork.telegram.org/constructor/draftMessage"/></para></summary>
        </member>
        <member name="F:TL.DraftMessage.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.DraftMessage.reply_to">
            <summary>If set, indicates that the message should be sent in reply to the specified message or story.</summary>
        </member>
        <member name="F:TL.DraftMessage.message">
            <summary>The draft</summary>
        </member>
        <member name="F:TL.DraftMessage.entities">
            <summary>Message <a href="https://corefork.telegram.org/api/entities">entities</a> for styled text.</summary>
        </member>
        <member name="F:TL.DraftMessage.media">
            <summary>Media.</summary>
        </member>
        <member name="F:TL.DraftMessage.date">
            <summary>Date of last update of the draft.</summary>
        </member>
        <member name="F:TL.DraftMessage.Flags.no_webpage">
            <summary>Whether no webpage preview will be generated</summary>
        </member>
        <member name="F:TL.DraftMessage.Flags.has_entities">
            <summary>Field <see cref="F:TL.DraftMessage.entities"/> has a value</summary>
        </member>
        <member name="F:TL.DraftMessage.Flags.has_reply_to">
            <summary>Field <see cref="F:TL.DraftMessage.reply_to"/> has a value</summary>
        </member>
        <member name="F:TL.DraftMessage.Flags.has_media">
            <summary>Field <see cref="F:TL.DraftMessage.media"/> has a value</summary>
        </member>
        <member name="F:TL.DraftMessage.Flags.invert_media">
            <summary>If set, any eventual webpage preview will be shown on top of the message instead of at the bottom.</summary>
        </member>
        <member name="T:TL.Messages_FeaturedStickersBase">
            <summary>Featured stickers		<para>See <a href="https://corefork.telegram.org/type/messages.FeaturedStickers"/></para>		<para>Derived classes: <see cref="T:TL.Messages_FeaturedStickersNotModified"/>, <see cref="T:TL.Messages_FeaturedStickers"/></para></summary>
        </member>
        <member name="T:TL.Messages_FeaturedStickersNotModified">
            <summary>Featured stickers haven't changed		<para>See <a href="https://corefork.telegram.org/constructor/messages.featuredStickersNotModified"/></para></summary>
        </member>
        <member name="F:TL.Messages_FeaturedStickersNotModified.count">
            <summary>Total number of featured stickers</summary>
        </member>
        <member name="T:TL.Messages_FeaturedStickers">
            <summary>Featured stickersets		<para>See <a href="https://corefork.telegram.org/constructor/messages.featuredStickers"/></para></summary>
        </member>
        <member name="F:TL.Messages_FeaturedStickers.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Messages_FeaturedStickers.hash">
            <summary><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></summary>
        </member>
        <member name="F:TL.Messages_FeaturedStickers.count">
            <summary>Total number of featured stickers</summary>
        </member>
        <member name="F:TL.Messages_FeaturedStickers.sets">
            <summary>Featured stickersets</summary>
        </member>
        <member name="F:TL.Messages_FeaturedStickers.unread">
            <summary>IDs of new featured stickersets</summary>
        </member>
        <member name="F:TL.Messages_FeaturedStickers.Flags.premium">
            <summary>Whether this is a premium stickerset</summary>
        </member>
        <member name="T:TL.Messages_RecentStickers">
            <summary>Recently used stickers		<para>See <a href="https://corefork.telegram.org/constructor/messages.recentStickers"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/messages.recentStickersNotModified">messages.recentStickersNotModified</a></remarks>
        </member>
        <member name="F:TL.Messages_RecentStickers.hash">
            <summary><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></summary>
        </member>
        <member name="F:TL.Messages_RecentStickers.packs">
            <summary>Emojis associated to stickers</summary>
        </member>
        <member name="F:TL.Messages_RecentStickers.stickers">
            <summary>Recent stickers</summary>
        </member>
        <member name="F:TL.Messages_RecentStickers.dates">
            <summary>When was each sticker last used</summary>
        </member>
        <member name="T:TL.Messages_ArchivedStickers">
            <summary>Archived stickersets		<para>See <a href="https://corefork.telegram.org/constructor/messages.archivedStickers"/></para></summary>
        </member>
        <member name="F:TL.Messages_ArchivedStickers.count">
            <summary>Number of archived stickers</summary>
        </member>
        <member name="F:TL.Messages_ArchivedStickers.sets">
            <summary>Archived stickersets</summary>
        </member>
        <member name="T:TL.Messages_StickerSetInstallResult">
            <summary>Result of stickerset installation process		<para>See <a href="https://corefork.telegram.org/type/messages.StickerSetInstallResult"/></para>		<para>Derived classes: <see cref="T:TL.Messages_StickerSetInstallResultSuccess"/>, <see cref="T:TL.Messages_StickerSetInstallResultArchive"/></para></summary>
        </member>
        <member name="T:TL.Messages_StickerSetInstallResultSuccess">
            <summary>The stickerset was installed successfully		<para>See <a href="https://corefork.telegram.org/constructor/messages.stickerSetInstallResultSuccess"/></para></summary>
        </member>
        <member name="T:TL.Messages_StickerSetInstallResultArchive">
            <summary>The stickerset was installed, but since there are too many stickersets some were archived		<para>See <a href="https://corefork.telegram.org/constructor/messages.stickerSetInstallResultArchive"/></para></summary>
        </member>
        <member name="F:TL.Messages_StickerSetInstallResultArchive.sets">
            <summary>Archived stickersets</summary>
        </member>
        <member name="T:TL.StickerSetCoveredBase">
            <summary>Stickerset preview		<para>See <a href="https://corefork.telegram.org/type/StickerSetCovered"/></para>		<para>Derived classes: <see cref="T:TL.StickerSetCovered"/>, <see cref="T:TL.StickerSetMultiCovered"/>, <see cref="T:TL.StickerSetFullCovered"/>, <see cref="T:TL.StickerSetNoCovered"/></para></summary>
        </member>
        <member name="P:TL.StickerSetCoveredBase.Set">
            <summary>Stickerset</summary>
        </member>
        <member name="T:TL.StickerSetCovered">
            <summary>Stickerset with a single sticker as preview		<para>See <a href="https://corefork.telegram.org/constructor/stickerSetCovered"/></para></summary>
        </member>
        <member name="F:TL.StickerSetCovered.set">
            <summary>Stickerset</summary>
        </member>
        <member name="F:TL.StickerSetCovered.cover">
            <summary>Preview</summary>
        </member>
        <member name="P:TL.StickerSetCovered.Set">
            <summary>Stickerset</summary>
        </member>
        <member name="T:TL.StickerSetMultiCovered">
            <summary>Stickerset, with multiple stickers as preview		<para>See <a href="https://corefork.telegram.org/constructor/stickerSetMultiCovered"/></para></summary>
        </member>
        <member name="F:TL.StickerSetMultiCovered.set">
            <summary>Stickerset</summary>
        </member>
        <member name="F:TL.StickerSetMultiCovered.covers">
            <summary>Preview stickers</summary>
        </member>
        <member name="P:TL.StickerSetMultiCovered.Set">
            <summary>Stickerset</summary>
        </member>
        <member name="T:TL.StickerSetFullCovered">
            <summary>Stickerset preview with all stickers of the stickerset included.<br/>Currently used only for <a href="https://corefork.telegram.org/api/custom-emoji">custom emoji stickersets</a>, to avoid a further call to <see cref="M:TL.SchemaExtensions.Messages_GetStickerSet(WTelegram.Client,TL.InputStickerSet,System.Int32)">Messages_GetStickerSet</see>.		<para>See <a href="https://corefork.telegram.org/constructor/stickerSetFullCovered"/></para></summary>
        </member>
        <member name="F:TL.StickerSetFullCovered.set">
            <summary>Stickerset</summary>
        </member>
        <member name="F:TL.StickerSetFullCovered.packs">
            <summary>Emoji information about every sticker in the stickerset</summary>
        </member>
        <member name="F:TL.StickerSetFullCovered.keywords">
            <summary>Keywords for some or every sticker in the stickerset.</summary>
        </member>
        <member name="F:TL.StickerSetFullCovered.documents">
            <summary>Stickers</summary>
        </member>
        <member name="P:TL.StickerSetFullCovered.Set">
            <summary>Stickerset</summary>
        </member>
        <member name="T:TL.StickerSetNoCovered">
            <summary>Just the stickerset information, with no previews.		<para>See <a href="https://corefork.telegram.org/constructor/stickerSetNoCovered"/></para></summary>
        </member>
        <member name="F:TL.StickerSetNoCovered.set">
            <summary>Stickerset information.</summary>
        </member>
        <member name="P:TL.StickerSetNoCovered.Set">
            <summary>Stickerset information.</summary>
        </member>
        <member name="T:TL.MaskCoords">
            <summary>Position on a photo where a mask should be placed when <a href="https://corefork.telegram.org/api/stickers#attached-stickers">attaching stickers to media »</a>		<para>See <a href="https://corefork.telegram.org/constructor/maskCoords"/></para></summary>
        </member>
        <member name="F:TL.MaskCoords.n">
            <summary>Part of the face, relative to which the mask should be placed</summary>
        </member>
        <member name="F:TL.MaskCoords.x">
            <summary>Shift by X-axis measured in widths of the mask scaled to the face size, from left to right. (For example, -1.0 will place the mask just to the left of the default mask position)</summary>
        </member>
        <member name="F:TL.MaskCoords.y">
            <summary>Shift by Y-axis measured in widths of the mask scaled to the face size, from left to right. (For example, -1.0 will place the mask just below the default mask position)</summary>
        </member>
        <member name="F:TL.MaskCoords.zoom">
            <summary>Mask scaling coefficient. (For example, 2.0 means a doubled size)</summary>
        </member>
        <member name="T:TL.InputStickeredMedia">
            <summary>Represents a media with attached stickers		<para>See <a href="https://corefork.telegram.org/type/InputStickeredMedia"/></para>		<para>Derived classes: <see cref="T:TL.InputStickeredMediaPhoto"/>, <see cref="T:TL.InputStickeredMediaDocument"/></para></summary>
        </member>
        <member name="T:TL.InputStickeredMediaPhoto">
            <summary>A photo with stickers attached		<para>See <a href="https://corefork.telegram.org/constructor/inputStickeredMediaPhoto"/></para></summary>
        </member>
        <member name="F:TL.InputStickeredMediaPhoto.id">
            <summary>The photo</summary>
        </member>
        <member name="T:TL.InputStickeredMediaDocument">
            <summary>A document with stickers attached		<para>See <a href="https://corefork.telegram.org/constructor/inputStickeredMediaDocument"/></para></summary>
        </member>
        <member name="F:TL.InputStickeredMediaDocument.id">
            <summary>The document</summary>
        </member>
        <member name="T:TL.Game">
            <summary>Indicates an already sent game		<para>See <a href="https://corefork.telegram.org/constructor/game"/></para></summary>
        </member>
        <member name="F:TL.Game.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Game.id">
            <summary>ID of the game</summary>
        </member>
        <member name="F:TL.Game.access_hash">
            <summary>Access hash of the game</summary>
        </member>
        <member name="F:TL.Game.short_name">
            <summary>Short name for the game</summary>
        </member>
        <member name="F:TL.Game.title">
            <summary>Title of the game</summary>
        </member>
        <member name="F:TL.Game.description">
            <summary>Game description</summary>
        </member>
        <member name="F:TL.Game.photo">
            <summary>Game preview</summary>
        </member>
        <member name="F:TL.Game.document">
            <summary>Optional attached document</summary>
        </member>
        <member name="F:TL.Game.Flags.has_document">
            <summary>Field <see cref="F:TL.Game.document"/> has a value</summary>
        </member>
        <member name="T:TL.InputGame">
            <summary>A game to send		<para>See <a href="https://corefork.telegram.org/type/InputGame"/></para>		<para>Derived classes: <see cref="T:TL.InputGameID"/>, <see cref="T:TL.InputGameShortName"/></para></summary>
        </member>
        <member name="T:TL.InputGameID">
            <summary>Indicates an already sent game		<para>See <a href="https://corefork.telegram.org/constructor/inputGameID"/></para></summary>
        </member>
        <member name="F:TL.InputGameID.id">
            <summary>game ID from <see cref="T:TL.Game"/> constructor</summary>
        </member>
        <member name="F:TL.InputGameID.access_hash">
            <summary>⚠ <b>REQUIRED FIELD</b>. See <see href="https://wiz0u.github.io/WTelegramClient/FAQ#access-hash">how to obtain it</see><br/>access hash from <see cref="T:TL.Game"/> constructor</summary>
        </member>
        <member name="T:TL.InputGameShortName">
            <summary>Game by short name		<para>See <a href="https://corefork.telegram.org/constructor/inputGameShortName"/></para></summary>
        </member>
        <member name="F:TL.InputGameShortName.bot_id">
            <summary>The bot that provides the game</summary>
        </member>
        <member name="F:TL.InputGameShortName.short_name">
            <summary>The game's short name, usually obtained from a <a href="https://corefork.telegram.org/api/links#game-links">game link »</a></summary>
        </member>
        <member name="T:TL.HighScore">
            <summary>Game highscore		<para>See <a href="https://corefork.telegram.org/constructor/highScore"/></para></summary>
        </member>
        <member name="F:TL.HighScore.pos">
            <summary>Position in highscore list</summary>
        </member>
        <member name="F:TL.HighScore.user_id">
            <summary>User ID</summary>
        </member>
        <member name="F:TL.HighScore.score">
            <summary>Score</summary>
        </member>
        <member name="T:TL.Messages_HighScores">
            <summary>Highscores in a game		<para>See <a href="https://corefork.telegram.org/constructor/messages.highScores"/></para></summary>
        </member>
        <member name="F:TL.Messages_HighScores.scores">
            <summary>Highscores</summary>
        </member>
        <member name="F:TL.Messages_HighScores.users">
            <summary>Users, associated to the highscores</summary>
        </member>
        <member name="T:TL.RichText">
            <summary>Rich text		<para>See <a href="https://corefork.telegram.org/type/RichText"/></para>		<para>Derived classes: <see cref="T:TL.TextPlain"/>, <see cref="T:TL.TextBold"/>, <see cref="T:TL.TextItalic"/>, <see cref="T:TL.TextUnderline"/>, <see cref="T:TL.TextStrike"/>, <see cref="T:TL.TextFixed"/>, <see cref="T:TL.TextUrl"/>, <see cref="T:TL.TextEmail"/>, <see cref="T:TL.TextConcat"/>, <see cref="T:TL.TextSubscript"/>, <see cref="T:TL.TextSuperscript"/>, <see cref="T:TL.TextMarked"/>, <see cref="T:TL.TextPhone"/>, <see cref="T:TL.TextImage"/>, <see cref="T:TL.TextAnchor"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/textEmpty">textEmpty</a></remarks>
        </member>
        <member name="T:TL.TextPlain">
            <summary>Plain text		<para>See <a href="https://corefork.telegram.org/constructor/textPlain"/></para></summary>
        </member>
        <member name="F:TL.TextPlain.text">
            <summary>Text</summary>
        </member>
        <member name="T:TL.TextBold">
            <summary><strong>Bold</strong> text		<para>See <a href="https://corefork.telegram.org/constructor/textBold"/></para></summary>
        </member>
        <member name="F:TL.TextBold.text">
            <summary>Text</summary>
        </member>
        <member name="T:TL.TextItalic">
            <summary><em>Italic</em> text		<para>See <a href="https://corefork.telegram.org/constructor/textItalic"/></para></summary>
        </member>
        <member name="F:TL.TextItalic.text">
            <summary>Text</summary>
        </member>
        <member name="T:TL.TextUnderline">
            <summary>Underlined text		<para>See <a href="https://corefork.telegram.org/constructor/textUnderline"/></para></summary>
        </member>
        <member name="F:TL.TextUnderline.text">
            <summary>Text</summary>
        </member>
        <member name="T:TL.TextStrike">
            <summary><del>Strikethrough</del> text		<para>See <a href="https://corefork.telegram.org/constructor/textStrike"/></para></summary>
        </member>
        <member name="F:TL.TextStrike.text">
            <summary>Text</summary>
        </member>
        <member name="T:TL.TextFixed">
            <summary><c>fixed-width</c> rich text		<para>See <a href="https://corefork.telegram.org/constructor/textFixed"/></para></summary>
        </member>
        <member name="F:TL.TextFixed.text">
            <summary>Text</summary>
        </member>
        <member name="T:TL.TextUrl">
            <summary>Link		<para>See <a href="https://corefork.telegram.org/constructor/textUrl"/></para></summary>
        </member>
        <member name="F:TL.TextUrl.text">
            <summary>Text of link</summary>
        </member>
        <member name="F:TL.TextUrl.url">
            <summary>Webpage HTTP URL</summary>
        </member>
        <member name="F:TL.TextUrl.webpage_id">
            <summary>If a preview was already generated for the page, the page ID</summary>
        </member>
        <member name="T:TL.TextEmail">
            <summary>Rich text email link		<para>See <a href="https://corefork.telegram.org/constructor/textEmail"/></para></summary>
        </member>
        <member name="F:TL.TextEmail.text">
            <summary>Link text</summary>
        </member>
        <member name="F:TL.TextEmail.email">
            <summary>Email address</summary>
        </member>
        <member name="T:TL.TextConcat">
            <summary>Concatenation of rich texts		<para>See <a href="https://corefork.telegram.org/constructor/textConcat"/></para></summary>
        </member>
        <member name="F:TL.TextConcat.texts">
            <summary>Concatenated rich texts</summary>
        </member>
        <member name="T:TL.TextSubscript">
            <summary>Subscript text		<para>See <a href="https://corefork.telegram.org/constructor/textSubscript"/></para></summary>
        </member>
        <member name="F:TL.TextSubscript.text">
            <summary>Text</summary>
        </member>
        <member name="T:TL.TextSuperscript">
            <summary>Superscript text		<para>See <a href="https://corefork.telegram.org/constructor/textSuperscript"/></para></summary>
        </member>
        <member name="F:TL.TextSuperscript.text">
            <summary>Text</summary>
        </member>
        <member name="T:TL.TextMarked">
            <summary>Highlighted text		<para>See <a href="https://corefork.telegram.org/constructor/textMarked"/></para></summary>
        </member>
        <member name="F:TL.TextMarked.text">
            <summary>Text</summary>
        </member>
        <member name="T:TL.TextPhone">
            <summary>Rich text linked to a phone number		<para>See <a href="https://corefork.telegram.org/constructor/textPhone"/></para></summary>
        </member>
        <member name="F:TL.TextPhone.text">
            <summary>Text</summary>
        </member>
        <member name="F:TL.TextPhone.phone">
            <summary>Phone number</summary>
        </member>
        <member name="T:TL.TextImage">
            <summary>Inline image		<para>See <a href="https://corefork.telegram.org/constructor/textImage"/></para></summary>
        </member>
        <member name="F:TL.TextImage.document_id">
            <summary>Document ID</summary>
        </member>
        <member name="F:TL.TextImage.w">
            <summary>Width</summary>
        </member>
        <member name="F:TL.TextImage.h">
            <summary>Height</summary>
        </member>
        <member name="T:TL.TextAnchor">
            <summary>Text linking to another section of the page		<para>See <a href="https://corefork.telegram.org/constructor/textAnchor"/></para></summary>
        </member>
        <member name="F:TL.TextAnchor.text">
            <summary>Text</summary>
        </member>
        <member name="F:TL.TextAnchor.name">
            <summary>Section name</summary>
        </member>
        <member name="T:TL.PageBlock">
            <summary>Represents an <a href="https://instantview.telegram.org">instant view page element</a>		<para>See <a href="https://corefork.telegram.org/type/PageBlock"/></para>		<para>Derived classes: <see cref="T:TL.PageBlockUnsupported"/>, <see cref="T:TL.PageBlockTitle"/>, <see cref="T:TL.PageBlockSubtitle"/>, <see cref="T:TL.PageBlockAuthorDate"/>, <see cref="T:TL.PageBlockHeader"/>, <see cref="T:TL.PageBlockSubheader"/>, <see cref="T:TL.PageBlockParagraph"/>, <see cref="T:TL.PageBlockPreformatted"/>, <see cref="T:TL.PageBlockFooter"/>, <see cref="T:TL.PageBlockDivider"/>, <see cref="T:TL.PageBlockAnchor"/>, <see cref="T:TL.PageBlockList"/>, <see cref="T:TL.PageBlockBlockquote"/>, <see cref="T:TL.PageBlockPullquote"/>, <see cref="T:TL.PageBlockPhoto"/>, <see cref="T:TL.PageBlockVideo"/>, <see cref="T:TL.PageBlockCover"/>, <see cref="T:TL.PageBlockEmbed"/>, <see cref="T:TL.PageBlockEmbedPost"/>, <see cref="T:TL.PageBlockCollage"/>, <see cref="T:TL.PageBlockSlideshow"/>, <see cref="T:TL.PageBlockChannel"/>, <see cref="T:TL.PageBlockAudio"/>, <see cref="T:TL.PageBlockKicker"/>, <see cref="T:TL.PageBlockTable"/>, <see cref="T:TL.PageBlockOrderedList"/>, <see cref="T:TL.PageBlockDetails"/>, <see cref="T:TL.PageBlockRelatedArticles"/>, <see cref="T:TL.PageBlockMap"/></para></summary>
        </member>
        <member name="T:TL.PageBlockUnsupported">
            <summary>Unsupported IV element		<para>See <a href="https://corefork.telegram.org/constructor/pageBlockUnsupported"/></para></summary>
        </member>
        <member name="T:TL.PageBlockTitle">
            <summary>Title		<para>See <a href="https://corefork.telegram.org/constructor/pageBlockTitle"/></para></summary>
        </member>
        <member name="F:TL.PageBlockTitle.text">
            <summary>Title</summary>
        </member>
        <member name="T:TL.PageBlockSubtitle">
            <summary>Subtitle		<para>See <a href="https://corefork.telegram.org/constructor/pageBlockSubtitle"/></para></summary>
        </member>
        <member name="F:TL.PageBlockSubtitle.text">
            <summary>Text</summary>
        </member>
        <member name="T:TL.PageBlockAuthorDate">
            <summary>Author and date of creation of article		<para>See <a href="https://corefork.telegram.org/constructor/pageBlockAuthorDate"/></para></summary>
        </member>
        <member name="F:TL.PageBlockAuthorDate.author">
            <summary>Author name</summary>
        </member>
        <member name="F:TL.PageBlockAuthorDate.published_date">
            <summary>Date of publication</summary>
        </member>
        <member name="T:TL.PageBlockHeader">
            <summary>Page header		<para>See <a href="https://corefork.telegram.org/constructor/pageBlockHeader"/></para></summary>
        </member>
        <member name="F:TL.PageBlockHeader.text">
            <summary>Contents</summary>
        </member>
        <member name="T:TL.PageBlockSubheader">
            <summary>Subheader		<para>See <a href="https://corefork.telegram.org/constructor/pageBlockSubheader"/></para></summary>
        </member>
        <member name="F:TL.PageBlockSubheader.text">
            <summary>Subheader</summary>
        </member>
        <member name="T:TL.PageBlockParagraph">
            <summary>A paragraph		<para>See <a href="https://corefork.telegram.org/constructor/pageBlockParagraph"/></para></summary>
        </member>
        <member name="F:TL.PageBlockParagraph.text">
            <summary>Text</summary>
        </member>
        <member name="T:TL.PageBlockPreformatted">
            <summary>Preformatted (<c>&lt;pre&gt;</c> text)		<para>See <a href="https://corefork.telegram.org/constructor/pageBlockPreformatted"/></para></summary>
        </member>
        <member name="F:TL.PageBlockPreformatted.text">
            <summary>Text</summary>
        </member>
        <member name="F:TL.PageBlockPreformatted.language">
            <summary>Programming language of preformatted text</summary>
        </member>
        <member name="T:TL.PageBlockFooter">
            <summary>Page footer		<para>See <a href="https://corefork.telegram.org/constructor/pageBlockFooter"/></para></summary>
        </member>
        <member name="F:TL.PageBlockFooter.text">
            <summary>Contents</summary>
        </member>
        <member name="T:TL.PageBlockDivider">
            <summary>An empty block separating a page		<para>See <a href="https://corefork.telegram.org/constructor/pageBlockDivider"/></para></summary>
        </member>
        <member name="T:TL.PageBlockAnchor">
            <summary>Link to section within the page itself (like <c>&lt;a href="#target"&gt;anchor&lt;/a&gt;</c>)		<para>See <a href="https://corefork.telegram.org/constructor/pageBlockAnchor"/></para></summary>
        </member>
        <member name="F:TL.PageBlockAnchor.name">
            <summary>Name of target section</summary>
        </member>
        <member name="T:TL.PageBlockList">
            <summary>Unordered list of IV blocks		<para>See <a href="https://corefork.telegram.org/constructor/pageBlockList"/></para></summary>
        </member>
        <member name="F:TL.PageBlockList.items">
            <summary>List of blocks in an IV page</summary>
        </member>
        <member name="T:TL.PageBlockBlockquote">
            <summary>Quote (equivalent to the HTML <c>&lt;blockquote&gt;</c>)		<para>See <a href="https://corefork.telegram.org/constructor/pageBlockBlockquote"/></para></summary>
        </member>
        <member name="F:TL.PageBlockBlockquote.text">
            <summary>Quote contents</summary>
        </member>
        <member name="F:TL.PageBlockBlockquote.caption">
            <summary>Caption</summary>
        </member>
        <member name="T:TL.PageBlockPullquote">
            <summary>Pullquote		<para>See <a href="https://corefork.telegram.org/constructor/pageBlockPullquote"/></para></summary>
        </member>
        <member name="F:TL.PageBlockPullquote.text">
            <summary>Text</summary>
        </member>
        <member name="F:TL.PageBlockPullquote.caption">
            <summary>Caption</summary>
        </member>
        <member name="T:TL.PageBlockPhoto">
            <summary>A photo		<para>See <a href="https://corefork.telegram.org/constructor/pageBlockPhoto"/></para></summary>
        </member>
        <member name="F:TL.PageBlockPhoto.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.PageBlockPhoto.photo_id">
            <summary>Photo ID</summary>
        </member>
        <member name="F:TL.PageBlockPhoto.caption">
            <summary>Caption</summary>
        </member>
        <member name="F:TL.PageBlockPhoto.url">
            <summary>HTTP URL of page the photo leads to when clicked</summary>
        </member>
        <member name="F:TL.PageBlockPhoto.webpage_id">
            <summary>ID of preview of the page the photo leads to when clicked</summary>
        </member>
        <member name="F:TL.PageBlockPhoto.Flags.has_url">
            <summary>Fields <see cref="F:TL.PageBlockPhoto.url"/> and <see cref="F:TL.PageBlockPhoto.webpage_id"/> have a value</summary>
        </member>
        <member name="T:TL.PageBlockVideo">
            <summary>Video		<para>See <a href="https://corefork.telegram.org/constructor/pageBlockVideo"/></para></summary>
        </member>
        <member name="F:TL.PageBlockVideo.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.PageBlockVideo.video_id">
            <summary>Video ID</summary>
        </member>
        <member name="F:TL.PageBlockVideo.caption">
            <summary>Caption</summary>
        </member>
        <member name="F:TL.PageBlockVideo.Flags.autoplay">
            <summary>Whether the video is set to autoplay</summary>
        </member>
        <member name="F:TL.PageBlockVideo.Flags.loop">
            <summary>Whether the video is set to loop</summary>
        </member>
        <member name="T:TL.PageBlockCover">
            <summary>A page cover		<para>See <a href="https://corefork.telegram.org/constructor/pageBlockCover"/></para></summary>
        </member>
        <member name="F:TL.PageBlockCover.cover">
            <summary>Cover</summary>
        </member>
        <member name="T:TL.PageBlockEmbed">
            <summary>An embedded webpage		<para>See <a href="https://corefork.telegram.org/constructor/pageBlockEmbed"/></para></summary>
        </member>
        <member name="F:TL.PageBlockEmbed.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.PageBlockEmbed.url">
            <summary>Web page URL, if available</summary>
        </member>
        <member name="F:TL.PageBlockEmbed.html">
            <summary>HTML-markup of the embedded page</summary>
        </member>
        <member name="F:TL.PageBlockEmbed.poster_photo_id">
            <summary>Poster photo, if available</summary>
        </member>
        <member name="F:TL.PageBlockEmbed.w">
            <summary>Block width, if known</summary>
        </member>
        <member name="F:TL.PageBlockEmbed.h">
            <summary>Block height, if known</summary>
        </member>
        <member name="F:TL.PageBlockEmbed.caption">
            <summary>Caption</summary>
        </member>
        <member name="F:TL.PageBlockEmbed.Flags.full_width">
            <summary>Whether the block should be full width</summary>
        </member>
        <member name="F:TL.PageBlockEmbed.Flags.has_url">
            <summary>Field <see cref="F:TL.PageBlockEmbed.url"/> has a value</summary>
        </member>
        <member name="F:TL.PageBlockEmbed.Flags.has_html">
            <summary>Field <see cref="F:TL.PageBlockEmbed.html"/> has a value</summary>
        </member>
        <member name="F:TL.PageBlockEmbed.Flags.allow_scrolling">
            <summary>Whether scrolling should be allowed</summary>
        </member>
        <member name="F:TL.PageBlockEmbed.Flags.has_poster_photo_id">
            <summary>Field <see cref="F:TL.PageBlockEmbed.poster_photo_id"/> has a value</summary>
        </member>
        <member name="F:TL.PageBlockEmbed.Flags.has_w">
            <summary>Fields <see cref="F:TL.PageBlockEmbed.w"/> and <see cref="F:TL.PageBlockEmbed.h"/> have a value</summary>
        </member>
        <member name="T:TL.PageBlockEmbedPost">
            <summary>An embedded post		<para>See <a href="https://corefork.telegram.org/constructor/pageBlockEmbedPost"/></para></summary>
        </member>
        <member name="F:TL.PageBlockEmbedPost.url">
            <summary>Web page URL</summary>
        </member>
        <member name="F:TL.PageBlockEmbedPost.webpage_id">
            <summary>ID of generated webpage preview</summary>
        </member>
        <member name="F:TL.PageBlockEmbedPost.author_photo_id">
            <summary>ID of the author's photo</summary>
        </member>
        <member name="F:TL.PageBlockEmbedPost.author">
            <summary>Author name</summary>
        </member>
        <member name="F:TL.PageBlockEmbedPost.date">
            <summary>Creation date</summary>
        </member>
        <member name="F:TL.PageBlockEmbedPost.blocks">
            <summary>Post contents</summary>
        </member>
        <member name="F:TL.PageBlockEmbedPost.caption">
            <summary>Caption</summary>
        </member>
        <member name="T:TL.PageBlockCollage">
            <summary>Collage of media		<para>See <a href="https://corefork.telegram.org/constructor/pageBlockCollage"/></para></summary>
        </member>
        <member name="F:TL.PageBlockCollage.items">
            <summary>Media elements</summary>
        </member>
        <member name="F:TL.PageBlockCollage.caption">
            <summary>Caption</summary>
        </member>
        <member name="T:TL.PageBlockSlideshow">
            <summary>Slideshow		<para>See <a href="https://corefork.telegram.org/constructor/pageBlockSlideshow"/></para></summary>
        </member>
        <member name="F:TL.PageBlockSlideshow.items">
            <summary>Slideshow items</summary>
        </member>
        <member name="F:TL.PageBlockSlideshow.caption">
            <summary>Caption</summary>
        </member>
        <member name="T:TL.PageBlockChannel">
            <summary>Reference to a telegram channel		<para>See <a href="https://corefork.telegram.org/constructor/pageBlockChannel"/></para></summary>
        </member>
        <member name="F:TL.PageBlockChannel.channel">
            <summary>The channel/supergroup/chat</summary>
        </member>
        <member name="T:TL.PageBlockAudio">
            <summary>Audio		<para>See <a href="https://corefork.telegram.org/constructor/pageBlockAudio"/></para></summary>
        </member>
        <member name="F:TL.PageBlockAudio.audio_id">
            <summary>Audio ID (to be fetched from the container <see cref="T:TL.Page"/></summary>
        </member>
        <member name="F:TL.PageBlockAudio.caption">
            <summary>Audio caption</summary>
        </member>
        <member name="T:TL.PageBlockKicker">
            <summary>Kicker		<para>See <a href="https://corefork.telegram.org/constructor/pageBlockKicker"/></para></summary>
        </member>
        <member name="F:TL.PageBlockKicker.text">
            <summary>Contents</summary>
        </member>
        <member name="T:TL.PageBlockTable">
            <summary>Table		<para>See <a href="https://corefork.telegram.org/constructor/pageBlockTable"/></para></summary>
        </member>
        <member name="F:TL.PageBlockTable.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.PageBlockTable.title">
            <summary>Title</summary>
        </member>
        <member name="F:TL.PageBlockTable.rows">
            <summary>Table rows</summary>
        </member>
        <member name="F:TL.PageBlockTable.Flags.bordered">
            <summary>Does the table have a visible border?</summary>
        </member>
        <member name="F:TL.PageBlockTable.Flags.striped">
            <summary>Is the table striped?</summary>
        </member>
        <member name="T:TL.PageBlockOrderedList">
            <summary>Ordered list of IV blocks		<para>See <a href="https://corefork.telegram.org/constructor/pageBlockOrderedList"/></para></summary>
        </member>
        <member name="F:TL.PageBlockOrderedList.items">
            <summary>List items</summary>
        </member>
        <member name="T:TL.PageBlockDetails">
            <summary>A collapsible details block		<para>See <a href="https://corefork.telegram.org/constructor/pageBlockDetails"/></para></summary>
        </member>
        <member name="F:TL.PageBlockDetails.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.PageBlockDetails.blocks">
            <summary>Block contents</summary>
        </member>
        <member name="F:TL.PageBlockDetails.title">
            <summary>Always visible heading for the block</summary>
        </member>
        <member name="F:TL.PageBlockDetails.Flags.open">
            <summary>Whether the block is open by default</summary>
        </member>
        <member name="T:TL.PageBlockRelatedArticles">
            <summary>Related articles		<para>See <a href="https://corefork.telegram.org/constructor/pageBlockRelatedArticles"/></para></summary>
        </member>
        <member name="F:TL.PageBlockRelatedArticles.title">
            <summary>Title</summary>
        </member>
        <member name="F:TL.PageBlockRelatedArticles.articles">
            <summary>Related articles</summary>
        </member>
        <member name="T:TL.PageBlockMap">
            <summary>A map		<para>See <a href="https://corefork.telegram.org/constructor/pageBlockMap"/></para></summary>
        </member>
        <member name="F:TL.PageBlockMap.geo">
            <summary>Location of the map center</summary>
        </member>
        <member name="F:TL.PageBlockMap.zoom">
            <summary>Map zoom level; 13-20</summary>
        </member>
        <member name="F:TL.PageBlockMap.w">
            <summary>Map width in pixels before applying scale; 16-102</summary>
        </member>
        <member name="F:TL.PageBlockMap.h">
            <summary>Map height in pixels before applying scale; 16-1024</summary>
        </member>
        <member name="F:TL.PageBlockMap.caption">
            <summary>Caption</summary>
        </member>
        <member name="T:TL.PhoneCallDiscardReason">
            <summary>Why was the phone call discarded?		<para>See <a href="https://corefork.telegram.org/type/PhoneCallDiscardReason"/></para></summary>
        </member>
        <member name="F:TL.PhoneCallDiscardReason.Missed">
            <summary>The phone call was missed</summary>
        </member>
        <member name="F:TL.PhoneCallDiscardReason.Disconnect">
            <summary>The phone call was disconnected</summary>
        </member>
        <member name="F:TL.PhoneCallDiscardReason.Hangup">
            <summary>The phone call was ended normally</summary>
        </member>
        <member name="F:TL.PhoneCallDiscardReason.Busy">
            <summary>The phone call was discarded because the user is busy in another call</summary>
        </member>
        <member name="T:TL.DataJSON">
            <summary>Represents a json-encoded object		<para>See <a href="https://corefork.telegram.org/constructor/dataJSON"/></para></summary>
        </member>
        <member name="F:TL.DataJSON.data">
            <summary>JSON-encoded object</summary>
        </member>
        <member name="T:TL.LabeledPrice">
            <summary>This object represents a portion of the price for goods or services.		<para>See <a href="https://corefork.telegram.org/constructor/labeledPrice"/></para></summary>
        </member>
        <member name="F:TL.LabeledPrice.label">
            <summary>Portion label</summary>
        </member>
        <member name="F:TL.LabeledPrice.amount">
            <summary>Price of the product in the smallest units of the currency (integer, not float/double). For example, for a price of <c>US$ 1.45</c> pass <c>amount = 145</c>. See the exp parameter in <a href="https://corefork.telegram.org/bots/payments/currencies.json">currencies.json</a>, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies).</summary>
        </member>
        <member name="T:TL.Invoice">
            <summary>Invoice		<para>See <a href="https://corefork.telegram.org/constructor/invoice"/></para></summary>
        </member>
        <member name="F:TL.Invoice.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Invoice.currency">
            <summary>Three-letter ISO 4217 <a href="https://corefork.telegram.org/bots/payments#supported-currencies">currency</a> code</summary>
        </member>
        <member name="F:TL.Invoice.prices">
            <summary>Price breakdown, a list of components (e.g. product price, tax, discount, delivery cost, delivery tax, bonus, etc.)</summary>
        </member>
        <member name="F:TL.Invoice.max_tip_amount">
            <summary>The maximum accepted amount for tips in the smallest units of the currency (integer, not float/double). For example, for a price of <c>US$ 1.45</c> pass <c>amount = 145</c>. See the exp parameter in <a href="https://corefork.telegram.org/bots/payments/currencies.json">currencies.json</a>, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies).</summary>
        </member>
        <member name="F:TL.Invoice.suggested_tip_amounts">
            <summary>A vector of suggested amounts of tips in the <em>smallest units</em> of the currency (integer, not float/double). At most 4 suggested tip amounts can be specified. The suggested tip amounts must be positive, passed in a strictly increased order and must not exceed <c>max_tip_amount</c>.</summary>
        </member>
        <member name="F:TL.Invoice.terms_url">
            <summary>Terms of service URL</summary>
        </member>
        <member name="F:TL.Invoice.Flags.test">
            <summary>Test invoice</summary>
        </member>
        <member name="F:TL.Invoice.Flags.name_requested">
            <summary>Set this flag if you require the user's full name to complete the order</summary>
        </member>
        <member name="F:TL.Invoice.Flags.phone_requested">
            <summary>Set this flag if you require the user's phone number to complete the order</summary>
        </member>
        <member name="F:TL.Invoice.Flags.email_requested">
            <summary>Set this flag if you require the user's email address to complete the order</summary>
        </member>
        <member name="F:TL.Invoice.Flags.shipping_address_requested">
            <summary>Set this flag if you require the user's shipping address to complete the order</summary>
        </member>
        <member name="F:TL.Invoice.Flags.flexible">
            <summary>Set this flag if the final price depends on the shipping method</summary>
        </member>
        <member name="F:TL.Invoice.Flags.phone_to_provider">
            <summary>Set this flag if user's phone number should be sent to provider</summary>
        </member>
        <member name="F:TL.Invoice.Flags.email_to_provider">
            <summary>Set this flag if user's email address should be sent to provider</summary>
        </member>
        <member name="F:TL.Invoice.Flags.has_max_tip_amount">
            <summary>Fields <see cref="F:TL.Invoice.max_tip_amount"/> and <see cref="F:TL.Invoice.suggested_tip_amounts"/> have a value</summary>
        </member>
        <member name="F:TL.Invoice.Flags.recurring">
            <summary>Whether this is a recurring payment</summary>
        </member>
        <member name="F:TL.Invoice.Flags.has_terms_url">
            <summary>Field <see cref="F:TL.Invoice.terms_url"/> has a value</summary>
        </member>
        <member name="T:TL.PaymentCharge">
            <summary>Payment identifier		<para>See <a href="https://corefork.telegram.org/constructor/paymentCharge"/></para></summary>
        </member>
        <member name="F:TL.PaymentCharge.id">
            <summary>Telegram payment identifier</summary>
        </member>
        <member name="F:TL.PaymentCharge.provider_charge_id">
            <summary>Provider payment identifier</summary>
        </member>
        <member name="T:TL.PostAddress">
            <summary>Shipping address		<para>See <a href="https://corefork.telegram.org/constructor/postAddress"/></para></summary>
        </member>
        <member name="F:TL.PostAddress.street_line1">
            <summary>First line for the address</summary>
        </member>
        <member name="F:TL.PostAddress.street_line2">
            <summary>Second line for the address</summary>
        </member>
        <member name="F:TL.PostAddress.city">
            <summary>City</summary>
        </member>
        <member name="F:TL.PostAddress.state">
            <summary>State, if applicable (empty otherwise)</summary>
        </member>
        <member name="F:TL.PostAddress.country_iso2">
            <summary>ISO 3166-1 alpha-2 country code</summary>
        </member>
        <member name="F:TL.PostAddress.post_code">
            <summary>Address post code</summary>
        </member>
        <member name="T:TL.PaymentRequestedInfo">
            <summary>Order info provided by the user		<para>See <a href="https://corefork.telegram.org/constructor/paymentRequestedInfo"/></para></summary>
        </member>
        <member name="F:TL.PaymentRequestedInfo.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.PaymentRequestedInfo.name">
            <summary>User's full name</summary>
        </member>
        <member name="F:TL.PaymentRequestedInfo.phone">
            <summary>User's phone number</summary>
        </member>
        <member name="F:TL.PaymentRequestedInfo.email">
            <summary>User's email address</summary>
        </member>
        <member name="F:TL.PaymentRequestedInfo.shipping_address">
            <summary>User's shipping address</summary>
        </member>
        <member name="F:TL.PaymentRequestedInfo.Flags.has_name">
            <summary>Field <see cref="F:TL.PaymentRequestedInfo.name"/> has a value</summary>
        </member>
        <member name="F:TL.PaymentRequestedInfo.Flags.has_phone">
            <summary>Field <see cref="F:TL.PaymentRequestedInfo.phone"/> has a value</summary>
        </member>
        <member name="F:TL.PaymentRequestedInfo.Flags.has_email">
            <summary>Field <see cref="F:TL.PaymentRequestedInfo.email"/> has a value</summary>
        </member>
        <member name="F:TL.PaymentRequestedInfo.Flags.has_shipping_address">
            <summary>Field <see cref="F:TL.PaymentRequestedInfo.shipping_address"/> has a value</summary>
        </member>
        <member name="T:TL.PaymentSavedCredentials">
            <summary>Saved payment credentials		<para>See <a href="https://corefork.telegram.org/type/PaymentSavedCredentials"/></para>		<para>Derived classes: <see cref="T:TL.PaymentSavedCredentialsCard"/></para></summary>
        </member>
        <member name="T:TL.PaymentSavedCredentialsCard">
            <summary>Saved credit card		<para>See <a href="https://corefork.telegram.org/constructor/paymentSavedCredentialsCard"/></para></summary>
        </member>
        <member name="F:TL.PaymentSavedCredentialsCard.id">
            <summary>Card ID</summary>
        </member>
        <member name="F:TL.PaymentSavedCredentialsCard.title">
            <summary>Title</summary>
        </member>
        <member name="T:TL.WebDocumentBase">
            <summary>Remote document		<para>See <a href="https://corefork.telegram.org/type/WebDocument"/></para>		<para>Derived classes: <see cref="T:TL.WebDocument"/>, <see cref="T:TL.WebDocumentNoProxy"/></para></summary>
        </member>
        <member name="P:TL.WebDocumentBase.Url">
            <summary>Document URL</summary>
        </member>
        <member name="P:TL.WebDocumentBase.Size">
            <summary>File size</summary>
        </member>
        <member name="P:TL.WebDocumentBase.MimeType">
            <summary>MIME type</summary>
        </member>
        <member name="P:TL.WebDocumentBase.Attributes">
            <summary>Attributes for media types</summary>
        </member>
        <member name="T:TL.WebDocument">
            <summary>Remote document		<para>See <a href="https://corefork.telegram.org/constructor/webDocument"/></para></summary>
        </member>
        <member name="F:TL.WebDocument.url">
            <summary>Document URL</summary>
        </member>
        <member name="F:TL.WebDocument.access_hash">
            <summary>Access hash</summary>
        </member>
        <member name="F:TL.WebDocument.size">
            <summary>File size</summary>
        </member>
        <member name="F:TL.WebDocument.mime_type">
            <summary>MIME type</summary>
        </member>
        <member name="F:TL.WebDocument.attributes">
            <summary>Attributes for media types</summary>
        </member>
        <member name="P:TL.WebDocument.Url">
            <summary>Document URL</summary>
        </member>
        <member name="P:TL.WebDocument.Size">
            <summary>File size</summary>
        </member>
        <member name="P:TL.WebDocument.MimeType">
            <summary>MIME type</summary>
        </member>
        <member name="P:TL.WebDocument.Attributes">
            <summary>Attributes for media types</summary>
        </member>
        <member name="T:TL.WebDocumentNoProxy">
            <summary>Remote document that can be downloaded without <a href="https://corefork.telegram.org/api/files">proxying through telegram</a>		<para>See <a href="https://corefork.telegram.org/constructor/webDocumentNoProxy"/></para></summary>
        </member>
        <member name="F:TL.WebDocumentNoProxy.url">
            <summary>Document URL</summary>
        </member>
        <member name="F:TL.WebDocumentNoProxy.size">
            <summary>File size</summary>
        </member>
        <member name="F:TL.WebDocumentNoProxy.mime_type">
            <summary>MIME type</summary>
        </member>
        <member name="F:TL.WebDocumentNoProxy.attributes">
            <summary>Attributes for media types</summary>
        </member>
        <member name="P:TL.WebDocumentNoProxy.Url">
            <summary>Document URL</summary>
        </member>
        <member name="P:TL.WebDocumentNoProxy.Size">
            <summary>File size</summary>
        </member>
        <member name="P:TL.WebDocumentNoProxy.MimeType">
            <summary>MIME type</summary>
        </member>
        <member name="P:TL.WebDocumentNoProxy.Attributes">
            <summary>Attributes for media types</summary>
        </member>
        <member name="T:TL.InputWebDocument">
            <summary>The document		<para>See <a href="https://corefork.telegram.org/constructor/inputWebDocument"/></para></summary>
        </member>
        <member name="F:TL.InputWebDocument.url">
            <summary>Remote document URL to be downloaded using the appropriate <a href="https://corefork.telegram.org/api/files">method</a></summary>
        </member>
        <member name="F:TL.InputWebDocument.size">
            <summary>Remote file size</summary>
        </member>
        <member name="F:TL.InputWebDocument.mime_type">
            <summary>Mime type</summary>
        </member>
        <member name="F:TL.InputWebDocument.attributes">
            <summary>Attributes for media types</summary>
        </member>
        <member name="T:TL.InputWebFileLocationBase">
            <summary>Location of remote file		<para>See <a href="https://corefork.telegram.org/type/InputWebFileLocation"/></para>		<para>Derived classes: <see cref="T:TL.InputWebFileLocation"/>, <see cref="T:TL.InputWebFileGeoPointLocation"/>, <see cref="T:TL.InputWebFileAudioAlbumThumbLocation"/></para></summary>
        </member>
        <member name="T:TL.InputWebFileLocation">
            <summary>Location of a remote HTTP(s) file		<para>See <a href="https://corefork.telegram.org/constructor/inputWebFileLocation"/></para></summary>
        </member>
        <member name="F:TL.InputWebFileLocation.url">
            <summary>HTTP URL of file</summary>
        </member>
        <member name="F:TL.InputWebFileLocation.access_hash">
            <summary>⚠ <b>REQUIRED FIELD</b>. See <see href="https://wiz0u.github.io/WTelegramClient/FAQ#access-hash">how to obtain it</see><br/>Access hash</summary>
        </member>
        <member name="T:TL.InputWebFileGeoPointLocation">
            <summary>Used to download a server-generated image with the map preview from a <see cref="T:TL.GeoPoint"/>, see the <a href="https://corefork.telegram.org/api/files#downloading-webfiles">webfile docs for more info »</a>.		<para>See <a href="https://corefork.telegram.org/constructor/inputWebFileGeoPointLocation"/></para></summary>
        </member>
        <member name="F:TL.InputWebFileGeoPointLocation.geo_point">
            <summary>Generated from the <c>lat</c>, <c>long</c> and <c>accuracy_radius</c> parameters of the <see cref="T:TL.GeoPoint"/></summary>
        </member>
        <member name="F:TL.InputWebFileGeoPointLocation.access_hash">
            <summary>⚠ <b>REQUIRED FIELD</b>. See <see href="https://wiz0u.github.io/WTelegramClient/FAQ#access-hash">how to obtain it</see><br/>Access hash of the <see cref="T:TL.GeoPoint"/></summary>
        </member>
        <member name="F:TL.InputWebFileGeoPointLocation.w">
            <summary>Map width in pixels before applying scale; 16-1024</summary>
        </member>
        <member name="F:TL.InputWebFileGeoPointLocation.h">
            <summary>Map height in pixels before applying scale; 16-1024</summary>
        </member>
        <member name="F:TL.InputWebFileGeoPointLocation.zoom">
            <summary>Map zoom level; 13-20</summary>
        </member>
        <member name="F:TL.InputWebFileGeoPointLocation.scale">
            <summary>Map scale; 1-3</summary>
        </member>
        <member name="T:TL.InputWebFileAudioAlbumThumbLocation">
            <summary>Used to download an album cover for any music file using <see cref="M:TL.SchemaExtensions.Upload_GetWebFile(WTelegram.Client,TL.InputWebFileLocationBase,System.Int32,System.Int32)">Upload_GetWebFile</see>, see the <a href="https://corefork.telegram.org/api/files#downloading-webfiles">webfile docs for more info »</a>.		<para>See <a href="https://corefork.telegram.org/constructor/inputWebFileAudioAlbumThumbLocation"/></para></summary>
        </member>
        <member name="F:TL.InputWebFileAudioAlbumThumbLocation.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.InputWebFileAudioAlbumThumbLocation.document">
            <summary>The audio file in question: must NOT be provided in secret chats, provide the <c>title</c> and <c>performer</c> fields instead.</summary>
        </member>
        <member name="F:TL.InputWebFileAudioAlbumThumbLocation.title">
            <summary>Song title: should only be used in secret chats, in normal chats provide <c>document</c> instead, as it has more lax rate limits.</summary>
        </member>
        <member name="F:TL.InputWebFileAudioAlbumThumbLocation.performer">
            <summary>Song performer: should only be used in secret chats, in normal chats provide <c>document</c> instead, as it has more lax rate limits.</summary>
        </member>
        <member name="F:TL.InputWebFileAudioAlbumThumbLocation.Flags.has_document">
            <summary>Field <see cref="F:TL.InputWebFileAudioAlbumThumbLocation.document"/> has a value</summary>
        </member>
        <member name="F:TL.InputWebFileAudioAlbumThumbLocation.Flags.has_title">
            <summary>Fields <see cref="F:TL.InputWebFileAudioAlbumThumbLocation.title"/> and <see cref="F:TL.InputWebFileAudioAlbumThumbLocation.performer"/> have a value</summary>
        </member>
        <member name="F:TL.InputWebFileAudioAlbumThumbLocation.Flags.small">
            <summary>Used to return a thumbnail with <c>100x100</c> resolution (instead of the default <c>600x600</c>)</summary>
        </member>
        <member name="T:TL.Upload_WebFile">
            <summary>Represents a chunk of an <a href="https://corefork.telegram.org/api/files">HTTP webfile</a> downloaded through telegram's secure MTProto servers		<para>See <a href="https://corefork.telegram.org/constructor/upload.webFile"/></para></summary>
        </member>
        <member name="F:TL.Upload_WebFile.size">
            <summary>File size</summary>
        </member>
        <member name="F:TL.Upload_WebFile.mime_type">
            <summary>Mime type</summary>
        </member>
        <member name="F:TL.Upload_WebFile.file_type">
            <summary>File type</summary>
        </member>
        <member name="F:TL.Upload_WebFile.mtime">
            <summary>Modified time</summary>
        </member>
        <member name="F:TL.Upload_WebFile.bytes">
            <summary>Data</summary>
        </member>
        <member name="T:TL.Payments_PaymentForm">
            <summary>Payment form		<para>See <a href="https://corefork.telegram.org/constructor/payments.paymentForm"/></para></summary>
        </member>
        <member name="F:TL.Payments_PaymentForm.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Payments_PaymentForm.form_id">
            <summary>Form ID</summary>
        </member>
        <member name="F:TL.Payments_PaymentForm.bot_id">
            <summary>Bot ID</summary>
        </member>
        <member name="F:TL.Payments_PaymentForm.title">
            <summary>Form title</summary>
        </member>
        <member name="F:TL.Payments_PaymentForm.description">
            <summary>Description</summary>
        </member>
        <member name="F:TL.Payments_PaymentForm.photo">
            <summary>Product photo</summary>
        </member>
        <member name="F:TL.Payments_PaymentForm.invoice">
            <summary>Invoice</summary>
        </member>
        <member name="F:TL.Payments_PaymentForm.provider_id">
            <summary>Payment provider ID.</summary>
        </member>
        <member name="F:TL.Payments_PaymentForm.url">
            <summary>Payment form URL</summary>
        </member>
        <member name="F:TL.Payments_PaymentForm.native_provider">
            <summary>Payment provider name.<br/>One of the following:<br/>- <c>stripe</c></summary>
        </member>
        <member name="F:TL.Payments_PaymentForm.native_params">
            <summary>Contains information about the payment provider, if available, to support it natively without the need for opening the URL.<br/>A JSON object that can contain the following fields:<br/><br/>- <c>apple_pay_merchant_id</c>: Apple Pay merchant ID<br/>- <c>google_pay_public_key</c>: Google Pay public key<br/>- <c>need_country</c>: True, if the user country must be provided,<br/>- <c>need_zip</c>: True, if the user ZIP/postal code must be provided,<br/>- <c>need_cardholder_name</c>: True, if the cardholder name must be provided<br/></summary>
        </member>
        <member name="F:TL.Payments_PaymentForm.additional_methods">
            <summary>Additional payment methods</summary>
        </member>
        <member name="F:TL.Payments_PaymentForm.saved_info">
            <summary>Saved server-side order information</summary>
        </member>
        <member name="F:TL.Payments_PaymentForm.saved_credentials">
            <summary>Contains information about saved card credentials</summary>
        </member>
        <member name="F:TL.Payments_PaymentForm.users">
            <summary>Users</summary>
        </member>
        <member name="F:TL.Payments_PaymentForm.Flags.has_saved_info">
            <summary>Field <see cref="F:TL.Payments_PaymentForm.saved_info"/> has a value</summary>
        </member>
        <member name="F:TL.Payments_PaymentForm.Flags.has_saved_credentials">
            <summary>Field <see cref="F:TL.Payments_PaymentForm.saved_credentials"/> has a value</summary>
        </member>
        <member name="F:TL.Payments_PaymentForm.Flags.can_save_credentials">
            <summary>Whether the user can choose to save credentials.</summary>
        </member>
        <member name="F:TL.Payments_PaymentForm.Flags.password_missing">
            <summary>Indicates that the user can save payment credentials, but only after setting up a <a href="https://corefork.telegram.org/api/srp">2FA password</a> (currently the account doesn't have a <a href="https://corefork.telegram.org/api/srp">2FA password</a>)</summary>
        </member>
        <member name="F:TL.Payments_PaymentForm.Flags.has_native_provider">
            <summary>Fields <see cref="F:TL.Payments_PaymentForm.native_provider"/> and <see cref="F:TL.Payments_PaymentForm.native_params"/> have a value</summary>
        </member>
        <member name="F:TL.Payments_PaymentForm.Flags.has_photo">
            <summary>Field <see cref="F:TL.Payments_PaymentForm.photo"/> has a value</summary>
        </member>
        <member name="F:TL.Payments_PaymentForm.Flags.has_additional_methods">
            <summary>Field <see cref="F:TL.Payments_PaymentForm.additional_methods"/> has a value</summary>
        </member>
        <member name="T:TL.Payments_ValidatedRequestedInfo">
            <summary>Validated user-provided info		<para>See <a href="https://corefork.telegram.org/constructor/payments.validatedRequestedInfo"/></para></summary>
        </member>
        <member name="F:TL.Payments_ValidatedRequestedInfo.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Payments_ValidatedRequestedInfo.id">
            <summary>ID</summary>
        </member>
        <member name="F:TL.Payments_ValidatedRequestedInfo.shipping_options">
            <summary>Shipping options</summary>
        </member>
        <member name="F:TL.Payments_ValidatedRequestedInfo.Flags.has_id">
            <summary>Field <see cref="F:TL.Payments_ValidatedRequestedInfo.id"/> has a value</summary>
        </member>
        <member name="F:TL.Payments_ValidatedRequestedInfo.Flags.has_shipping_options">
            <summary>Field <see cref="F:TL.Payments_ValidatedRequestedInfo.shipping_options"/> has a value</summary>
        </member>
        <member name="T:TL.Payments_PaymentResultBase">
            <summary>Payment result		<para>See <a href="https://corefork.telegram.org/type/payments.PaymentResult"/></para>		<para>Derived classes: <see cref="T:TL.Payments_PaymentResult"/>, <see cref="T:TL.Payments_PaymentVerificationNeeded"/></para></summary>
        </member>
        <member name="T:TL.Payments_PaymentResult">
            <summary>Payment result		<para>See <a href="https://corefork.telegram.org/constructor/payments.paymentResult"/></para></summary>
        </member>
        <member name="F:TL.Payments_PaymentResult.updates">
            <summary>Info about the payment</summary>
        </member>
        <member name="T:TL.Payments_PaymentVerificationNeeded">
            <summary>Payment was not successful, additional verification is needed		<para>See <a href="https://corefork.telegram.org/constructor/payments.paymentVerificationNeeded"/></para></summary>
        </member>
        <member name="F:TL.Payments_PaymentVerificationNeeded.url">
            <summary>URL for additional payment credentials verification</summary>
        </member>
        <member name="T:TL.Payments_PaymentReceipt">
            <summary>Receipt		<para>See <a href="https://corefork.telegram.org/constructor/payments.paymentReceipt"/></para></summary>
        </member>
        <member name="F:TL.Payments_PaymentReceipt.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Payments_PaymentReceipt.date">
            <summary>Date of generation</summary>
        </member>
        <member name="F:TL.Payments_PaymentReceipt.bot_id">
            <summary>Bot ID</summary>
        </member>
        <member name="F:TL.Payments_PaymentReceipt.provider_id">
            <summary>Provider ID</summary>
        </member>
        <member name="F:TL.Payments_PaymentReceipt.title">
            <summary>Title</summary>
        </member>
        <member name="F:TL.Payments_PaymentReceipt.description">
            <summary>Description</summary>
        </member>
        <member name="F:TL.Payments_PaymentReceipt.photo">
            <summary>Photo</summary>
        </member>
        <member name="F:TL.Payments_PaymentReceipt.invoice">
            <summary>Invoice</summary>
        </member>
        <member name="F:TL.Payments_PaymentReceipt.info">
            <summary>Info</summary>
        </member>
        <member name="F:TL.Payments_PaymentReceipt.shipping">
            <summary>Selected shipping option</summary>
        </member>
        <member name="F:TL.Payments_PaymentReceipt.tip_amount">
            <summary>Tipped amount</summary>
        </member>
        <member name="F:TL.Payments_PaymentReceipt.currency">
            <summary>Three-letter ISO 4217 <a href="https://corefork.telegram.org/bots/payments#supported-currencies">currency</a> code</summary>
        </member>
        <member name="F:TL.Payments_PaymentReceipt.total_amount">
            <summary>Total amount in the smallest units of the currency (integer, not float/double). For example, for a price of <c>US$ 1.45</c> pass <c>amount = 145</c>. See the exp parameter in <a href="https://corefork.telegram.org/bots/payments/currencies.json">currencies.json</a>, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies).</summary>
        </member>
        <member name="F:TL.Payments_PaymentReceipt.credentials_title">
            <summary>Payment credential name</summary>
        </member>
        <member name="F:TL.Payments_PaymentReceipt.users">
            <summary>Users</summary>
        </member>
        <member name="F:TL.Payments_PaymentReceipt.Flags.has_info">
            <summary>Field <see cref="F:TL.Payments_PaymentReceipt.info"/> has a value</summary>
        </member>
        <member name="F:TL.Payments_PaymentReceipt.Flags.has_shipping">
            <summary>Field <see cref="F:TL.Payments_PaymentReceipt.shipping"/> has a value</summary>
        </member>
        <member name="F:TL.Payments_PaymentReceipt.Flags.has_photo">
            <summary>Field <see cref="F:TL.Payments_PaymentReceipt.photo"/> has a value</summary>
        </member>
        <member name="F:TL.Payments_PaymentReceipt.Flags.has_tip_amount">
            <summary>Field <see cref="F:TL.Payments_PaymentReceipt.tip_amount"/> has a value</summary>
        </member>
        <member name="T:TL.Payments_SavedInfo">
            <summary>Saved server-side order information		<para>See <a href="https://corefork.telegram.org/constructor/payments.savedInfo"/></para></summary>
        </member>
        <member name="F:TL.Payments_SavedInfo.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Payments_SavedInfo.saved_info">
            <summary>Saved server-side order information</summary>
        </member>
        <member name="F:TL.Payments_SavedInfo.Flags.has_saved_info">
            <summary>Field <see cref="F:TL.Payments_SavedInfo.saved_info"/> has a value</summary>
        </member>
        <member name="F:TL.Payments_SavedInfo.Flags.has_saved_credentials">
            <summary>Whether the user has some saved payment credentials</summary>
        </member>
        <member name="T:TL.InputPaymentCredentialsBase">
            <summary>Payment credentials		<para>See <a href="https://corefork.telegram.org/type/InputPaymentCredentials"/></para>		<para>Derived classes: <see cref="T:TL.InputPaymentCredentialsSaved"/>, <see cref="T:TL.InputPaymentCredentials"/>, <see cref="T:TL.InputPaymentCredentialsApplePay"/>, <see cref="T:TL.InputPaymentCredentialsGooglePay"/></para></summary>
        </member>
        <member name="T:TL.InputPaymentCredentialsSaved">
            <summary>Saved payment credentials		<para>See <a href="https://corefork.telegram.org/constructor/inputPaymentCredentialsSaved"/></para></summary>
        </member>
        <member name="F:TL.InputPaymentCredentialsSaved.id">
            <summary>Credential ID</summary>
        </member>
        <member name="F:TL.InputPaymentCredentialsSaved.tmp_password">
            <summary>Temporary password</summary>
        </member>
        <member name="T:TL.InputPaymentCredentials">
            <summary>Payment credentials		<para>See <a href="https://corefork.telegram.org/constructor/inputPaymentCredentials"/></para></summary>
        </member>
        <member name="F:TL.InputPaymentCredentials.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.InputPaymentCredentials.data">
            <summary>Payment credentials</summary>
        </member>
        <member name="F:TL.InputPaymentCredentials.Flags.save">
            <summary>Save payment credential for future use</summary>
        </member>
        <member name="T:TL.InputPaymentCredentialsApplePay">
            <summary>Apple pay payment credentials		<para>See <a href="https://corefork.telegram.org/constructor/inputPaymentCredentialsApplePay"/></para></summary>
        </member>
        <member name="F:TL.InputPaymentCredentialsApplePay.payment_data">
            <summary>Payment data</summary>
        </member>
        <member name="T:TL.InputPaymentCredentialsGooglePay">
            <summary>Google Pay payment credentials		<para>See <a href="https://corefork.telegram.org/constructor/inputPaymentCredentialsGooglePay"/></para></summary>
        </member>
        <member name="F:TL.InputPaymentCredentialsGooglePay.payment_token">
            <summary>Payment token</summary>
        </member>
        <member name="T:TL.Account_TmpPassword">
            <summary>Temporary payment password		<para>See <a href="https://corefork.telegram.org/constructor/account.tmpPassword"/></para></summary>
        </member>
        <member name="F:TL.Account_TmpPassword.tmp_password">
            <summary>Temporary password</summary>
        </member>
        <member name="F:TL.Account_TmpPassword.valid_until">
            <summary>Validity period</summary>
        </member>
        <member name="T:TL.ShippingOption">
            <summary>Shipping option		<para>See <a href="https://corefork.telegram.org/constructor/shippingOption"/></para></summary>
        </member>
        <member name="F:TL.ShippingOption.id">
            <summary>Option ID</summary>
        </member>
        <member name="F:TL.ShippingOption.title">
            <summary>Title</summary>
        </member>
        <member name="F:TL.ShippingOption.prices">
            <summary>List of price portions</summary>
        </member>
        <member name="T:TL.InputStickerSetItem">
            <summary>Sticker in a stickerset		<para>See <a href="https://corefork.telegram.org/constructor/inputStickerSetItem"/></para></summary>
        </member>
        <member name="F:TL.InputStickerSetItem.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.InputStickerSetItem.document">
            <summary>The sticker</summary>
        </member>
        <member name="F:TL.InputStickerSetItem.emoji">
            <summary>Associated emoji</summary>
        </member>
        <member name="F:TL.InputStickerSetItem.mask_coords">
            <summary>Coordinates for mask sticker</summary>
        </member>
        <member name="F:TL.InputStickerSetItem.keywords">
            <summary>Set of keywords, separated by commas (can't be provided for mask stickers)</summary>
        </member>
        <member name="F:TL.InputStickerSetItem.Flags.has_mask_coords">
            <summary>Field <see cref="F:TL.InputStickerSetItem.mask_coords"/> has a value</summary>
        </member>
        <member name="F:TL.InputStickerSetItem.Flags.has_keywords">
            <summary>Field <see cref="F:TL.InputStickerSetItem.keywords"/> has a value</summary>
        </member>
        <member name="T:TL.InputPhoneCall">
            <summary>Phone call		<para>See <a href="https://corefork.telegram.org/constructor/inputPhoneCall"/></para></summary>
        </member>
        <member name="F:TL.InputPhoneCall.id">
            <summary>Call ID</summary>
        </member>
        <member name="F:TL.InputPhoneCall.access_hash">
            <summary>⚠ <b>REQUIRED FIELD</b>. See <see href="https://wiz0u.github.io/WTelegramClient/FAQ#access-hash">how to obtain it</see><br/>Access hash</summary>
        </member>
        <member name="T:TL.PhoneCallBase">
            <summary>Phone call		<para>See <a href="https://corefork.telegram.org/type/PhoneCall"/></para>		<para>Derived classes: <see cref="T:TL.PhoneCallEmpty"/>, <see cref="T:TL.PhoneCallWaiting"/>, <see cref="T:TL.PhoneCallRequested"/>, <see cref="T:TL.PhoneCallAccepted"/>, <see cref="T:TL.PhoneCall"/>, <see cref="T:TL.PhoneCallDiscarded"/></para></summary>
        </member>
        <member name="P:TL.PhoneCallBase.ID">
            <summary>Call ID</summary>
        </member>
        <member name="P:TL.PhoneCallBase.AccessHash">
            <summary>Access hash</summary>
        </member>
        <member name="P:TL.PhoneCallBase.Date">
            <summary>Date</summary>
        </member>
        <member name="P:TL.PhoneCallBase.AdminId">
            <summary>Admin ID</summary>
        </member>
        <member name="P:TL.PhoneCallBase.ParticipantId">
            <summary>Participant ID</summary>
        </member>
        <member name="P:TL.PhoneCallBase.Protocol">
            <summary>Phone call protocol info</summary>
        </member>
        <member name="T:TL.PhoneCallEmpty">
            <summary>Empty constructor		<para>See <a href="https://corefork.telegram.org/constructor/phoneCallEmpty"/></para></summary>
        </member>
        <member name="F:TL.PhoneCallEmpty.id">
            <summary>Call ID</summary>
        </member>
        <member name="P:TL.PhoneCallEmpty.ID">
            <summary>Call ID</summary>
        </member>
        <member name="T:TL.PhoneCallWaiting">
            <summary>Incoming phone call		<para>See <a href="https://corefork.telegram.org/constructor/phoneCallWaiting"/></para></summary>
        </member>
        <member name="F:TL.PhoneCallWaiting.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.PhoneCallWaiting.id">
            <summary>Call ID</summary>
        </member>
        <member name="F:TL.PhoneCallWaiting.access_hash">
            <summary>Access hash</summary>
        </member>
        <member name="F:TL.PhoneCallWaiting.date">
            <summary>Date</summary>
        </member>
        <member name="F:TL.PhoneCallWaiting.admin_id">
            <summary>Admin ID</summary>
        </member>
        <member name="F:TL.PhoneCallWaiting.participant_id">
            <summary>Participant ID</summary>
        </member>
        <member name="F:TL.PhoneCallWaiting.protocol">
            <summary>Phone call protocol info</summary>
        </member>
        <member name="F:TL.PhoneCallWaiting.receive_date">
            <summary>When was the phone call received</summary>
        </member>
        <member name="F:TL.PhoneCallWaiting.Flags.has_receive_date">
            <summary>Field <see cref="F:TL.PhoneCallWaiting.receive_date"/> has a value</summary>
        </member>
        <member name="F:TL.PhoneCallWaiting.Flags.video">
            <summary>Is this a video call</summary>
        </member>
        <member name="P:TL.PhoneCallWaiting.ID">
            <summary>Call ID</summary>
        </member>
        <member name="P:TL.PhoneCallWaiting.AccessHash">
            <summary>Access hash</summary>
        </member>
        <member name="P:TL.PhoneCallWaiting.Date">
            <summary>Date</summary>
        </member>
        <member name="P:TL.PhoneCallWaiting.AdminId">
            <summary>Admin ID</summary>
        </member>
        <member name="P:TL.PhoneCallWaiting.ParticipantId">
            <summary>Participant ID</summary>
        </member>
        <member name="P:TL.PhoneCallWaiting.Protocol">
            <summary>Phone call protocol info</summary>
        </member>
        <member name="T:TL.PhoneCallRequested">
            <summary>Requested phone call		<para>See <a href="https://corefork.telegram.org/constructor/phoneCallRequested"/></para></summary>
        </member>
        <member name="F:TL.PhoneCallRequested.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.PhoneCallRequested.id">
            <summary>Phone call ID</summary>
        </member>
        <member name="F:TL.PhoneCallRequested.access_hash">
            <summary>Access hash</summary>
        </member>
        <member name="F:TL.PhoneCallRequested.date">
            <summary>When was the phone call created</summary>
        </member>
        <member name="F:TL.PhoneCallRequested.admin_id">
            <summary>ID of the creator of the phone call</summary>
        </member>
        <member name="F:TL.PhoneCallRequested.participant_id">
            <summary>ID of the other participant of the phone call</summary>
        </member>
        <member name="F:TL.PhoneCallRequested.g_a_hash">
            <summary><a href="https://corefork.telegram.org/api/end-to-end/voice-calls">Parameter for key exchange</a></summary>
        </member>
        <member name="F:TL.PhoneCallRequested.protocol">
            <summary>Call protocol info to be passed to libtgvoip</summary>
        </member>
        <member name="F:TL.PhoneCallRequested.Flags.video">
            <summary>Whether this is a video call</summary>
        </member>
        <member name="P:TL.PhoneCallRequested.ID">
            <summary>Phone call ID</summary>
        </member>
        <member name="P:TL.PhoneCallRequested.AccessHash">
            <summary>Access hash</summary>
        </member>
        <member name="P:TL.PhoneCallRequested.Date">
            <summary>When was the phone call created</summary>
        </member>
        <member name="P:TL.PhoneCallRequested.AdminId">
            <summary>ID of the creator of the phone call</summary>
        </member>
        <member name="P:TL.PhoneCallRequested.ParticipantId">
            <summary>ID of the other participant of the phone call</summary>
        </member>
        <member name="P:TL.PhoneCallRequested.Protocol">
            <summary>Call protocol info to be passed to libtgvoip</summary>
        </member>
        <member name="T:TL.PhoneCallAccepted">
            <summary>An accepted phone call		<para>See <a href="https://corefork.telegram.org/constructor/phoneCallAccepted"/></para></summary>
        </member>
        <member name="F:TL.PhoneCallAccepted.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.PhoneCallAccepted.id">
            <summary>ID of accepted phone call</summary>
        </member>
        <member name="F:TL.PhoneCallAccepted.access_hash">
            <summary>Access hash of phone call</summary>
        </member>
        <member name="F:TL.PhoneCallAccepted.date">
            <summary>When was the call accepted</summary>
        </member>
        <member name="F:TL.PhoneCallAccepted.admin_id">
            <summary>ID of the call creator</summary>
        </member>
        <member name="F:TL.PhoneCallAccepted.participant_id">
            <summary>ID of the other user in the call</summary>
        </member>
        <member name="F:TL.PhoneCallAccepted.g_b">
            <summary>B parameter for <a href="https://corefork.telegram.org/api/end-to-end/voice-calls">secure E2E phone call key exchange</a></summary>
        </member>
        <member name="F:TL.PhoneCallAccepted.protocol">
            <summary>Protocol to use for phone call</summary>
        </member>
        <member name="F:TL.PhoneCallAccepted.Flags.video">
            <summary>Whether this is a video call</summary>
        </member>
        <member name="P:TL.PhoneCallAccepted.ID">
            <summary>ID of accepted phone call</summary>
        </member>
        <member name="P:TL.PhoneCallAccepted.AccessHash">
            <summary>Access hash of phone call</summary>
        </member>
        <member name="P:TL.PhoneCallAccepted.Date">
            <summary>When was the call accepted</summary>
        </member>
        <member name="P:TL.PhoneCallAccepted.AdminId">
            <summary>ID of the call creator</summary>
        </member>
        <member name="P:TL.PhoneCallAccepted.ParticipantId">
            <summary>ID of the other user in the call</summary>
        </member>
        <member name="P:TL.PhoneCallAccepted.Protocol">
            <summary>Protocol to use for phone call</summary>
        </member>
        <member name="T:TL.PhoneCall">
            <summary>Phone call		<para>See <a href="https://corefork.telegram.org/constructor/phoneCall"/></para></summary>
        </member>
        <member name="F:TL.PhoneCall.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.PhoneCall.id">
            <summary>Call ID</summary>
        </member>
        <member name="F:TL.PhoneCall.access_hash">
            <summary>Access hash</summary>
        </member>
        <member name="F:TL.PhoneCall.date">
            <summary>Date of creation of the call</summary>
        </member>
        <member name="F:TL.PhoneCall.admin_id">
            <summary>User ID of the creator of the call</summary>
        </member>
        <member name="F:TL.PhoneCall.participant_id">
            <summary>User ID of the other participant in the call</summary>
        </member>
        <member name="F:TL.PhoneCall.g_a_or_b">
            <summary><a href="https://corefork.telegram.org/api/end-to-end/voice-calls">Parameter for key exchange</a></summary>
        </member>
        <member name="F:TL.PhoneCall.key_fingerprint">
            <summary><a href="https://corefork.telegram.org/api/end-to-end/voice-calls">Key fingerprint</a></summary>
        </member>
        <member name="F:TL.PhoneCall.protocol">
            <summary>Call protocol info to be passed to libtgvoip</summary>
        </member>
        <member name="F:TL.PhoneCall.connections">
            <summary>List of endpoints the user can connect to to exchange call data</summary>
        </member>
        <member name="F:TL.PhoneCall.start_date">
            <summary>When was the call actually started</summary>
        </member>
        <member name="F:TL.PhoneCall.Flags.p2p_allowed">
            <summary>Whether P2P connection to the other peer is allowed</summary>
        </member>
        <member name="F:TL.PhoneCall.Flags.video">
            <summary>Whether this is a video call</summary>
        </member>
        <member name="F:TL.PhoneCall.Flags.has_custom_parameters">
            <summary>Field <see cref="F:TL.PhoneCall.custom_parameters"/> has a value</summary>
        </member>
        <member name="P:TL.PhoneCall.ID">
            <summary>Call ID</summary>
        </member>
        <member name="P:TL.PhoneCall.AccessHash">
            <summary>Access hash</summary>
        </member>
        <member name="P:TL.PhoneCall.Date">
            <summary>Date of creation of the call</summary>
        </member>
        <member name="P:TL.PhoneCall.AdminId">
            <summary>User ID of the creator of the call</summary>
        </member>
        <member name="P:TL.PhoneCall.ParticipantId">
            <summary>User ID of the other participant in the call</summary>
        </member>
        <member name="P:TL.PhoneCall.Protocol">
            <summary>Call protocol info to be passed to libtgvoip</summary>
        </member>
        <member name="T:TL.PhoneCallDiscarded">
            <summary>Indicates a discarded phone call		<para>See <a href="https://corefork.telegram.org/constructor/phoneCallDiscarded"/></para></summary>
        </member>
        <member name="F:TL.PhoneCallDiscarded.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.PhoneCallDiscarded.id">
            <summary>Call ID</summary>
        </member>
        <member name="F:TL.PhoneCallDiscarded.reason">
            <summary>Why was the phone call discarded</summary>
        </member>
        <member name="F:TL.PhoneCallDiscarded.duration">
            <summary>Duration of the phone call in seconds</summary>
        </member>
        <member name="F:TL.PhoneCallDiscarded.Flags.has_reason">
            <summary>Field <see cref="F:TL.PhoneCallDiscarded.reason"/> has a value</summary>
        </member>
        <member name="F:TL.PhoneCallDiscarded.Flags.has_duration">
            <summary>Field <see cref="F:TL.PhoneCallDiscarded.duration"/> has a value</summary>
        </member>
        <member name="F:TL.PhoneCallDiscarded.Flags.need_rating">
            <summary>Whether the server required the user to <see cref="M:TL.SchemaExtensions.Phone_SetCallRating(WTelegram.Client,TL.InputPhoneCall,System.Int32,System.String,System.Boolean)">Phone_SetCallRating</see> the call</summary>
        </member>
        <member name="F:TL.PhoneCallDiscarded.Flags.need_debug">
            <summary>Whether the server required the client to <see cref="M:TL.SchemaExtensions.Phone_SaveCallDebug(WTelegram.Client,TL.InputPhoneCall,TL.DataJSON)">Phone_SaveCallDebug</see> the libtgvoip call debug data</summary>
        </member>
        <member name="F:TL.PhoneCallDiscarded.Flags.video">
            <summary>Whether the call was a video call</summary>
        </member>
        <member name="P:TL.PhoneCallDiscarded.ID">
            <summary>Call ID</summary>
        </member>
        <member name="T:TL.PhoneConnectionBase">
            <summary>Phone call connection		<para>See <a href="https://corefork.telegram.org/type/PhoneConnection"/></para>		<para>Derived classes: <see cref="T:TL.PhoneConnection"/>, <see cref="T:TL.PhoneConnectionWebrtc"/></para></summary>
        </member>
        <member name="P:TL.PhoneConnectionBase.ID">
            <summary>Endpoint ID</summary>
        </member>
        <member name="P:TL.PhoneConnectionBase.Ip">
            <summary>IP address of endpoint</summary>
        </member>
        <member name="P:TL.PhoneConnectionBase.Ipv6">
            <summary>IPv6 address of endpoint</summary>
        </member>
        <member name="P:TL.PhoneConnectionBase.Port">
            <summary>Port ID</summary>
        </member>
        <member name="T:TL.PhoneConnection">
            <summary>Identifies an endpoint that can be used to connect to the other user in a phone call		<para>See <a href="https://corefork.telegram.org/constructor/phoneConnection"/></para></summary>
        </member>
        <member name="F:TL.PhoneConnection.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.PhoneConnection.id">
            <summary>Endpoint ID</summary>
        </member>
        <member name="F:TL.PhoneConnection.ip">
            <summary>IP address of endpoint</summary>
        </member>
        <member name="F:TL.PhoneConnection.ipv6">
            <summary>IPv6 address of endpoint</summary>
        </member>
        <member name="F:TL.PhoneConnection.port">
            <summary>Port ID</summary>
        </member>
        <member name="F:TL.PhoneConnection.peer_tag">
            <summary>Our peer tag</summary>
        </member>
        <member name="F:TL.PhoneConnection.Flags.tcp">
            <summary>Whether TCP should be used</summary>
        </member>
        <member name="P:TL.PhoneConnection.ID">
            <summary>Endpoint ID</summary>
        </member>
        <member name="P:TL.PhoneConnection.Ip">
            <summary>IP address of endpoint</summary>
        </member>
        <member name="P:TL.PhoneConnection.Ipv6">
            <summary>IPv6 address of endpoint</summary>
        </member>
        <member name="P:TL.PhoneConnection.Port">
            <summary>Port ID</summary>
        </member>
        <member name="T:TL.PhoneConnectionWebrtc">
            <summary>WebRTC connection parameters		<para>See <a href="https://corefork.telegram.org/constructor/phoneConnectionWebrtc"/></para></summary>
        </member>
        <member name="F:TL.PhoneConnectionWebrtc.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.PhoneConnectionWebrtc.id">
            <summary>Endpoint ID</summary>
        </member>
        <member name="F:TL.PhoneConnectionWebrtc.ip">
            <summary>IP address</summary>
        </member>
        <member name="F:TL.PhoneConnectionWebrtc.ipv6">
            <summary>IPv6 address</summary>
        </member>
        <member name="F:TL.PhoneConnectionWebrtc.port">
            <summary>Port</summary>
        </member>
        <member name="F:TL.PhoneConnectionWebrtc.username">
            <summary>Username</summary>
        </member>
        <member name="F:TL.PhoneConnectionWebrtc.password">
            <summary>Password</summary>
        </member>
        <member name="F:TL.PhoneConnectionWebrtc.Flags.turn">
            <summary>Whether this is a TURN endpoint</summary>
        </member>
        <member name="F:TL.PhoneConnectionWebrtc.Flags.stun">
            <summary>Whether this is a STUN endpoint</summary>
        </member>
        <member name="P:TL.PhoneConnectionWebrtc.ID">
            <summary>Endpoint ID</summary>
        </member>
        <member name="P:TL.PhoneConnectionWebrtc.Ip">
            <summary>IP address</summary>
        </member>
        <member name="P:TL.PhoneConnectionWebrtc.Ipv6">
            <summary>IPv6 address</summary>
        </member>
        <member name="P:TL.PhoneConnectionWebrtc.Port">
            <summary>Port</summary>
        </member>
        <member name="T:TL.PhoneCallProtocol">
            <summary>Protocol info for libtgvoip		<para>See <a href="https://corefork.telegram.org/constructor/phoneCallProtocol"/></para></summary>
        </member>
        <member name="F:TL.PhoneCallProtocol.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.PhoneCallProtocol.min_layer">
            <summary>Minimum layer for remote libtgvoip</summary>
        </member>
        <member name="F:TL.PhoneCallProtocol.max_layer">
            <summary>Maximum layer for remote libtgvoip</summary>
        </member>
        <member name="F:TL.PhoneCallProtocol.library_versions">
            <summary>When using <see cref="M:TL.SchemaExtensions.Phone_RequestCall(WTelegram.Client,TL.InputUserBase,System.Int32,System.Byte[],TL.PhoneCallProtocol,System.Boolean)">Phone_RequestCall</see> and <see cref="M:TL.SchemaExtensions.Phone_AcceptCall(WTelegram.Client,TL.InputPhoneCall,System.Byte[],TL.PhoneCallProtocol)">Phone_AcceptCall</see>, specify all library versions supported by the client. <br/>The server will merge and choose the best library version supported by both peers, returning only the best value in the result of the callee's <see cref="M:TL.SchemaExtensions.Phone_AcceptCall(WTelegram.Client,TL.InputPhoneCall,System.Byte[],TL.PhoneCallProtocol)">Phone_AcceptCall</see> and in the <see cref="T:TL.PhoneCallAccepted"/> update received by the caller.</summary>
        </member>
        <member name="F:TL.PhoneCallProtocol.Flags.udp_p2p">
            <summary>Whether to allow P2P connection to the other participant</summary>
        </member>
        <member name="F:TL.PhoneCallProtocol.Flags.udp_reflector">
            <summary>Whether to allow connection to the other participants through the reflector servers</summary>
        </member>
        <member name="T:TL.Phone_PhoneCall">
            <summary>A VoIP phone call		<para>See <a href="https://corefork.telegram.org/constructor/phone.phoneCall"/></para></summary>
        </member>
        <member name="F:TL.Phone_PhoneCall.phone_call">
            <summary>The VoIP phone call</summary>
        </member>
        <member name="F:TL.Phone_PhoneCall.users">
            <summary>VoIP phone call participants</summary>
        </member>
        <member name="T:TL.Upload_CdnFileBase">
            <summary>Represents the download status of a CDN file		<para>See <a href="https://corefork.telegram.org/type/upload.CdnFile"/></para>		<para>Derived classes: <see cref="T:TL.Upload_CdnFileReuploadNeeded"/>, <see cref="T:TL.Upload_CdnFile"/></para></summary>
        </member>
        <member name="T:TL.Upload_CdnFileReuploadNeeded">
            <summary>The file was cleared from the temporary RAM cache of the <a href="https://corefork.telegram.org/cdn">CDN</a> and has to be re-uploaded.		<para>See <a href="https://corefork.telegram.org/constructor/upload.cdnFileReuploadNeeded"/></para></summary>
        </member>
        <member name="F:TL.Upload_CdnFileReuploadNeeded.request_token">
            <summary>Request token (see <a href="https://corefork.telegram.org/cdn">CDN</a>)</summary>
        </member>
        <member name="T:TL.Upload_CdnFile">
            <summary>Represent a chunk of a <a href="https://corefork.telegram.org/cdn">CDN</a> file.		<para>See <a href="https://corefork.telegram.org/constructor/upload.cdnFile"/></para></summary>
        </member>
        <member name="F:TL.Upload_CdnFile.bytes">
            <summary>The data</summary>
        </member>
        <member name="T:TL.CdnPublicKey">
            <summary>Public key to use <strong>only</strong> during handshakes to <a href="https://corefork.telegram.org/cdn">CDN</a> DCs.		<para>See <a href="https://corefork.telegram.org/constructor/cdnPublicKey"/></para></summary>
        </member>
        <member name="F:TL.CdnPublicKey.dc_id">
            <summary><a href="https://corefork.telegram.org/cdn">CDN DC</a> ID</summary>
        </member>
        <member name="F:TL.CdnPublicKey.public_key">
            <summary>RSA public key</summary>
        </member>
        <member name="T:TL.CdnConfig">
            <summary>Configuration for <a href="https://corefork.telegram.org/cdn">CDN</a> file downloads.		<para>See <a href="https://corefork.telegram.org/constructor/cdnConfig"/></para></summary>
        </member>
        <member name="F:TL.CdnConfig.public_keys">
            <summary>Vector of public keys to use <strong>only</strong> during handshakes to <a href="https://corefork.telegram.org/cdn">CDN</a> DCs.</summary>
        </member>
        <member name="T:TL.LangPackStringBase">
            <summary>Language pack string		<para>See <a href="https://corefork.telegram.org/type/LangPackString"/></para>		<para>Derived classes: <see cref="T:TL.LangPackString"/>, <see cref="T:TL.LangPackStringPluralized"/>, <see cref="T:TL.LangPackStringDeleted"/></para></summary>
        </member>
        <member name="P:TL.LangPackStringBase.Key">
            <summary>Language key</summary>
        </member>
        <member name="T:TL.LangPackString">
            <summary>Translated localization string		<para>See <a href="https://corefork.telegram.org/constructor/langPackString"/></para></summary>
        </member>
        <member name="F:TL.LangPackString.key">
            <summary>Language key</summary>
        </member>
        <member name="F:TL.LangPackString.value">
            <summary>Value</summary>
        </member>
        <member name="P:TL.LangPackString.Key">
            <summary>Language key</summary>
        </member>
        <member name="T:TL.LangPackStringPluralized">
            <summary>A language pack string which has different forms based on the number of some object it mentions. See <a href="https://www.unicode.org/cldr/charts/latest/supplemental/language_plural_rules.html">https://www.unicode.org/cldr/charts/latest/supplemental/language_plural_rules.html</a> for more info		<para>See <a href="https://corefork.telegram.org/constructor/langPackStringPluralized"/></para></summary>
        </member>
        <member name="F:TL.LangPackStringPluralized.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.LangPackStringPluralized.key">
            <summary>Localization key</summary>
        </member>
        <member name="F:TL.LangPackStringPluralized.zero_value">
            <summary>Value for zero objects</summary>
        </member>
        <member name="F:TL.LangPackStringPluralized.one_value">
            <summary>Value for one object</summary>
        </member>
        <member name="F:TL.LangPackStringPluralized.two_value">
            <summary>Value for two objects</summary>
        </member>
        <member name="F:TL.LangPackStringPluralized.few_value">
            <summary>Value for a few objects</summary>
        </member>
        <member name="F:TL.LangPackStringPluralized.many_value">
            <summary>Value for many objects</summary>
        </member>
        <member name="F:TL.LangPackStringPluralized.other_value">
            <summary>Default value</summary>
        </member>
        <member name="F:TL.LangPackStringPluralized.Flags.has_zero_value">
            <summary>Field <see cref="F:TL.LangPackStringPluralized.zero_value"/> has a value</summary>
        </member>
        <member name="F:TL.LangPackStringPluralized.Flags.has_one_value">
            <summary>Field <see cref="F:TL.LangPackStringPluralized.one_value"/> has a value</summary>
        </member>
        <member name="F:TL.LangPackStringPluralized.Flags.has_two_value">
            <summary>Field <see cref="F:TL.LangPackStringPluralized.two_value"/> has a value</summary>
        </member>
        <member name="F:TL.LangPackStringPluralized.Flags.has_few_value">
            <summary>Field <see cref="F:TL.LangPackStringPluralized.few_value"/> has a value</summary>
        </member>
        <member name="F:TL.LangPackStringPluralized.Flags.has_many_value">
            <summary>Field <see cref="F:TL.LangPackStringPluralized.many_value"/> has a value</summary>
        </member>
        <member name="P:TL.LangPackStringPluralized.Key">
            <summary>Localization key</summary>
        </member>
        <member name="T:TL.LangPackStringDeleted">
            <summary>Deleted localization string		<para>See <a href="https://corefork.telegram.org/constructor/langPackStringDeleted"/></para></summary>
        </member>
        <member name="F:TL.LangPackStringDeleted.key">
            <summary>Localization key</summary>
        </member>
        <member name="P:TL.LangPackStringDeleted.Key">
            <summary>Localization key</summary>
        </member>
        <member name="T:TL.LangPackDifference">
            <summary>Changes to the app's localization pack		<para>See <a href="https://corefork.telegram.org/constructor/langPackDifference"/></para></summary>
        </member>
        <member name="F:TL.LangPackDifference.lang_code">
            <summary>Language code</summary>
        </member>
        <member name="F:TL.LangPackDifference.from_version">
            <summary>Previous version number</summary>
        </member>
        <member name="F:TL.LangPackDifference.version">
            <summary>New version number</summary>
        </member>
        <member name="F:TL.LangPackDifference.strings">
            <summary>Localized strings</summary>
        </member>
        <member name="T:TL.LangPackLanguage">
            <summary>Identifies a localization pack		<para>See <a href="https://corefork.telegram.org/constructor/langPackLanguage"/></para></summary>
        </member>
        <member name="F:TL.LangPackLanguage.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.LangPackLanguage.name">
            <summary>Language name</summary>
        </member>
        <member name="F:TL.LangPackLanguage.native_name">
            <summary>Language name in the language itself</summary>
        </member>
        <member name="F:TL.LangPackLanguage.lang_code">
            <summary>Language code (pack identifier)</summary>
        </member>
        <member name="F:TL.LangPackLanguage.base_lang_code">
            <summary>Identifier of a base language pack; may be empty. If a string is missed in the language pack, then it should be fetched from base language pack. Unsupported in custom language packs</summary>
        </member>
        <member name="F:TL.LangPackLanguage.plural_code">
            <summary>A language code to be used to apply plural forms. See <a href="https://www.unicode.org/cldr/charts/latest/supplemental/language_plural_rules.html">https://www.unicode.org/cldr/charts/latest/supplemental/language_plural_rules.html</a> for more info</summary>
        </member>
        <member name="F:TL.LangPackLanguage.strings_count">
            <summary>Total number of non-deleted strings from the language pack</summary>
        </member>
        <member name="F:TL.LangPackLanguage.translated_count">
            <summary>Total number of translated strings from the language pack</summary>
        </member>
        <member name="F:TL.LangPackLanguage.translations_url">
            <summary>Link to language translation interface; empty for custom local language packs</summary>
        </member>
        <member name="F:TL.LangPackLanguage.Flags.official">
            <summary>Whether the language pack is official</summary>
        </member>
        <member name="F:TL.LangPackLanguage.Flags.has_base_lang_code">
            <summary>Field <see cref="F:TL.LangPackLanguage.base_lang_code"/> has a value</summary>
        </member>
        <member name="F:TL.LangPackLanguage.Flags.rtl">
            <summary>Is this a localization pack for an RTL language</summary>
        </member>
        <member name="F:TL.LangPackLanguage.Flags.beta">
            <summary>Is this a beta localization pack?</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventAction">
            <summary>Channel admin log event		<para>See <a href="https://corefork.telegram.org/type/ChannelAdminLogEventAction"/></para>		<para>Derived classes: <see cref="T:TL.ChannelAdminLogEventActionChangeTitle"/>, <see cref="T:TL.ChannelAdminLogEventActionChangeAbout"/>, <see cref="T:TL.ChannelAdminLogEventActionChangeUsername"/>, <see cref="T:TL.ChannelAdminLogEventActionChangePhoto"/>, <see cref="T:TL.ChannelAdminLogEventActionToggleInvites"/>, <see cref="T:TL.ChannelAdminLogEventActionToggleSignatures"/>, <see cref="T:TL.ChannelAdminLogEventActionUpdatePinned"/>, <see cref="T:TL.ChannelAdminLogEventActionEditMessage"/>, <see cref="T:TL.ChannelAdminLogEventActionDeleteMessage"/>, <see cref="T:TL.ChannelAdminLogEventActionParticipantJoin"/>, <see cref="T:TL.ChannelAdminLogEventActionParticipantLeave"/>, <see cref="T:TL.ChannelAdminLogEventActionParticipantInvite"/>, <see cref="T:TL.ChannelAdminLogEventActionParticipantToggleBan"/>, <see cref="T:TL.ChannelAdminLogEventActionParticipantToggleAdmin"/>, <see cref="T:TL.ChannelAdminLogEventActionChangeStickerSet"/>, <see cref="T:TL.ChannelAdminLogEventActionTogglePreHistoryHidden"/>, <see cref="T:TL.ChannelAdminLogEventActionDefaultBannedRights"/>, <see cref="T:TL.ChannelAdminLogEventActionStopPoll"/>, <see cref="T:TL.ChannelAdminLogEventActionChangeLinkedChat"/>, <see cref="T:TL.ChannelAdminLogEventActionChangeLocation"/>, <see cref="T:TL.ChannelAdminLogEventActionToggleSlowMode"/>, <see cref="T:TL.ChannelAdminLogEventActionStartGroupCall"/>, <see cref="T:TL.ChannelAdminLogEventActionDiscardGroupCall"/>, <see cref="T:TL.ChannelAdminLogEventActionParticipantMute"/>, <see cref="T:TL.ChannelAdminLogEventActionParticipantUnmute"/>, <see cref="T:TL.ChannelAdminLogEventActionToggleGroupCallSetting"/>, <see cref="T:TL.ChannelAdminLogEventActionParticipantJoinByInvite"/>, <see cref="T:TL.ChannelAdminLogEventActionExportedInviteDelete"/>, <see cref="T:TL.ChannelAdminLogEventActionExportedInviteRevoke"/>, <see cref="T:TL.ChannelAdminLogEventActionExportedInviteEdit"/>, <see cref="T:TL.ChannelAdminLogEventActionParticipantVolume"/>, <see cref="T:TL.ChannelAdminLogEventActionChangeHistoryTTL"/>, <see cref="T:TL.ChannelAdminLogEventActionParticipantJoinByRequest"/>, <see cref="T:TL.ChannelAdminLogEventActionToggleNoForwards"/>, <see cref="T:TL.ChannelAdminLogEventActionSendMessage"/>, <see cref="T:TL.ChannelAdminLogEventActionChangeAvailableReactions"/>, <see cref="T:TL.ChannelAdminLogEventActionChangeUsernames"/>, <see cref="T:TL.ChannelAdminLogEventActionToggleForum"/>, <see cref="T:TL.ChannelAdminLogEventActionCreateTopic"/>, <see cref="T:TL.ChannelAdminLogEventActionEditTopic"/>, <see cref="T:TL.ChannelAdminLogEventActionDeleteTopic"/>, <see cref="T:TL.ChannelAdminLogEventActionPinTopic"/>, <see cref="T:TL.ChannelAdminLogEventActionToggleAntiSpam"/>, <see cref="T:TL.ChannelAdminLogEventActionChangePeerColor"/>, <see cref="T:TL.ChannelAdminLogEventActionChangeProfilePeerColor"/>, <see cref="T:TL.ChannelAdminLogEventActionChangeWallpaper"/>, <see cref="T:TL.ChannelAdminLogEventActionChangeEmojiStatus"/></para></summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionChangeTitle">
            <summary>Channel/supergroup title was changed		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionChangeTitle"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionChangeTitle.prev_value">
            <summary>Previous title</summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionChangeTitle.new_value">
            <summary>New title</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionChangeAbout">
            <summary>The description was changed		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionChangeAbout"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionChangeAbout.prev_value">
            <summary>Previous description</summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionChangeAbout.new_value">
            <summary>New description</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionChangeUsername">
            <summary>Channel/supergroup username was changed		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionChangeUsername"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionChangeUsername.prev_value">
            <summary>Old username</summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionChangeUsername.new_value">
            <summary>New username</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionChangePhoto">
            <summary>The channel/supergroup's picture was changed		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionChangePhoto"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionChangePhoto.prev_photo">
            <summary>Previous picture</summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionChangePhoto.new_photo">
            <summary>New picture</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionToggleInvites">
            <summary>Invites were enabled/disabled		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionToggleInvites"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionToggleInvites.new_value">
            <summary>New value</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionToggleSignatures">
            <summary>Channel signatures were enabled/disabled		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionToggleSignatures"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionToggleSignatures.new_value">
            <summary>New value</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionUpdatePinned">
            <summary>A message was pinned		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionUpdatePinned"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionUpdatePinned.message">
            <summary>The message that was pinned</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionEditMessage">
            <summary>A message was edited		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionEditMessage"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionEditMessage.prev_message">
            <summary>Old message</summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionEditMessage.new_message">
            <summary>New message</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionDeleteMessage">
            <summary>A message was deleted		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionDeleteMessage"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionDeleteMessage.message">
            <summary>The message that was deleted</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionParticipantJoin">
            <summary>A user has joined the group (in the case of big groups, info of the user that has joined isn't shown)		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionParticipantJoin"/></para></summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionParticipantLeave">
            <summary>A user left the channel/supergroup (in the case of big groups, info of the user that has joined isn't shown)		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionParticipantLeave"/></para></summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionParticipantInvite">
            <summary>A user was invited to the group		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionParticipantInvite"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionParticipantInvite.participant">
            <summary>The user that was invited</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionParticipantToggleBan">
            <summary>The banned <a href="https://corefork.telegram.org/api/rights">rights</a> of a user were changed		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionParticipantToggleBan"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionParticipantToggleBan.prev_participant">
            <summary>Old banned rights of user</summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionParticipantToggleBan.new_participant">
            <summary>New banned rights of user</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionParticipantToggleAdmin">
            <summary>The admin <a href="https://corefork.telegram.org/api/rights">rights</a> of a user were changed		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionParticipantToggleAdmin"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionParticipantToggleAdmin.prev_participant">
            <summary>Previous admin rights</summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionParticipantToggleAdmin.new_participant">
            <summary>New admin rights</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionChangeStickerSet">
            <summary>The supergroup's stickerset was changed		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionChangeStickerSet"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionChangeStickerSet.prev_stickerset">
            <summary>Previous stickerset</summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionChangeStickerSet.new_stickerset">
            <summary>New stickerset</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionTogglePreHistoryHidden">
            <summary>The hidden prehistory setting was <see cref="M:TL.SchemaExtensions.Channels_TogglePreHistoryHidden(WTelegram.Client,TL.InputChannelBase,System.Boolean)">Channels_TogglePreHistoryHidden</see>		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionTogglePreHistoryHidden"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionTogglePreHistoryHidden.new_value">
            <summary>New value</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionDefaultBannedRights">
            <summary>The default banned rights were modified		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionDefaultBannedRights"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionDefaultBannedRights.prev_banned_rights">
            <summary>Previous global <a href="https://corefork.telegram.org/api/rights">banned rights</a></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionDefaultBannedRights.new_banned_rights">
            <summary>New global <a href="https://corefork.telegram.org/api/rights">banned rights</a>.</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionStopPoll">
            <summary>A poll was stopped		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionStopPoll"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionStopPoll.message">
            <summary>The poll that was stopped</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionChangeLinkedChat">
            <summary>The linked chat was changed		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionChangeLinkedChat"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionChangeLinkedChat.prev_value">
            <summary>Previous linked chat</summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionChangeLinkedChat.new_value">
            <summary>New linked chat</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionChangeLocation">
            <summary>The geogroup location was changed		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionChangeLocation"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionChangeLocation.prev_value">
            <summary>Previous location</summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionChangeLocation.new_value">
            <summary>New location</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionToggleSlowMode">
            <summary><see cref="M:TL.SchemaExtensions.Channels_ToggleSlowMode(WTelegram.Client,TL.InputChannelBase,System.Int32)">Channels_ToggleSlowMode</see>		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionToggleSlowMode"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionToggleSlowMode.prev_value">
            <summary>Previous slow mode value</summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionToggleSlowMode.new_value">
            <summary>New slow mode value</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionStartGroupCall">
            <summary>A group call was started		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionStartGroupCall"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionStartGroupCall.call">
            <summary>Group call</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionDiscardGroupCall">
            <summary>A group call was terminated		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionDiscardGroupCall"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionDiscardGroupCall.call">
            <summary>The group call that was terminated</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionParticipantMute">
            <summary>A group call participant was muted		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionParticipantMute"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionParticipantMute.participant">
            <summary>The participant that was muted</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionParticipantUnmute">
            <summary>A group call participant was unmuted		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionParticipantUnmute"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionParticipantUnmute.participant">
            <summary>The participant that was unmuted</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionToggleGroupCallSetting">
            <summary>Group call settings were changed		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionToggleGroupCallSetting"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionToggleGroupCallSetting.join_muted">
            <summary>Whether all users are muted by default upon joining</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionParticipantJoinByInvite">
            <summary>A user joined the <a href="https://corefork.telegram.org/api/channel">supergroup/channel</a> using a specific invite link		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionParticipantJoinByInvite"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionParticipantJoinByInvite.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionParticipantJoinByInvite.invite">
            <summary>The invite link used to join the <a href="https://corefork.telegram.org/api/channel">supergroup/channel</a></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionParticipantJoinByInvite.Flags.via_chatlist">
            <summary>The participant joined by importing a <a href="https://corefork.telegram.org/api/links#chat-folder-links">chat folder deep link »</a>.</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionExportedInviteDelete">
            <summary>A chat invite was deleted		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionExportedInviteDelete"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionExportedInviteDelete.invite">
            <summary>The deleted chat invite</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionExportedInviteRevoke">
            <summary>A specific invite link was revoked		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionExportedInviteRevoke"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionExportedInviteRevoke.invite">
            <summary>The invite link that was revoked</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionExportedInviteEdit">
            <summary>A chat invite was edited		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionExportedInviteEdit"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionExportedInviteEdit.prev_invite">
            <summary>Previous chat invite information</summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionExportedInviteEdit.new_invite">
            <summary>New chat invite information</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionParticipantVolume">
            <summary>channelAdminLogEvent.user_id has set the volume of participant.peer to participant.volume		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionParticipantVolume"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionParticipantVolume.participant">
            <summary>The participant whose volume was changed</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionChangeHistoryTTL">
            <summary>The Time-To-Live of messages in this chat was changed		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionChangeHistoryTTL"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionChangeHistoryTTL.prev_value">
            <summary>Previous value</summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionChangeHistoryTTL.new_value">
            <summary>New value</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionParticipantJoinByRequest">
            <summary>A new member was accepted to the chat by an admin		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionParticipantJoinByRequest"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionParticipantJoinByRequest.invite">
            <summary>The invite link that was used to join the chat</summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionParticipantJoinByRequest.approved_by">
            <summary>ID of the admin that approved the invite</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionToggleNoForwards">
            <summary>Forwards were enabled or disabled		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionToggleNoForwards"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionToggleNoForwards.new_value">
            <summary>Old value</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionSendMessage">
            <summary>A message was posted in a channel		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionSendMessage"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionSendMessage.message">
            <summary>The message that was sent</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionChangeAvailableReactions">
            <summary>The set of allowed <a href="https://corefork.telegram.org/api/reactions">message reactions »</a> for this channel has changed		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionChangeAvailableReactions"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionChangeAvailableReactions.prev_value">
            <summary>Previously allowed reaction emojis</summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionChangeAvailableReactions.new_value">
            <summary>New allowed reaction emojis</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionChangeUsernames">
            <summary>The list of usernames associated with the channel was changed		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionChangeUsernames"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionChangeUsernames.prev_value">
            <summary>Previous set of usernames</summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionChangeUsernames.new_value">
            <summary>New set of usernames</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionToggleForum">
            <summary><a href="https://corefork.telegram.org/api/forum">Forum</a> functionality was enabled or disabled.		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionToggleForum"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionToggleForum.new_value">
            <summary>Whether <a href="https://corefork.telegram.org/api/forum">forum</a> functionality was enabled or disabled.</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionCreateTopic">
            <summary>A <a href="https://corefork.telegram.org/api/forum#forum-topics">forum topic</a> was created		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionCreateTopic"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionCreateTopic.topic">
            <summary>The <a href="https://corefork.telegram.org/api/forum#forum-topics">forum topic</a> that was created</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionEditTopic">
            <summary>A <a href="https://corefork.telegram.org/api/forum#forum-topics">forum topic</a> was edited		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionEditTopic"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionEditTopic.prev_topic">
            <summary>Previous topic information</summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionEditTopic.new_topic">
            <summary>New topic information</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionDeleteTopic">
            <summary>A <a href="https://corefork.telegram.org/api/forum#forum-topics">forum topic</a> was deleted		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionDeleteTopic"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionDeleteTopic.topic">
            <summary>The <a href="https://corefork.telegram.org/api/forum#forum-topics">forum topic</a> that was deleted</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionPinTopic">
            <summary>A <a href="https://corefork.telegram.org/api/forum#forum-topics">forum topic</a> was pinned or unpinned		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionPinTopic"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionPinTopic.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionPinTopic.prev_topic">
            <summary>Previous topic information</summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionPinTopic.new_topic">
            <summary>New topic information</summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionPinTopic.Flags.has_prev_topic">
            <summary>Field <see cref="F:TL.ChannelAdminLogEventActionPinTopic.prev_topic"/> has a value</summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionPinTopic.Flags.has_new_topic">
            <summary>Field <see cref="F:TL.ChannelAdminLogEventActionPinTopic.new_topic"/> has a value</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionToggleAntiSpam">
            <summary><a href="https://corefork.telegram.org/api/antispam">Native antispam</a> functionality was enabled or disabled.		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionToggleAntiSpam"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionToggleAntiSpam.new_value">
            <summary>Whether antispam functionality was enabled or disabled.</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionChangePeerColor">
            <summary>The <a href="https://corefork.telegram.org/api/colors">message accent color</a> was changed		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionChangePeerColor"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionChangePeerColor.prev_value">
            <summary>Previous accent palette</summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionChangePeerColor.new_value">
            <summary>New accent palette</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionChangeProfilePeerColor">
            <summary>The <a href="https://corefork.telegram.org/api/colors">profile accent color</a> was changed		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionChangeProfilePeerColor"/></para></summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionChangeWallpaper">
            <summary>The <a href="https://corefork.telegram.org/api/wallpapers">wallpaper</a> was changed		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionChangeWallpaper"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionChangeWallpaper.prev_value">
            <summary>Previous wallpaper</summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionChangeWallpaper.new_value">
            <summary>New wallpaper</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionChangeEmojiStatus">
            <summary>The <a href="https://corefork.telegram.org/api/emoji-status">emoji status</a> was changed		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionChangeEmojiStatus"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionChangeEmojiStatus.prev_value">
            <summary>Previous emoji status</summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventActionChangeEmojiStatus.new_value">
            <summary>New emoji status</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventActionChangeEmojiStickerSet">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventActionChangeEmojiStickerSet"/></para></summary>
        </member>
        <member name="T:TL.ChannelAdminLogEvent">
            <summary>Admin log event		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEvent"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEvent.id">
            <summary>Event ID</summary>
        </member>
        <member name="F:TL.ChannelAdminLogEvent.date">
            <summary>Date</summary>
        </member>
        <member name="F:TL.ChannelAdminLogEvent.user_id">
            <summary>User ID</summary>
        </member>
        <member name="F:TL.ChannelAdminLogEvent.action">
            <summary>Action</summary>
        </member>
        <member name="T:TL.Channels_AdminLogResults">
            <summary>Admin log events		<para>See <a href="https://corefork.telegram.org/constructor/channels.adminLogResults"/></para></summary>
        </member>
        <member name="F:TL.Channels_AdminLogResults.events">
            <summary>Admin log events</summary>
        </member>
        <member name="F:TL.Channels_AdminLogResults.chats">
            <summary>Chats mentioned in events</summary>
        </member>
        <member name="F:TL.Channels_AdminLogResults.users">
            <summary>Users mentioned in events</summary>
        </member>
        <member name="M:TL.Channels_AdminLogResults.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.ChannelAdminLogEventsFilter">
            <summary>Filter only certain admin log events		<para>See <a href="https://corefork.telegram.org/constructor/channelAdminLogEventsFilter"/></para></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventsFilter.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventsFilter.Flags.join">
            <summary><see cref="T:TL.ChannelAdminLogEventActionParticipantJoin">Join events</see>, including <see cref="T:TL.ChannelAdminLogEventActionParticipantJoinByInvite">joins using invite links</see> and <see cref="T:TL.ChannelAdminLogEventActionParticipantJoinByRequest">join requests</see>.</summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventsFilter.Flags.leave">
            <summary><see cref="T:TL.ChannelAdminLogEventActionParticipantLeave">Leave events</see></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventsFilter.Flags.invite">
            <summary><see cref="T:TL.ChannelAdminLogEventActionParticipantInvite">Invite events</see></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventsFilter.Flags.ban">
            <summary><see cref="T:TL.ChannelAdminLogEventActionParticipantToggleBan">Ban events</see></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventsFilter.Flags.unban">
            <summary><see cref="T:TL.ChannelAdminLogEventActionParticipantToggleBan">Unban events</see></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventsFilter.Flags.kick">
            <summary><see cref="T:TL.ChannelAdminLogEventActionParticipantToggleBan">Kick events</see></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventsFilter.Flags.unkick">
            <summary><see cref="T:TL.ChannelAdminLogEventActionParticipantToggleBan">Unkick events</see></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventsFilter.Flags.promote">
            <summary><see cref="T:TL.ChannelAdminLogEventActionParticipantToggleAdmin">Admin promotion events</see></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventsFilter.Flags.demote">
            <summary><see cref="T:TL.ChannelAdminLogEventActionParticipantToggleAdmin">Admin demotion events</see></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventsFilter.Flags.info">
            <summary>Info change events (when <see cref="T:TL.ChannelAdminLogEventActionChangeAbout">about</see>, <see cref="T:TL.ChannelAdminLogEventActionChangeLinkedChat">linked chat</see>, <see cref="T:TL.ChannelAdminLogEventActionChangeLocation">location</see>, <see cref="T:TL.ChannelAdminLogEventActionChangePhoto">photo</see>, <see cref="T:TL.ChannelAdminLogEventActionChangeStickerSet">stickerset</see>, <see cref="T:TL.ChannelAdminLogEventActionChangeTitle">title</see> or <see cref="T:TL.ChannelAdminLogEventActionChangeUsername">username</see>, <see cref="T:TL.ChannelAdminLogEventActionToggleSlowMode">slowmode</see>, <see cref="T:TL.ChannelAdminLogEventActionChangeHistoryTTL">history TTL</see> settings of a channel gets modified)</summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventsFilter.Flags.settings">
            <summary>Settings change events (<see cref="T:TL.ChannelAdminLogEventActionToggleInvites">invites</see>, <see cref="T:TL.ChannelAdminLogEventActionTogglePreHistoryHidden">hidden prehistory</see>, <see cref="T:TL.ChannelAdminLogEventActionToggleSignatures">signatures</see>, <see cref="T:TL.ChannelAdminLogEventActionDefaultBannedRights">default banned rights</see>, <see cref="T:TL.ChannelAdminLogEventActionToggleForum">forum toggle events</see>)</summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventsFilter.Flags.pinned">
            <summary><see cref="T:TL.ChannelAdminLogEventActionUpdatePinned">Message pin events</see></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventsFilter.Flags.edit">
            <summary><see cref="T:TL.ChannelAdminLogEventActionEditMessage">Message edit events</see></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventsFilter.Flags.delete">
            <summary><see cref="T:TL.ChannelAdminLogEventActionDeleteMessage">Message deletion events</see></summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventsFilter.Flags.group_call">
            <summary>Group call events</summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventsFilter.Flags.invites">
            <summary>Invite events</summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventsFilter.Flags.send">
            <summary>A message was posted in a channel</summary>
        </member>
        <member name="F:TL.ChannelAdminLogEventsFilter.Flags.forums">
            <summary><a href="https://corefork.telegram.org/api/forum">Forum</a>-related events</summary>
        </member>
        <member name="T:TL.PopularContact">
            <summary>Popular contact		<para>See <a href="https://corefork.telegram.org/constructor/popularContact"/></para></summary>
        </member>
        <member name="F:TL.PopularContact.client_id">
            <summary>Contact identifier</summary>
        </member>
        <member name="F:TL.PopularContact.importers">
            <summary>How many people imported this contact</summary>
        </member>
        <member name="T:TL.Messages_FavedStickers">
            <summary>Favorited stickers		<para>See <a href="https://corefork.telegram.org/constructor/messages.favedStickers"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/messages.favedStickersNotModified">messages.favedStickersNotModified</a></remarks>
        </member>
        <member name="F:TL.Messages_FavedStickers.hash">
            <summary><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></summary>
        </member>
        <member name="F:TL.Messages_FavedStickers.packs">
            <summary>Emojis associated to stickers</summary>
        </member>
        <member name="F:TL.Messages_FavedStickers.stickers">
            <summary>Favorited stickers</summary>
        </member>
        <member name="T:TL.RecentMeUrl">
            <summary>Recent t.me urls		<para>See <a href="https://corefork.telegram.org/type/RecentMeUrl"/></para>		<para>Derived classes: <see cref="T:TL.RecentMeUrlUnknown"/>, <see cref="T:TL.RecentMeUrlUser"/>, <see cref="T:TL.RecentMeUrlChat"/>, <see cref="T:TL.RecentMeUrlChatInvite"/>, <see cref="T:TL.RecentMeUrlStickerSet"/></para></summary>
        </member>
        <member name="F:TL.RecentMeUrl.url">
            <summary>URL</summary>
        </member>
        <member name="T:TL.RecentMeUrlUnknown">
            <summary>Unknown t.me url		<para>See <a href="https://corefork.telegram.org/constructor/recentMeUrlUnknown"/></para></summary>
        </member>
        <member name="T:TL.RecentMeUrlUser">
            <summary>Recent t.me link to a user		<para>See <a href="https://corefork.telegram.org/constructor/recentMeUrlUser"/></para></summary>
        </member>
        <member name="F:TL.RecentMeUrlUser.user_id">
            <summary>User ID</summary>
        </member>
        <member name="T:TL.RecentMeUrlChat">
            <summary>Recent t.me link to a chat		<para>See <a href="https://corefork.telegram.org/constructor/recentMeUrlChat"/></para></summary>
        </member>
        <member name="F:TL.RecentMeUrlChat.chat_id">
            <summary>Chat ID</summary>
        </member>
        <member name="T:TL.RecentMeUrlChatInvite">
            <summary>Recent t.me invite link to a chat		<para>See <a href="https://corefork.telegram.org/constructor/recentMeUrlChatInvite"/></para></summary>
        </member>
        <member name="F:TL.RecentMeUrlChatInvite.chat_invite">
            <summary>Chat invitation</summary>
        </member>
        <member name="T:TL.RecentMeUrlStickerSet">
            <summary>Recent t.me stickerset installation URL		<para>See <a href="https://corefork.telegram.org/constructor/recentMeUrlStickerSet"/></para></summary>
        </member>
        <member name="F:TL.RecentMeUrlStickerSet.set">
            <summary>Stickerset</summary>
        </member>
        <member name="T:TL.Help_RecentMeUrls">
            <summary>Recent t.me URLs		<para>See <a href="https://corefork.telegram.org/constructor/help.recentMeUrls"/></para></summary>
        </member>
        <member name="F:TL.Help_RecentMeUrls.urls">
            <summary>URLs</summary>
        </member>
        <member name="F:TL.Help_RecentMeUrls.chats">
            <summary>Chats</summary>
        </member>
        <member name="F:TL.Help_RecentMeUrls.users">
            <summary>Users</summary>
        </member>
        <member name="M:TL.Help_RecentMeUrls.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.InputSingleMedia">
            <summary>A single media in an <a href="https://corefork.telegram.org/api/files#albums-grouped-media">album or grouped media</a> sent with <see cref="M:TL.SchemaExtensions.Messages_SendMultiMedia(WTelegram.Client,TL.InputPeer,TL.InputSingleMedia[],TL.InputReplyTo,System.Nullable{System.DateTime},TL.InputPeer,TL.InputQuickReplyShortcutBase,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">Messages_SendMultiMedia</see>.		<para>See <a href="https://corefork.telegram.org/constructor/inputSingleMedia"/></para></summary>
        </member>
        <member name="F:TL.InputSingleMedia.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.InputSingleMedia.media">
            <summary>The media</summary>
        </member>
        <member name="F:TL.InputSingleMedia.random_id">
            <summary>Unique client media ID required to prevent message resending</summary>
        </member>
        <member name="F:TL.InputSingleMedia.message">
            <summary>A caption for the media</summary>
        </member>
        <member name="F:TL.InputSingleMedia.entities">
            <summary>Message <a href="https://corefork.telegram.org/api/entities">entities</a> for styled text</summary>
        </member>
        <member name="F:TL.InputSingleMedia.Flags.has_entities">
            <summary>Field <see cref="F:TL.InputSingleMedia.entities"/> has a value</summary>
        </member>
        <member name="T:TL.WebAuthorization">
            <summary>Represents a bot logged in using the <a href="https://corefork.telegram.org/widgets/login">Telegram login widget</a>		<para>See <a href="https://corefork.telegram.org/constructor/webAuthorization"/></para></summary>
        </member>
        <member name="F:TL.WebAuthorization.hash">
            <summary>Authorization hash</summary>
        </member>
        <member name="F:TL.WebAuthorization.bot_id">
            <summary>Bot ID</summary>
        </member>
        <member name="F:TL.WebAuthorization.domain">
            <summary>The domain name of the website on which the user has logged in.</summary>
        </member>
        <member name="F:TL.WebAuthorization.browser">
            <summary>Browser user-agent</summary>
        </member>
        <member name="F:TL.WebAuthorization.platform">
            <summary>Platform</summary>
        </member>
        <member name="F:TL.WebAuthorization.date_created">
            <summary>When was the web session created</summary>
        </member>
        <member name="F:TL.WebAuthorization.date_active">
            <summary>When was the web session last active</summary>
        </member>
        <member name="F:TL.WebAuthorization.ip">
            <summary>IP address</summary>
        </member>
        <member name="F:TL.WebAuthorization.region">
            <summary>Region, determined from IP address</summary>
        </member>
        <member name="T:TL.Account_WebAuthorizations">
            <summary>Web authorizations		<para>See <a href="https://corefork.telegram.org/constructor/account.webAuthorizations"/></para></summary>
        </member>
        <member name="F:TL.Account_WebAuthorizations.authorizations">
            <summary>Web authorization list</summary>
        </member>
        <member name="F:TL.Account_WebAuthorizations.users">
            <summary>Users</summary>
        </member>
        <member name="T:TL.InputMessage">
            <summary>A message		<para>See <a href="https://corefork.telegram.org/type/InputMessage"/></para>		<para>Derived classes: <see cref="T:TL.InputMessageID"/>, <see cref="T:TL.InputMessageReplyTo"/>, <see cref="T:TL.InputMessagePinned"/>, <see cref="T:TL.InputMessageCallbackQuery"/></para></summary>
        </member>
        <member name="T:TL.InputMessageID">
            <summary>Message by ID		<para>See <a href="https://corefork.telegram.org/constructor/inputMessageID"/></para></summary>
        </member>
        <member name="F:TL.InputMessageID.id">
            <summary>Message ID</summary>
        </member>
        <member name="T:TL.InputMessageReplyTo">
            <summary>Message to which the specified message replies to		<para>See <a href="https://corefork.telegram.org/constructor/inputMessageReplyTo"/></para></summary>
        </member>
        <member name="F:TL.InputMessageReplyTo.id">
            <summary>ID of the message that replies to the message we need</summary>
        </member>
        <member name="T:TL.InputMessagePinned">
            <summary>Pinned message		<para>See <a href="https://corefork.telegram.org/constructor/inputMessagePinned"/></para></summary>
        </member>
        <member name="T:TL.InputMessageCallbackQuery">
            <summary>Used by bots for fetching information about the message that originated a callback query		<para>See <a href="https://corefork.telegram.org/constructor/inputMessageCallbackQuery"/></para></summary>
        </member>
        <member name="F:TL.InputMessageCallbackQuery.id">
            <summary>Message ID</summary>
        </member>
        <member name="F:TL.InputMessageCallbackQuery.query_id">
            <summary>Callback query ID</summary>
        </member>
        <member name="T:TL.InputDialogPeerBase">
            <summary>Peer, or all peers in a certain folder		<para>See <a href="https://corefork.telegram.org/type/InputDialogPeer"/></para>		<para>Derived classes: <see cref="T:TL.InputDialogPeer"/>, <see cref="T:TL.InputDialogPeerFolder"/></para></summary>
        </member>
        <member name="T:TL.InputDialogPeer">
            <summary>A peer		<para>See <a href="https://corefork.telegram.org/constructor/inputDialogPeer"/></para></summary>
        </member>
        <member name="F:TL.InputDialogPeer.peer">
            <summary>Peer</summary>
        </member>
        <member name="T:TL.InputDialogPeerFolder">
            <summary>All peers in a <a href="https://corefork.telegram.org/api/folders#peer-folders">peer folder</a>		<para>See <a href="https://corefork.telegram.org/constructor/inputDialogPeerFolder"/></para></summary>
        </member>
        <member name="F:TL.InputDialogPeerFolder.folder_id">
            <summary><a href="https://corefork.telegram.org/api/folders#peer-folders">Peer folder ID, for more info click here</a></summary>
        </member>
        <member name="T:TL.DialogPeerBase">
            <summary>Peer, or all peers in a folder		<para>See <a href="https://corefork.telegram.org/type/DialogPeer"/></para>		<para>Derived classes: <see cref="T:TL.DialogPeer"/>, <see cref="T:TL.DialogPeerFolder"/></para></summary>
        </member>
        <member name="T:TL.DialogPeer">
            <summary>Peer		<para>See <a href="https://corefork.telegram.org/constructor/dialogPeer"/></para></summary>
        </member>
        <member name="F:TL.DialogPeer.peer">
            <summary>Peer</summary>
        </member>
        <member name="T:TL.DialogPeerFolder">
            <summary><a href="https://corefork.telegram.org/api/folders#peer-folders">Peer folder</a>		<para>See <a href="https://corefork.telegram.org/constructor/dialogPeerFolder"/></para></summary>
        </member>
        <member name="F:TL.DialogPeerFolder.folder_id">
            <summary><a href="https://corefork.telegram.org/api/folders#peer-folders">Peer folder ID, for more info click here</a></summary>
        </member>
        <member name="T:TL.Messages_FoundStickerSets">
            <summary>Found stickersets		<para>See <a href="https://corefork.telegram.org/constructor/messages.foundStickerSets"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/messages.foundStickerSetsNotModified">messages.foundStickerSetsNotModified</a></remarks>
        </member>
        <member name="F:TL.Messages_FoundStickerSets.hash">
            <summary><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></summary>
        </member>
        <member name="F:TL.Messages_FoundStickerSets.sets">
            <summary>Found stickersets</summary>
        </member>
        <member name="T:TL.FileHash">
            <summary>SHA256 Hash of an uploaded file, to be checked for validity after download		<para>See <a href="https://corefork.telegram.org/constructor/fileHash"/></para></summary>
        </member>
        <member name="F:TL.FileHash.offset">
            <summary>Offset from where to start computing SHA-256 hash</summary>
        </member>
        <member name="F:TL.FileHash.limit">
            <summary>Length</summary>
        </member>
        <member name="F:TL.FileHash.hash">
            <summary>SHA-256 Hash of file chunk, to be checked for validity after download</summary>
        </member>
        <member name="T:TL.InputClientProxy">
            <summary>Info about an <a href="https://corefork.telegram.org/mtproto/mtproto-transports#transport-obfuscation">MTProxy</a> used to connect.		<para>See <a href="https://corefork.telegram.org/constructor/inputClientProxy"/></para></summary>
        </member>
        <member name="F:TL.InputClientProxy.address">
            <summary>Proxy address</summary>
        </member>
        <member name="F:TL.InputClientProxy.port">
            <summary>Proxy port</summary>
        </member>
        <member name="T:TL.Help_TermsOfServiceUpdateBase">
            <summary>Update of Telegram's terms of service		<para>See <a href="https://corefork.telegram.org/type/help.TermsOfServiceUpdate"/></para>		<para>Derived classes: <see cref="T:TL.Help_TermsOfServiceUpdateEmpty"/>, <see cref="T:TL.Help_TermsOfServiceUpdate"/></para></summary>
        </member>
        <member name="T:TL.Help_TermsOfServiceUpdateEmpty">
            <summary>No changes were made to telegram's terms of service		<para>See <a href="https://corefork.telegram.org/constructor/help.termsOfServiceUpdateEmpty"/></para></summary>
        </member>
        <member name="F:TL.Help_TermsOfServiceUpdateEmpty.expires">
            <summary>New TOS updates will have to be queried using <see cref="M:TL.SchemaExtensions.Help_GetTermsOfServiceUpdate(WTelegram.Client)">Help_GetTermsOfServiceUpdate</see> in <c>expires</c> seconds</summary>
        </member>
        <member name="T:TL.Help_TermsOfServiceUpdate">
            <summary>Info about an update of telegram's terms of service. If the terms of service are declined, then the <see cref="M:TL.SchemaExtensions.Account_DeleteAccount(WTelegram.Client,System.String,TL.InputCheckPasswordSRP)">Account_DeleteAccount</see> method should be called with the reason "Decline ToS update"		<para>See <a href="https://corefork.telegram.org/constructor/help.termsOfServiceUpdate"/></para></summary>
        </member>
        <member name="F:TL.Help_TermsOfServiceUpdate.expires">
            <summary>New TOS updates will have to be queried using <see cref="M:TL.SchemaExtensions.Help_GetTermsOfServiceUpdate(WTelegram.Client)">Help_GetTermsOfServiceUpdate</see> in <c>expires</c> seconds</summary>
        </member>
        <member name="F:TL.Help_TermsOfServiceUpdate.terms_of_service">
            <summary>New terms of service</summary>
        </member>
        <member name="T:TL.InputSecureFileBase">
            <summary>Secure <a href="https://corefork.telegram.org/passport">passport</a> file, for more info <a href="https://corefork.telegram.org/passport/encryption#inputsecurefile">see the passport docs »</a>		<para>See <a href="https://corefork.telegram.org/type/InputSecureFile"/></para>		<para>Derived classes: <see cref="T:TL.InputSecureFileUploaded"/>, <see cref="T:TL.InputSecureFile"/></para></summary>
        </member>
        <member name="P:TL.InputSecureFileBase.ID">
            <summary>Secure file ID</summary>
        </member>
        <member name="T:TL.InputSecureFileUploaded">
            <summary>Uploaded secure file, for more info <a href="https://corefork.telegram.org/passport/encryption#inputsecurefile">see the passport docs »</a>		<para>See <a href="https://corefork.telegram.org/constructor/inputSecureFileUploaded"/></para></summary>
        </member>
        <member name="F:TL.InputSecureFileUploaded.id">
            <summary>Secure file ID</summary>
        </member>
        <member name="F:TL.InputSecureFileUploaded.parts">
            <summary>Secure file part count</summary>
        </member>
        <member name="F:TL.InputSecureFileUploaded.md5_checksum">
            <summary>MD5 hash of encrypted uploaded file, to be checked server-side</summary>
        </member>
        <member name="F:TL.InputSecureFileUploaded.file_hash">
            <summary>File hash</summary>
        </member>
        <member name="F:TL.InputSecureFileUploaded.secret">
            <summary>Secret</summary>
        </member>
        <member name="P:TL.InputSecureFileUploaded.ID">
            <summary>Secure file ID</summary>
        </member>
        <member name="T:TL.InputSecureFile">
            <summary>Pre-uploaded <a href="https://corefork.telegram.org/passport">passport</a> file, for more info <a href="https://corefork.telegram.org/passport/encryption#inputsecurefile">see the passport docs »</a>		<para>See <a href="https://corefork.telegram.org/constructor/inputSecureFile"/></para></summary>
        </member>
        <member name="F:TL.InputSecureFile.id">
            <summary>Secure file ID</summary>
        </member>
        <member name="F:TL.InputSecureFile.access_hash">
            <summary>⚠ <b>REQUIRED FIELD</b>. See <see href="https://wiz0u.github.io/WTelegramClient/FAQ#access-hash">how to obtain it</see><br/>Secure file access hash</summary>
        </member>
        <member name="P:TL.InputSecureFile.ID">
            <summary>Secure file ID</summary>
        </member>
        <member name="T:TL.SecureFile">
            <summary>Secure <a href="https://corefork.telegram.org/passport">passport</a> file, for more info <a href="https://corefork.telegram.org/passport/encryption#inputsecurefile">see the passport docs »</a>		<para>See <a href="https://corefork.telegram.org/constructor/secureFile"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/secureFileEmpty">secureFileEmpty</a></remarks>
        </member>
        <member name="F:TL.SecureFile.id">
            <summary>ID</summary>
        </member>
        <member name="F:TL.SecureFile.access_hash">
            <summary>Access hash</summary>
        </member>
        <member name="F:TL.SecureFile.size">
            <summary>File size</summary>
        </member>
        <member name="F:TL.SecureFile.dc_id">
            <summary>DC ID</summary>
        </member>
        <member name="F:TL.SecureFile.date">
            <summary>Date of upload</summary>
        </member>
        <member name="F:TL.SecureFile.file_hash">
            <summary>File hash</summary>
        </member>
        <member name="F:TL.SecureFile.secret">
            <summary>Secret</summary>
        </member>
        <member name="T:TL.SecureData">
            <summary>Secure <a href="https://corefork.telegram.org/passport">passport</a> data, for more info <a href="https://corefork.telegram.org/passport/encryption#securedata">see the passport docs »</a>		<para>See <a href="https://corefork.telegram.org/constructor/secureData"/></para></summary>
        </member>
        <member name="F:TL.SecureData.data">
            <summary>Data</summary>
        </member>
        <member name="F:TL.SecureData.data_hash">
            <summary>Data hash</summary>
        </member>
        <member name="F:TL.SecureData.secret">
            <summary>Secret</summary>
        </member>
        <member name="T:TL.SecurePlainData">
            <summary>Plaintext verified <a href="https://corefork.telegram.org/passport/encryption#secureplaindata">passport data</a>.		<para>See <a href="https://corefork.telegram.org/type/SecurePlainData"/></para>		<para>Derived classes: <see cref="T:TL.SecurePlainPhone"/>, <see cref="T:TL.SecurePlainEmail"/></para></summary>
        </member>
        <member name="T:TL.SecurePlainPhone">
            <summary>Phone number to use in <a href="https://corefork.telegram.org/passport">telegram passport</a>: <a href="https://corefork.telegram.org/passport/encryption#secureplaindata">it must be verified, first »</a>.		<para>See <a href="https://corefork.telegram.org/constructor/securePlainPhone"/></para></summary>
        </member>
        <member name="F:TL.SecurePlainPhone.phone">
            <summary>Phone number</summary>
        </member>
        <member name="T:TL.SecurePlainEmail">
            <summary>Email address to use in <a href="https://corefork.telegram.org/passport">telegram passport</a>: <a href="https://corefork.telegram.org/passport/encryption#secureplaindata">it must be verified, first »</a>.		<para>See <a href="https://corefork.telegram.org/constructor/securePlainEmail"/></para></summary>
        </member>
        <member name="F:TL.SecurePlainEmail.email">
            <summary>Email address</summary>
        </member>
        <member name="T:TL.SecureValueType">
            <summary>Secure value type		<para>See <a href="https://corefork.telegram.org/type/SecureValueType"/></para></summary>
        </member>
        <member name="F:TL.SecureValueType.PersonalDetails">
            <summary>Personal details</summary>
        </member>
        <member name="F:TL.SecureValueType.Passport">
            <summary>Passport</summary>
        </member>
        <member name="F:TL.SecureValueType.DriverLicense">
            <summary>Driver's license</summary>
        </member>
        <member name="F:TL.SecureValueType.IdentityCard">
            <summary>Identity card</summary>
        </member>
        <member name="F:TL.SecureValueType.InternalPassport">
            <summary>Internal <a href="https://corefork.telegram.org/passport">passport</a></summary>
        </member>
        <member name="F:TL.SecureValueType.Address">
            <summary>Address</summary>
        </member>
        <member name="F:TL.SecureValueType.UtilityBill">
            <summary>Utility bill</summary>
        </member>
        <member name="F:TL.SecureValueType.BankStatement">
            <summary>Bank statement</summary>
        </member>
        <member name="F:TL.SecureValueType.RentalAgreement">
            <summary>Rental agreement</summary>
        </member>
        <member name="F:TL.SecureValueType.PassportRegistration">
            <summary>Internal registration <a href="https://corefork.telegram.org/passport">passport</a></summary>
        </member>
        <member name="F:TL.SecureValueType.TemporaryRegistration">
            <summary>Temporary registration</summary>
        </member>
        <member name="F:TL.SecureValueType.Phone">
            <summary>Phone</summary>
        </member>
        <member name="F:TL.SecureValueType.Email">
            <summary>Email</summary>
        </member>
        <member name="T:TL.SecureValue">
            <summary>Secure value		<para>See <a href="https://corefork.telegram.org/constructor/secureValue"/></para></summary>
        </member>
        <member name="F:TL.SecureValue.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.SecureValue.type">
            <summary>Secure <a href="https://corefork.telegram.org/passport">passport</a> value type</summary>
        </member>
        <member name="F:TL.SecureValue.data">
            <summary>Encrypted <a href="https://corefork.telegram.org/passport">Telegram Passport</a> element data</summary>
        </member>
        <member name="F:TL.SecureValue.front_side">
            <summary>Encrypted <a href="https://corefork.telegram.org/passport">passport</a> file with the front side of the document</summary>
        </member>
        <member name="F:TL.SecureValue.reverse_side">
            <summary>Encrypted <a href="https://corefork.telegram.org/passport">passport</a> file with the reverse side of the document</summary>
        </member>
        <member name="F:TL.SecureValue.selfie">
            <summary>Encrypted <a href="https://corefork.telegram.org/passport">passport</a> file with a selfie of the user holding the document</summary>
        </member>
        <member name="F:TL.SecureValue.translation">
            <summary>Array of encrypted <a href="https://corefork.telegram.org/passport">passport</a> files with translated versions of the provided documents</summary>
        </member>
        <member name="F:TL.SecureValue.files">
            <summary>Array of encrypted <a href="https://corefork.telegram.org/passport">passport</a> files with photos the of the documents</summary>
        </member>
        <member name="F:TL.SecureValue.plain_data">
            <summary>Plaintext verified <a href="https://corefork.telegram.org/passport">passport</a> data</summary>
        </member>
        <member name="F:TL.SecureValue.hash">
            <summary>Data hash</summary>
        </member>
        <member name="F:TL.SecureValue.Flags.has_data">
            <summary>Field <see cref="F:TL.SecureValue.data"/> has a value</summary>
        </member>
        <member name="F:TL.SecureValue.Flags.has_front_side">
            <summary>Field <see cref="F:TL.SecureValue.front_side"/> has a value</summary>
        </member>
        <member name="F:TL.SecureValue.Flags.has_reverse_side">
            <summary>Field <see cref="F:TL.SecureValue.reverse_side"/> has a value</summary>
        </member>
        <member name="F:TL.SecureValue.Flags.has_selfie">
            <summary>Field <see cref="F:TL.SecureValue.selfie"/> has a value</summary>
        </member>
        <member name="F:TL.SecureValue.Flags.has_files">
            <summary>Field <see cref="F:TL.SecureValue.files"/> has a value</summary>
        </member>
        <member name="F:TL.SecureValue.Flags.has_plain_data">
            <summary>Field <see cref="F:TL.SecureValue.plain_data"/> has a value</summary>
        </member>
        <member name="F:TL.SecureValue.Flags.has_translation">
            <summary>Field <see cref="F:TL.SecureValue.translation"/> has a value</summary>
        </member>
        <member name="T:TL.InputSecureValue">
            <summary>Secure value, <a href="https://corefork.telegram.org/passport/encryption#encryption">for more info see the passport docs »</a>		<para>See <a href="https://corefork.telegram.org/constructor/inputSecureValue"/></para></summary>
        </member>
        <member name="F:TL.InputSecureValue.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.InputSecureValue.type">
            <summary>Secure <a href="https://corefork.telegram.org/passport">passport</a> value type</summary>
        </member>
        <member name="F:TL.InputSecureValue.data">
            <summary>Encrypted <a href="https://corefork.telegram.org/passport">Telegram Passport</a> element data</summary>
        </member>
        <member name="F:TL.InputSecureValue.front_side">
            <summary>Encrypted <a href="https://corefork.telegram.org/passport">passport</a> file with the front side of the document</summary>
        </member>
        <member name="F:TL.InputSecureValue.reverse_side">
            <summary>Encrypted <a href="https://corefork.telegram.org/passport">passport</a> file with the reverse side of the document</summary>
        </member>
        <member name="F:TL.InputSecureValue.selfie">
            <summary>Encrypted <a href="https://corefork.telegram.org/passport">passport</a> file with a selfie of the user holding the document</summary>
        </member>
        <member name="F:TL.InputSecureValue.translation">
            <summary>Array of encrypted <a href="https://corefork.telegram.org/passport">passport</a> files with translated versions of the provided documents</summary>
        </member>
        <member name="F:TL.InputSecureValue.files">
            <summary>Array of encrypted <a href="https://corefork.telegram.org/passport">passport</a> files with photos the of the documents</summary>
        </member>
        <member name="F:TL.InputSecureValue.plain_data">
            <summary>Plaintext verified <a href="https://corefork.telegram.org/passport">passport</a> data</summary>
        </member>
        <member name="F:TL.InputSecureValue.Flags.has_data">
            <summary>Field <see cref="F:TL.InputSecureValue.data"/> has a value</summary>
        </member>
        <member name="F:TL.InputSecureValue.Flags.has_front_side">
            <summary>Field <see cref="F:TL.InputSecureValue.front_side"/> has a value</summary>
        </member>
        <member name="F:TL.InputSecureValue.Flags.has_reverse_side">
            <summary>Field <see cref="F:TL.InputSecureValue.reverse_side"/> has a value</summary>
        </member>
        <member name="F:TL.InputSecureValue.Flags.has_selfie">
            <summary>Field <see cref="F:TL.InputSecureValue.selfie"/> has a value</summary>
        </member>
        <member name="F:TL.InputSecureValue.Flags.has_files">
            <summary>Field <see cref="F:TL.InputSecureValue.files"/> has a value</summary>
        </member>
        <member name="F:TL.InputSecureValue.Flags.has_plain_data">
            <summary>Field <see cref="F:TL.InputSecureValue.plain_data"/> has a value</summary>
        </member>
        <member name="F:TL.InputSecureValue.Flags.has_translation">
            <summary>Field <see cref="F:TL.InputSecureValue.translation"/> has a value</summary>
        </member>
        <member name="T:TL.SecureValueHash">
            <summary>Secure value hash		<para>See <a href="https://corefork.telegram.org/constructor/secureValueHash"/></para></summary>
        </member>
        <member name="F:TL.SecureValueHash.type">
            <summary>Secure value type</summary>
        </member>
        <member name="F:TL.SecureValueHash.hash">
            <summary>Hash</summary>
        </member>
        <member name="T:TL.SecureValueErrorBase">
            <summary>Secure value error		<para>See <a href="https://corefork.telegram.org/type/SecureValueError"/></para>		<para>Derived classes: <see cref="T:TL.SecureValueErrorData"/>, <see cref="T:TL.SecureValueErrorFrontSide"/>, <see cref="T:TL.SecureValueErrorReverseSide"/>, <see cref="T:TL.SecureValueErrorSelfie"/>, <see cref="T:TL.SecureValueErrorFile"/>, <see cref="T:TL.SecureValueErrorFiles"/>, <see cref="T:TL.SecureValueError"/>, <see cref="T:TL.SecureValueErrorTranslationFile"/>, <see cref="T:TL.SecureValueErrorTranslationFiles"/></para></summary>
        </member>
        <member name="P:TL.SecureValueErrorBase.Type">
            <summary>The section of the user's Telegram Passport which has the error, one of <see cref="F:TL.SecureValueType.PersonalDetails"/>, <see cref="F:TL.SecureValueType.Passport"/>, <see cref="F:TL.SecureValueType.DriverLicense"/>, <see cref="F:TL.SecureValueType.IdentityCard"/>, <see cref="F:TL.SecureValueType.InternalPassport"/>, <see cref="F:TL.SecureValueType.Address"/></summary>
        </member>
        <member name="P:TL.SecureValueErrorBase.Text">
            <summary>Error message</summary>
        </member>
        <member name="T:TL.SecureValueErrorData">
            <summary>Represents an issue in one of the data fields that was provided by the user. The error is considered resolved when the field's value changes.		<para>See <a href="https://corefork.telegram.org/constructor/secureValueErrorData"/></para></summary>
        </member>
        <member name="F:TL.SecureValueErrorData.type">
            <summary>The section of the user's Telegram Passport which has the error, one of <see cref="F:TL.SecureValueType.PersonalDetails"/>, <see cref="F:TL.SecureValueType.Passport"/>, <see cref="F:TL.SecureValueType.DriverLicense"/>, <see cref="F:TL.SecureValueType.IdentityCard"/>, <see cref="F:TL.SecureValueType.InternalPassport"/>, <see cref="F:TL.SecureValueType.Address"/></summary>
        </member>
        <member name="F:TL.SecureValueErrorData.data_hash">
            <summary>Data hash</summary>
        </member>
        <member name="F:TL.SecureValueErrorData.field">
            <summary>Name of the data field which has the error</summary>
        </member>
        <member name="F:TL.SecureValueErrorData.text">
            <summary>Error message</summary>
        </member>
        <member name="P:TL.SecureValueErrorData.Type">
            <summary>The section of the user's Telegram Passport which has the error, one of <see cref="F:TL.SecureValueType.PersonalDetails"/>, <see cref="F:TL.SecureValueType.Passport"/>, <see cref="F:TL.SecureValueType.DriverLicense"/>, <see cref="F:TL.SecureValueType.IdentityCard"/>, <see cref="F:TL.SecureValueType.InternalPassport"/>, <see cref="F:TL.SecureValueType.Address"/></summary>
        </member>
        <member name="P:TL.SecureValueErrorData.Text">
            <summary>Error message</summary>
        </member>
        <member name="T:TL.SecureValueErrorFrontSide">
            <summary>Represents an issue with the front side of a document. The error is considered resolved when the file with the front side of the document changes.		<para>See <a href="https://corefork.telegram.org/constructor/secureValueErrorFrontSide"/></para></summary>
        </member>
        <member name="F:TL.SecureValueErrorFrontSide.type">
            <summary>One of <see cref="F:TL.SecureValueType.Passport"/>, <see cref="F:TL.SecureValueType.DriverLicense"/>, <see cref="F:TL.SecureValueType.IdentityCard"/>, <see cref="F:TL.SecureValueType.InternalPassport"/></summary>
        </member>
        <member name="F:TL.SecureValueErrorFrontSide.file_hash">
            <summary>File hash</summary>
        </member>
        <member name="F:TL.SecureValueErrorFrontSide.text">
            <summary>Error message</summary>
        </member>
        <member name="P:TL.SecureValueErrorFrontSide.Type">
            <summary>One of <see cref="F:TL.SecureValueType.Passport"/>, <see cref="F:TL.SecureValueType.DriverLicense"/>, <see cref="F:TL.SecureValueType.IdentityCard"/>, <see cref="F:TL.SecureValueType.InternalPassport"/></summary>
        </member>
        <member name="P:TL.SecureValueErrorFrontSide.Text">
            <summary>Error message</summary>
        </member>
        <member name="T:TL.SecureValueErrorReverseSide">
            <summary>Represents an issue with the reverse side of a document. The error is considered resolved when the file with reverse side of the document changes.		<para>See <a href="https://corefork.telegram.org/constructor/secureValueErrorReverseSide"/></para></summary>
        </member>
        <member name="F:TL.SecureValueErrorReverseSide.type">
            <summary>One of <see cref="F:TL.SecureValueType.DriverLicense"/>, <see cref="F:TL.SecureValueType.IdentityCard"/></summary>
        </member>
        <member name="F:TL.SecureValueErrorReverseSide.file_hash">
            <summary>File hash</summary>
        </member>
        <member name="F:TL.SecureValueErrorReverseSide.text">
            <summary>Error message</summary>
        </member>
        <member name="P:TL.SecureValueErrorReverseSide.Type">
            <summary>One of <see cref="F:TL.SecureValueType.DriverLicense"/>, <see cref="F:TL.SecureValueType.IdentityCard"/></summary>
        </member>
        <member name="P:TL.SecureValueErrorReverseSide.Text">
            <summary>Error message</summary>
        </member>
        <member name="T:TL.SecureValueErrorSelfie">
            <summary>Represents an issue with the selfie with a document. The error is considered resolved when the file with the selfie changes.		<para>See <a href="https://corefork.telegram.org/constructor/secureValueErrorSelfie"/></para></summary>
        </member>
        <member name="F:TL.SecureValueErrorSelfie.type">
            <summary>One of <see cref="F:TL.SecureValueType.Passport"/>, <see cref="F:TL.SecureValueType.DriverLicense"/>, <see cref="F:TL.SecureValueType.IdentityCard"/>, <see cref="F:TL.SecureValueType.InternalPassport"/></summary>
        </member>
        <member name="F:TL.SecureValueErrorSelfie.file_hash">
            <summary>File hash</summary>
        </member>
        <member name="F:TL.SecureValueErrorSelfie.text">
            <summary>Error message</summary>
        </member>
        <member name="P:TL.SecureValueErrorSelfie.Type">
            <summary>One of <see cref="F:TL.SecureValueType.Passport"/>, <see cref="F:TL.SecureValueType.DriverLicense"/>, <see cref="F:TL.SecureValueType.IdentityCard"/>, <see cref="F:TL.SecureValueType.InternalPassport"/></summary>
        </member>
        <member name="P:TL.SecureValueErrorSelfie.Text">
            <summary>Error message</summary>
        </member>
        <member name="T:TL.SecureValueErrorFile">
            <summary>Represents an issue with a document scan. The error is considered resolved when the file with the document scan changes.		<para>See <a href="https://corefork.telegram.org/constructor/secureValueErrorFile"/></para></summary>
        </member>
        <member name="F:TL.SecureValueErrorFile.type">
            <summary>One of <see cref="F:TL.SecureValueType.UtilityBill"/>, <see cref="F:TL.SecureValueType.BankStatement"/>, <see cref="F:TL.SecureValueType.RentalAgreement"/>, <see cref="F:TL.SecureValueType.PassportRegistration"/>, <see cref="F:TL.SecureValueType.TemporaryRegistration"/></summary>
        </member>
        <member name="F:TL.SecureValueErrorFile.file_hash">
            <summary>File hash</summary>
        </member>
        <member name="F:TL.SecureValueErrorFile.text">
            <summary>Error message</summary>
        </member>
        <member name="P:TL.SecureValueErrorFile.Type">
            <summary>One of <see cref="F:TL.SecureValueType.UtilityBill"/>, <see cref="F:TL.SecureValueType.BankStatement"/>, <see cref="F:TL.SecureValueType.RentalAgreement"/>, <see cref="F:TL.SecureValueType.PassportRegistration"/>, <see cref="F:TL.SecureValueType.TemporaryRegistration"/></summary>
        </member>
        <member name="P:TL.SecureValueErrorFile.Text">
            <summary>Error message</summary>
        </member>
        <member name="T:TL.SecureValueErrorFiles">
            <summary>Represents an issue with a list of scans. The error is considered resolved when the list of files containing the scans changes.		<para>See <a href="https://corefork.telegram.org/constructor/secureValueErrorFiles"/></para></summary>
        </member>
        <member name="F:TL.SecureValueErrorFiles.type">
            <summary>One of <see cref="F:TL.SecureValueType.UtilityBill"/>, <see cref="F:TL.SecureValueType.BankStatement"/>, <see cref="F:TL.SecureValueType.RentalAgreement"/>, <see cref="F:TL.SecureValueType.PassportRegistration"/>, <see cref="F:TL.SecureValueType.TemporaryRegistration"/></summary>
        </member>
        <member name="F:TL.SecureValueErrorFiles.file_hash">
            <summary>File hash</summary>
        </member>
        <member name="F:TL.SecureValueErrorFiles.text">
            <summary>Error message</summary>
        </member>
        <member name="P:TL.SecureValueErrorFiles.Type">
            <summary>One of <see cref="F:TL.SecureValueType.UtilityBill"/>, <see cref="F:TL.SecureValueType.BankStatement"/>, <see cref="F:TL.SecureValueType.RentalAgreement"/>, <see cref="F:TL.SecureValueType.PassportRegistration"/>, <see cref="F:TL.SecureValueType.TemporaryRegistration"/></summary>
        </member>
        <member name="P:TL.SecureValueErrorFiles.Text">
            <summary>Error message</summary>
        </member>
        <member name="T:TL.SecureValueError">
            <summary>Secure value error		<para>See <a href="https://corefork.telegram.org/constructor/secureValueError"/></para></summary>
        </member>
        <member name="F:TL.SecureValueError.type">
            <summary>Type of element which has the issue</summary>
        </member>
        <member name="F:TL.SecureValueError.hash">
            <summary>Hash</summary>
        </member>
        <member name="F:TL.SecureValueError.text">
            <summary>Error message</summary>
        </member>
        <member name="P:TL.SecureValueError.Type">
            <summary>Type of element which has the issue</summary>
        </member>
        <member name="P:TL.SecureValueError.Text">
            <summary>Error message</summary>
        </member>
        <member name="T:TL.SecureValueErrorTranslationFile">
            <summary>Represents an issue with one of the files that constitute the translation of a document. The error is considered resolved when the file changes.		<para>See <a href="https://corefork.telegram.org/constructor/secureValueErrorTranslationFile"/></para></summary>
        </member>
        <member name="T:TL.SecureValueErrorTranslationFiles">
            <summary>Represents an issue with the translated version of a document. The error is considered resolved when a file with the document translation changes.		<para>See <a href="https://corefork.telegram.org/constructor/secureValueErrorTranslationFiles"/></para></summary>
        </member>
        <member name="T:TL.SecureCredentialsEncrypted">
            <summary>Encrypted credentials required to decrypt <a href="https://corefork.telegram.org/passport">telegram passport</a> data.		<para>See <a href="https://corefork.telegram.org/constructor/secureCredentialsEncrypted"/></para></summary>
        </member>
        <member name="F:TL.SecureCredentialsEncrypted.data">
            <summary>Encrypted JSON-serialized data with unique user's payload, data hashes and secrets required for EncryptedPassportElement decryption and authentication, as described in <a href="https://corefork.telegram.org/passport#decrypting-data">decrypting data »</a></summary>
        </member>
        <member name="F:TL.SecureCredentialsEncrypted.hash">
            <summary>Data hash for data authentication as described in <a href="https://corefork.telegram.org/passport#decrypting-data">decrypting data »</a></summary>
        </member>
        <member name="F:TL.SecureCredentialsEncrypted.secret">
            <summary>Secret, encrypted with the bot's public RSA key, required for data decryption as described in <a href="https://corefork.telegram.org/passport#decrypting-data">decrypting data »</a></summary>
        </member>
        <member name="T:TL.Account_AuthorizationForm">
            <summary><a href="https://corefork.telegram.org/passport">Telegram Passport</a> authorization form		<para>See <a href="https://corefork.telegram.org/constructor/account.authorizationForm"/></para></summary>
        </member>
        <member name="F:TL.Account_AuthorizationForm.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Account_AuthorizationForm.required_types">
            <summary>Required <a href="https://corefork.telegram.org/passport">Telegram Passport</a> documents</summary>
        </member>
        <member name="F:TL.Account_AuthorizationForm.values">
            <summary>Already submitted <a href="https://corefork.telegram.org/passport">Telegram Passport</a> documents</summary>
        </member>
        <member name="F:TL.Account_AuthorizationForm.errors">
            <summary><a href="https://corefork.telegram.org/passport">Telegram Passport</a> errors</summary>
        </member>
        <member name="F:TL.Account_AuthorizationForm.users">
            <summary>Info about the bot to which the form will be submitted</summary>
        </member>
        <member name="F:TL.Account_AuthorizationForm.privacy_policy_url">
            <summary>URL of the service's privacy policy</summary>
        </member>
        <member name="F:TL.Account_AuthorizationForm.Flags.has_privacy_policy_url">
            <summary>Field <see cref="F:TL.Account_AuthorizationForm.privacy_policy_url"/> has a value</summary>
        </member>
        <member name="T:TL.Account_SentEmailCode">
            <summary>The sent email code		<para>See <a href="https://corefork.telegram.org/constructor/account.sentEmailCode"/></para></summary>
        </member>
        <member name="F:TL.Account_SentEmailCode.email_pattern">
            <summary>The email (to which the code was sent) must match this <a href="https://corefork.telegram.org/api/pattern">pattern</a></summary>
        </member>
        <member name="F:TL.Account_SentEmailCode.length">
            <summary>The length of the verification code</summary>
        </member>
        <member name="T:TL.Help_DeepLinkInfo">
            <summary>Deep link info, see <a href="https://corefork.telegram.org/api/links#unsupported-links">the here for more details</a>		<para>See <a href="https://corefork.telegram.org/constructor/help.deepLinkInfo"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/help.deepLinkInfoEmpty">help.deepLinkInfoEmpty</a></remarks>
        </member>
        <member name="F:TL.Help_DeepLinkInfo.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Help_DeepLinkInfo.message">
            <summary>Message to show to the user</summary>
        </member>
        <member name="F:TL.Help_DeepLinkInfo.entities">
            <summary><a href="https://corefork.telegram.org/api/entities">Message entities for styled text</a></summary>
        </member>
        <member name="F:TL.Help_DeepLinkInfo.Flags.update_app">
            <summary>An update of the app is required to parse this link</summary>
        </member>
        <member name="F:TL.Help_DeepLinkInfo.Flags.has_entities">
            <summary>Field <see cref="F:TL.Help_DeepLinkInfo.entities"/> has a value</summary>
        </member>
        <member name="T:TL.SavedContact">
            <summary>Saved contact		<para>See <a href="https://corefork.telegram.org/type/SavedContact"/></para>		<para>Derived classes: <see cref="T:TL.SavedPhoneContact"/></para></summary>
        </member>
        <member name="T:TL.SavedPhoneContact">
            <summary>Saved contact		<para>See <a href="https://corefork.telegram.org/constructor/savedPhoneContact"/></para></summary>
        </member>
        <member name="F:TL.SavedPhoneContact.phone">
            <summary>Phone number</summary>
        </member>
        <member name="F:TL.SavedPhoneContact.first_name">
            <summary>First name</summary>
        </member>
        <member name="F:TL.SavedPhoneContact.last_name">
            <summary>Last name</summary>
        </member>
        <member name="F:TL.SavedPhoneContact.date">
            <summary>Date added</summary>
        </member>
        <member name="T:TL.Account_Takeout">
            <summary>Takeout info		<para>See <a href="https://corefork.telegram.org/constructor/account.takeout"/></para></summary>
        </member>
        <member name="F:TL.Account_Takeout.id">
            <summary>Takeout ID</summary>
        </member>
        <member name="T:TL.PasswordKdfAlgo">
            <summary>Key derivation function to use when generating the <a href="https://corefork.telegram.org/api/srp">password hash for SRP two-factor authorization</a>		<para>See <a href="https://corefork.telegram.org/type/PasswordKdfAlgo"/></para>		<para>Derived classes: <see cref="T:TL.PasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/passwordKdfAlgoUnknown">passwordKdfAlgoUnknown</a></remarks>
        </member>
        <member name="T:TL.PasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow">
            <summary>This key derivation algorithm defines that <a href="https://corefork.telegram.org/api/srp">SRP 2FA login</a> must be used		<para>See <a href="https://corefork.telegram.org/constructor/passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow"/></para></summary>
        </member>
        <member name="F:TL.PasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow.salt1">
            <summary>One of two salts used by the derivation function (see <a href="https://corefork.telegram.org/api/srp">SRP 2FA login</a>)</summary>
        </member>
        <member name="F:TL.PasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow.salt2">
            <summary>One of two salts used by the derivation function (see <a href="https://corefork.telegram.org/api/srp">SRP 2FA login</a>)</summary>
        </member>
        <member name="F:TL.PasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow.g">
            <summary>Base (see <a href="https://corefork.telegram.org/api/srp">SRP 2FA login</a>)</summary>
        </member>
        <member name="F:TL.PasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow.p">
            <summary>2048-bit modulus (see <a href="https://corefork.telegram.org/api/srp">SRP 2FA login</a>)</summary>
        </member>
        <member name="T:TL.SecurePasswordKdfAlgo">
            <summary>KDF algorithm to use for computing telegram <a href="https://corefork.telegram.org/passport">passport</a> hash		<para>See <a href="https://corefork.telegram.org/type/SecurePasswordKdfAlgo"/></para>		<para>Derived classes: <see cref="T:TL.SecurePasswordKdfAlgoPBKDF2HMACSHA512iter100000"/>, <see cref="T:TL.SecurePasswordKdfAlgoSHA512"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/securePasswordKdfAlgoUnknown">securePasswordKdfAlgoUnknown</a></remarks>
        </member>
        <member name="F:TL.SecurePasswordKdfAlgo.salt">
            <summary>Salt</summary>
        </member>
        <member name="T:TL.SecurePasswordKdfAlgoPBKDF2HMACSHA512iter100000">
            <summary>PBKDF2 with SHA512 and 100000 iterations KDF algo		<para>See <a href="https://corefork.telegram.org/constructor/securePasswordKdfAlgoPBKDF2HMACSHA512iter100000"/></para></summary>
        </member>
        <member name="T:TL.SecurePasswordKdfAlgoSHA512">
            <summary>SHA512 KDF algo		<para>See <a href="https://corefork.telegram.org/constructor/securePasswordKdfAlgoSHA512"/></para></summary>
        </member>
        <member name="T:TL.SecureSecretSettings">
            <summary>Secure settings		<para>See <a href="https://corefork.telegram.org/constructor/secureSecretSettings"/></para></summary>
        </member>
        <member name="F:TL.SecureSecretSettings.secure_algo">
            <summary>Secure KDF algo</summary>
        </member>
        <member name="F:TL.SecureSecretSettings.secure_secret">
            <summary>Secure secret</summary>
        </member>
        <member name="F:TL.SecureSecretSettings.secure_secret_id">
            <summary>Secret ID</summary>
        </member>
        <member name="T:TL.InputCheckPasswordSRP">
            <summary>Constructor for checking the validity of a 2FA SRP password (see <a href="https://corefork.telegram.org/api/srp">SRP</a>)		<para>See <a href="https://corefork.telegram.org/constructor/inputCheckPasswordSRP"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/inputCheckPasswordEmpty">inputCheckPasswordEmpty</a></remarks>
        </member>
        <member name="F:TL.InputCheckPasswordSRP.srp_id">
            <summary><a href="https://corefork.telegram.org/api/srp">SRP ID</a></summary>
        </member>
        <member name="F:TL.InputCheckPasswordSRP.A">
            <summary><c>A</c> parameter (see <a href="https://corefork.telegram.org/api/srp">SRP</a>)</summary>
        </member>
        <member name="F:TL.InputCheckPasswordSRP.M1">
            <summary><c>M1</c> parameter (see <a href="https://corefork.telegram.org/api/srp">SRP</a>)</summary>
        </member>
        <member name="T:TL.SecureRequiredTypeBase">
            <summary>Required secure file type		<para>See <a href="https://corefork.telegram.org/type/SecureRequiredType"/></para>		<para>Derived classes: <see cref="T:TL.SecureRequiredType"/>, <see cref="T:TL.SecureRequiredTypeOneOf"/></para></summary>
        </member>
        <member name="T:TL.SecureRequiredType">
            <summary>Required type		<para>See <a href="https://corefork.telegram.org/constructor/secureRequiredType"/></para></summary>
        </member>
        <member name="F:TL.SecureRequiredType.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.SecureRequiredType.type">
            <summary>Secure value type</summary>
        </member>
        <member name="F:TL.SecureRequiredType.Flags.native_names">
            <summary>Native names</summary>
        </member>
        <member name="F:TL.SecureRequiredType.Flags.selfie_required">
            <summary>Is a selfie required</summary>
        </member>
        <member name="F:TL.SecureRequiredType.Flags.translation_required">
            <summary>Is a translation required</summary>
        </member>
        <member name="T:TL.SecureRequiredTypeOneOf">
            <summary>One of		<para>See <a href="https://corefork.telegram.org/constructor/secureRequiredTypeOneOf"/></para></summary>
        </member>
        <member name="F:TL.SecureRequiredTypeOneOf.types">
            <summary>Secure required value types</summary>
        </member>
        <member name="T:TL.Help_PassportConfig">
            <summary>Telegram <a href="https://corefork.telegram.org/passport">passport</a> configuration		<para>See <a href="https://corefork.telegram.org/constructor/help.passportConfig"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/help.passportConfigNotModified">help.passportConfigNotModified</a></remarks>
        </member>
        <member name="F:TL.Help_PassportConfig.hash">
            <summary><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></summary>
        </member>
        <member name="F:TL.Help_PassportConfig.countries_langs">
            <summary>Localization</summary>
        </member>
        <member name="T:TL.InputAppEvent">
            <summary>Event that occurred in the application.		<para>See <a href="https://corefork.telegram.org/constructor/inputAppEvent"/></para></summary>
        </member>
        <member name="F:TL.InputAppEvent.time">
            <summary>Client's exact timestamp for the event</summary>
        </member>
        <member name="F:TL.InputAppEvent.type">
            <summary>Type of event</summary>
        </member>
        <member name="F:TL.InputAppEvent.peer">
            <summary>Arbitrary numeric value for more convenient selection of certain event types, or events referring to a certain object</summary>
        </member>
        <member name="F:TL.InputAppEvent.data">
            <summary>Details of the event</summary>
        </member>
        <member name="T:TL.JsonObjectValue">
            <summary>JSON key: value pair		<para>See <a href="https://corefork.telegram.org/constructor/jsonObjectValue"/></para></summary>
        </member>
        <member name="F:TL.JsonObjectValue.key">
            <summary>Key</summary>
        </member>
        <member name="F:TL.JsonObjectValue.value">
            <summary>Value</summary>
        </member>
        <member name="T:TL.JSONValue">
            <summary>JSON value		<para>See <a href="https://corefork.telegram.org/type/JSONValue"/></para>		<para>Derived classes: <see cref="T:TL.JsonNull"/>, <see cref="T:TL.JsonBool"/>, <see cref="T:TL.JsonNumber"/>, <see cref="T:TL.JsonString"/>, <see cref="T:TL.JsonArray"/>, <see cref="T:TL.JsonObject"/></para></summary>
        </member>
        <member name="T:TL.JsonNull">
            <summary>null JSON value		<para>See <a href="https://corefork.telegram.org/constructor/jsonNull"/></para></summary>
        </member>
        <member name="T:TL.JsonBool">
            <summary>JSON boolean value		<para>See <a href="https://corefork.telegram.org/constructor/jsonBool"/></para></summary>
        </member>
        <member name="F:TL.JsonBool.value">
            <summary>Value</summary>
        </member>
        <member name="T:TL.JsonNumber">
            <summary>JSON numeric value		<para>See <a href="https://corefork.telegram.org/constructor/jsonNumber"/></para></summary>
        </member>
        <member name="F:TL.JsonNumber.value">
            <summary>Value</summary>
        </member>
        <member name="T:TL.JsonString">
            <summary>JSON string		<para>See <a href="https://corefork.telegram.org/constructor/jsonString"/></para></summary>
        </member>
        <member name="F:TL.JsonString.value">
            <summary>Value</summary>
        </member>
        <member name="T:TL.JsonArray">
            <summary>JSON array		<para>See <a href="https://corefork.telegram.org/constructor/jsonArray"/></para></summary>
        </member>
        <member name="F:TL.JsonArray.value">
            <summary>JSON values</summary>
        </member>
        <member name="T:TL.JsonObject">
            <summary>JSON object value		<para>See <a href="https://corefork.telegram.org/constructor/jsonObject"/></para></summary>
        </member>
        <member name="F:TL.JsonObject.value">
            <summary>Values</summary>
        </member>
        <member name="M:TL.JsonObject.ToString">
            <summary>Returns a JSON serialization string for this object</summary>
        </member>
        <member name="P:TL.JsonObject.Item(System.String)">
            <summary>Returns the given entry in native form (<see langword="bool"/>, <see langword="double"/>, <see langword="string"/>, <see cref="T:System.Collections.Generic.Dictionary`2">Dictionary</see> or <see cref="T:System.Array"/>), or <see langword="null"/> if the key is not found</summary>
        </member>
        <member name="M:TL.JsonObject.ToDictionary">
            <summary>Converts the entries to a Dictionary with keys and values in native form (<see langword="bool"/>, <see langword="double"/>, <see langword="string"/>, <see cref="T:System.Collections.Generic.Dictionary`2">Dictionary</see> or <see cref="T:System.Array"/>)</summary>
        </member>
        <member name="T:TL.PageTableCell">
            <summary>Table cell		<para>See <a href="https://corefork.telegram.org/constructor/pageTableCell"/></para></summary>
        </member>
        <member name="F:TL.PageTableCell.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.PageTableCell.text">
            <summary>Content</summary>
        </member>
        <member name="F:TL.PageTableCell.colspan">
            <summary>For how many columns should this cell extend</summary>
        </member>
        <member name="F:TL.PageTableCell.rowspan">
            <summary>For how many rows should this cell extend</summary>
        </member>
        <member name="F:TL.PageTableCell.Flags.header">
            <summary>Is this element part of the column header</summary>
        </member>
        <member name="F:TL.PageTableCell.Flags.has_colspan">
            <summary>Field <see cref="F:TL.PageTableCell.colspan"/> has a value</summary>
        </member>
        <member name="F:TL.PageTableCell.Flags.has_rowspan">
            <summary>Field <see cref="F:TL.PageTableCell.rowspan"/> has a value</summary>
        </member>
        <member name="F:TL.PageTableCell.Flags.align_center">
            <summary>Horizontally centered block</summary>
        </member>
        <member name="F:TL.PageTableCell.Flags.align_right">
            <summary>Right-aligned block</summary>
        </member>
        <member name="F:TL.PageTableCell.Flags.valign_middle">
            <summary>Vertically centered block</summary>
        </member>
        <member name="F:TL.PageTableCell.Flags.valign_bottom">
            <summary>Block vertically-aligned to the bottom</summary>
        </member>
        <member name="F:TL.PageTableCell.Flags.has_text">
            <summary>Field <see cref="F:TL.PageTableCell.text"/> has a value</summary>
        </member>
        <member name="T:TL.PageTableRow">
            <summary>Table row		<para>See <a href="https://corefork.telegram.org/constructor/pageTableRow"/></para></summary>
        </member>
        <member name="F:TL.PageTableRow.cells">
            <summary>Table cells</summary>
        </member>
        <member name="T:TL.PageCaption">
            <summary>Page caption		<para>See <a href="https://corefork.telegram.org/constructor/pageCaption"/></para></summary>
        </member>
        <member name="F:TL.PageCaption.text">
            <summary>Caption</summary>
        </member>
        <member name="F:TL.PageCaption.credit">
            <summary>Credits</summary>
        </member>
        <member name="T:TL.PageListItem">
            <summary>Item in block list		<para>See <a href="https://corefork.telegram.org/type/PageListItem"/></para>		<para>Derived classes: <see cref="T:TL.PageListItemText"/>, <see cref="T:TL.PageListItemBlocks"/></para></summary>
        </member>
        <member name="T:TL.PageListItemText">
            <summary>List item		<para>See <a href="https://corefork.telegram.org/constructor/pageListItemText"/></para></summary>
        </member>
        <member name="F:TL.PageListItemText.text">
            <summary>Text</summary>
        </member>
        <member name="T:TL.PageListItemBlocks">
            <summary>List item		<para>See <a href="https://corefork.telegram.org/constructor/pageListItemBlocks"/></para></summary>
        </member>
        <member name="F:TL.PageListItemBlocks.blocks">
            <summary>Blocks</summary>
        </member>
        <member name="T:TL.PageListOrderedItem">
            <summary>Represents an <a href="https://instantview.telegram.org">instant view ordered list</a>		<para>See <a href="https://corefork.telegram.org/type/PageListOrderedItem"/></para>		<para>Derived classes: <see cref="T:TL.PageListOrderedItemText"/>, <see cref="T:TL.PageListOrderedItemBlocks"/></para></summary>
        </member>
        <member name="F:TL.PageListOrderedItem.num">
            <summary>Number of element within ordered list</summary>
        </member>
        <member name="T:TL.PageListOrderedItemText">
            <summary>Ordered list of text items		<para>See <a href="https://corefork.telegram.org/constructor/pageListOrderedItemText"/></para></summary>
        </member>
        <member name="F:TL.PageListOrderedItemText.text">
            <summary>Text</summary>
        </member>
        <member name="T:TL.PageListOrderedItemBlocks">
            <summary>Ordered list of <a href="https://instantview.telegram.org">IV</a> blocks		<para>See <a href="https://corefork.telegram.org/constructor/pageListOrderedItemBlocks"/></para></summary>
        </member>
        <member name="F:TL.PageListOrderedItemBlocks.blocks">
            <summary>Item contents</summary>
        </member>
        <member name="T:TL.PageRelatedArticle">
            <summary>Related article		<para>See <a href="https://corefork.telegram.org/constructor/pageRelatedArticle"/></para></summary>
        </member>
        <member name="F:TL.PageRelatedArticle.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.PageRelatedArticle.url">
            <summary>URL of article</summary>
        </member>
        <member name="F:TL.PageRelatedArticle.webpage_id">
            <summary>Webpage ID of generated IV preview</summary>
        </member>
        <member name="F:TL.PageRelatedArticle.title">
            <summary>Title</summary>
        </member>
        <member name="F:TL.PageRelatedArticle.description">
            <summary>Description</summary>
        </member>
        <member name="F:TL.PageRelatedArticle.photo_id">
            <summary>ID of preview photo</summary>
        </member>
        <member name="F:TL.PageRelatedArticle.author">
            <summary>Author name</summary>
        </member>
        <member name="F:TL.PageRelatedArticle.published_date">
            <summary>Date of publication</summary>
        </member>
        <member name="F:TL.PageRelatedArticle.Flags.has_title">
            <summary>Field <see cref="F:TL.PageRelatedArticle.title"/> has a value</summary>
        </member>
        <member name="F:TL.PageRelatedArticle.Flags.has_description">
            <summary>Field <see cref="F:TL.PageRelatedArticle.description"/> has a value</summary>
        </member>
        <member name="F:TL.PageRelatedArticle.Flags.has_photo_id">
            <summary>Field <see cref="F:TL.PageRelatedArticle.photo_id"/> has a value</summary>
        </member>
        <member name="F:TL.PageRelatedArticle.Flags.has_author">
            <summary>Field <see cref="F:TL.PageRelatedArticle.author"/> has a value</summary>
        </member>
        <member name="F:TL.PageRelatedArticle.Flags.has_published_date">
            <summary>Field <see cref="F:TL.PageRelatedArticle.published_date"/> has a value</summary>
        </member>
        <member name="T:TL.Page">
            <summary><a href="https://instantview.telegram.org">Instant view</a> page		<para>See <a href="https://corefork.telegram.org/constructor/page"/></para></summary>
        </member>
        <member name="F:TL.Page.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Page.url">
            <summary>Original page HTTP URL</summary>
        </member>
        <member name="F:TL.Page.blocks">
            <summary>Page elements (like with HTML elements, only as TL constructors)</summary>
        </member>
        <member name="F:TL.Page.photos">
            <summary>Photos in page</summary>
        </member>
        <member name="F:TL.Page.documents">
            <summary>Media in page</summary>
        </member>
        <member name="F:TL.Page.views">
            <summary>View count</summary>
        </member>
        <member name="F:TL.Page.Flags.part">
            <summary>Indicates that not full page preview is available to the client and it will need to fetch full Instant View from the server using <see cref="M:TL.SchemaExtensions.Messages_GetWebPagePreview(WTelegram.Client,System.String,TL.MessageEntity[])">Messages_GetWebPagePreview</see>.</summary>
        </member>
        <member name="F:TL.Page.Flags.rtl">
            <summary>Whether the page contains RTL text</summary>
        </member>
        <member name="F:TL.Page.Flags.v2">
            <summary>Whether this is an <a href="https://instantview.telegram.org/docs#what-39s-new-in-2-0">IV v2</a> page</summary>
        </member>
        <member name="F:TL.Page.Flags.has_views">
            <summary>Field <see cref="F:TL.Page.views"/> has a value</summary>
        </member>
        <member name="T:TL.Help_SupportName">
            <summary>Localized name for telegram support		<para>See <a href="https://corefork.telegram.org/constructor/help.supportName"/></para></summary>
        </member>
        <member name="F:TL.Help_SupportName.name">
            <summary>Localized name</summary>
        </member>
        <member name="T:TL.Help_UserInfo">
            <summary>Internal use		<para>See <a href="https://corefork.telegram.org/constructor/help.userInfo"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/help.userInfoEmpty">help.userInfoEmpty</a></remarks>
        </member>
        <member name="F:TL.Help_UserInfo.message">
            <summary>Info</summary>
        </member>
        <member name="F:TL.Help_UserInfo.entities">
            <summary><a href="https://corefork.telegram.org/api/entities">Message entities for styled text</a></summary>
        </member>
        <member name="F:TL.Help_UserInfo.author">
            <summary>Author</summary>
        </member>
        <member name="F:TL.Help_UserInfo.date">
            <summary>Date</summary>
        </member>
        <member name="T:TL.PollAnswer">
            <summary>A possible answer of a poll		<para>See <a href="https://corefork.telegram.org/constructor/pollAnswer"/></para></summary>
        </member>
        <member name="F:TL.PollAnswer.text">
            <summary>Textual representation of the answer</summary>
        </member>
        <member name="F:TL.PollAnswer.option">
            <summary>The param that has to be passed to <see cref="M:TL.SchemaExtensions.Messages_SendVote(WTelegram.Client,TL.InputPeer,System.Int32,System.Byte[][])">Messages_SendVote</see>.</summary>
        </member>
        <member name="T:TL.Poll">
            <summary>Poll		<para>See <a href="https://corefork.telegram.org/constructor/poll"/></para></summary>
        </member>
        <member name="F:TL.Poll.id">
            <summary>ID of the poll</summary>
        </member>
        <member name="F:TL.Poll.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Poll.question">
            <summary>The question of the poll</summary>
        </member>
        <member name="F:TL.Poll.answers">
            <summary>The possible answers, vote using <see cref="M:TL.SchemaExtensions.Messages_SendVote(WTelegram.Client,TL.InputPeer,System.Int32,System.Byte[][])">Messages_SendVote</see>.</summary>
        </member>
        <member name="F:TL.Poll.close_period">
            <summary>Amount of time in seconds the poll will be active after creation, 5-600. Can't be used together with close_date.</summary>
        </member>
        <member name="F:TL.Poll.close_date">
            <summary>Point in time (Unix timestamp) when the poll will be automatically closed. Must be at least 5 and no more than 600 seconds in the future; can't be used together with close_period.</summary>
        </member>
        <member name="F:TL.Poll.Flags.closed">
            <summary>Whether the poll is closed and doesn't accept any more answers</summary>
        </member>
        <member name="F:TL.Poll.Flags.public_voters">
            <summary>Whether cast votes are publicly visible to all users (non-anonymous poll)</summary>
        </member>
        <member name="F:TL.Poll.Flags.multiple_choice">
            <summary>Whether multiple options can be chosen as answer</summary>
        </member>
        <member name="F:TL.Poll.Flags.quiz">
            <summary>Whether this is a quiz (with wrong and correct answers, results shown in the return type)</summary>
        </member>
        <member name="F:TL.Poll.Flags.has_close_period">
            <summary>Field <see cref="F:TL.Poll.close_period"/> has a value</summary>
        </member>
        <member name="F:TL.Poll.Flags.has_close_date">
            <summary>Field <see cref="F:TL.Poll.close_date"/> has a value</summary>
        </member>
        <member name="T:TL.PollAnswerVoters">
            <summary>A poll answer, and how users voted on it		<para>See <a href="https://corefork.telegram.org/constructor/pollAnswerVoters"/></para></summary>
        </member>
        <member name="F:TL.PollAnswerVoters.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.PollAnswerVoters.option">
            <summary>The param that has to be passed to <see cref="M:TL.SchemaExtensions.Messages_SendVote(WTelegram.Client,TL.InputPeer,System.Int32,System.Byte[][])">Messages_SendVote</see>.</summary>
        </member>
        <member name="F:TL.PollAnswerVoters.voters">
            <summary>How many users voted for this option</summary>
        </member>
        <member name="F:TL.PollAnswerVoters.Flags.chosen">
            <summary>Whether we have chosen this answer</summary>
        </member>
        <member name="F:TL.PollAnswerVoters.Flags.correct">
            <summary>For quizzes, whether the option we have chosen is correct</summary>
        </member>
        <member name="T:TL.PollResults">
            <summary>Results of poll		<para>See <a href="https://corefork.telegram.org/constructor/pollResults"/></para></summary>
        </member>
        <member name="F:TL.PollResults.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.PollResults.results">
            <summary>Poll results</summary>
        </member>
        <member name="F:TL.PollResults.total_voters">
            <summary>Total number of people that voted in the poll</summary>
        </member>
        <member name="F:TL.PollResults.recent_voters">
            <summary>IDs of the last users that recently voted in the poll</summary>
        </member>
        <member name="F:TL.PollResults.solution">
            <summary>Explanation of quiz solution</summary>
        </member>
        <member name="F:TL.PollResults.solution_entities">
            <summary><a href="https://corefork.telegram.org/api/entities">Message entities for styled text in quiz solution</a></summary>
        </member>
        <member name="F:TL.PollResults.Flags.min">
            <summary>Similar to <a href="https://corefork.telegram.org/api/min">min</a> objects, used for poll constructors that are the same for all users so they don't have the option chosen by the current user (you can use <see cref="M:TL.SchemaExtensions.Messages_GetPollResults(WTelegram.Client,TL.InputPeer,System.Int32)">Messages_GetPollResults</see> to get the full poll results).</summary>
        </member>
        <member name="F:TL.PollResults.Flags.has_results">
            <summary>Field <see cref="F:TL.PollResults.results"/> has a value</summary>
        </member>
        <member name="F:TL.PollResults.Flags.has_total_voters">
            <summary>Field <see cref="F:TL.PollResults.total_voters"/> has a value</summary>
        </member>
        <member name="F:TL.PollResults.Flags.has_recent_voters">
            <summary>Field <see cref="F:TL.PollResults.recent_voters"/> has a value</summary>
        </member>
        <member name="F:TL.PollResults.Flags.has_solution">
            <summary>Fields <see cref="F:TL.PollResults.solution"/> and <see cref="F:TL.PollResults.solution_entities"/> have a value</summary>
        </member>
        <member name="T:TL.ChatOnlines">
            <summary>Number of online users in a chat		<para>See <a href="https://corefork.telegram.org/constructor/chatOnlines"/></para></summary>
        </member>
        <member name="F:TL.ChatOnlines.onlines">
            <summary>Number of online users</summary>
        </member>
        <member name="T:TL.StatsURL">
            <summary>URL with chat statistics		<para>See <a href="https://corefork.telegram.org/constructor/statsURL"/></para></summary>
        </member>
        <member name="F:TL.StatsURL.url">
            <summary>Chat statistics</summary>
        </member>
        <member name="T:TL.ChatAdminRights">
            <summary>Represents the rights of an admin in a <a href="https://corefork.telegram.org/api/channel">channel/supergroup</a>.		<para>See <a href="https://corefork.telegram.org/constructor/chatAdminRights"/></para></summary>
        </member>
        <member name="F:TL.ChatAdminRights.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.ChatAdminRights.Flags.change_info">
            <summary>If set, allows the admin to modify the description of the <a href="https://corefork.telegram.org/api/channel">channel/supergroup</a></summary>
        </member>
        <member name="F:TL.ChatAdminRights.Flags.post_messages">
            <summary>If set, allows the admin to post messages in the <a href="https://corefork.telegram.org/api/channel">channel</a></summary>
        </member>
        <member name="F:TL.ChatAdminRights.Flags.edit_messages">
            <summary>If set, allows the admin to also edit messages from other admins in the <a href="https://corefork.telegram.org/api/channel">channel</a></summary>
        </member>
        <member name="F:TL.ChatAdminRights.Flags.delete_messages">
            <summary>If set, allows the admin to also delete messages from other admins in the <a href="https://corefork.telegram.org/api/channel">channel</a></summary>
        </member>
        <member name="F:TL.ChatAdminRights.Flags.ban_users">
            <summary>If set, allows the admin to ban users from the <a href="https://corefork.telegram.org/api/channel">channel/supergroup</a></summary>
        </member>
        <member name="F:TL.ChatAdminRights.Flags.invite_users">
            <summary>If set, allows the admin to invite users in the <a href="https://corefork.telegram.org/api/channel">channel/supergroup</a></summary>
        </member>
        <member name="F:TL.ChatAdminRights.Flags.pin_messages">
            <summary>If set, allows the admin to pin messages in the <a href="https://corefork.telegram.org/api/channel">channel/supergroup</a></summary>
        </member>
        <member name="F:TL.ChatAdminRights.Flags.add_admins">
            <summary>If set, allows the admin to add other admins with the same (or more limited) permissions in the <a href="https://corefork.telegram.org/api/channel">channel/supergroup</a></summary>
        </member>
        <member name="F:TL.ChatAdminRights.Flags.anonymous">
            <summary>Whether this admin is anonymous</summary>
        </member>
        <member name="F:TL.ChatAdminRights.Flags.manage_call">
            <summary>If set, allows the admin to change group call/livestream settings</summary>
        </member>
        <member name="F:TL.ChatAdminRights.Flags.other">
            <summary>Set this flag if none of the other flags are set, but you still want the user to be an admin: if this or any of the other flags are set, the admin can get the chat <a href="https://corefork.telegram.org/api/recent-actions">admin log</a>, get <a href="https://corefork.telegram.org/api/stats">chat statistics</a>, get <a href="https://corefork.telegram.org/api/stats">message statistics in channels</a>, get channel members, see anonymous administrators in supergroups and ignore slow mode.</summary>
        </member>
        <member name="F:TL.ChatAdminRights.Flags.manage_topics">
            <summary>If set, allows the admin to create, delete or modify <a href="https://corefork.telegram.org/api/forum#forum-topics">forum topics »</a>.</summary>
        </member>
        <member name="F:TL.ChatAdminRights.Flags.post_stories">
            <summary>If set, allows the admin to post <a href="https://corefork.telegram.org/api/stories">stories</a> as the <a href="https://corefork.telegram.org/api/channel">channel</a>.</summary>
        </member>
        <member name="F:TL.ChatAdminRights.Flags.edit_stories">
            <summary>If set, allows the admin to edit <a href="https://corefork.telegram.org/api/stories">stories</a> posted by the other admins of the <a href="https://corefork.telegram.org/api/channel">channel</a>.</summary>
        </member>
        <member name="F:TL.ChatAdminRights.Flags.delete_stories">
            <summary>If set, allows the admin to delete <a href="https://corefork.telegram.org/api/stories">stories</a> posted by the other admins of the <a href="https://corefork.telegram.org/api/channel">channel</a>.</summary>
        </member>
        <member name="T:TL.ChatBannedRights">
            <summary>Represents the rights of a normal user in a <a href="https://corefork.telegram.org/api/channel">supergroup/channel/chat</a>. In this case, the flags are inverted: if set, a flag <strong>does not allow</strong> a user to do X.		<para>See <a href="https://corefork.telegram.org/constructor/chatBannedRights"/></para></summary>
        </member>
        <member name="F:TL.ChatBannedRights.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.ChatBannedRights.until_date">
            <summary>Validity of said permissions (it is considered forever any value less then 30 seconds or more then 366 days).</summary>
        </member>
        <member name="F:TL.ChatBannedRights.Flags.view_messages">
            <summary>If set, does not allow a user to view messages in a <a href="https://corefork.telegram.org/api/channel">supergroup/channel/chat</a></summary>
        </member>
        <member name="F:TL.ChatBannedRights.Flags.send_messages">
            <summary>If set, does not allow a user to send messages in a <a href="https://corefork.telegram.org/api/channel">supergroup/chat</a></summary>
        </member>
        <member name="F:TL.ChatBannedRights.Flags.send_media">
            <summary>If set, does not allow a user to send any media in a <a href="https://corefork.telegram.org/api/channel">supergroup/chat</a></summary>
        </member>
        <member name="F:TL.ChatBannedRights.Flags.send_stickers">
            <summary>If set, does not allow a user to send stickers in a <a href="https://corefork.telegram.org/api/channel">supergroup/chat</a></summary>
        </member>
        <member name="F:TL.ChatBannedRights.Flags.send_gifs">
            <summary>If set, does not allow a user to send gifs in a <a href="https://corefork.telegram.org/api/channel">supergroup/chat</a></summary>
        </member>
        <member name="F:TL.ChatBannedRights.Flags.send_games">
            <summary>If set, does not allow a user to send games in a <a href="https://corefork.telegram.org/api/channel">supergroup/chat</a></summary>
        </member>
        <member name="F:TL.ChatBannedRights.Flags.send_inline">
            <summary>If set, does not allow a user to use inline bots in a <a href="https://corefork.telegram.org/api/channel">supergroup/chat</a>.</summary>
        </member>
        <member name="F:TL.ChatBannedRights.Flags.embed_links">
            <summary>If set, does not allow a user to embed links in the messages of a <a href="https://corefork.telegram.org/api/channel">supergroup/chat</a></summary>
        </member>
        <member name="F:TL.ChatBannedRights.Flags.send_polls">
            <summary>If set, does not allow a user to send polls in a <a href="https://corefork.telegram.org/api/channel">supergroup/chat</a></summary>
        </member>
        <member name="F:TL.ChatBannedRights.Flags.change_info">
            <summary>If set, does not allow any user to change the description of a <a href="https://corefork.telegram.org/api/channel">supergroup/chat</a></summary>
        </member>
        <member name="F:TL.ChatBannedRights.Flags.invite_users">
            <summary>If set, does not allow any user to invite users in a <a href="https://corefork.telegram.org/api/channel">supergroup/chat</a></summary>
        </member>
        <member name="F:TL.ChatBannedRights.Flags.pin_messages">
            <summary>If set, does not allow any user to pin messages in a <a href="https://corefork.telegram.org/api/channel">supergroup/chat</a></summary>
        </member>
        <member name="F:TL.ChatBannedRights.Flags.manage_topics">
            <summary>If set, does not allow any user to create, delete or modify <a href="https://corefork.telegram.org/api/forum#forum-topics">forum topics »</a>.</summary>
        </member>
        <member name="F:TL.ChatBannedRights.Flags.send_photos">
            <summary>If set, does not allow a user to send photos in a <a href="https://corefork.telegram.org/api/channel">supergroup/chat</a>.</summary>
        </member>
        <member name="F:TL.ChatBannedRights.Flags.send_videos">
            <summary>If set, does not allow a user to send videos in a <a href="https://corefork.telegram.org/api/channel">supergroup/chat</a>.</summary>
        </member>
        <member name="F:TL.ChatBannedRights.Flags.send_roundvideos">
            <summary>If set, does not allow a user to send round videos in a <a href="https://corefork.telegram.org/api/channel">supergroup/chat</a>.</summary>
        </member>
        <member name="F:TL.ChatBannedRights.Flags.send_audios">
            <summary>If set, does not allow a user to send audio files in a <a href="https://corefork.telegram.org/api/channel">supergroup/chat</a>.</summary>
        </member>
        <member name="F:TL.ChatBannedRights.Flags.send_voices">
            <summary>If set, does not allow a user to send voice messages in a <a href="https://corefork.telegram.org/api/channel">supergroup/chat</a>.</summary>
        </member>
        <member name="F:TL.ChatBannedRights.Flags.send_docs">
            <summary>If set, does not allow a user to send documents in a <a href="https://corefork.telegram.org/api/channel">supergroup/chat</a>.</summary>
        </member>
        <member name="F:TL.ChatBannedRights.Flags.send_plain">
            <summary>If set, does not allow a user to send text messages in a <a href="https://corefork.telegram.org/api/channel">supergroup/chat</a>.</summary>
        </member>
        <member name="T:TL.InputWallPaperBase">
            <summary><a href="https://corefork.telegram.org/api/wallpapers">Wallpaper</a>		<para>See <a href="https://corefork.telegram.org/type/InputWallPaper"/></para>		<para>Derived classes: <see cref="T:TL.InputWallPaper"/>, <see cref="T:TL.InputWallPaperSlug"/>, <see cref="T:TL.InputWallPaperNoFile"/></para></summary>
        </member>
        <member name="T:TL.InputWallPaper">
            <summary><a href="https://corefork.telegram.org/api/wallpapers">Wallpaper</a>		<para>See <a href="https://corefork.telegram.org/constructor/inputWallPaper"/></para></summary>
        </member>
        <member name="F:TL.InputWallPaper.id">
            <summary><a href="https://corefork.telegram.org/api/wallpapers">Wallpaper</a> ID</summary>
        </member>
        <member name="F:TL.InputWallPaper.access_hash">
            <summary>⚠ <b>REQUIRED FIELD</b>. See <see href="https://wiz0u.github.io/WTelegramClient/FAQ#access-hash">how to obtain it</see><br/>Access hash</summary>
        </member>
        <member name="T:TL.InputWallPaperSlug">
            <summary><a href="https://corefork.telegram.org/api/wallpapers">Wallpaper</a> by slug (a unique ID, obtained from a <a href="https://corefork.telegram.org/api/links#wallpaper-links">wallpaper link »</a>)		<para>See <a href="https://corefork.telegram.org/constructor/inputWallPaperSlug"/></para></summary>
        </member>
        <member name="F:TL.InputWallPaperSlug.slug">
            <summary>Unique wallpaper ID</summary>
        </member>
        <member name="T:TL.InputWallPaperNoFile">
            <summary><a href="https://corefork.telegram.org/api/wallpapers">Wallpaper</a> with no file access hash, used for example when deleting (<c>unsave=true</c>) wallpapers using <see cref="M:TL.SchemaExtensions.Account_SaveWallPaper(WTelegram.Client,TL.InputWallPaperBase,System.Boolean,TL.WallPaperSettings)">Account_SaveWallPaper</see>, specifying just the wallpaper ID.		<para>See <a href="https://corefork.telegram.org/constructor/inputWallPaperNoFile"/></para></summary>
        </member>
        <member name="F:TL.InputWallPaperNoFile.id">
            <summary>Wallpaper ID</summary>
        </member>
        <member name="T:TL.Account_WallPapers">
            <summary>Installed <a href="https://corefork.telegram.org/api/wallpapers">wallpapers</a>		<para>See <a href="https://corefork.telegram.org/constructor/account.wallPapers"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/account.wallPapersNotModified">account.wallPapersNotModified</a></remarks>
        </member>
        <member name="F:TL.Account_WallPapers.hash">
            <summary><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></summary>
        </member>
        <member name="F:TL.Account_WallPapers.wallpapers">
            <summary><a href="https://corefork.telegram.org/api/wallpapers">Wallpapers</a></summary>
        </member>
        <member name="T:TL.CodeSettings">
            <summary>Settings used by telegram servers for sending the confirm code.		<para>See <a href="https://corefork.telegram.org/constructor/codeSettings"/></para></summary>
        </member>
        <member name="F:TL.CodeSettings.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.CodeSettings.logout_tokens">
            <summary>Previously stored future auth tokens, see <a href="https://corefork.telegram.org/api/auth#future-auth-tokens">the documentation for more info »</a></summary>
        </member>
        <member name="F:TL.CodeSettings.token">
            <summary>Used only by official iOS apps for Firebase auth: device token for apple push.</summary>
        </member>
        <member name="F:TL.CodeSettings.app_sandbox">
            <summary>Used only by official iOS apps for firebase auth: whether a sandbox-certificate will be used during transmission of the push notification.</summary>
        </member>
        <member name="F:TL.CodeSettings.Flags.allow_flashcall">
            <summary>Whether to allow phone verification via <a href="https://corefork.telegram.org/api/auth">phone calls</a>.</summary>
        </member>
        <member name="F:TL.CodeSettings.Flags.current_number">
            <summary>Pass true if the phone number is used on the current device. Ignored if allow_flashcall is not set.</summary>
        </member>
        <member name="F:TL.CodeSettings.Flags.allow_app_hash">
            <summary>If a token that will be included in eventually sent SMSs is required: required in newer versions of android, to use the <a href="https://developers.google.com/identity/sms-retriever/overview">android SMS receiver APIs</a></summary>
        </member>
        <member name="F:TL.CodeSettings.Flags.allow_missed_call">
            <summary>Whether this device supports receiving the code using the <see cref="F:TL.Auth_CodeType.MissedCall"/> method</summary>
        </member>
        <member name="F:TL.CodeSettings.Flags.has_logout_tokens">
            <summary>Field <see cref="F:TL.CodeSettings.logout_tokens"/> has a value</summary>
        </member>
        <member name="F:TL.CodeSettings.Flags.allow_firebase">
            <summary>Whether Firebase auth is supported</summary>
        </member>
        <member name="F:TL.CodeSettings.Flags.has_token">
            <summary>Fields <see cref="F:TL.CodeSettings.token"/> and <see cref="F:TL.CodeSettings.app_sandbox"/> have a value</summary>
        </member>
        <member name="T:TL.WallPaperSettings">
            <summary><a href="https://corefork.telegram.org/api/wallpapers">Wallpaper</a> rendering information.		<para>See <a href="https://corefork.telegram.org/constructor/wallPaperSettings"/></para></summary>
        </member>
        <member name="F:TL.WallPaperSettings.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.WallPaperSettings.background_color">
            <summary>Used for <a href="https://corefork.telegram.org/api/wallpapers#solid-fill">solid »</a>, <a href="https://corefork.telegram.org/api/wallpapers#gradient-fill">gradient »</a> and <a href="https://corefork.telegram.org/api/wallpapers#freeform-gradient-fill">freeform gradient »</a> fills.</summary>
        </member>
        <member name="F:TL.WallPaperSettings.second_background_color">
            <summary>Used for <a href="https://corefork.telegram.org/api/wallpapers#gradient-fill">gradient »</a> and <a href="https://corefork.telegram.org/api/wallpapers#freeform-gradient-fill">freeform gradient »</a> fills.</summary>
        </member>
        <member name="F:TL.WallPaperSettings.third_background_color">
            <summary>Used for <a href="https://corefork.telegram.org/api/wallpapers#freeform-gradient-fill">freeform gradient »</a> fills.</summary>
        </member>
        <member name="F:TL.WallPaperSettings.fourth_background_color">
            <summary>Used for <a href="https://corefork.telegram.org/api/wallpapers#freeform-gradient-fill">freeform gradient »</a> fills.</summary>
        </member>
        <member name="F:TL.WallPaperSettings.intensity">
            <summary>Used for <a href="https://corefork.telegram.org/api/wallpapers#pattern-wallpapers">pattern wallpapers »</a>.</summary>
        </member>
        <member name="F:TL.WallPaperSettings.rotation">
            <summary>Clockwise rotation angle of the gradient, in degrees; 0-359. Should be always divisible by 45.</summary>
        </member>
        <member name="F:TL.WallPaperSettings.emoticon">
            <summary>If set, this wallpaper can be used as a channel wallpaper and is represented by the specified UTF-8 emoji.</summary>
        </member>
        <member name="F:TL.WallPaperSettings.Flags.has_background_color">
            <summary>Field <see cref="F:TL.WallPaperSettings.background_color"/> has a value</summary>
        </member>
        <member name="F:TL.WallPaperSettings.Flags.blur">
            <summary>For <a href="https://corefork.telegram.org/api/wallpapers#image-wallpapers">image wallpapers »</a>: if set, the JPEG must be downscaled to fit in 450x450 square and then box-blurred with radius 12.</summary>
        </member>
        <member name="F:TL.WallPaperSettings.Flags.motion">
            <summary>If set, the background needs to be slightly moved when the device is rotated.</summary>
        </member>
        <member name="F:TL.WallPaperSettings.Flags.has_intensity">
            <summary>Field <see cref="F:TL.WallPaperSettings.intensity"/> has a value</summary>
        </member>
        <member name="F:TL.WallPaperSettings.Flags.has_second_background_color">
            <summary>Fields <see cref="F:TL.WallPaperSettings.second_background_color"/> and <see cref="F:TL.WallPaperSettings.rotation"/> have a value</summary>
        </member>
        <member name="F:TL.WallPaperSettings.Flags.has_third_background_color">
            <summary>Field <see cref="F:TL.WallPaperSettings.third_background_color"/> has a value</summary>
        </member>
        <member name="F:TL.WallPaperSettings.Flags.has_fourth_background_color">
            <summary>Field <see cref="F:TL.WallPaperSettings.fourth_background_color"/> has a value</summary>
        </member>
        <member name="F:TL.WallPaperSettings.Flags.has_emoticon">
            <summary>Field <see cref="F:TL.WallPaperSettings.emoticon"/> has a value</summary>
        </member>
        <member name="T:TL.AutoDownloadSettings">
            <summary>Autodownload settings		<para>See <a href="https://corefork.telegram.org/constructor/autoDownloadSettings"/></para></summary>
        </member>
        <member name="F:TL.AutoDownloadSettings.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.AutoDownloadSettings.photo_size_max">
            <summary>Maximum size of photos to preload</summary>
        </member>
        <member name="F:TL.AutoDownloadSettings.video_size_max">
            <summary>Maximum size of videos to preload</summary>
        </member>
        <member name="F:TL.AutoDownloadSettings.file_size_max">
            <summary>Maximum size of other files to preload</summary>
        </member>
        <member name="F:TL.AutoDownloadSettings.video_upload_maxbitrate">
            <summary>Maximum suggested bitrate for <strong>uploading</strong> videos</summary>
        </member>
        <member name="F:TL.AutoDownloadSettings.small_queue_active_operations_max">
            <summary>A limit, specifying the maximum number of files that should be downloaded in parallel from the same DC, for files smaller than 20MB.</summary>
        </member>
        <member name="F:TL.AutoDownloadSettings.large_queue_active_operations_max">
            <summary>A limit, specifying the maximum number of files that should be downloaded in parallel from the same DC, for files bigger than 20MB.</summary>
        </member>
        <member name="F:TL.AutoDownloadSettings.Flags.disabled">
            <summary>Disable automatic media downloads?</summary>
        </member>
        <member name="F:TL.AutoDownloadSettings.Flags.video_preload_large">
            <summary>Whether to preload the first seconds of videos larger than the specified limit</summary>
        </member>
        <member name="F:TL.AutoDownloadSettings.Flags.audio_preload_next">
            <summary>Whether to preload the next audio track when you're listening to music</summary>
        </member>
        <member name="F:TL.AutoDownloadSettings.Flags.phonecalls_less_data">
            <summary>Whether to enable data saving mode in phone calls</summary>
        </member>
        <member name="F:TL.AutoDownloadSettings.Flags.stories_preload">
            <summary>Whether to preload <a href="https://corefork.telegram.org/api/stories">stories</a>; in particular, the first <see cref="T:TL.DocumentAttributeVideo"/>.<c>preload_prefix_size</c> bytes of story videos should be preloaded.</summary>
        </member>
        <member name="T:TL.Account_AutoDownloadSettings">
            <summary>Media autodownload settings		<para>See <a href="https://corefork.telegram.org/constructor/account.autoDownloadSettings"/></para></summary>
        </member>
        <member name="F:TL.Account_AutoDownloadSettings.low">
            <summary>Low data usage preset</summary>
        </member>
        <member name="F:TL.Account_AutoDownloadSettings.medium">
            <summary>Medium data usage preset</summary>
        </member>
        <member name="F:TL.Account_AutoDownloadSettings.high">
            <summary>High data usage preset</summary>
        </member>
        <member name="T:TL.EmojiKeyword">
            <summary>Emoji keyword		<para>See <a href="https://corefork.telegram.org/constructor/emojiKeyword"/></para></summary>
        </member>
        <member name="F:TL.EmojiKeyword.keyword">
            <summary>Keyword</summary>
        </member>
        <member name="F:TL.EmojiKeyword.emoticons">
            <summary>Emojis associated to keyword</summary>
        </member>
        <member name="T:TL.EmojiKeywordDeleted">
            <summary>Deleted emoji keyword		<para>See <a href="https://corefork.telegram.org/constructor/emojiKeywordDeleted"/></para></summary>
        </member>
        <member name="T:TL.EmojiKeywordsDifference">
            <summary>Changes to emoji keywords		<para>See <a href="https://corefork.telegram.org/constructor/emojiKeywordsDifference"/></para></summary>
        </member>
        <member name="F:TL.EmojiKeywordsDifference.lang_code">
            <summary>Language code for keywords</summary>
        </member>
        <member name="F:TL.EmojiKeywordsDifference.from_version">
            <summary>Previous emoji keyword list version</summary>
        </member>
        <member name="F:TL.EmojiKeywordsDifference.version">
            <summary>Current version of emoji keyword list</summary>
        </member>
        <member name="F:TL.EmojiKeywordsDifference.keywords">
            <summary>Emojis associated to keywords</summary>
        </member>
        <member name="T:TL.EmojiURL">
            <summary>An HTTP URL which can be used to automatically log in into translation platform and suggest new emoji replacements. The URL will be valid for 30 seconds after generation		<para>See <a href="https://corefork.telegram.org/constructor/emojiURL"/></para></summary>
        </member>
        <member name="F:TL.EmojiURL.url">
            <summary>An HTTP URL which can be used to automatically log in into translation platform and suggest new emoji replacements. The URL will be valid for 30 seconds after generation</summary>
        </member>
        <member name="T:TL.EmojiLanguage">
            <summary>Emoji language		<para>See <a href="https://corefork.telegram.org/constructor/emojiLanguage"/></para></summary>
        </member>
        <member name="F:TL.EmojiLanguage.lang_code">
            <summary>Language code</summary>
        </member>
        <member name="T:TL.Folder">
            <summary>Folder		<para>See <a href="https://corefork.telegram.org/constructor/folder"/></para></summary>
        </member>
        <member name="F:TL.Folder.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Folder.id">
            <summary>Folder ID</summary>
        </member>
        <member name="F:TL.Folder.title">
            <summary>Folder title</summary>
        </member>
        <member name="F:TL.Folder.photo">
            <summary>Folder picture</summary>
        </member>
        <member name="F:TL.Folder.Flags.autofill_new_broadcasts">
            <summary>Automatically add new channels to this folder</summary>
        </member>
        <member name="F:TL.Folder.Flags.autofill_public_groups">
            <summary>Automatically add joined new public supergroups to this folder</summary>
        </member>
        <member name="F:TL.Folder.Flags.autofill_new_correspondents">
            <summary>Automatically add new private chats to this folder</summary>
        </member>
        <member name="F:TL.Folder.Flags.has_photo">
            <summary>Field <see cref="F:TL.Folder.photo"/> has a value</summary>
        </member>
        <member name="T:TL.InputFolderPeer">
            <summary>Peer in a folder		<para>See <a href="https://corefork.telegram.org/constructor/inputFolderPeer"/></para></summary>
        </member>
        <member name="F:TL.InputFolderPeer.peer">
            <summary>Peer</summary>
        </member>
        <member name="F:TL.InputFolderPeer.folder_id">
            <summary><a href="https://corefork.telegram.org/api/folders#peer-folders">Peer folder ID, for more info click here</a></summary>
        </member>
        <member name="T:TL.FolderPeer">
            <summary>Peer in a folder		<para>See <a href="https://corefork.telegram.org/constructor/folderPeer"/></para></summary>
        </member>
        <member name="F:TL.FolderPeer.peer">
            <summary>Folder peer info</summary>
        </member>
        <member name="F:TL.FolderPeer.folder_id">
            <summary><a href="https://corefork.telegram.org/api/folders#peer-folders">Peer folder ID, for more info click here</a></summary>
        </member>
        <member name="T:TL.Messages_SearchCounter">
            <summary>Indicates how many results would be found by a <see cref="M:TL.SchemaExtensions.Messages_Search(WTelegram.Client,TL.InputPeer,System.String,TL.MessagesFilter,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int64,TL.InputPeer,System.Nullable{System.Int32},TL.InputPeer,TL.Reaction[])">Messages_Search</see> call with the same parameters		<para>See <a href="https://corefork.telegram.org/constructor/messages.searchCounter"/></para></summary>
        </member>
        <member name="F:TL.Messages_SearchCounter.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Messages_SearchCounter.filter">
            <summary>Provided message filter</summary>
        </member>
        <member name="F:TL.Messages_SearchCounter.count">
            <summary>Number of results that were found server-side</summary>
        </member>
        <member name="F:TL.Messages_SearchCounter.Flags.inexact">
            <summary>If set, the results may be inexact</summary>
        </member>
        <member name="T:TL.UrlAuthResult">
            <summary>URL authorization result		<para>See <a href="https://corefork.telegram.org/type/UrlAuthResult"/></para>		<para>Derived classes: <see cref="T:TL.UrlAuthResultRequest"/>, <see cref="T:TL.UrlAuthResultAccepted"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/urlAuthResultDefault">urlAuthResultDefault</a></remarks>
        </member>
        <member name="T:TL.UrlAuthResultRequest">
            <summary>Details about the authorization request, for more info <a href="https://corefork.telegram.org/api/url-authorization">click here »</a>		<para>See <a href="https://corefork.telegram.org/constructor/urlAuthResultRequest"/></para></summary>
        </member>
        <member name="F:TL.UrlAuthResultRequest.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.UrlAuthResultRequest.bot">
            <summary>Username of a bot, which will be used for user authorization. If not specified, the current bot's username will be assumed. The url's domain must be the same as the domain linked with the bot. See <a href="https://corefork.telegram.org/widgets/login#linking-your-domain-to-the-bot">Linking your domain to the bot</a> for more details.</summary>
        </member>
        <member name="F:TL.UrlAuthResultRequest.domain">
            <summary>The domain name of the website on which the user will log in.</summary>
        </member>
        <member name="F:TL.UrlAuthResultRequest.Flags.request_write_access">
            <summary>Whether the bot would like to send messages to the user</summary>
        </member>
        <member name="T:TL.UrlAuthResultAccepted">
            <summary>Details about an accepted authorization request, for more info <a href="https://corefork.telegram.org/api/url-authorization">click here »</a>		<para>See <a href="https://corefork.telegram.org/constructor/urlAuthResultAccepted"/></para></summary>
        </member>
        <member name="F:TL.UrlAuthResultAccepted.url">
            <summary>The URL name of the website on which the user has logged in.</summary>
        </member>
        <member name="T:TL.ChannelLocation">
            <summary>Geographical location of supergroup (geogroups)		<para>See <a href="https://corefork.telegram.org/constructor/channelLocation"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/channelLocationEmpty">channelLocationEmpty</a></remarks>
        </member>
        <member name="F:TL.ChannelLocation.geo_point">
            <summary>Geographical location of supergroup</summary>
        </member>
        <member name="F:TL.ChannelLocation.address">
            <summary>Textual description of the address</summary>
        </member>
        <member name="T:TL.PeerLocatedBase">
            <summary>Geolocated peer		<para>See <a href="https://corefork.telegram.org/type/PeerLocated"/></para>		<para>Derived classes: <see cref="T:TL.PeerLocated"/>, <see cref="T:TL.PeerSelfLocated"/></para></summary>
        </member>
        <member name="P:TL.PeerLocatedBase.Expires">
            <summary>Validity period of current data</summary>
        </member>
        <member name="T:TL.PeerLocated">
            <summary>Peer geolocated nearby		<para>See <a href="https://corefork.telegram.org/constructor/peerLocated"/></para></summary>
        </member>
        <member name="F:TL.PeerLocated.peer">
            <summary>Peer</summary>
        </member>
        <member name="F:TL.PeerLocated.expires">
            <summary>Validity period of current data</summary>
        </member>
        <member name="F:TL.PeerLocated.distance">
            <summary>Distance from the peer in meters</summary>
        </member>
        <member name="P:TL.PeerLocated.Expires">
            <summary>Validity period of current data</summary>
        </member>
        <member name="T:TL.PeerSelfLocated">
            <summary>Current peer		<para>See <a href="https://corefork.telegram.org/constructor/peerSelfLocated"/></para></summary>
        </member>
        <member name="F:TL.PeerSelfLocated.expires">
            <summary>Expiry of geolocation info for current peer</summary>
        </member>
        <member name="P:TL.PeerSelfLocated.Expires">
            <summary>Expiry of geolocation info for current peer</summary>
        </member>
        <member name="T:TL.RestrictionReason">
            <summary>Restriction reason.		<para>See <a href="https://corefork.telegram.org/constructor/restrictionReason"/></para></summary>
        </member>
        <member name="F:TL.RestrictionReason.platform">
            <summary>Platform identifier (ios, android, wp, all, etc.), can be concatenated with a dash as separator (<c>android-ios</c>, <c>ios-wp</c>, etc)</summary>
        </member>
        <member name="F:TL.RestrictionReason.reason">
            <summary>Restriction reason (<c>porno</c>, <c>terms</c>, etc.)</summary>
        </member>
        <member name="F:TL.RestrictionReason.text">
            <summary>Error message to be shown to the user</summary>
        </member>
        <member name="T:TL.InputThemeBase">
            <summary>Cloud theme		<para>See <a href="https://corefork.telegram.org/type/InputTheme"/></para>		<para>Derived classes: <see cref="T:TL.InputTheme"/>, <see cref="T:TL.InputThemeSlug"/></para></summary>
        </member>
        <member name="T:TL.InputTheme">
            <summary>Theme		<para>See <a href="https://corefork.telegram.org/constructor/inputTheme"/></para></summary>
        </member>
        <member name="F:TL.InputTheme.id">
            <summary>ID</summary>
        </member>
        <member name="F:TL.InputTheme.access_hash">
            <summary>⚠ <b>REQUIRED FIELD</b>. See <see href="https://wiz0u.github.io/WTelegramClient/FAQ#access-hash">how to obtain it</see><br/>Access hash</summary>
        </member>
        <member name="T:TL.InputThemeSlug">
            <summary>Theme by theme ID		<para>See <a href="https://corefork.telegram.org/constructor/inputThemeSlug"/></para></summary>
        </member>
        <member name="F:TL.InputThemeSlug.slug">
            <summary>Unique theme ID obtained from a <a href="https://corefork.telegram.org/api/links#theme-links">theme deep link »</a></summary>
        </member>
        <member name="T:TL.Theme">
            <summary>Theme		<para>See <a href="https://corefork.telegram.org/constructor/theme"/></para></summary>
        </member>
        <member name="F:TL.Theme.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Theme.id">
            <summary>Theme ID</summary>
        </member>
        <member name="F:TL.Theme.access_hash">
            <summary>Theme access hash</summary>
        </member>
        <member name="F:TL.Theme.slug">
            <summary>Unique theme ID</summary>
        </member>
        <member name="F:TL.Theme.title">
            <summary>Theme name</summary>
        </member>
        <member name="F:TL.Theme.document">
            <summary>Theme</summary>
        </member>
        <member name="F:TL.Theme.settings">
            <summary>Theme settings</summary>
        </member>
        <member name="F:TL.Theme.emoticon">
            <summary>Theme emoji</summary>
        </member>
        <member name="F:TL.Theme.installs_count">
            <summary>Installation count</summary>
        </member>
        <member name="F:TL.Theme.Flags.creator">
            <summary>Whether the current user is the creator of this theme</summary>
        </member>
        <member name="F:TL.Theme.Flags.default_">
            <summary>Whether this is the default theme</summary>
        </member>
        <member name="F:TL.Theme.Flags.has_document">
            <summary>Field <see cref="F:TL.Theme.document"/> has a value</summary>
        </member>
        <member name="F:TL.Theme.Flags.has_settings">
            <summary>Field <see cref="F:TL.Theme.settings"/> has a value</summary>
        </member>
        <member name="F:TL.Theme.Flags.has_installs_count">
            <summary>Field <see cref="F:TL.Theme.installs_count"/> has a value</summary>
        </member>
        <member name="F:TL.Theme.Flags.for_chat">
            <summary>Whether this theme is meant to be used as a <a href="https://telegram.org/blog/chat-themes-interactive-emoji-read-receipts">chat theme</a></summary>
        </member>
        <member name="F:TL.Theme.Flags.has_emoticon">
            <summary>Field <see cref="F:TL.Theme.emoticon"/> has a value</summary>
        </member>
        <member name="T:TL.Account_Themes">
            <summary>Installed themes		<para>See <a href="https://corefork.telegram.org/constructor/account.themes"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/account.themesNotModified">account.themesNotModified</a></remarks>
        </member>
        <member name="F:TL.Account_Themes.hash">
            <summary><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></summary>
        </member>
        <member name="F:TL.Account_Themes.themes">
            <summary>Themes</summary>
        </member>
        <member name="T:TL.Auth_LoginTokenBase">
            <summary>Login token (for QR code login)		<para>See <a href="https://corefork.telegram.org/type/auth.LoginToken"/></para>		<para>Derived classes: <see cref="T:TL.Auth_LoginToken"/>, <see cref="T:TL.Auth_LoginTokenMigrateTo"/>, <see cref="T:TL.Auth_LoginTokenSuccess"/></para></summary>
        </member>
        <member name="T:TL.Auth_LoginToken">
            <summary>Login token (for <a href="https://corefork.telegram.org/api/qr-login">QR code login</a>)		<para>See <a href="https://corefork.telegram.org/constructor/auth.loginToken"/></para></summary>
        </member>
        <member name="F:TL.Auth_LoginToken.expires">
            <summary>Expiration date of QR code</summary>
        </member>
        <member name="F:TL.Auth_LoginToken.token">
            <summary>Token to render in QR code</summary>
        </member>
        <member name="T:TL.Auth_LoginTokenMigrateTo">
            <summary>Repeat the query to the specified DC		<para>See <a href="https://corefork.telegram.org/constructor/auth.loginTokenMigrateTo"/></para></summary>
        </member>
        <member name="F:TL.Auth_LoginTokenMigrateTo.dc_id">
            <summary>DC ID</summary>
        </member>
        <member name="F:TL.Auth_LoginTokenMigrateTo.token">
            <summary>Token to use for login</summary>
        </member>
        <member name="T:TL.Auth_LoginTokenSuccess">
            <summary>Login via token (QR code) succeeded!		<para>See <a href="https://corefork.telegram.org/constructor/auth.loginTokenSuccess"/></para></summary>
        </member>
        <member name="F:TL.Auth_LoginTokenSuccess.authorization">
            <summary>Authorization info</summary>
        </member>
        <member name="T:TL.Account_ContentSettings">
            <summary>Sensitive content settings		<para>See <a href="https://corefork.telegram.org/constructor/account.contentSettings"/></para></summary>
        </member>
        <member name="F:TL.Account_ContentSettings.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Account_ContentSettings.Flags.sensitive_enabled">
            <summary>Whether viewing of sensitive (NSFW) content is enabled</summary>
        </member>
        <member name="F:TL.Account_ContentSettings.Flags.sensitive_can_change">
            <summary>Whether the current client can change the sensitive content settings to view NSFW content</summary>
        </member>
        <member name="T:TL.Messages_InactiveChats">
            <summary>Inactive chat list		<para>See <a href="https://corefork.telegram.org/constructor/messages.inactiveChats"/></para></summary>
        </member>
        <member name="F:TL.Messages_InactiveChats.dates">
            <summary>When was the chat last active</summary>
        </member>
        <member name="F:TL.Messages_InactiveChats.chats">
            <summary>Chat list</summary>
        </member>
        <member name="F:TL.Messages_InactiveChats.users">
            <summary>Users mentioned in the chat list</summary>
        </member>
        <member name="M:TL.Messages_InactiveChats.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.BaseTheme">
            <summary>Basic theme settings		<para>See <a href="https://corefork.telegram.org/type/BaseTheme"/></para></summary>
        </member>
        <member name="F:TL.BaseTheme.Classic">
            <summary>Classic theme</summary>
        </member>
        <member name="F:TL.BaseTheme.Day">
            <summary>Day theme</summary>
        </member>
        <member name="F:TL.BaseTheme.Night">
            <summary>Night theme</summary>
        </member>
        <member name="F:TL.BaseTheme.Tinted">
            <summary>Tinted theme</summary>
        </member>
        <member name="F:TL.BaseTheme.Arctic">
            <summary>Arctic theme</summary>
        </member>
        <member name="T:TL.InputThemeSettings">
            <summary>Theme settings		<para>See <a href="https://corefork.telegram.org/constructor/inputThemeSettings"/></para></summary>
        </member>
        <member name="F:TL.InputThemeSettings.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.InputThemeSettings.base_theme">
            <summary>Default theme on which this theme is based</summary>
        </member>
        <member name="F:TL.InputThemeSettings.accent_color">
            <summary>Accent color, ARGB format</summary>
        </member>
        <member name="F:TL.InputThemeSettings.outbox_accent_color">
            <summary>Accent color of outgoing messages in ARGB format</summary>
        </member>
        <member name="F:TL.InputThemeSettings.message_colors">
            <summary>The fill to be used as a background for outgoing messages, in RGB24 format. <br/>If just one or two equal colors are provided, describes a solid fill of a background. <br/>If two different colors are provided, describes the top and bottom colors of a 0-degree gradient.<br/>If three or four colors are provided, describes a freeform gradient fill of a background.</summary>
        </member>
        <member name="F:TL.InputThemeSettings.wallpaper">
            <summary><see cref="T:TL.InputWallPaper"/> or <see cref="T:TL.InputWallPaper">inputWallPaperSlug</see> when passing wallpaper files for <a href="https://corefork.telegram.org/api/wallpapers#image-wallpapers">image</a> or <a href="https://corefork.telegram.org/api/wallpapers#pattern-wallpapers">pattern</a> wallpapers, <see cref="T:TL.InputWallPaperNoFile"/> with <c>id=0</c> otherwise.</summary>
        </member>
        <member name="F:TL.InputThemeSettings.wallpaper_settings">
            <summary><a href="https://corefork.telegram.org/api/wallpapers">Wallpaper</a> settings.</summary>
        </member>
        <member name="F:TL.InputThemeSettings.Flags.has_message_colors">
            <summary>Field <see cref="F:TL.InputThemeSettings.message_colors"/> has a value</summary>
        </member>
        <member name="F:TL.InputThemeSettings.Flags.has_wallpaper">
            <summary>Fields <see cref="F:TL.InputThemeSettings.wallpaper"/> and <see cref="F:TL.InputThemeSettings.wallpaper_settings"/> have a value</summary>
        </member>
        <member name="F:TL.InputThemeSettings.Flags.message_colors_animated">
            <summary>If set, the freeform gradient fill needs to be animated on every sent message</summary>
        </member>
        <member name="F:TL.InputThemeSettings.Flags.has_outbox_accent_color">
            <summary>Field <see cref="F:TL.InputThemeSettings.outbox_accent_color"/> has a value</summary>
        </member>
        <member name="T:TL.ThemeSettings">
            <summary>Theme settings		<para>See <a href="https://corefork.telegram.org/constructor/themeSettings"/></para></summary>
        </member>
        <member name="F:TL.ThemeSettings.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.ThemeSettings.base_theme">
            <summary>Base theme</summary>
        </member>
        <member name="F:TL.ThemeSettings.accent_color">
            <summary>Accent color, ARGB format</summary>
        </member>
        <member name="F:TL.ThemeSettings.outbox_accent_color">
            <summary>Accent color of outgoing messages in ARGB format</summary>
        </member>
        <member name="F:TL.ThemeSettings.message_colors">
            <summary>The fill to be used as a background for outgoing messages, in RGB24 format. <br/>If just one or two equal colors are provided, describes a solid fill of a background. <br/>If two different colors are provided, describes the top and bottom colors of a 0-degree gradient.<br/>If three or four colors are provided, describes a freeform gradient fill of a background.</summary>
        </member>
        <member name="F:TL.ThemeSettings.wallpaper">
            <summary><a href="https://corefork.telegram.org/api/wallpapers">Wallpaper</a></summary>
        </member>
        <member name="F:TL.ThemeSettings.Flags.has_message_colors">
            <summary>Field <see cref="F:TL.ThemeSettings.message_colors"/> has a value</summary>
        </member>
        <member name="F:TL.ThemeSettings.Flags.has_wallpaper">
            <summary>Field <see cref="F:TL.ThemeSettings.wallpaper"/> has a value</summary>
        </member>
        <member name="F:TL.ThemeSettings.Flags.message_colors_animated">
            <summary>If set, the freeform gradient fill needs to be animated on every sent message.</summary>
        </member>
        <member name="F:TL.ThemeSettings.Flags.has_outbox_accent_color">
            <summary>Field <see cref="F:TL.ThemeSettings.outbox_accent_color"/> has a value</summary>
        </member>
        <member name="T:TL.WebPageAttribute">
            <summary>Webpage attributes		<para>See <a href="https://corefork.telegram.org/type/WebPageAttribute"/></para>		<para>Derived classes: <see cref="T:TL.WebPageAttributeTheme"/>, <see cref="T:TL.WebPageAttributeStory"/></para></summary>
        </member>
        <member name="T:TL.WebPageAttributeTheme">
            <summary>Page theme		<para>See <a href="https://corefork.telegram.org/constructor/webPageAttributeTheme"/></para></summary>
        </member>
        <member name="F:TL.WebPageAttributeTheme.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.WebPageAttributeTheme.documents">
            <summary>Theme files</summary>
        </member>
        <member name="F:TL.WebPageAttributeTheme.settings">
            <summary>Theme settings</summary>
        </member>
        <member name="F:TL.WebPageAttributeTheme.Flags.has_documents">
            <summary>Field <see cref="F:TL.WebPageAttributeTheme.documents"/> has a value</summary>
        </member>
        <member name="F:TL.WebPageAttributeTheme.Flags.has_settings">
            <summary>Field <see cref="F:TL.WebPageAttributeTheme.settings"/> has a value</summary>
        </member>
        <member name="T:TL.WebPageAttributeStory">
            <summary>Webpage preview of a Telegram story		<para>See <a href="https://corefork.telegram.org/constructor/webPageAttributeStory"/></para></summary>
        </member>
        <member name="F:TL.WebPageAttributeStory.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.WebPageAttributeStory.peer">
            <summary>Peer that posted the story</summary>
        </member>
        <member name="F:TL.WebPageAttributeStory.id">
            <summary><a href="https://corefork.telegram.org/api/stories#watching-stories">Story ID</a></summary>
        </member>
        <member name="F:TL.WebPageAttributeStory.story">
            <summary>May contain the story, if not the story should be fetched when and if needed using <see cref="M:TL.SchemaExtensions.Stories_GetStoriesByID(WTelegram.Client,TL.InputPeer,System.Int32[])">Stories_GetStoriesByID</see> with the above <c>id</c> and <c>peer</c>.</summary>
        </member>
        <member name="F:TL.WebPageAttributeStory.Flags.has_story">
            <summary>Field <see cref="F:TL.WebPageAttributeStory.story"/> has a value</summary>
        </member>
        <member name="T:TL.WebPageAttributeStickerSet">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/webPageAttributeStickerSet"/></para></summary>
        </member>
        <member name="T:TL.Messages_VotesList">
            <summary>How users voted in a poll		<para>See <a href="https://corefork.telegram.org/constructor/messages.votesList"/></para></summary>
        </member>
        <member name="F:TL.Messages_VotesList.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Messages_VotesList.count">
            <summary>Total number of votes for all options (or only for the chosen <c>option</c>, if provided to <see cref="M:TL.SchemaExtensions.Messages_GetPollVotes(WTelegram.Client,TL.InputPeer,System.Int32,System.Int32,System.Byte[],System.String)">Messages_GetPollVotes</see>)</summary>
        </member>
        <member name="F:TL.Messages_VotesList.votes">
            <summary>Vote info for each user</summary>
        </member>
        <member name="F:TL.Messages_VotesList.chats">
            <summary>Mentioned chats</summary>
        </member>
        <member name="F:TL.Messages_VotesList.users">
            <summary>Info about users that voted in the poll</summary>
        </member>
        <member name="F:TL.Messages_VotesList.next_offset">
            <summary>Offset to use with the next <see cref="M:TL.SchemaExtensions.Messages_GetPollVotes(WTelegram.Client,TL.InputPeer,System.Int32,System.Int32,System.Byte[],System.String)">Messages_GetPollVotes</see> request, empty string if no more results are available.</summary>
        </member>
        <member name="F:TL.Messages_VotesList.Flags.has_next_offset">
            <summary>Field <see cref="F:TL.Messages_VotesList.next_offset"/> has a value</summary>
        </member>
        <member name="M:TL.Messages_VotesList.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.BankCardOpenUrl">
            <summary>Credit card info URL provided by the bank		<para>See <a href="https://corefork.telegram.org/constructor/bankCardOpenUrl"/></para></summary>
        </member>
        <member name="F:TL.BankCardOpenUrl.url">
            <summary>Info URL</summary>
        </member>
        <member name="F:TL.BankCardOpenUrl.name">
            <summary>Bank name</summary>
        </member>
        <member name="T:TL.Payments_BankCardData">
            <summary>Credit card info, provided by the card's bank(s)		<para>See <a href="https://corefork.telegram.org/constructor/payments.bankCardData"/></para></summary>
        </member>
        <member name="F:TL.Payments_BankCardData.title">
            <summary>Credit card title</summary>
        </member>
        <member name="F:TL.Payments_BankCardData.open_urls">
            <summary>Info URL(s) provided by the card's bank(s)</summary>
        </member>
        <member name="T:TL.DialogFilterBase">
            <summary>Dialog filter (<a href="https://corefork.telegram.org/api/folders">folder »</a>)		<para>See <a href="https://corefork.telegram.org/type/DialogFilter"/></para>		<para>Derived classes: <see cref="T:TL.DialogFilter"/>, <see cref="T:TL.DialogFilterChatlist"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/dialogFilterDefault">dialogFilterDefault</a></remarks>
        </member>
        <member name="P:TL.DialogFilterBase.ID">
            <summary><a href="https://corefork.telegram.org/api/folders">Folder</a> ID</summary>
        </member>
        <member name="P:TL.DialogFilterBase.Title">
            <summary><a href="https://corefork.telegram.org/api/folders">Folder</a> name</summary>
        </member>
        <member name="P:TL.DialogFilterBase.Emoticon">
            <summary>Emoji to use as icon for the folder.</summary>
        </member>
        <member name="P:TL.DialogFilterBase.PinnedPeers">
            <summary>Pinned chats, <a href="https://corefork.telegram.org/api/folders">folders</a> can have unlimited pinned chats</summary>
        </member>
        <member name="P:TL.DialogFilterBase.IncludePeers">
            <summary>Include the following chats in this <a href="https://corefork.telegram.org/api/folders">folder</a></summary>
        </member>
        <member name="T:TL.DialogFilter">
            <summary>Dialog filter AKA <a href="https://corefork.telegram.org/api/folders">folder</a>		<para>See <a href="https://corefork.telegram.org/constructor/dialogFilter"/></para></summary>
        </member>
        <member name="F:TL.DialogFilter.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.DialogFilter.id">
            <summary><a href="https://corefork.telegram.org/api/folders">Folder</a> ID</summary>
        </member>
        <member name="F:TL.DialogFilter.title">
            <summary><a href="https://corefork.telegram.org/api/folders">Folder</a> name</summary>
        </member>
        <member name="F:TL.DialogFilter.emoticon">
            <summary>Emoji to use as icon for the folder.</summary>
        </member>
        <member name="F:TL.DialogFilter.pinned_peers">
            <summary>Pinned chats, <a href="https://corefork.telegram.org/api/folders">folders</a> can have unlimited pinned chats</summary>
        </member>
        <member name="F:TL.DialogFilter.include_peers">
            <summary>Include the following chats in this <a href="https://corefork.telegram.org/api/folders">folder</a></summary>
        </member>
        <member name="F:TL.DialogFilter.exclude_peers">
            <summary>Exclude the following chats from this <a href="https://corefork.telegram.org/api/folders">folder</a></summary>
        </member>
        <member name="F:TL.DialogFilter.Flags.contacts">
            <summary>Whether to include all contacts in this <a href="https://corefork.telegram.org/api/folders">folder</a></summary>
        </member>
        <member name="F:TL.DialogFilter.Flags.non_contacts">
            <summary>Whether to include all non-contacts in this <a href="https://corefork.telegram.org/api/folders">folder</a></summary>
        </member>
        <member name="F:TL.DialogFilter.Flags.groups">
            <summary>Whether to include all groups in this <a href="https://corefork.telegram.org/api/folders">folder</a></summary>
        </member>
        <member name="F:TL.DialogFilter.Flags.broadcasts">
            <summary>Whether to include all channels in this <a href="https://corefork.telegram.org/api/folders">folder</a></summary>
        </member>
        <member name="F:TL.DialogFilter.Flags.bots">
            <summary>Whether to include all bots in this <a href="https://corefork.telegram.org/api/folders">folder</a></summary>
        </member>
        <member name="F:TL.DialogFilter.Flags.exclude_muted">
            <summary>Whether to exclude muted chats from this <a href="https://corefork.telegram.org/api/folders">folder</a></summary>
        </member>
        <member name="F:TL.DialogFilter.Flags.exclude_read">
            <summary>Whether to exclude read chats from this <a href="https://corefork.telegram.org/api/folders">folder</a></summary>
        </member>
        <member name="F:TL.DialogFilter.Flags.exclude_archived">
            <summary>Whether to exclude archived chats from this <a href="https://corefork.telegram.org/api/folders">folder</a></summary>
        </member>
        <member name="F:TL.DialogFilter.Flags.has_emoticon">
            <summary>Field <see cref="F:TL.DialogFilter.emoticon"/> has a value</summary>
        </member>
        <member name="F:TL.DialogFilter.Flags.has_color">
            <summary>Field <see cref="F:TL.DialogFilter.color"/> has a value</summary>
        </member>
        <member name="P:TL.DialogFilter.ID">
            <summary><a href="https://corefork.telegram.org/api/folders">Folder</a> ID</summary>
        </member>
        <member name="P:TL.DialogFilter.Title">
            <summary><a href="https://corefork.telegram.org/api/folders">Folder</a> name</summary>
        </member>
        <member name="P:TL.DialogFilter.Emoticon">
            <summary>Emoji to use as icon for the folder.</summary>
        </member>
        <member name="P:TL.DialogFilter.PinnedPeers">
            <summary>Pinned chats, <a href="https://corefork.telegram.org/api/folders">folders</a> can have unlimited pinned chats</summary>
        </member>
        <member name="P:TL.DialogFilter.IncludePeers">
            <summary>Include the following chats in this <a href="https://corefork.telegram.org/api/folders">folder</a></summary>
        </member>
        <member name="T:TL.DialogFilterChatlist">
            <summary>A folder imported using a <a href="https://corefork.telegram.org/api/links#chat-folder-links">chat folder deep link »</a>.		<para>See <a href="https://corefork.telegram.org/constructor/dialogFilterChatlist"/></para></summary>
        </member>
        <member name="F:TL.DialogFilterChatlist.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.DialogFilterChatlist.id">
            <summary>ID of the folder</summary>
        </member>
        <member name="F:TL.DialogFilterChatlist.title">
            <summary>Name of the folder</summary>
        </member>
        <member name="F:TL.DialogFilterChatlist.emoticon">
            <summary>Emoji to use as icon for the folder.</summary>
        </member>
        <member name="F:TL.DialogFilterChatlist.pinned_peers">
            <summary>Pinned chats, <a href="https://corefork.telegram.org/api/folders">folders</a> can have unlimited pinned chats</summary>
        </member>
        <member name="F:TL.DialogFilterChatlist.include_peers">
            <summary>Chats to include in the folder</summary>
        </member>
        <member name="F:TL.DialogFilterChatlist.Flags.has_emoticon">
            <summary>Field <see cref="F:TL.DialogFilterChatlist.emoticon"/> has a value</summary>
        </member>
        <member name="F:TL.DialogFilterChatlist.Flags.has_my_invites">
            <summary>Whether the current user has created some <a href="https://corefork.telegram.org/api/links#chat-folder-links">chat folder deep links »</a> to share the folder as well.</summary>
        </member>
        <member name="F:TL.DialogFilterChatlist.Flags.has_color">
            <summary>Field <see cref="F:TL.DialogFilterChatlist.color"/> has a value</summary>
        </member>
        <member name="P:TL.DialogFilterChatlist.ID">
            <summary>ID of the folder</summary>
        </member>
        <member name="P:TL.DialogFilterChatlist.Title">
            <summary>Name of the folder</summary>
        </member>
        <member name="P:TL.DialogFilterChatlist.Emoticon">
            <summary>Emoji to use as icon for the folder.</summary>
        </member>
        <member name="P:TL.DialogFilterChatlist.PinnedPeers">
            <summary>Pinned chats, <a href="https://corefork.telegram.org/api/folders">folders</a> can have unlimited pinned chats</summary>
        </member>
        <member name="P:TL.DialogFilterChatlist.IncludePeers">
            <summary>Chats to include in the folder</summary>
        </member>
        <member name="T:TL.DialogFilterSuggested">
            <summary>Suggested <a href="https://corefork.telegram.org/api/folders">folders</a>		<para>See <a href="https://corefork.telegram.org/constructor/dialogFilterSuggested"/></para></summary>
        </member>
        <member name="F:TL.DialogFilterSuggested.filter">
            <summary><a href="https://corefork.telegram.org/api/folders">Folder info</a></summary>
        </member>
        <member name="F:TL.DialogFilterSuggested.description">
            <summary><a href="https://corefork.telegram.org/api/folders">Folder</a> description</summary>
        </member>
        <member name="T:TL.StatsDateRangeDays">
            <summary><a href="https://corefork.telegram.org/api/stats">Channel statistics</a> date range		<para>See <a href="https://corefork.telegram.org/constructor/statsDateRangeDays"/></para></summary>
        </member>
        <member name="F:TL.StatsDateRangeDays.min_date">
            <summary>Initial date</summary>
        </member>
        <member name="F:TL.StatsDateRangeDays.max_date">
            <summary>Final date</summary>
        </member>
        <member name="T:TL.StatsAbsValueAndPrev">
            <summary>Statistics value couple; initial and final value for period of time currently in consideration		<para>See <a href="https://corefork.telegram.org/constructor/statsAbsValueAndPrev"/></para></summary>
        </member>
        <member name="F:TL.StatsAbsValueAndPrev.current">
            <summary>Current value</summary>
        </member>
        <member name="F:TL.StatsAbsValueAndPrev.previous">
            <summary>Previous value</summary>
        </member>
        <member name="T:TL.StatsPercentValue">
            <summary><a href="https://corefork.telegram.org/api/stats">Channel statistics percentage</a>.<br/>Compute the percentage simply by doing <c>part * total / 100</c>		<para>See <a href="https://corefork.telegram.org/constructor/statsPercentValue"/></para></summary>
        </member>
        <member name="F:TL.StatsPercentValue.part">
            <summary>Partial value</summary>
        </member>
        <member name="F:TL.StatsPercentValue.total">
            <summary>Total value</summary>
        </member>
        <member name="T:TL.StatsGraphBase">
            <summary>Channel statistics graph		<para>See <a href="https://corefork.telegram.org/type/StatsGraph"/></para>		<para>Derived classes: <see cref="T:TL.StatsGraphAsync"/>, <see cref="T:TL.StatsGraphError"/>, <see cref="T:TL.StatsGraph"/></para></summary>
        </member>
        <member name="T:TL.StatsGraphAsync">
            <summary>This <a href="https://corefork.telegram.org/api/stats">channel statistics graph</a> must be generated asynchronously using <see cref="M:TL.SchemaExtensions.Stats_LoadAsyncGraph(WTelegram.Client,System.String,System.Nullable{System.Int64})">Stats_LoadAsyncGraph</see> to reduce server load		<para>See <a href="https://corefork.telegram.org/constructor/statsGraphAsync"/></para></summary>
        </member>
        <member name="F:TL.StatsGraphAsync.token">
            <summary>Token to use for fetching the async graph</summary>
        </member>
        <member name="T:TL.StatsGraphError">
            <summary>An error occurred while generating the <a href="https://corefork.telegram.org/api/stats">statistics graph</a>		<para>See <a href="https://corefork.telegram.org/constructor/statsGraphError"/></para></summary>
        </member>
        <member name="F:TL.StatsGraphError.error">
            <summary>The error</summary>
        </member>
        <member name="T:TL.StatsGraph">
            <summary><a href="https://corefork.telegram.org/api/stats">Channel statistics graph</a>		<para>See <a href="https://corefork.telegram.org/constructor/statsGraph"/></para></summary>
        </member>
        <member name="F:TL.StatsGraph.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.StatsGraph.json">
            <summary>Statistics data</summary>
        </member>
        <member name="F:TL.StatsGraph.zoom_token">
            <summary>Zoom token</summary>
        </member>
        <member name="F:TL.StatsGraph.Flags.has_zoom_token">
            <summary>Field <see cref="F:TL.StatsGraph.zoom_token"/> has a value</summary>
        </member>
        <member name="T:TL.Stats_BroadcastStats">
            <summary><a href="https://corefork.telegram.org/api/stats">Channel statistics</a>.		<para>See <a href="https://corefork.telegram.org/constructor/stats.broadcastStats"/></para></summary>
        </member>
        <member name="F:TL.Stats_BroadcastStats.period">
            <summary>Period in consideration</summary>
        </member>
        <member name="F:TL.Stats_BroadcastStats.followers">
            <summary>Follower count change for period in consideration</summary>
        </member>
        <member name="F:TL.Stats_BroadcastStats.views_per_post">
            <summary><c>total_viewcount/postcount</c>, for posts posted during the period in consideration. <br/>Note that in this case, <c>current</c> refers to the <c>period</c> in consideration (<c>min_date</c> till <c>max_date</c>), and <c>prev</c> refers to the previous period (<c>(min_date - (max_date - min_date))</c> till <c>min_date</c>).</summary>
        </member>
        <member name="F:TL.Stats_BroadcastStats.shares_per_post">
            <summary><c>total_sharecount/postcount</c>, for posts posted during the period in consideration. <br/>Note that in this case, <c>current</c> refers to the <c>period</c> in consideration (<c>min_date</c> till <c>max_date</c>), and <c>prev</c> refers to the previous period (<c>(min_date - (max_date - min_date))</c> till <c>min_date</c>)</summary>
        </member>
        <member name="F:TL.Stats_BroadcastStats.reactions_per_post">
            <summary><c>total_reactions/postcount</c>, for posts posted during the period in consideration. <br/>Note that in this case, <c>current</c> refers to the <c>period</c> in consideration (<c>min_date</c> till <c>max_date</c>), and <c>prev</c> refers to the previous period (<c>(min_date - (max_date - min_date))</c> till <c>min_date</c>)</summary>
        </member>
        <member name="F:TL.Stats_BroadcastStats.views_per_story">
            <summary><c>total_views/storycount</c>, for posts posted during the period in consideration. <br/>Note that in this case, <c>current</c> refers to the <c>period</c> in consideration (<c>min_date</c> till <c>max_date</c>), and <c>prev</c> refers to the previous period (<c>(min_date - (max_date - min_date))</c> till <c>min_date</c>)</summary>
        </member>
        <member name="F:TL.Stats_BroadcastStats.shares_per_story">
            <summary><c>total_shares/storycount</c>, for posts posted during the period in consideration. <br/>Note that in this case, <c>current</c> refers to the <c>period</c> in consideration (<c>min_date</c> till <c>max_date</c>), and <c>prev</c> refers to the previous period (<c>(min_date - (max_date - min_date))</c> till <c>min_date</c>)</summary>
        </member>
        <member name="F:TL.Stats_BroadcastStats.reactions_per_story">
            <summary><c>total_reactions/storycount</c>, for posts posted during the period in consideration. <br/>Note that in this case, <c>current</c> refers to the <c>period</c> in consideration (<c>min_date</c> till <c>max_date</c>), and <c>prev</c> refers to the previous period (<c>(min_date - (max_date - min_date))</c> till <c>min_date</c>)</summary>
        </member>
        <member name="F:TL.Stats_BroadcastStats.enabled_notifications">
            <summary>Percentage of subscribers with enabled notifications</summary>
        </member>
        <member name="F:TL.Stats_BroadcastStats.growth_graph">
            <summary>Channel growth graph (absolute subscriber count)</summary>
        </member>
        <member name="F:TL.Stats_BroadcastStats.followers_graph">
            <summary>Followers growth graph (relative subscriber count)</summary>
        </member>
        <member name="F:TL.Stats_BroadcastStats.mute_graph">
            <summary>Muted users graph (relative)</summary>
        </member>
        <member name="F:TL.Stats_BroadcastStats.top_hours_graph">
            <summary>Views per hour graph (absolute)</summary>
        </member>
        <member name="F:TL.Stats_BroadcastStats.interactions_graph">
            <summary>Interactions graph (absolute)</summary>
        </member>
        <member name="F:TL.Stats_BroadcastStats.iv_interactions_graph">
            <summary>IV interactions graph (absolute)</summary>
        </member>
        <member name="F:TL.Stats_BroadcastStats.views_by_source_graph">
            <summary>Views by source graph (absolute)</summary>
        </member>
        <member name="F:TL.Stats_BroadcastStats.new_followers_by_source_graph">
            <summary>New followers by source graph (absolute)</summary>
        </member>
        <member name="F:TL.Stats_BroadcastStats.languages_graph">
            <summary>Subscriber language graph (pie chart)</summary>
        </member>
        <member name="F:TL.Stats_BroadcastStats.reactions_by_emotion_graph">
            <summary>A graph containing the number of reactions on posts categorized by emotion</summary>
        </member>
        <member name="F:TL.Stats_BroadcastStats.story_interactions_graph">
            <summary>A graph containing the number of story views and shares</summary>
        </member>
        <member name="F:TL.Stats_BroadcastStats.story_reactions_by_emotion_graph">
            <summary>A graph containing the number of reactions on stories categorized by emotion</summary>
        </member>
        <member name="F:TL.Stats_BroadcastStats.recent_posts_interactions">
            <summary>Detailed statistics about number of views and shares of recently sent messages and stories</summary>
        </member>
        <member name="T:TL.Help_PromoDataBase">
            <summary>Info about pinned MTProxy or Public Service Announcement peers.		<para>See <a href="https://corefork.telegram.org/type/help.PromoData"/></para>		<para>Derived classes: <see cref="T:TL.Help_PromoDataEmpty"/>, <see cref="T:TL.Help_PromoData"/></para></summary>
        </member>
        <member name="T:TL.Help_PromoDataEmpty">
            <summary>No PSA/MTProxy info is available		<para>See <a href="https://corefork.telegram.org/constructor/help.promoDataEmpty"/></para></summary>
        </member>
        <member name="F:TL.Help_PromoDataEmpty.expires">
            <summary>Re-fetch PSA/MTProxy info after the specified number of seconds</summary>
        </member>
        <member name="T:TL.Help_PromoData">
            <summary>MTProxy/Public Service Announcement information		<para>See <a href="https://corefork.telegram.org/constructor/help.promoData"/></para></summary>
        </member>
        <member name="F:TL.Help_PromoData.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Help_PromoData.expires">
            <summary>Expiry of PSA/MTProxy info</summary>
        </member>
        <member name="F:TL.Help_PromoData.peer">
            <summary>MTProxy/PSA peer</summary>
        </member>
        <member name="F:TL.Help_PromoData.chats">
            <summary>Chat info</summary>
        </member>
        <member name="F:TL.Help_PromoData.users">
            <summary>User info</summary>
        </member>
        <member name="F:TL.Help_PromoData.psa_type">
            <summary>PSA type</summary>
        </member>
        <member name="F:TL.Help_PromoData.psa_message">
            <summary>PSA message</summary>
        </member>
        <member name="F:TL.Help_PromoData.Flags.proxy">
            <summary>MTProxy-related channel</summary>
        </member>
        <member name="F:TL.Help_PromoData.Flags.has_psa_type">
            <summary>Field <see cref="F:TL.Help_PromoData.psa_type"/> has a value</summary>
        </member>
        <member name="F:TL.Help_PromoData.Flags.has_psa_message">
            <summary>Field <see cref="F:TL.Help_PromoData.psa_message"/> has a value</summary>
        </member>
        <member name="P:TL.Help_PromoData.UserOrChat">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the result</summary>
        </member>
        <member name="T:TL.VideoSizeBase">
            <summary>Represents an animated video thumbnail		<para>See <a href="https://corefork.telegram.org/type/VideoSize"/></para>		<para>Derived classes: <see cref="T:TL.VideoSize"/>, <see cref="T:TL.VideoSizeEmojiMarkup"/>, <see cref="T:TL.VideoSizeStickerMarkup"/></para></summary>
        </member>
        <member name="T:TL.VideoSize">
            <summary>An <a href="https://corefork.telegram.org/api/files#animated-profile-pictures">animated profile picture</a> in MPEG4 format		<para>See <a href="https://corefork.telegram.org/constructor/videoSize"/></para></summary>
        </member>
        <member name="F:TL.VideoSize.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.VideoSize.type">
            <summary><c>u</c> for animated profile pictures, and <c>v</c> for trimmed and downscaled video previews</summary>
        </member>
        <member name="F:TL.VideoSize.w">
            <summary>Video width</summary>
        </member>
        <member name="F:TL.VideoSize.h">
            <summary>Video height</summary>
        </member>
        <member name="F:TL.VideoSize.size">
            <summary>File size</summary>
        </member>
        <member name="F:TL.VideoSize.video_start_ts">
            <summary>Timestamp that should be shown as static preview to the user (seconds)</summary>
        </member>
        <member name="F:TL.VideoSize.Flags.has_video_start_ts">
            <summary>Field <see cref="F:TL.VideoSize.video_start_ts"/> has a value</summary>
        </member>
        <member name="T:TL.VideoSizeEmojiMarkup">
            <summary>An <a href="https://corefork.telegram.org/api/files#animated-profile-pictures">animated profile picture</a> based on a <a href="https://corefork.telegram.org/api/custom-emoji">custom emoji sticker</a>.		<para>See <a href="https://corefork.telegram.org/constructor/videoSizeEmojiMarkup"/></para></summary>
        </member>
        <member name="F:TL.VideoSizeEmojiMarkup.emoji_id">
            <summary><a href="https://corefork.telegram.org/api/custom-emoji">Custom emoji ID</a>: the custom emoji sticker is shown at the center of the profile picture and occupies at most 67% of it.</summary>
        </member>
        <member name="F:TL.VideoSizeEmojiMarkup.background_colors">
            <summary>1, 2, 3 or 4 RBG-24 colors used to generate a solid (1), gradient (2) or freeform gradient (3, 4) background, similar to how <a href="https://corefork.telegram.org/api/wallpapers#fill-types">fill wallpapers</a> are generated. The rotation angle for gradient backgrounds is 0.</summary>
        </member>
        <member name="T:TL.VideoSizeStickerMarkup">
            <summary>An <a href="https://corefork.telegram.org/api/files#animated-profile-pictures">animated profile picture</a> based on a <a href="https://corefork.telegram.org/api/stickers">sticker</a>.		<para>See <a href="https://corefork.telegram.org/constructor/videoSizeStickerMarkup"/></para></summary>
        </member>
        <member name="F:TL.VideoSizeStickerMarkup.stickerset">
            <summary>Stickerset</summary>
        </member>
        <member name="F:TL.VideoSizeStickerMarkup.sticker_id">
            <summary>Sticker ID</summary>
        </member>
        <member name="F:TL.VideoSizeStickerMarkup.background_colors">
            <summary>1, 2, 3 or 4 RBG-24 colors used to generate a solid (1), gradient (2) or freeform gradient (3, 4) background, similar to how <a href="https://corefork.telegram.org/api/wallpapers#fill-types">fill wallpapers</a> are generated. The rotation angle for gradient backgrounds is 0.</summary>
        </member>
        <member name="T:TL.StatsGroupTopPoster">
            <summary>Information about an active user in a supergroup		<para>See <a href="https://corefork.telegram.org/constructor/statsGroupTopPoster"/></para></summary>
        </member>
        <member name="F:TL.StatsGroupTopPoster.user_id">
            <summary>User ID</summary>
        </member>
        <member name="F:TL.StatsGroupTopPoster.messages">
            <summary>Number of messages for <a href="https://corefork.telegram.org/api/stats">statistics</a> period in consideration</summary>
        </member>
        <member name="F:TL.StatsGroupTopPoster.avg_chars">
            <summary>Average number of characters per message</summary>
        </member>
        <member name="T:TL.StatsGroupTopAdmin">
            <summary>Information about an active admin in a supergroup		<para>See <a href="https://corefork.telegram.org/constructor/statsGroupTopAdmin"/></para></summary>
        </member>
        <member name="F:TL.StatsGroupTopAdmin.user_id">
            <summary>User ID</summary>
        </member>
        <member name="F:TL.StatsGroupTopAdmin.deleted">
            <summary>Number of deleted messages for <a href="https://corefork.telegram.org/api/stats">statistics</a> period in consideration</summary>
        </member>
        <member name="F:TL.StatsGroupTopAdmin.kicked">
            <summary>Number of kicked users for <a href="https://corefork.telegram.org/api/stats">statistics</a> period in consideration</summary>
        </member>
        <member name="F:TL.StatsGroupTopAdmin.banned">
            <summary>Number of banned users for <a href="https://corefork.telegram.org/api/stats">statistics</a> period in consideration</summary>
        </member>
        <member name="T:TL.StatsGroupTopInviter">
            <summary>Information about an active supergroup inviter		<para>See <a href="https://corefork.telegram.org/constructor/statsGroupTopInviter"/></para></summary>
        </member>
        <member name="F:TL.StatsGroupTopInviter.user_id">
            <summary>User ID</summary>
        </member>
        <member name="F:TL.StatsGroupTopInviter.invitations">
            <summary>Number of invitations for <a href="https://corefork.telegram.org/api/stats">statistics</a> period in consideration</summary>
        </member>
        <member name="T:TL.Stats_MegagroupStats">
            <summary>Supergroup <a href="https://corefork.telegram.org/api/stats">statistics</a>		<para>See <a href="https://corefork.telegram.org/constructor/stats.megagroupStats"/></para></summary>
        </member>
        <member name="F:TL.Stats_MegagroupStats.period">
            <summary>Period in consideration</summary>
        </member>
        <member name="F:TL.Stats_MegagroupStats.members">
            <summary>Member count change for period in consideration</summary>
        </member>
        <member name="F:TL.Stats_MegagroupStats.messages">
            <summary>Message number change for period in consideration</summary>
        </member>
        <member name="F:TL.Stats_MegagroupStats.viewers">
            <summary>Number of users that viewed messages, for range in consideration</summary>
        </member>
        <member name="F:TL.Stats_MegagroupStats.posters">
            <summary>Number of users that posted messages, for range in consideration</summary>
        </member>
        <member name="F:TL.Stats_MegagroupStats.growth_graph">
            <summary>Supergroup growth graph (absolute subscriber count)</summary>
        </member>
        <member name="F:TL.Stats_MegagroupStats.members_graph">
            <summary>Members growth (relative subscriber count)</summary>
        </member>
        <member name="F:TL.Stats_MegagroupStats.new_members_by_source_graph">
            <summary>New members by source graph</summary>
        </member>
        <member name="F:TL.Stats_MegagroupStats.languages_graph">
            <summary>Subscriber language graph (pie chart)</summary>
        </member>
        <member name="F:TL.Stats_MegagroupStats.messages_graph">
            <summary>Message activity graph (stacked bar graph, message type)</summary>
        </member>
        <member name="F:TL.Stats_MegagroupStats.actions_graph">
            <summary>Group activity graph (deleted, modified messages, blocked users)</summary>
        </member>
        <member name="F:TL.Stats_MegagroupStats.top_hours_graph">
            <summary>Activity per hour graph (absolute)</summary>
        </member>
        <member name="F:TL.Stats_MegagroupStats.weekdays_graph">
            <summary>Activity per day of week graph (absolute)</summary>
        </member>
        <member name="F:TL.Stats_MegagroupStats.top_posters">
            <summary>Info about most active group members</summary>
        </member>
        <member name="F:TL.Stats_MegagroupStats.top_admins">
            <summary>Info about most active group admins</summary>
        </member>
        <member name="F:TL.Stats_MegagroupStats.top_inviters">
            <summary>Info about most active group inviters</summary>
        </member>
        <member name="F:TL.Stats_MegagroupStats.users">
            <summary>Info about users mentioned in statistics</summary>
        </member>
        <member name="T:TL.GlobalPrivacySettings">
            <summary>Global privacy settings		<para>See <a href="https://corefork.telegram.org/constructor/globalPrivacySettings"/></para></summary>
        </member>
        <member name="F:TL.GlobalPrivacySettings.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.GlobalPrivacySettings.Flags.archive_and_mute_new_noncontact_peers">
            <summary>Whether to archive and mute new chats from non-contacts</summary>
        </member>
        <member name="F:TL.GlobalPrivacySettings.Flags.keep_archived_unmuted">
            <summary>Whether unmuted chats will be kept in the Archive chat list when they get a new message.</summary>
        </member>
        <member name="F:TL.GlobalPrivacySettings.Flags.keep_archived_folders">
            <summary>Whether unmuted chats that are always included or pinned in a <a href="https://corefork.telegram.org/api/folders">folder</a>, will be kept in the Archive chat list when they get a new message. Ignored if <c>keep_archived_unmuted</c> is set.</summary>
        </member>
        <member name="T:TL.Help_CountryCode">
            <summary>Country code and phone number pattern of a specific country		<para>See <a href="https://corefork.telegram.org/constructor/help.countryCode"/></para></summary>
        </member>
        <member name="F:TL.Help_CountryCode.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Help_CountryCode.country_code">
            <summary>ISO country code</summary>
        </member>
        <member name="F:TL.Help_CountryCode.prefixes">
            <summary>Possible phone prefixes</summary>
        </member>
        <member name="F:TL.Help_CountryCode.patterns">
            <summary>Phone patterns: for example, <c>XXX XXX XXX</c></summary>
        </member>
        <member name="F:TL.Help_CountryCode.Flags.has_prefixes">
            <summary>Field <see cref="F:TL.Help_CountryCode.prefixes"/> has a value</summary>
        </member>
        <member name="F:TL.Help_CountryCode.Flags.has_patterns">
            <summary>Field <see cref="F:TL.Help_CountryCode.patterns"/> has a value</summary>
        </member>
        <member name="T:TL.Help_Country">
            <summary>Name, ISO code, localized name and phone codes/patterns of a specific country		<para>See <a href="https://corefork.telegram.org/constructor/help.country"/></para></summary>
        </member>
        <member name="F:TL.Help_Country.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Help_Country.iso2">
            <summary>ISO code of country</summary>
        </member>
        <member name="F:TL.Help_Country.default_name">
            <summary>Name of the country in the country's language</summary>
        </member>
        <member name="F:TL.Help_Country.name">
            <summary>Name of the country in the user's language, if different from the original name</summary>
        </member>
        <member name="F:TL.Help_Country.country_codes">
            <summary>Phone codes/patterns</summary>
        </member>
        <member name="F:TL.Help_Country.Flags.hidden">
            <summary>Whether this country should not be shown in the list</summary>
        </member>
        <member name="F:TL.Help_Country.Flags.has_name">
            <summary>Field <see cref="F:TL.Help_Country.name"/> has a value</summary>
        </member>
        <member name="T:TL.Help_CountriesList">
            <summary>Name, ISO code, localized name and phone codes/patterns of all available countries		<para>See <a href="https://corefork.telegram.org/constructor/help.countriesList"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/help.countriesListNotModified">help.countriesListNotModified</a></remarks>
        </member>
        <member name="F:TL.Help_CountriesList.countries">
            <summary>Name, ISO code, localized name and phone codes/patterns of all available countries</summary>
        </member>
        <member name="F:TL.Help_CountriesList.hash">
            <summary><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></summary>
        </member>
        <member name="T:TL.MessageViews">
            <summary>View, forward counter + info about replies of a specific message		<para>See <a href="https://corefork.telegram.org/constructor/messageViews"/></para></summary>
        </member>
        <member name="F:TL.MessageViews.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.MessageViews.views">
            <summary>View count of message</summary>
        </member>
        <member name="F:TL.MessageViews.forwards">
            <summary>Forward count of message</summary>
        </member>
        <member name="F:TL.MessageViews.replies">
            <summary>Reply and <a href="https://corefork.telegram.org/api/threads">thread</a> information of message</summary>
        </member>
        <member name="F:TL.MessageViews.Flags.has_views">
            <summary>Field <see cref="F:TL.MessageViews.views"/> has a value</summary>
        </member>
        <member name="F:TL.MessageViews.Flags.has_forwards">
            <summary>Field <see cref="F:TL.MessageViews.forwards"/> has a value</summary>
        </member>
        <member name="F:TL.MessageViews.Flags.has_replies">
            <summary>Field <see cref="F:TL.MessageViews.replies"/> has a value</summary>
        </member>
        <member name="T:TL.Messages_MessageViews">
            <summary>View, forward counter + info about replies		<para>See <a href="https://corefork.telegram.org/constructor/messages.messageViews"/></para></summary>
        </member>
        <member name="F:TL.Messages_MessageViews.views">
            <summary>View, forward counter + info about replies</summary>
        </member>
        <member name="F:TL.Messages_MessageViews.chats">
            <summary>Chats mentioned in constructor</summary>
        </member>
        <member name="F:TL.Messages_MessageViews.users">
            <summary>Users mentioned in constructor</summary>
        </member>
        <member name="M:TL.Messages_MessageViews.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Messages_DiscussionMessage">
            <summary>Information about a <a href="https://corefork.telegram.org/api/threads">message thread</a>		<para>See <a href="https://corefork.telegram.org/constructor/messages.discussionMessage"/></para></summary>
        </member>
        <member name="F:TL.Messages_DiscussionMessage.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Messages_DiscussionMessage.messages">
            <summary>The messages from which the thread starts. The messages are returned in reverse chronological order (i.e., in order of decreasing message ID).</summary>
        </member>
        <member name="F:TL.Messages_DiscussionMessage.max_id">
            <summary>Message ID of latest reply in this <a href="https://corefork.telegram.org/api/threads">thread</a></summary>
        </member>
        <member name="F:TL.Messages_DiscussionMessage.read_inbox_max_id">
            <summary>Message ID of latest read incoming message in this <a href="https://corefork.telegram.org/api/threads">thread</a></summary>
        </member>
        <member name="F:TL.Messages_DiscussionMessage.read_outbox_max_id">
            <summary>Message ID of latest read outgoing message in this <a href="https://corefork.telegram.org/api/threads">thread</a></summary>
        </member>
        <member name="F:TL.Messages_DiscussionMessage.unread_count">
            <summary>Number of unread messages</summary>
        </member>
        <member name="F:TL.Messages_DiscussionMessage.chats">
            <summary>Chats mentioned in constructor</summary>
        </member>
        <member name="F:TL.Messages_DiscussionMessage.users">
            <summary>Users mentioned in constructor</summary>
        </member>
        <member name="F:TL.Messages_DiscussionMessage.Flags.has_max_id">
            <summary>Field <see cref="F:TL.Messages_DiscussionMessage.max_id"/> has a value</summary>
        </member>
        <member name="F:TL.Messages_DiscussionMessage.Flags.has_read_inbox_max_id">
            <summary>Field <see cref="F:TL.Messages_DiscussionMessage.read_inbox_max_id"/> has a value</summary>
        </member>
        <member name="F:TL.Messages_DiscussionMessage.Flags.has_read_outbox_max_id">
            <summary>Field <see cref="F:TL.Messages_DiscussionMessage.read_outbox_max_id"/> has a value</summary>
        </member>
        <member name="M:TL.Messages_DiscussionMessage.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.MessageReplyHeaderBase">
            <summary>Reply information		<para>See <a href="https://corefork.telegram.org/type/MessageReplyHeader"/></para>		<para>Derived classes: <see cref="T:TL.MessageReplyHeader"/>, <see cref="T:TL.MessageReplyStoryHeader"/></para></summary>
        </member>
        <member name="T:TL.MessageReplyHeader">
            <summary>Message replies and <a href="https://corefork.telegram.org/api/threads">thread</a> information		<para>See <a href="https://corefork.telegram.org/constructor/messageReplyHeader"/></para></summary>
        </member>
        <member name="F:TL.MessageReplyHeader.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.MessageReplyHeader.reply_to_msg_id">
            <summary>ID of message to which this message is replying</summary>
        </member>
        <member name="F:TL.MessageReplyHeader.reply_to_peer_id">
            <summary>For replies sent in <a href="https://corefork.telegram.org/api/threads">channel discussion threads</a> of which the current user is not a member, the discussion group ID</summary>
        </member>
        <member name="F:TL.MessageReplyHeader.reply_from">
            <summary>When replying to a message sent by a certain peer to another chat, contains info about the peer that originally sent the message to that other chat.</summary>
        </member>
        <member name="F:TL.MessageReplyHeader.reply_media">
            <summary>When replying to a media sent by a certain peer to another chat, contains the media of the replied-to message.</summary>
        </member>
        <member name="F:TL.MessageReplyHeader.reply_to_top_id">
            <summary>ID of the message that started this <a href="https://corefork.telegram.org/api/threads">message thread</a></summary>
        </member>
        <member name="F:TL.MessageReplyHeader.quote_text">
            <summary>Used to quote-reply to only a certain section (specified here) of the original message.</summary>
        </member>
        <member name="F:TL.MessageReplyHeader.quote_entities">
            <summary><a href="https://corefork.telegram.org/api/entities">Message entities for styled text</a> from the <c>quote_text</c> field.</summary>
        </member>
        <member name="F:TL.MessageReplyHeader.quote_offset">
            <summary>Offset of the message <c>quote_text</c> within the original message (in <a href="https://corefork.telegram.org/api/entities#entity-length">UTF-16 code units</a>).</summary>
        </member>
        <member name="F:TL.MessageReplyHeader.Flags.has_reply_to_peer_id">
            <summary>Field <see cref="F:TL.MessageReplyHeader.reply_to_peer_id"/> has a value</summary>
        </member>
        <member name="F:TL.MessageReplyHeader.Flags.has_reply_to_top_id">
            <summary>Field <see cref="F:TL.MessageReplyHeader.reply_to_top_id"/> has a value</summary>
        </member>
        <member name="F:TL.MessageReplyHeader.Flags.reply_to_scheduled">
            <summary>This is a reply to a scheduled message.</summary>
        </member>
        <member name="F:TL.MessageReplyHeader.Flags.forum_topic">
            <summary>Whether this message was sent in a <a href="https://corefork.telegram.org/api/forum#forum-topics">forum topic</a> (except for the General topic).</summary>
        </member>
        <member name="F:TL.MessageReplyHeader.Flags.has_reply_to_msg_id">
            <summary>Field <see cref="F:TL.MessageReplyHeader.reply_to_msg_id"/> has a value</summary>
        </member>
        <member name="F:TL.MessageReplyHeader.Flags.has_reply_from">
            <summary>Field <see cref="F:TL.MessageReplyHeader.reply_from"/> has a value</summary>
        </member>
        <member name="F:TL.MessageReplyHeader.Flags.has_quote_text">
            <summary>Field <see cref="F:TL.MessageReplyHeader.quote_text"/> has a value</summary>
        </member>
        <member name="F:TL.MessageReplyHeader.Flags.has_quote_entities">
            <summary>Field <see cref="F:TL.MessageReplyHeader.quote_entities"/> has a value</summary>
        </member>
        <member name="F:TL.MessageReplyHeader.Flags.has_reply_media">
            <summary>Field <see cref="F:TL.MessageReplyHeader.reply_media"/> has a value</summary>
        </member>
        <member name="F:TL.MessageReplyHeader.Flags.quote">
            <summary>Whether this message is quoting a part of another message.</summary>
        </member>
        <member name="F:TL.MessageReplyHeader.Flags.has_quote_offset">
            <summary>Field <see cref="F:TL.MessageReplyHeader.quote_offset"/> has a value</summary>
        </member>
        <member name="T:TL.MessageReplyStoryHeader">
            <summary>Represents a reply to a <a href="https://corefork.telegram.org/api/stories">story</a>		<para>See <a href="https://corefork.telegram.org/constructor/messageReplyStoryHeader"/></para></summary>
        </member>
        <member name="F:TL.MessageReplyStoryHeader.story_id">
            <summary>Story ID</summary>
        </member>
        <member name="T:TL.MessageReplies">
            <summary>Info about <a href="https://corefork.telegram.org/api/threads">the comment section of a channel post, or a simple message thread</a>		<para>See <a href="https://corefork.telegram.org/constructor/messageReplies"/></para></summary>
        </member>
        <member name="F:TL.MessageReplies.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.MessageReplies.replies">
            <summary>Contains the total number of replies in this thread or comment section.</summary>
        </member>
        <member name="F:TL.MessageReplies.replies_pts">
            <summary><a href="https://corefork.telegram.org/api/updates">PTS</a> of the message that started this thread.</summary>
        </member>
        <member name="F:TL.MessageReplies.recent_repliers">
            <summary>For channel post comments, contains information about the last few comment posters for a specific thread, to show a small list of commenter profile pictures in client previews.</summary>
        </member>
        <member name="F:TL.MessageReplies.channel_id">
            <summary>For channel post comments, contains the ID of the associated <a href="https://corefork.telegram.org/api/discussion">discussion supergroup</a></summary>
        </member>
        <member name="F:TL.MessageReplies.max_id">
            <summary>ID of the latest message in this thread or comment section.</summary>
        </member>
        <member name="F:TL.MessageReplies.read_max_id">
            <summary>Contains the ID of the latest read message in this thread or comment section.</summary>
        </member>
        <member name="F:TL.MessageReplies.Flags.comments">
            <summary>Whether this constructor contains information about the <a href="https://corefork.telegram.org/api/threads">comment section of a channel post, or a simple message thread</a></summary>
        </member>
        <member name="F:TL.MessageReplies.Flags.has_recent_repliers">
            <summary>Field <see cref="F:TL.MessageReplies.recent_repliers"/> has a value</summary>
        </member>
        <member name="F:TL.MessageReplies.Flags.has_max_id">
            <summary>Field <see cref="F:TL.MessageReplies.max_id"/> has a value</summary>
        </member>
        <member name="F:TL.MessageReplies.Flags.has_read_max_id">
            <summary>Field <see cref="F:TL.MessageReplies.read_max_id"/> has a value</summary>
        </member>
        <member name="T:TL.PeerBlocked">
            <summary>Information about a blocked peer		<para>See <a href="https://corefork.telegram.org/constructor/peerBlocked"/></para></summary>
        </member>
        <member name="F:TL.PeerBlocked.peer_id">
            <summary>Peer ID</summary>
        </member>
        <member name="F:TL.PeerBlocked.date">
            <summary>When was the peer blocked</summary>
        </member>
        <member name="T:TL.Stats_MessageStats">
            <summary>Message statistics		<para>See <a href="https://corefork.telegram.org/constructor/stats.messageStats"/></para></summary>
        </member>
        <member name="F:TL.Stats_MessageStats.views_graph">
            <summary>Message view graph</summary>
        </member>
        <member name="F:TL.Stats_MessageStats.reactions_by_emotion_graph">
            <summary>A graph containing the number of reactions on stories categorized by emotion</summary>
        </member>
        <member name="T:TL.GroupCallBase">
            <summary>A group call		<para>See <a href="https://corefork.telegram.org/type/GroupCall"/></para>		<para>Derived classes: <see cref="T:TL.GroupCallDiscarded"/>, <see cref="T:TL.GroupCall"/></para></summary>
        </member>
        <member name="P:TL.GroupCallBase.ID">
            <summary>Group call ID</summary>
        </member>
        <member name="P:TL.GroupCallBase.AccessHash">
            <summary>Group call access hash</summary>
        </member>
        <member name="T:TL.GroupCallDiscarded">
            <summary>An ended group call		<para>See <a href="https://corefork.telegram.org/constructor/groupCallDiscarded"/></para></summary>
        </member>
        <member name="F:TL.GroupCallDiscarded.id">
            <summary>Group call ID</summary>
        </member>
        <member name="F:TL.GroupCallDiscarded.access_hash">
            <summary>Group call access hash</summary>
        </member>
        <member name="F:TL.GroupCallDiscarded.duration">
            <summary>Group call duration</summary>
        </member>
        <member name="P:TL.GroupCallDiscarded.ID">
            <summary>Group call ID</summary>
        </member>
        <member name="P:TL.GroupCallDiscarded.AccessHash">
            <summary>Group call access hash</summary>
        </member>
        <member name="T:TL.GroupCall">
            <summary>Info about a group call or livestream		<para>See <a href="https://corefork.telegram.org/constructor/groupCall"/></para></summary>
        </member>
        <member name="F:TL.GroupCall.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.GroupCall.id">
            <summary>Group call ID</summary>
        </member>
        <member name="F:TL.GroupCall.access_hash">
            <summary>Group call access hash</summary>
        </member>
        <member name="F:TL.GroupCall.participants_count">
            <summary>Participant count</summary>
        </member>
        <member name="F:TL.GroupCall.title">
            <summary>Group call title</summary>
        </member>
        <member name="F:TL.GroupCall.stream_dc_id">
            <summary>DC ID to be used for livestream chunks</summary>
        </member>
        <member name="F:TL.GroupCall.record_start_date">
            <summary>When was the recording started</summary>
        </member>
        <member name="F:TL.GroupCall.schedule_date">
            <summary>When is the call scheduled to start</summary>
        </member>
        <member name="F:TL.GroupCall.unmuted_video_count">
            <summary>Number of people currently streaming video into the call</summary>
        </member>
        <member name="F:TL.GroupCall.unmuted_video_limit">
            <summary>Maximum number of people allowed to stream video into the call</summary>
        </member>
        <member name="F:TL.GroupCall.version">
            <summary>Version</summary>
        </member>
        <member name="F:TL.GroupCall.Flags.join_muted">
            <summary>Whether the user should be muted upon joining the call</summary>
        </member>
        <member name="F:TL.GroupCall.Flags.can_change_join_muted">
            <summary>Whether the current user can change the value of the <c>join_muted</c> flag using <see cref="M:TL.SchemaExtensions.Phone_ToggleGroupCallSettings(WTelegram.Client,TL.InputGroupCall,System.Nullable{System.Boolean},System.Boolean)">Phone_ToggleGroupCallSettings</see></summary>
        </member>
        <member name="F:TL.GroupCall.Flags.has_title">
            <summary>Field <see cref="F:TL.GroupCall.title"/> has a value</summary>
        </member>
        <member name="F:TL.GroupCall.Flags.has_stream_dc_id">
            <summary>Field <see cref="F:TL.GroupCall.stream_dc_id"/> has a value</summary>
        </member>
        <member name="F:TL.GroupCall.Flags.has_record_start_date">
            <summary>Field <see cref="F:TL.GroupCall.record_start_date"/> has a value</summary>
        </member>
        <member name="F:TL.GroupCall.Flags.join_date_asc">
            <summary>Specifies the ordering to use when locally sorting by date and displaying in the UI group call participants.</summary>
        </member>
        <member name="F:TL.GroupCall.Flags.has_schedule_date">
            <summary>Field <see cref="F:TL.GroupCall.schedule_date"/> has a value</summary>
        </member>
        <member name="F:TL.GroupCall.Flags.schedule_start_subscribed">
            <summary>Whether we subscribed to the scheduled call</summary>
        </member>
        <member name="F:TL.GroupCall.Flags.can_start_video">
            <summary>Whether you can start streaming video into the call</summary>
        </member>
        <member name="F:TL.GroupCall.Flags.has_unmuted_video_count">
            <summary>Field <see cref="F:TL.GroupCall.unmuted_video_count"/> has a value</summary>
        </member>
        <member name="F:TL.GroupCall.Flags.record_video_active">
            <summary>Whether the group call is currently being recorded</summary>
        </member>
        <member name="F:TL.GroupCall.Flags.rtmp_stream">
            <summary>Whether RTMP streams are allowed</summary>
        </member>
        <member name="F:TL.GroupCall.Flags.listeners_hidden">
            <summary>Whether the listeners list is hidden and cannot be fetched using <see cref="M:TL.SchemaExtensions.Phone_GetGroupParticipants(WTelegram.Client,TL.InputGroupCall,TL.InputPeer[],System.Int32[],System.String,System.Int32)">Phone_GetGroupParticipants</see>. The <c>phone.groupParticipants.count</c> and <c>groupCall.participants_count</c> counters will still include listeners.</summary>
        </member>
        <member name="P:TL.GroupCall.ID">
            <summary>Group call ID</summary>
        </member>
        <member name="P:TL.GroupCall.AccessHash">
            <summary>Group call access hash</summary>
        </member>
        <member name="T:TL.InputGroupCall">
            <summary>Points to a specific group call		<para>See <a href="https://corefork.telegram.org/constructor/inputGroupCall"/></para></summary>
        </member>
        <member name="F:TL.InputGroupCall.id">
            <summary>Group call ID</summary>
        </member>
        <member name="F:TL.InputGroupCall.access_hash">
            <summary>⚠ <b>REQUIRED FIELD</b>. See <see href="https://wiz0u.github.io/WTelegramClient/FAQ#access-hash">how to obtain it</see><br/>Group call access hash</summary>
        </member>
        <member name="T:TL.GroupCallParticipant">
            <summary>Info about a group call participant		<para>See <a href="https://corefork.telegram.org/constructor/groupCallParticipant"/></para></summary>
        </member>
        <member name="F:TL.GroupCallParticipant.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.GroupCallParticipant.peer">
            <summary>Peer information</summary>
        </member>
        <member name="F:TL.GroupCallParticipant.date">
            <summary>When did this participant join the group call</summary>
        </member>
        <member name="F:TL.GroupCallParticipant.active_date">
            <summary>When was this participant last active in the group call</summary>
        </member>
        <member name="F:TL.GroupCallParticipant.source">
            <summary>Source ID</summary>
        </member>
        <member name="F:TL.GroupCallParticipant.volume">
            <summary>Volume, if not set the volume is set to 100%.</summary>
        </member>
        <member name="F:TL.GroupCallParticipant.about">
            <summary>Info about this participant</summary>
        </member>
        <member name="F:TL.GroupCallParticipant.raise_hand_rating">
            <summary>Specifies the UI visualization order of peers with raised hands: peers with a higher rating should be showed first in the list.</summary>
        </member>
        <member name="F:TL.GroupCallParticipant.video">
            <summary>Info about the video stream the participant is currently broadcasting</summary>
        </member>
        <member name="F:TL.GroupCallParticipant.presentation">
            <summary>Info about the screen sharing stream the participant is currently broadcasting</summary>
        </member>
        <member name="F:TL.GroupCallParticipant.Flags.muted">
            <summary>Whether the participant is muted</summary>
        </member>
        <member name="F:TL.GroupCallParticipant.Flags.left">
            <summary>Whether the participant has left</summary>
        </member>
        <member name="F:TL.GroupCallParticipant.Flags.can_self_unmute">
            <summary>Whether the participant can unmute themselves</summary>
        </member>
        <member name="F:TL.GroupCallParticipant.Flags.has_active_date">
            <summary>Field <see cref="F:TL.GroupCallParticipant.active_date"/> has a value</summary>
        </member>
        <member name="F:TL.GroupCallParticipant.Flags.just_joined">
            <summary>Whether the participant has just joined</summary>
        </member>
        <member name="F:TL.GroupCallParticipant.Flags.versioned">
            <summary>If set, and <see cref="T:TL.UpdateGroupCallParticipants"/>.version &lt; locally stored call.version, info about this participant should be ignored. If (...), and <see cref="T:TL.UpdateGroupCallParticipants"/>.version &gt; call.version+1, the participant list should be refetched using <see cref="M:TL.SchemaExtensions.Phone_GetGroupParticipants(WTelegram.Client,TL.InputGroupCall,TL.InputPeer[],System.Int32[],System.String,System.Int32)">Phone_GetGroupParticipants</see>.</summary>
        </member>
        <member name="F:TL.GroupCallParticipant.Flags.has_video">
            <summary>Field <see cref="F:TL.GroupCallParticipant.video"/> has a value</summary>
        </member>
        <member name="F:TL.GroupCallParticipant.Flags.has_volume">
            <summary>Field <see cref="F:TL.GroupCallParticipant.volume"/> has a value</summary>
        </member>
        <member name="F:TL.GroupCallParticipant.Flags.min">
            <summary>If not set, the <c>volume</c> and <c>muted_by_you</c> fields can be safely used to overwrite locally cached information; otherwise, <c>volume</c> will contain valid information only if <c>volume_by_admin</c> is set both in the cache and in the received constructor.</summary>
        </member>
        <member name="F:TL.GroupCallParticipant.Flags.muted_by_you">
            <summary>Whether this participant was muted by the current user</summary>
        </member>
        <member name="F:TL.GroupCallParticipant.Flags.volume_by_admin">
            <summary>Whether our volume can only changed by an admin</summary>
        </member>
        <member name="F:TL.GroupCallParticipant.Flags.has_about">
            <summary>Field <see cref="F:TL.GroupCallParticipant.about"/> has a value</summary>
        </member>
        <member name="F:TL.GroupCallParticipant.Flags.self">
            <summary>Whether this participant is the current user</summary>
        </member>
        <member name="F:TL.GroupCallParticipant.Flags.has_raise_hand_rating">
            <summary>Field <see cref="F:TL.GroupCallParticipant.raise_hand_rating"/> has a value</summary>
        </member>
        <member name="F:TL.GroupCallParticipant.Flags.has_presentation">
            <summary>Field <see cref="F:TL.GroupCallParticipant.presentation"/> has a value</summary>
        </member>
        <member name="F:TL.GroupCallParticipant.Flags.video_joined">
            <summary>Whether this participant is currently broadcasting video</summary>
        </member>
        <member name="T:TL.Phone_GroupCall">
            <summary>Contains info about a group call, and partial info about its participants.		<para>See <a href="https://corefork.telegram.org/constructor/phone.groupCall"/></para></summary>
        </member>
        <member name="F:TL.Phone_GroupCall.call">
            <summary>Info about the group call</summary>
        </member>
        <member name="F:TL.Phone_GroupCall.participants">
            <summary>A partial list of participants.</summary>
        </member>
        <member name="F:TL.Phone_GroupCall.participants_next_offset">
            <summary>Next offset to use when fetching the remaining participants using <see cref="M:TL.SchemaExtensions.Phone_GetGroupParticipants(WTelegram.Client,TL.InputGroupCall,TL.InputPeer[],System.Int32[],System.String,System.Int32)">Phone_GetGroupParticipants</see></summary>
        </member>
        <member name="F:TL.Phone_GroupCall.chats">
            <summary>Chats mentioned in the participants vector</summary>
        </member>
        <member name="F:TL.Phone_GroupCall.users">
            <summary>Users mentioned in the participants vector</summary>
        </member>
        <member name="M:TL.Phone_GroupCall.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Phone_GroupParticipants">
            <summary>Info about the participants of a group call or livestream		<para>See <a href="https://corefork.telegram.org/constructor/phone.groupParticipants"/></para></summary>
        </member>
        <member name="F:TL.Phone_GroupParticipants.count">
            <summary>Number of participants</summary>
        </member>
        <member name="F:TL.Phone_GroupParticipants.participants">
            <summary>List of participants</summary>
        </member>
        <member name="F:TL.Phone_GroupParticipants.next_offset">
            <summary>If not empty, the specified list of participants is partial, and more participants can be fetched specifying this parameter as <c>offset</c> in <see cref="M:TL.SchemaExtensions.Phone_GetGroupParticipants(WTelegram.Client,TL.InputGroupCall,TL.InputPeer[],System.Int32[],System.String,System.Int32)">Phone_GetGroupParticipants</see>.</summary>
        </member>
        <member name="F:TL.Phone_GroupParticipants.chats">
            <summary>Mentioned chats</summary>
        </member>
        <member name="F:TL.Phone_GroupParticipants.users">
            <summary>Mentioned users</summary>
        </member>
        <member name="F:TL.Phone_GroupParticipants.version">
            <summary>Version info</summary>
        </member>
        <member name="M:TL.Phone_GroupParticipants.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.InlineQueryPeerType">
            <summary>Inline query peer type.		<para>See <a href="https://corefork.telegram.org/type/InlineQueryPeerType"/></para></summary>
        </member>
        <member name="F:TL.InlineQueryPeerType.SameBotPM">
            <summary>Peer type: private chat with the bot itself</summary>
        </member>
        <member name="F:TL.InlineQueryPeerType.PM">
            <summary>Peer type: private chat</summary>
        </member>
        <member name="F:TL.InlineQueryPeerType.Chat">
            <summary>Peer type: <a href="https://corefork.telegram.org/api/channel">chat</a></summary>
        </member>
        <member name="F:TL.InlineQueryPeerType.Megagroup">
            <summary>Peer type: <a href="https://corefork.telegram.org/api/channel">supergroup</a></summary>
        </member>
        <member name="F:TL.InlineQueryPeerType.Broadcast">
            <summary>Peer type: <a href="https://corefork.telegram.org/api/channel">channel</a></summary>
        </member>
        <member name="F:TL.InlineQueryPeerType.BotPM">
            <summary>Peer type: private chat with a bot.</summary>
        </member>
        <member name="T:TL.Messages_HistoryImport">
            <summary>ID of a specific <a href="https://corefork.telegram.org/api/import">chat import session, click here for more info »</a>.		<para>See <a href="https://corefork.telegram.org/constructor/messages.historyImport"/></para></summary>
        </member>
        <member name="F:TL.Messages_HistoryImport.id">
            <summary><a href="https://corefork.telegram.org/api/import">History import ID</a></summary>
        </member>
        <member name="T:TL.Messages_HistoryImportParsed">
            <summary>Contains information about a chat export file <a href="https://corefork.telegram.org/api/import">generated by a foreign chat app, click here for more info</a>.<br/>If neither the <c>pm</c> or <c>group</c> flags are set, the specified chat export was generated from a chat of unknown type.		<para>See <a href="https://corefork.telegram.org/constructor/messages.historyImportParsed"/></para></summary>
        </member>
        <member name="F:TL.Messages_HistoryImportParsed.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Messages_HistoryImportParsed.title">
            <summary>Title of the chat.</summary>
        </member>
        <member name="F:TL.Messages_HistoryImportParsed.Flags.pm">
            <summary>The chat export file was generated from a private chat.</summary>
        </member>
        <member name="F:TL.Messages_HistoryImportParsed.Flags.group">
            <summary>The chat export file was generated from a group chat.</summary>
        </member>
        <member name="F:TL.Messages_HistoryImportParsed.Flags.has_title">
            <summary>Field <see cref="F:TL.Messages_HistoryImportParsed.title"/> has a value</summary>
        </member>
        <member name="T:TL.Messages_AffectedFoundMessages">
            <summary>Messages found and affected by changes		<para>See <a href="https://corefork.telegram.org/constructor/messages.affectedFoundMessages"/></para></summary>
        </member>
        <member name="F:TL.Messages_AffectedFoundMessages.messages">
            <summary>Affected message IDs</summary>
        </member>
        <member name="T:TL.ChatInviteImporter">
            <summary>When and which user joined the chat using a chat invite		<para>See <a href="https://corefork.telegram.org/constructor/chatInviteImporter"/></para></summary>
        </member>
        <member name="F:TL.ChatInviteImporter.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.ChatInviteImporter.user_id">
            <summary>The user</summary>
        </member>
        <member name="F:TL.ChatInviteImporter.date">
            <summary>When did the user join</summary>
        </member>
        <member name="F:TL.ChatInviteImporter.about">
            <summary>For users with pending requests, contains bio of the user that requested to join</summary>
        </member>
        <member name="F:TL.ChatInviteImporter.approved_by">
            <summary>The administrator that approved the <a href="https://corefork.telegram.org/api/invites#join-requests">join request »</a> of the user</summary>
        </member>
        <member name="F:TL.ChatInviteImporter.Flags.requested">
            <summary>Whether this user currently has a pending <a href="https://corefork.telegram.org/api/invites#join-requests">join request »</a></summary>
        </member>
        <member name="F:TL.ChatInviteImporter.Flags.has_approved_by">
            <summary>Field <see cref="F:TL.ChatInviteImporter.approved_by"/> has a value</summary>
        </member>
        <member name="F:TL.ChatInviteImporter.Flags.has_about">
            <summary>Field <see cref="F:TL.ChatInviteImporter.about"/> has a value</summary>
        </member>
        <member name="F:TL.ChatInviteImporter.Flags.via_chatlist">
            <summary>The participant joined by importing a <a href="https://corefork.telegram.org/api/links#chat-folder-links">chat folder deep link »</a>.</summary>
        </member>
        <member name="T:TL.Messages_ExportedChatInvites">
            <summary>Info about chat invites exported by a certain admin.		<para>See <a href="https://corefork.telegram.org/constructor/messages.exportedChatInvites"/></para></summary>
        </member>
        <member name="F:TL.Messages_ExportedChatInvites.count">
            <summary>Number of invites exported by the admin</summary>
        </member>
        <member name="F:TL.Messages_ExportedChatInvites.invites">
            <summary>Exported invites</summary>
        </member>
        <member name="F:TL.Messages_ExportedChatInvites.users">
            <summary>Info about the admin</summary>
        </member>
        <member name="T:TL.Messages_ExportedChatInviteBase">
            <summary>Contains info about a chat invite, and eventually a pointer to the newest chat invite.		<para>See <a href="https://corefork.telegram.org/type/messages.ExportedChatInvite"/></para>		<para>Derived classes: <see cref="T:TL.Messages_ExportedChatInvite"/>, <see cref="T:TL.Messages_ExportedChatInviteReplaced"/></para></summary>
        </member>
        <member name="P:TL.Messages_ExportedChatInviteBase.Invite">
            <summary>Info about the chat invite</summary>
        </member>
        <member name="P:TL.Messages_ExportedChatInviteBase.Users">
            <summary>Mentioned users</summary>
        </member>
        <member name="T:TL.Messages_ExportedChatInvite">
            <summary>Info about a chat invite		<para>See <a href="https://corefork.telegram.org/constructor/messages.exportedChatInvite"/></para></summary>
        </member>
        <member name="F:TL.Messages_ExportedChatInvite.invite">
            <summary>Info about the chat invite</summary>
        </member>
        <member name="F:TL.Messages_ExportedChatInvite.users">
            <summary>Mentioned users</summary>
        </member>
        <member name="P:TL.Messages_ExportedChatInvite.Invite">
            <summary>Info about the chat invite</summary>
        </member>
        <member name="P:TL.Messages_ExportedChatInvite.Users">
            <summary>Mentioned users</summary>
        </member>
        <member name="T:TL.Messages_ExportedChatInviteReplaced">
            <summary>The specified chat invite was replaced with another one		<para>See <a href="https://corefork.telegram.org/constructor/messages.exportedChatInviteReplaced"/></para></summary>
        </member>
        <member name="F:TL.Messages_ExportedChatInviteReplaced.invite">
            <summary>The replaced chat invite</summary>
        </member>
        <member name="F:TL.Messages_ExportedChatInviteReplaced.new_invite">
            <summary>The invite that replaces the previous invite</summary>
        </member>
        <member name="F:TL.Messages_ExportedChatInviteReplaced.users">
            <summary>Mentioned users</summary>
        </member>
        <member name="P:TL.Messages_ExportedChatInviteReplaced.Invite">
            <summary>The replaced chat invite</summary>
        </member>
        <member name="P:TL.Messages_ExportedChatInviteReplaced.Users">
            <summary>Mentioned users</summary>
        </member>
        <member name="T:TL.Messages_ChatInviteImporters">
            <summary>Info about the users that joined the chat using a specific chat invite		<para>See <a href="https://corefork.telegram.org/constructor/messages.chatInviteImporters"/></para></summary>
        </member>
        <member name="F:TL.Messages_ChatInviteImporters.count">
            <summary>Number of users that joined</summary>
        </member>
        <member name="F:TL.Messages_ChatInviteImporters.importers">
            <summary>The users that joined</summary>
        </member>
        <member name="F:TL.Messages_ChatInviteImporters.users">
            <summary>The users that joined</summary>
        </member>
        <member name="T:TL.ChatAdminWithInvites">
            <summary>Info about chat invites generated by admins.		<para>See <a href="https://corefork.telegram.org/constructor/chatAdminWithInvites"/></para></summary>
        </member>
        <member name="F:TL.ChatAdminWithInvites.admin_id">
            <summary>The admin</summary>
        </member>
        <member name="F:TL.ChatAdminWithInvites.invites_count">
            <summary>Number of invites generated by the admin</summary>
        </member>
        <member name="F:TL.ChatAdminWithInvites.revoked_invites_count">
            <summary>Number of revoked invites</summary>
        </member>
        <member name="T:TL.Messages_ChatAdminsWithInvites">
            <summary>Info about chat invites generated by admins.		<para>See <a href="https://corefork.telegram.org/constructor/messages.chatAdminsWithInvites"/></para></summary>
        </member>
        <member name="F:TL.Messages_ChatAdminsWithInvites.admins">
            <summary>Info about chat invites generated by admins.</summary>
        </member>
        <member name="F:TL.Messages_ChatAdminsWithInvites.users">
            <summary>Mentioned users</summary>
        </member>
        <member name="T:TL.Messages_CheckedHistoryImportPeer">
            <summary>Contains a confirmation text to be shown to the user, upon <a href="https://corefork.telegram.org/api/import">importing chat history, click here for more info »</a>.		<para>See <a href="https://corefork.telegram.org/constructor/messages.checkedHistoryImportPeer"/></para></summary>
        </member>
        <member name="F:TL.Messages_CheckedHistoryImportPeer.confirm_text">
            <summary>A confirmation text to be shown to the user, upon <a href="https://corefork.telegram.org/api/import">importing chat history »</a>.</summary>
        </member>
        <member name="T:TL.Phone_JoinAsPeers">
            <summary>A list of peers that can be used to join a group call, presenting yourself as a specific user/channel.		<para>See <a href="https://corefork.telegram.org/constructor/phone.joinAsPeers"/></para></summary>
        </member>
        <member name="F:TL.Phone_JoinAsPeers.peers">
            <summary>Peers</summary>
        </member>
        <member name="F:TL.Phone_JoinAsPeers.chats">
            <summary>Chats mentioned in the peers vector</summary>
        </member>
        <member name="F:TL.Phone_JoinAsPeers.users">
            <summary>Users mentioned in the peers vector</summary>
        </member>
        <member name="M:TL.Phone_JoinAsPeers.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Phone_ExportedGroupCallInvite">
            <summary>An invite to a group call or livestream		<para>See <a href="https://corefork.telegram.org/constructor/phone.exportedGroupCallInvite"/></para></summary>
        </member>
        <member name="F:TL.Phone_ExportedGroupCallInvite.link">
            <summary>Invite link</summary>
        </member>
        <member name="T:TL.GroupCallParticipantVideoSourceGroup">
            <summary>Describes a group of video synchronization source identifiers		<para>See <a href="https://corefork.telegram.org/constructor/groupCallParticipantVideoSourceGroup"/></para></summary>
        </member>
        <member name="F:TL.GroupCallParticipantVideoSourceGroup.semantics">
            <summary>SDP semantics</summary>
        </member>
        <member name="F:TL.GroupCallParticipantVideoSourceGroup.sources">
            <summary>Source IDs</summary>
        </member>
        <member name="T:TL.GroupCallParticipantVideo">
            <summary>Info about a video stream		<para>See <a href="https://corefork.telegram.org/constructor/groupCallParticipantVideo"/></para></summary>
        </member>
        <member name="F:TL.GroupCallParticipantVideo.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.GroupCallParticipantVideo.endpoint">
            <summary>Endpoint</summary>
        </member>
        <member name="F:TL.GroupCallParticipantVideo.source_groups">
            <summary>Source groups</summary>
        </member>
        <member name="F:TL.GroupCallParticipantVideo.audio_source">
            <summary>Audio source ID</summary>
        </member>
        <member name="F:TL.GroupCallParticipantVideo.Flags.paused">
            <summary>Whether the stream is currently paused</summary>
        </member>
        <member name="F:TL.GroupCallParticipantVideo.Flags.has_audio_source">
            <summary>Field <see cref="F:TL.GroupCallParticipantVideo.audio_source"/> has a value</summary>
        </member>
        <member name="T:TL.Stickers_SuggestedShortName">
            <summary>A suggested short name for a stickerpack		<para>See <a href="https://corefork.telegram.org/constructor/stickers.suggestedShortName"/></para></summary>
        </member>
        <member name="F:TL.Stickers_SuggestedShortName.short_name">
            <summary>Suggested short name</summary>
        </member>
        <member name="T:TL.BotCommandScope">
            <summary>Represents a scope where the bot commands, specified using <see cref="M:TL.SchemaExtensions.Bots_SetBotCommands(WTelegram.Client,TL.BotCommandScope,System.String,TL.BotCommand[])">Bots_SetBotCommands</see> will be valid.		<para>See <a href="https://corefork.telegram.org/type/BotCommandScope"/></para>		<para>Derived classes: <see cref="T:TL.BotCommandScopeUsers"/>, <see cref="T:TL.BotCommandScopeChats"/>, <see cref="T:TL.BotCommandScopeChatAdmins"/>, <see cref="T:TL.BotCommandScopePeer"/>, <see cref="T:TL.BotCommandScopePeerAdmins"/>, <see cref="T:TL.BotCommandScopePeerUser"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/botCommandScopeDefault">botCommandScopeDefault</a></remarks>
        </member>
        <member name="T:TL.BotCommandScopeUsers">
            <summary>The specified bot commands will only be valid in all private chats with users.		<para>See <a href="https://corefork.telegram.org/constructor/botCommandScopeUsers"/></para></summary>
        </member>
        <member name="T:TL.BotCommandScopeChats">
            <summary>The specified bot commands will be valid in all <a href="https://corefork.telegram.org/api/channel">groups and supergroups</a>.		<para>See <a href="https://corefork.telegram.org/constructor/botCommandScopeChats"/></para></summary>
        </member>
        <member name="T:TL.BotCommandScopeChatAdmins">
            <summary>The specified bot commands will be valid only for chat administrators, in all <a href="https://corefork.telegram.org/api/channel">groups and supergroups</a>.		<para>See <a href="https://corefork.telegram.org/constructor/botCommandScopeChatAdmins"/></para></summary>
        </member>
        <member name="T:TL.BotCommandScopePeer">
            <summary>The specified bot commands will be valid only in a specific dialog.		<para>See <a href="https://corefork.telegram.org/constructor/botCommandScopePeer"/></para></summary>
        </member>
        <member name="F:TL.BotCommandScopePeer.peer">
            <summary>The dialog</summary>
        </member>
        <member name="T:TL.BotCommandScopePeerAdmins">
            <summary>The specified bot commands will be valid for all admins of the specified <a href="https://corefork.telegram.org/api/channel">group or supergroup</a>.		<para>See <a href="https://corefork.telegram.org/constructor/botCommandScopePeerAdmins"/></para></summary>
        </member>
        <member name="T:TL.BotCommandScopePeerUser">
            <summary>The specified bot commands will be valid only for a specific user in the specified <a href="https://corefork.telegram.org/api/channel">group or supergroup</a>.		<para>See <a href="https://corefork.telegram.org/constructor/botCommandScopePeerUser"/></para></summary>
        </member>
        <member name="F:TL.BotCommandScopePeerUser.user_id">
            <summary>The user</summary>
        </member>
        <member name="T:TL.Account_ResetPasswordResult">
            <summary>Result of an <see cref="M:TL.SchemaExtensions.Account_ResetPassword(WTelegram.Client)">Account_ResetPassword</see> request.		<para>See <a href="https://corefork.telegram.org/type/account.ResetPasswordResult"/></para>		<para>Derived classes: <see cref="T:TL.Account_ResetPasswordFailedWait"/>, <see cref="T:TL.Account_ResetPasswordRequestedWait"/>, <see cref="T:TL.Account_ResetPasswordOk"/></para></summary>
        </member>
        <member name="T:TL.Account_ResetPasswordFailedWait">
            <summary>You recently requested a password reset that was canceled, please wait until the specified date before requesting another reset.		<para>See <a href="https://corefork.telegram.org/constructor/account.resetPasswordFailedWait"/></para></summary>
        </member>
        <member name="F:TL.Account_ResetPasswordFailedWait.retry_date">
            <summary>Wait until this date before requesting another reset.</summary>
        </member>
        <member name="T:TL.Account_ResetPasswordRequestedWait">
            <summary>You successfully requested a password reset, please wait until the specified date before finalizing the reset.		<para>See <a href="https://corefork.telegram.org/constructor/account.resetPasswordRequestedWait"/></para></summary>
        </member>
        <member name="F:TL.Account_ResetPasswordRequestedWait.until_date">
            <summary>Wait until this date before finalizing the reset.</summary>
        </member>
        <member name="T:TL.Account_ResetPasswordOk">
            <summary>The 2FA password was reset successfully.		<para>See <a href="https://corefork.telegram.org/constructor/account.resetPasswordOk"/></para></summary>
        </member>
        <member name="T:TL.SponsoredMessage">
            <summary>A <a href="https://corefork.telegram.org/api/sponsored-messages">sponsored message</a>.		<para>See <a href="https://corefork.telegram.org/constructor/sponsoredMessage"/></para></summary>
        </member>
        <member name="F:TL.SponsoredMessage.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.SponsoredMessage.random_id">
            <summary>Message ID</summary>
        </member>
        <member name="F:TL.SponsoredMessage.message">
            <summary>Sponsored message</summary>
        </member>
        <member name="F:TL.SponsoredMessage.entities">
            <summary><a href="https://corefork.telegram.org/api/entities">Message entities for styled text</a></summary>
        </member>
        <member name="F:TL.SponsoredMessage.button_text">
            <summary>Text of the sponsored message button.</summary>
        </member>
        <member name="F:TL.SponsoredMessage.sponsor_info">
            <summary>If set, contains additional information about the sponsor to be shown along with the message.</summary>
        </member>
        <member name="F:TL.SponsoredMessage.additional_info">
            <summary>If set, contains additional information about the sponsored message to be shown along with the message.</summary>
        </member>
        <member name="F:TL.SponsoredMessage.Flags.has_entities">
            <summary>Field <see cref="F:TL.SponsoredMessage.entities"/> has a value</summary>
        </member>
        <member name="F:TL.SponsoredMessage.Flags.recommended">
            <summary>Whether the message needs to be labeled as "recommended" instead of "sponsored"</summary>
        </member>
        <member name="F:TL.SponsoredMessage.Flags.has_photo">
            <summary>Field <see cref="F:TL.SponsoredMessage.photo"/> has a value</summary>
        </member>
        <member name="F:TL.SponsoredMessage.Flags.has_sponsor_info">
            <summary>Field <see cref="F:TL.SponsoredMessage.sponsor_info"/> has a value</summary>
        </member>
        <member name="F:TL.SponsoredMessage.Flags.has_additional_info">
            <summary>Field <see cref="F:TL.SponsoredMessage.additional_info"/> has a value</summary>
        </member>
        <member name="F:TL.SponsoredMessage.Flags.has_color">
            <summary>Field <see cref="F:TL.SponsoredMessage.color"/> has a value</summary>
        </member>
        <member name="T:TL.Messages_SponsoredMessages">
            <summary>A set of sponsored messages associated to a channel		<para>See <a href="https://corefork.telegram.org/constructor/messages.sponsoredMessages"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/messages.sponsoredMessagesEmpty">messages.sponsoredMessagesEmpty</a></remarks>
        </member>
        <member name="F:TL.Messages_SponsoredMessages.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Messages_SponsoredMessages.posts_between">
            <summary>If set, specifies the minimum number of messages between shown sponsored messages; otherwise, only one sponsored message must be shown after all ordinary messages.</summary>
        </member>
        <member name="F:TL.Messages_SponsoredMessages.messages">
            <summary>Sponsored messages</summary>
        </member>
        <member name="F:TL.Messages_SponsoredMessages.chats">
            <summary>Chats mentioned in the sponsored messages</summary>
        </member>
        <member name="F:TL.Messages_SponsoredMessages.users">
            <summary>Users mentioned in the sponsored messages</summary>
        </member>
        <member name="F:TL.Messages_SponsoredMessages.Flags.has_posts_between">
            <summary>Field <see cref="F:TL.Messages_SponsoredMessages.posts_between"/> has a value</summary>
        </member>
        <member name="M:TL.Messages_SponsoredMessages.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.SearchResultsCalendarPeriod">
            <summary>Information about found messages sent on a specific day, used to split the <c>messages</c> in <see cref="T:TL.Messages_SearchResultsCalendar"/>s by days.		<para>See <a href="https://corefork.telegram.org/constructor/searchResultsCalendarPeriod"/></para></summary>
        </member>
        <member name="F:TL.SearchResultsCalendarPeriod.date">
            <summary>The day this object is referring to.</summary>
        </member>
        <member name="F:TL.SearchResultsCalendarPeriod.min_msg_id">
            <summary>First message ID that was sent on this day.</summary>
        </member>
        <member name="F:TL.SearchResultsCalendarPeriod.max_msg_id">
            <summary>Last message ID that was sent on this day.</summary>
        </member>
        <member name="F:TL.SearchResultsCalendarPeriod.count">
            <summary>All messages that were sent on this day.</summary>
        </member>
        <member name="T:TL.Messages_SearchResultsCalendar">
            <summary>Information about found messages sent on a specific day		<para>See <a href="https://corefork.telegram.org/constructor/messages.searchResultsCalendar"/></para></summary>
        </member>
        <member name="F:TL.Messages_SearchResultsCalendar.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Messages_SearchResultsCalendar.count">
            <summary>Total number of results matching query</summary>
        </member>
        <member name="F:TL.Messages_SearchResultsCalendar.min_date">
            <summary>Starting timestamp of attached messages</summary>
        </member>
        <member name="F:TL.Messages_SearchResultsCalendar.min_msg_id">
            <summary>Ending timestamp of attached messages</summary>
        </member>
        <member name="F:TL.Messages_SearchResultsCalendar.offset_id_offset">
            <summary>Indicates the absolute position of <c>messages[0]</c> within the total result set with count <c>count</c>. <br/>This is useful, for example, if we need to display a <c>progress/total</c> counter (like <c>photo 134 of 200</c>, for all media in a chat, we could simply use <c>photo ${offset_id_offset} of ${count}</c>.</summary>
        </member>
        <member name="F:TL.Messages_SearchResultsCalendar.periods">
            <summary>Used to split the <c>messages</c> by days: multiple <see cref="T:TL.SearchResultsCalendarPeriod"/> constructors are returned, each containing information about the first, last and total number of messages matching the filter that were sent on a specific day.  <br/>This information can be easily used to split the returned <c>messages</c> by day.</summary>
        </member>
        <member name="F:TL.Messages_SearchResultsCalendar.messages">
            <summary>Messages</summary>
        </member>
        <member name="F:TL.Messages_SearchResultsCalendar.chats">
            <summary>Mentioned chats</summary>
        </member>
        <member name="F:TL.Messages_SearchResultsCalendar.users">
            <summary>Mentioned users</summary>
        </member>
        <member name="F:TL.Messages_SearchResultsCalendar.Flags.inexact">
            <summary>If set, indicates that the results may be inexact</summary>
        </member>
        <member name="F:TL.Messages_SearchResultsCalendar.Flags.has_offset_id_offset">
            <summary>Field <see cref="F:TL.Messages_SearchResultsCalendar.offset_id_offset"/> has a value</summary>
        </member>
        <member name="M:TL.Messages_SearchResultsCalendar.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.SearchResultsPosition">
            <summary>Information about a message in a specific position		<para>See <a href="https://corefork.telegram.org/type/SearchResultsPosition"/></para>		<para>Derived classes: <see cref="T:TL.SearchResultPosition"/></para></summary>
        </member>
        <member name="T:TL.SearchResultPosition">
            <summary>Information about a message in a specific position		<para>See <a href="https://corefork.telegram.org/constructor/searchResultPosition"/></para></summary>
        </member>
        <member name="F:TL.SearchResultPosition.msg_id">
            <summary>Message ID</summary>
        </member>
        <member name="F:TL.SearchResultPosition.date">
            <summary>When was the message sent</summary>
        </member>
        <member name="F:TL.SearchResultPosition.offset">
            <summary>0-based message position in the full list of suitable messages</summary>
        </member>
        <member name="T:TL.Messages_SearchResultsPositions">
            <summary>Information about sparse positions of messages		<para>See <a href="https://corefork.telegram.org/constructor/messages.searchResultsPositions"/></para></summary>
        </member>
        <member name="F:TL.Messages_SearchResultsPositions.count">
            <summary>Total number of found messages</summary>
        </member>
        <member name="F:TL.Messages_SearchResultsPositions.positions">
            <summary>List of message positions</summary>
        </member>
        <member name="T:TL.Channels_SendAsPeers">
            <summary>A list of peers that can be used to send messages in a specific group		<para>See <a href="https://corefork.telegram.org/constructor/channels.sendAsPeers"/></para></summary>
        </member>
        <member name="F:TL.Channels_SendAsPeers.peers">
            <summary>Peers that can be used to send messages to the group</summary>
        </member>
        <member name="F:TL.Channels_SendAsPeers.chats">
            <summary>Mentioned chats</summary>
        </member>
        <member name="F:TL.Channels_SendAsPeers.users">
            <summary>Mentioned users</summary>
        </member>
        <member name="M:TL.Channels_SendAsPeers.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Users_UserFull">
            <summary>Full user information		<para>See <a href="https://corefork.telegram.org/constructor/users.userFull"/></para></summary>
        </member>
        <member name="F:TL.Users_UserFull.full_user">
            <summary>Full user information</summary>
        </member>
        <member name="F:TL.Users_UserFull.chats">
            <summary>Mentioned chats</summary>
        </member>
        <member name="F:TL.Users_UserFull.users">
            <summary>Mentioned users</summary>
        </member>
        <member name="M:TL.Users_UserFull.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Messages_PeerSettings">
            <summary>Peer settings		<para>See <a href="https://corefork.telegram.org/constructor/messages.peerSettings"/></para></summary>
        </member>
        <member name="F:TL.Messages_PeerSettings.settings">
            <summary>Peer settings</summary>
        </member>
        <member name="F:TL.Messages_PeerSettings.chats">
            <summary>Mentioned chats</summary>
        </member>
        <member name="F:TL.Messages_PeerSettings.users">
            <summary>Mentioned users</summary>
        </member>
        <member name="M:TL.Messages_PeerSettings.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Auth_LoggedOut">
            <summary><a href="https://corefork.telegram.org/api/auth#future-auth-tokens">Future auth token »</a> to be used on subsequent authorizations		<para>See <a href="https://corefork.telegram.org/constructor/auth.loggedOut"/></para></summary>
        </member>
        <member name="F:TL.Auth_LoggedOut.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Auth_LoggedOut.future_auth_token">
            <summary><a href="https://corefork.telegram.org/api/auth#future-auth-tokens">Future auth token »</a> to be used on subsequent authorizations</summary>
        </member>
        <member name="F:TL.Auth_LoggedOut.Flags.has_future_auth_token">
            <summary>Field <see cref="F:TL.Auth_LoggedOut.future_auth_token"/> has a value</summary>
        </member>
        <member name="T:TL.ReactionCount">
            <summary>Reactions		<para>See <a href="https://corefork.telegram.org/constructor/reactionCount"/></para></summary>
        </member>
        <member name="F:TL.ReactionCount.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.ReactionCount.chosen_order">
            <summary>If set, indicates that the current user also sent this reaction. <br/>The integer value indicates when was the reaction added: the bigger the value, the newer the reaction.</summary>
        </member>
        <member name="F:TL.ReactionCount.reaction">
            <summary>The reaction.</summary>
        </member>
        <member name="F:TL.ReactionCount.count">
            <summary>Number of users that reacted with this emoji.</summary>
        </member>
        <member name="F:TL.ReactionCount.Flags.has_chosen_order">
            <summary>Field <see cref="F:TL.ReactionCount.chosen_order"/> has a value</summary>
        </member>
        <member name="T:TL.MessageReactions">
            <summary><a href="https://corefork.telegram.org/api/reactions">Message reactions »</a>		<para>See <a href="https://corefork.telegram.org/constructor/messageReactions"/></para></summary>
        </member>
        <member name="F:TL.MessageReactions.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.MessageReactions.results">
            <summary>Reactions</summary>
        </member>
        <member name="F:TL.MessageReactions.recent_reactions">
            <summary>List of recent peers and their reactions</summary>
        </member>
        <member name="F:TL.MessageReactions.Flags.min">
            <summary>Similar to <a href="https://corefork.telegram.org/api/min">min</a> objects, used for <a href="https://corefork.telegram.org/api/reactions">message reaction »</a> constructors that are the same for all users so they don't have the reactions sent by the current user (you can use <see cref="M:TL.SchemaExtensions.Messages_GetMessagesReactions(WTelegram.Client,TL.InputPeer,System.Int32[])">Messages_GetMessagesReactions</see> to get the full reaction info).</summary>
        </member>
        <member name="F:TL.MessageReactions.Flags.has_recent_reactions">
            <summary>Field <see cref="F:TL.MessageReactions.recent_reactions"/> has a value</summary>
        </member>
        <member name="F:TL.MessageReactions.Flags.can_see_list">
            <summary>Whether <see cref="M:TL.SchemaExtensions.Messages_GetMessageReactionsList(WTelegram.Client,TL.InputPeer,System.Int32,System.Int32,TL.Reaction,System.String)">Messages_GetMessageReactionsList</see> can be used to see how each specific peer reacted to the message</summary>
        </member>
        <member name="T:TL.Messages_MessageReactionsList">
            <summary>List of peers that reacted to a specific message		<para>See <a href="https://corefork.telegram.org/constructor/messages.messageReactionsList"/></para></summary>
        </member>
        <member name="F:TL.Messages_MessageReactionsList.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Messages_MessageReactionsList.count">
            <summary>Total number of reactions matching query</summary>
        </member>
        <member name="F:TL.Messages_MessageReactionsList.reactions">
            <summary>List of peers that reacted to a specific message</summary>
        </member>
        <member name="F:TL.Messages_MessageReactionsList.chats">
            <summary>Mentioned chats</summary>
        </member>
        <member name="F:TL.Messages_MessageReactionsList.users">
            <summary>Mentioned users</summary>
        </member>
        <member name="F:TL.Messages_MessageReactionsList.next_offset">
            <summary>If set, indicates the next offset to use to load more results by invoking <see cref="M:TL.SchemaExtensions.Messages_GetMessageReactionsList(WTelegram.Client,TL.InputPeer,System.Int32,System.Int32,TL.Reaction,System.String)">Messages_GetMessageReactionsList</see>.</summary>
        </member>
        <member name="F:TL.Messages_MessageReactionsList.Flags.has_next_offset">
            <summary>Field <see cref="F:TL.Messages_MessageReactionsList.next_offset"/> has a value</summary>
        </member>
        <member name="M:TL.Messages_MessageReactionsList.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.AvailableReaction">
            <summary>Animations associated with a message reaction		<para>See <a href="https://corefork.telegram.org/constructor/availableReaction"/></para></summary>
        </member>
        <member name="F:TL.AvailableReaction.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.AvailableReaction.reaction">
            <summary>Reaction emoji</summary>
        </member>
        <member name="F:TL.AvailableReaction.title">
            <summary>Reaction description</summary>
        </member>
        <member name="F:TL.AvailableReaction.static_icon">
            <summary>Static icon for the reaction</summary>
        </member>
        <member name="F:TL.AvailableReaction.appear_animation">
            <summary>The animated sticker to show when the user opens the reaction dropdown</summary>
        </member>
        <member name="F:TL.AvailableReaction.select_animation">
            <summary>The animated sticker to show when the user hovers over the reaction</summary>
        </member>
        <member name="F:TL.AvailableReaction.activate_animation">
            <summary>The animated sticker to show when the reaction is chosen and activated</summary>
        </member>
        <member name="F:TL.AvailableReaction.effect_animation">
            <summary>The background effect (still an animated sticker) to play under the <c>activate_animation</c>, when the reaction is chosen and activated</summary>
        </member>
        <member name="F:TL.AvailableReaction.around_animation">
            <summary>The animation that plays around the button when you press an existing reaction (played together with <c>center_icon</c>).</summary>
        </member>
        <member name="F:TL.AvailableReaction.center_icon">
            <summary>The animation of the emoji inside the button when you press an existing reaction (played together with <c>around_animation</c>).</summary>
        </member>
        <member name="F:TL.AvailableReaction.Flags.inactive">
            <summary>If not set, the reaction can be added to new messages and enabled in chats.</summary>
        </member>
        <member name="F:TL.AvailableReaction.Flags.has_around_animation">
            <summary>Fields <see cref="F:TL.AvailableReaction.around_animation"/> and <see cref="F:TL.AvailableReaction.center_icon"/> have a value</summary>
        </member>
        <member name="F:TL.AvailableReaction.Flags.premium">
            <summary>Whether this reaction can only be used by Telegram Premium users</summary>
        </member>
        <member name="T:TL.Messages_AvailableReactions">
            <summary>Animations and metadata associated with <a href="https://corefork.telegram.org/api/reactions">message reactions »</a>		<para>See <a href="https://corefork.telegram.org/constructor/messages.availableReactions"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/messages.availableReactionsNotModified">messages.availableReactionsNotModified</a></remarks>
        </member>
        <member name="F:TL.Messages_AvailableReactions.hash">
            <summary><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></summary>
        </member>
        <member name="F:TL.Messages_AvailableReactions.reactions">
            <summary>Animations and metadata associated with <a href="https://corefork.telegram.org/api/reactions">message reactions »</a></summary>
        </member>
        <member name="T:TL.MessagePeerReaction">
            <summary>How a certain peer reacted to the message		<para>See <a href="https://corefork.telegram.org/constructor/messagePeerReaction"/></para></summary>
        </member>
        <member name="F:TL.MessagePeerReaction.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.MessagePeerReaction.peer_id">
            <summary>Peer that reacted to the message</summary>
        </member>
        <member name="F:TL.MessagePeerReaction.date">
            <summary>When was this reaction added</summary>
        </member>
        <member name="F:TL.MessagePeerReaction.reaction">
            <summary>Reaction emoji</summary>
        </member>
        <member name="F:TL.MessagePeerReaction.Flags.big">
            <summary>Whether the specified <a href="https://corefork.telegram.org/api/reactions">message reaction »</a> should elicit a bigger and longer reaction</summary>
        </member>
        <member name="F:TL.MessagePeerReaction.Flags.unread">
            <summary>Whether the reaction wasn't yet marked as read by the current user</summary>
        </member>
        <member name="F:TL.MessagePeerReaction.Flags.my">
            <summary>Starting from layer 159, <see cref="M:TL.SchemaExtensions.Messages_SendReaction(WTelegram.Client,TL.InputPeer,System.Int32,TL.Reaction[],System.Boolean,System.Boolean)">Messages_SendReaction</see> will send reactions from the peer (user or channel) specified using <see cref="M:TL.SchemaExtensions.Messages_SaveDefaultSendAs(WTelegram.Client,TL.InputPeer,TL.InputPeer)">Messages_SaveDefaultSendAs</see>. <br/>If set, this flag indicates that this reaction was sent by us, even if the <c>peer</c> doesn't point to the current account.</summary>
        </member>
        <member name="T:TL.GroupCallStreamChannel">
            <summary>Info about an RTMP stream in a group call or livestream		<para>See <a href="https://corefork.telegram.org/constructor/groupCallStreamChannel"/></para></summary>
        </member>
        <member name="F:TL.GroupCallStreamChannel.channel">
            <summary>Channel ID</summary>
        </member>
        <member name="F:TL.GroupCallStreamChannel.scale">
            <summary>Specifies the duration of the video segment to fetch in milliseconds, by bitshifting <c>1000</c> to the right <c>scale</c> times: <c>duration_ms := 1000 &gt;&gt; scale</c>.</summary>
        </member>
        <member name="F:TL.GroupCallStreamChannel.last_timestamp_ms">
            <summary>Last seen timestamp to easily start fetching livestream chunks using <see cref="T:TL.InputGroupCallStream"/></summary>
        </member>
        <member name="T:TL.Phone_GroupCallStreamChannels">
            <summary>Info about RTMP streams in a group call or livestream		<para>See <a href="https://corefork.telegram.org/constructor/phone.groupCallStreamChannels"/></para></summary>
        </member>
        <member name="F:TL.Phone_GroupCallStreamChannels.channels">
            <summary>RTMP streams</summary>
        </member>
        <member name="T:TL.Phone_GroupCallStreamRtmpUrl">
            <summary>RTMP URL and stream key to be used in streaming software		<para>See <a href="https://corefork.telegram.org/constructor/phone.groupCallStreamRtmpUrl"/></para></summary>
        </member>
        <member name="F:TL.Phone_GroupCallStreamRtmpUrl.url">
            <summary>RTMP URL</summary>
        </member>
        <member name="F:TL.Phone_GroupCallStreamRtmpUrl.key">
            <summary>Stream key</summary>
        </member>
        <member name="T:TL.AttachMenuBotIconColor">
            <summary>Represents an attachment menu icon color for <a href="https://corefork.telegram.org/api/bots/attach">bot mini apps »</a>		<para>See <a href="https://corefork.telegram.org/constructor/attachMenuBotIconColor"/></para></summary>
        </member>
        <member name="F:TL.AttachMenuBotIconColor.name">
            <summary>One of the following values: <br/><c>light_icon</c> - Color of the attachment menu icon (light mode) <br/><c>light_text</c> - Color of the attachment menu label, once selected (light mode) <br/><c>dark_icon</c> - Color of the attachment menu icon (dark mode) <br/><c>dark_text</c> - Color of the attachment menu label, once selected (dark mode)</summary>
        </member>
        <member name="F:TL.AttachMenuBotIconColor.color">
            <summary>Color in RGB24 format</summary>
        </member>
        <member name="T:TL.AttachMenuBotIcon">
            <summary>Represents an attachment menu icon for <a href="https://corefork.telegram.org/api/bots/attach">bot mini apps »</a>		<para>See <a href="https://corefork.telegram.org/constructor/attachMenuBotIcon"/></para></summary>
        </member>
        <member name="F:TL.AttachMenuBotIcon.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.AttachMenuBotIcon.name">
            <summary>One of the following values: note that animated icons must be played when the user clicks on the button, activating the bot mini app. <br/><br/><c>default_static</c> - Default attachment menu icon in SVG format <br/><c>placeholder_static</c> - Default placeholder for opened Web Apps in SVG format <br/><c>ios_static</c> - Attachment menu icon in SVG format for the official iOS app <br/><c>ios_animated</c> - Animated attachment menu icon in TGS format for the official iOS app <br/><c>android_animated</c> - Animated attachment menu icon in TGS format for the official Android app <br/><c>macos_animated</c> - Animated attachment menu icon in TGS format for the official native Mac OS app <br/><c>ios_side_menu_static</c> - Side menu icon in PNG format for the official iOS app <br/><c>android_side_menu_static</c> - Side menu icon in SVG format for the official android app <br/><c>macos_side_menu_static</c> - Side menu icon in PNG format for the official native Mac OS app</summary>
        </member>
        <member name="F:TL.AttachMenuBotIcon.icon">
            <summary>The actual icon file.</summary>
        </member>
        <member name="F:TL.AttachMenuBotIcon.colors">
            <summary>Attachment menu icon colors.</summary>
        </member>
        <member name="F:TL.AttachMenuBotIcon.Flags.has_colors">
            <summary>Field <see cref="F:TL.AttachMenuBotIcon.colors"/> has a value</summary>
        </member>
        <member name="T:TL.AttachMenuBot">
            <summary>Represents a <a href="https://corefork.telegram.org/api/bots/attach">bot mini app that can be launched from the attachment/side menu »</a>		<para>See <a href="https://corefork.telegram.org/constructor/attachMenuBot"/></para></summary>
        </member>
        <member name="F:TL.AttachMenuBot.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.AttachMenuBot.bot_id">
            <summary>Bot ID</summary>
        </member>
        <member name="F:TL.AttachMenuBot.short_name">
            <summary>Attachment menu item name</summary>
        </member>
        <member name="F:TL.AttachMenuBot.peer_types">
            <summary>List of dialog types where this attachment menu entry should be shown</summary>
        </member>
        <member name="F:TL.AttachMenuBot.icons">
            <summary>List of platform-specific static icons and animations to use for the attachment menu button</summary>
        </member>
        <member name="F:TL.AttachMenuBot.Flags.inactive">
            <summary>If set, before launching the mini app the client should ask the user to add the mini app to the attachment/side menu, and only if the user accepts, after invoking <see cref="M:TL.SchemaExtensions.Messages_ToggleBotInAttachMenu(WTelegram.Client,TL.InputUserBase,System.Boolean,System.Boolean)">Messages_ToggleBotInAttachMenu</see> the app should be opened.</summary>
        </member>
        <member name="F:TL.AttachMenuBot.Flags.has_settings">
            <summary>Deprecated flag, can be ignored.</summary>
        </member>
        <member name="F:TL.AttachMenuBot.Flags.request_write_access">
            <summary>Whether the bot would like to send messages to the user.</summary>
        </member>
        <member name="F:TL.AttachMenuBot.Flags.show_in_attach_menu">
            <summary>Whether, when installed, an attachment menu entry should be shown for the Mini App.</summary>
        </member>
        <member name="F:TL.AttachMenuBot.Flags.show_in_side_menu">
            <summary>Whether, when installed, an entry in the main view side menu should be shown for the Mini App.</summary>
        </member>
        <member name="F:TL.AttachMenuBot.Flags.side_menu_disclaimer_needed">
            <summary>If <c>inactive</c> if set and the user hasn't previously accepted the third-party mini apps <a href="https://telegram.org/tos/mini-apps">Terms of Service</a> for this bot, when showing the mini app installation prompt, an additional mandatory checkbox to accept the <a href="https://telegram.org/tos/mini-apps">mini apps TOS</a> and a disclaimer indicating that this Mini App is not affiliated to Telegram should be shown.</summary>
        </member>
        <member name="T:TL.AttachMenuBots">
            <summary>Represents a list of <a href="https://corefork.telegram.org/api/bots/attach">bot mini apps that can be launched from the attachment menu »</a>		<para>See <a href="https://corefork.telegram.org/constructor/attachMenuBots"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/attachMenuBotsNotModified">attachMenuBotsNotModified</a></remarks>
        </member>
        <member name="F:TL.AttachMenuBots.hash">
            <summary><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></summary>
        </member>
        <member name="F:TL.AttachMenuBots.bots">
            <summary>List of <a href="https://corefork.telegram.org/api/bots/attach">bot mini apps that can be launched from the attachment menu »</a></summary>
        </member>
        <member name="F:TL.AttachMenuBots.users">
            <summary>Info about related users/bots</summary>
        </member>
        <member name="T:TL.AttachMenuBotsBot">
            <summary>Represents a <a href="https://corefork.telegram.org/api/bots/attach">bot mini app that can be launched from the attachment menu »</a>		<para>See <a href="https://corefork.telegram.org/constructor/attachMenuBotsBot"/></para></summary>
        </member>
        <member name="F:TL.AttachMenuBotsBot.bot">
            <summary>Represents a <a href="https://corefork.telegram.org/api/bots/attach">bot mini app that can be launched from the attachment menu »</a><br/></summary>
        </member>
        <member name="F:TL.AttachMenuBotsBot.users">
            <summary>Info about related users and bots</summary>
        </member>
        <member name="T:TL.WebViewResult">
            <summary>Contains the webview URL with appropriate theme and user info parameters added		<para>See <a href="https://corefork.telegram.org/type/WebViewResult"/></para>		<para>Derived classes: <see cref="T:TL.WebViewResultUrl"/></para></summary>
        </member>
        <member name="T:TL.WebViewResultUrl">
            <summary>Contains the webview URL with appropriate theme and user info parameters added		<para>See <a href="https://corefork.telegram.org/constructor/webViewResultUrl"/></para></summary>
        </member>
        <member name="F:TL.WebViewResultUrl.query_id">
            <summary>Webview session ID</summary>
        </member>
        <member name="F:TL.WebViewResultUrl.url">
            <summary>Webview URL to open</summary>
        </member>
        <member name="T:TL.SimpleWebViewResult">
            <summary>Contains the webview URL with appropriate theme parameters added		<para>See <a href="https://corefork.telegram.org/type/SimpleWebViewResult"/></para>		<para>Derived classes: <see cref="T:TL.SimpleWebViewResultUrl"/></para></summary>
        </member>
        <member name="T:TL.SimpleWebViewResultUrl">
            <summary>Contains the webview URL with appropriate theme parameters added		<para>See <a href="https://corefork.telegram.org/constructor/simpleWebViewResultUrl"/></para></summary>
        </member>
        <member name="F:TL.SimpleWebViewResultUrl.url">
            <summary>URL</summary>
        </member>
        <member name="T:TL.WebViewMessageSent">
            <summary>Info about a sent inline webview message		<para>See <a href="https://corefork.telegram.org/constructor/webViewMessageSent"/></para></summary>
        </member>
        <member name="F:TL.WebViewMessageSent.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.WebViewMessageSent.msg_id">
            <summary>Message ID</summary>
        </member>
        <member name="F:TL.WebViewMessageSent.Flags.has_msg_id">
            <summary>Field <see cref="F:TL.WebViewMessageSent.msg_id"/> has a value</summary>
        </member>
        <member name="T:TL.BotMenuButtonBase">
            <summary>Indicates the action to execute when pressing the in-UI menu button for bots		<para>See <a href="https://corefork.telegram.org/type/BotMenuButton"/></para>		<para>Derived classes: <see cref="T:TL.BotMenuButtonCommands"/>, <see cref="T:TL.BotMenuButton"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/botMenuButtonDefault">botMenuButtonDefault</a></remarks>
        </member>
        <member name="T:TL.BotMenuButtonCommands">
            <summary><a href="https://corefork.telegram.org/api/bots/menu">Bot menu button</a> that opens the bot command list when clicked.		<para>See <a href="https://corefork.telegram.org/constructor/botMenuButtonCommands"/></para></summary>
        </member>
        <member name="T:TL.BotMenuButton">
            <summary><a href="https://corefork.telegram.org/api/bots/menu">Bot menu button</a> that opens a <a href="https://corefork.telegram.org/api/bots/webapps">web app</a> when clicked.		<para>See <a href="https://corefork.telegram.org/constructor/botMenuButton"/></para></summary>
        </member>
        <member name="F:TL.BotMenuButton.text">
            <summary>Title to be displayed on the menu button instead of 'Menu'</summary>
        </member>
        <member name="F:TL.BotMenuButton.url">
            <summary>URL of a <a href="https://corefork.telegram.org/api/bots/webapps">web app</a> to open when the user clicks on the button</summary>
        </member>
        <member name="T:TL.Account_SavedRingtones">
            <summary>A list of saved notification sounds		<para>See <a href="https://corefork.telegram.org/constructor/account.savedRingtones"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/account.savedRingtonesNotModified">account.savedRingtonesNotModified</a></remarks>
        </member>
        <member name="F:TL.Account_SavedRingtones.hash">
            <summary><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></summary>
        </member>
        <member name="F:TL.Account_SavedRingtones.ringtones">
            <summary>Saved notification sounds</summary>
        </member>
        <member name="T:TL.NotificationSound">
            <summary>Represents a notification sound		<para>See <a href="https://corefork.telegram.org/type/NotificationSound"/></para>		<para>Derived classes: <see cref="T:TL.NotificationSoundNone"/>, <see cref="T:TL.NotificationSoundLocal"/>, <see cref="T:TL.NotificationSoundRingtone"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/notificationSoundDefault">notificationSoundDefault</a></remarks>
        </member>
        <member name="T:TL.NotificationSoundNone">
            <summary>No notification sound should be used		<para>See <a href="https://corefork.telegram.org/constructor/notificationSoundNone"/></para></summary>
        </member>
        <member name="T:TL.NotificationSoundLocal">
            <summary>Indicates a specific local notification sound should be used		<para>See <a href="https://corefork.telegram.org/constructor/notificationSoundLocal"/></para></summary>
        </member>
        <member name="F:TL.NotificationSoundLocal.title">
            <summary>Notification sound title</summary>
        </member>
        <member name="F:TL.NotificationSoundLocal.data">
            <summary>Notification sound identifier (arbitrary data used by the client to identify a specific local notification sound)</summary>
        </member>
        <member name="T:TL.NotificationSoundRingtone">
            <summary>A specific previously uploaded notification sound should be used		<para>See <a href="https://corefork.telegram.org/constructor/notificationSoundRingtone"/></para></summary>
        </member>
        <member name="F:TL.NotificationSoundRingtone.id">
            <summary>Document ID of notification sound uploaded using <see cref="M:TL.SchemaExtensions.Account_UploadRingtone(WTelegram.Client,TL.InputFileBase,System.String,System.String)">Account_UploadRingtone</see></summary>
        </member>
        <member name="T:TL.Account_SavedRingtone">
            <summary>The notification sound was already in MP3 format and was saved without any modification		<para>See <a href="https://corefork.telegram.org/constructor/account.savedRingtone"/></para></summary>
        </member>
        <member name="T:TL.Account_SavedRingtoneConverted">
            <summary>The notification sound was not in MP3 format and was successfully converted and saved, use the returned <see cref="T:TL.DocumentBase"/> to refer to the notification sound from now on		<para>See <a href="https://corefork.telegram.org/constructor/account.savedRingtoneConverted"/></para></summary>
        </member>
        <member name="F:TL.Account_SavedRingtoneConverted.document">
            <summary>The converted notification sound</summary>
        </member>
        <member name="T:TL.AttachMenuPeerType">
            <summary>Indicates a supported peer type for a <a href="https://corefork.telegram.org/bots/webapps#launching-mini-apps-from-the-attachment-menu">bot mini app attachment menu</a>		<para>See <a href="https://corefork.telegram.org/type/AttachMenuPeerType"/></para></summary>
        </member>
        <member name="F:TL.AttachMenuPeerType.SameBotPM">
            <summary>The bot attachment menu entry is available in the chat with the bot that offers it</summary>
        </member>
        <member name="F:TL.AttachMenuPeerType.BotPM">
            <summary>The bot attachment menu entry is available in private chats with other bots (excluding the bot that offers the current attachment menu)</summary>
        </member>
        <member name="F:TL.AttachMenuPeerType.PM">
            <summary>The bot attachment menu entry is available in private chats with other users (not bots)</summary>
        </member>
        <member name="F:TL.AttachMenuPeerType.Chat">
            <summary>The bot attachment menu entry is available in <a href="https://corefork.telegram.org/api/channel">groups and supergroups</a></summary>
        </member>
        <member name="F:TL.AttachMenuPeerType.Broadcast">
            <summary>The bot attachment menu entry is available in channels</summary>
        </member>
        <member name="T:TL.InputInvoice">
            <summary>An invoice		<para>See <a href="https://corefork.telegram.org/type/InputInvoice"/></para>		<para>Derived classes: <see cref="T:TL.InputInvoiceMessage"/>, <see cref="T:TL.InputInvoiceSlug"/>, <see cref="T:TL.InputInvoicePremiumGiftCode"/></para></summary>
        </member>
        <member name="T:TL.InputInvoiceMessage">
            <summary>An invoice contained in a <see cref="T:TL.MessageMediaInvoice"/> message.		<para>See <a href="https://corefork.telegram.org/constructor/inputInvoiceMessage"/></para></summary>
        </member>
        <member name="F:TL.InputInvoiceMessage.peer">
            <summary>Chat where the invoice was sent</summary>
        </member>
        <member name="F:TL.InputInvoiceMessage.msg_id">
            <summary>Message ID</summary>
        </member>
        <member name="T:TL.InputInvoiceSlug">
            <summary>An invoice slug taken from an <a href="https://corefork.telegram.org/api/links#invoice-links">invoice deep link</a> or from the <a href="https://corefork.telegram.org/api/config#premium-invoice-slug"><c>premium_invoice_slug</c> app config parameter »</a>		<para>See <a href="https://corefork.telegram.org/constructor/inputInvoiceSlug"/></para></summary>
        </member>
        <member name="F:TL.InputInvoiceSlug.slug">
            <summary>The invoice slug</summary>
        </member>
        <member name="T:TL.InputInvoicePremiumGiftCode">
            <summary>Used if the user wishes to start a channel <a href="https://corefork.telegram.org/api/giveaways">giveaway</a> or send some <a href="https://corefork.telegram.org/api/giveaways">giftcodes</a> to members of a channel, in exchange for <a href="https://corefork.telegram.org/api/boost">boosts</a>.		<para>See <a href="https://corefork.telegram.org/constructor/inputInvoicePremiumGiftCode"/></para></summary>
        </member>
        <member name="F:TL.InputInvoicePremiumGiftCode.purpose">
            <summary>Should be populated with <see cref="T:TL.InputStorePaymentPremiumGiveaway"/> for <a href="https://corefork.telegram.org/api/giveaways">giveaways</a> and <see cref="T:TL.InputStorePaymentPremiumGiftCode"/> for <a href="https://corefork.telegram.org/api/giveaways">gifts</a>.</summary>
        </member>
        <member name="F:TL.InputInvoicePremiumGiftCode.option">
            <summary>Should be populated with one of the giveaway options returned by <see cref="M:TL.SchemaExtensions.Payments_GetPremiumGiftCodeOptions(WTelegram.Client,TL.InputPeer)">Payments_GetPremiumGiftCodeOptions</see>, see the <a href="https://corefork.telegram.org/api/giveaways">giveaways »</a> documentation for more info.</summary>
        </member>
        <member name="T:TL.Payments_ExportedInvoice">
            <summary>Exported <a href="https://corefork.telegram.org/api/links#invoice-links">invoice deep link</a>		<para>See <a href="https://corefork.telegram.org/constructor/payments.exportedInvoice"/></para></summary>
        </member>
        <member name="F:TL.Payments_ExportedInvoice.url">
            <summary>Exported <a href="https://corefork.telegram.org/api/links#invoice-links">invoice deep link</a></summary>
        </member>
        <member name="T:TL.Messages_TranscribedAudio">
            <summary><a href="https://corefork.telegram.org/api/transcribe">Transcribed text from a voice message »</a>		<para>See <a href="https://corefork.telegram.org/constructor/messages.transcribedAudio"/></para></summary>
        </member>
        <member name="F:TL.Messages_TranscribedAudio.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Messages_TranscribedAudio.transcription_id">
            <summary>Transcription ID</summary>
        </member>
        <member name="F:TL.Messages_TranscribedAudio.text">
            <summary>Transcripted text</summary>
        </member>
        <member name="F:TL.Messages_TranscribedAudio.trial_remains_num">
            <summary>For non-<a href="https://corefork.telegram.org/api/premium">Premium</a> users, this flag will be set, indicating the remaining transcriptions in the free trial period.</summary>
        </member>
        <member name="F:TL.Messages_TranscribedAudio.trial_remains_until_date">
            <summary>For non-<a href="https://corefork.telegram.org/api/premium">Premium</a> users, this flag will be set, indicating the date when the <c>trial_remains_num</c> counter will be reset to the maximum value of <a href="https://corefork.telegram.org/api/config#transcribe-audio-trial-weekly-number">transcribe_audio_trial_weekly_number</a>.</summary>
        </member>
        <member name="F:TL.Messages_TranscribedAudio.Flags.pending">
            <summary>Whether the transcription is partial because audio transcription is still in progress, if set the user may receive further <see cref="T:TL.UpdateTranscribedAudio"/> updates with the updated transcription.</summary>
        </member>
        <member name="F:TL.Messages_TranscribedAudio.Flags.has_trial_remains_num">
            <summary>Fields <see cref="F:TL.Messages_TranscribedAudio.trial_remains_num"/> and <see cref="F:TL.Messages_TranscribedAudio.trial_remains_until_date"/> have a value</summary>
        </member>
        <member name="T:TL.Help_PremiumPromo">
            <summary>Telegram Premium promotion information		<para>See <a href="https://corefork.telegram.org/constructor/help.premiumPromo"/></para></summary>
        </member>
        <member name="F:TL.Help_PremiumPromo.status_text">
            <summary>Description of the current state of the user's Telegram Premium subscription</summary>
        </member>
        <member name="F:TL.Help_PremiumPromo.status_entities">
            <summary><a href="https://corefork.telegram.org/api/entities">Message entities for styled text</a></summary>
        </member>
        <member name="F:TL.Help_PremiumPromo.video_sections">
            <summary>A list of <a href="https://corefork.telegram.org/api/premium">premium feature identifiers »</a>, associated to each video</summary>
        </member>
        <member name="F:TL.Help_PremiumPromo.videos">
            <summary>A list of videos</summary>
        </member>
        <member name="F:TL.Help_PremiumPromo.period_options">
            <summary>Telegram Premium subscription options</summary>
        </member>
        <member name="F:TL.Help_PremiumPromo.users">
            <summary>Related user information</summary>
        </member>
        <member name="T:TL.InputStorePaymentPurpose">
            <summary>Info about a Telegram Premium purchase		<para>See <a href="https://corefork.telegram.org/type/InputStorePaymentPurpose"/></para>		<para>Derived classes: <see cref="T:TL.InputStorePaymentPremiumSubscription"/>, <see cref="T:TL.InputStorePaymentGiftPremium"/>, <see cref="T:TL.InputStorePaymentPremiumGiftCode"/>, <see cref="T:TL.InputStorePaymentPremiumGiveaway"/></para></summary>
        </member>
        <member name="T:TL.InputStorePaymentPremiumSubscription">
            <summary>Info about a Telegram Premium purchase		<para>See <a href="https://corefork.telegram.org/constructor/inputStorePaymentPremiumSubscription"/></para></summary>
        </member>
        <member name="F:TL.InputStorePaymentPremiumSubscription.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.InputStorePaymentPremiumSubscription.Flags.restore">
            <summary>Pass true if this is a restore of a Telegram Premium purchase; only for the App Store</summary>
        </member>
        <member name="F:TL.InputStorePaymentPremiumSubscription.Flags.upgrade">
            <summary>Pass true if this is an upgrade from a monthly subscription to a yearly subscription; only for App Store</summary>
        </member>
        <member name="T:TL.InputStorePaymentGiftPremium">
            <summary>Info about a gifted Telegram Premium purchase		<para>See <a href="https://corefork.telegram.org/constructor/inputStorePaymentGiftPremium"/></para></summary>
        </member>
        <member name="F:TL.InputStorePaymentGiftPremium.user_id">
            <summary>The user to which the Telegram Premium subscription was gifted</summary>
        </member>
        <member name="F:TL.InputStorePaymentGiftPremium.currency">
            <summary>Three-letter ISO 4217 <a href="https://corefork.telegram.org/bots/payments#supported-currencies">currency</a> code</summary>
        </member>
        <member name="F:TL.InputStorePaymentGiftPremium.amount">
            <summary>Price of the product in the smallest units of the currency (integer, not float/double). For example, for a price of <c>US$ 1.45</c> pass <c>amount = 145</c>. See the exp parameter in <a href="https://corefork.telegram.org/bots/payments/currencies.json">currencies.json</a>, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies).</summary>
        </member>
        <member name="T:TL.InputStorePaymentPremiumGiftCode">
            <summary>Used to gift <a href="https://corefork.telegram.org/api/premium">Telegram Premium</a> subscriptions only to some specific subscribers of a channel or to some of our contacts, see <a href="https://corefork.telegram.org/api/giveaways">here »</a> for more info on giveaways and gifts.		<para>See <a href="https://corefork.telegram.org/constructor/inputStorePaymentPremiumGiftCode"/></para></summary>
        </member>
        <member name="F:TL.InputStorePaymentPremiumGiftCode.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.InputStorePaymentPremiumGiftCode.users">
            <summary>The users that will receive the <a href="https://corefork.telegram.org/api/premium">Telegram Premium</a> subscriptions.</summary>
        </member>
        <member name="F:TL.InputStorePaymentPremiumGiftCode.boost_peer">
            <summary>If set, the gifts will be sent on behalf of a channel we are an admin of, which will also assign some <a href="https://corefork.telegram.org/api/boost">boosts</a> to it. Otherwise, the gift will be sent directly from the currently logged in users, and we will gain some extra <a href="https://corefork.telegram.org/api/boost">boost slots</a>. See <a href="https://corefork.telegram.org/api/giveaways">here »</a> for more info on giveaways and gifts.</summary>
        </member>
        <member name="F:TL.InputStorePaymentPremiumGiftCode.currency">
            <summary>Three-letter ISO 4217 <a href="https://corefork.telegram.org/bots/payments#supported-currencies">currency</a> code</summary>
        </member>
        <member name="F:TL.InputStorePaymentPremiumGiftCode.amount">
            <summary>Total price in the smallest units of the currency (integer, not float/double). For example, for a price of <c>US$ 1.45</c> pass <c>amount = 145</c>. See the exp parameter in <a href="https://corefork.telegram.org/bots/payments/currencies.json">currencies.json</a>, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies).</summary>
        </member>
        <member name="F:TL.InputStorePaymentPremiumGiftCode.Flags.has_boost_peer">
            <summary>Field <see cref="F:TL.InputStorePaymentPremiumGiftCode.boost_peer"/> has a value</summary>
        </member>
        <member name="T:TL.InputStorePaymentPremiumGiveaway">
            <summary>Used to pay for a <a href="https://corefork.telegram.org/api/giveaways">giveaway, see here »</a> for more info.		<para>See <a href="https://corefork.telegram.org/constructor/inputStorePaymentPremiumGiveaway"/></para></summary>
        </member>
        <member name="F:TL.InputStorePaymentPremiumGiveaway.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.InputStorePaymentPremiumGiveaway.boost_peer">
            <summary>The channel starting the giveaway, that the user must join to participate, that will receive the giveaway <a href="https://corefork.telegram.org/api/boost">boosts</a>; see <a href="https://corefork.telegram.org/api/giveaways">here »</a> for more info on giveaways.</summary>
        </member>
        <member name="F:TL.InputStorePaymentPremiumGiveaway.additional_peers">
            <summary>Additional channels that the user must join to participate to the giveaway can be specified here.</summary>
        </member>
        <member name="F:TL.InputStorePaymentPremiumGiveaway.countries_iso2">
            <summary>The set of users that can participate to the giveaway can be restricted by passing here an explicit whitelist of up to <a href="https://corefork.telegram.org/api/config#giveaway-countries-max">giveaway_countries_max</a> countries, specified as two-letter ISO 3166-1 alpha-2 country codes.</summary>
        </member>
        <member name="F:TL.InputStorePaymentPremiumGiveaway.prize_description">
            <summary>Can contain a textual description of additional giveaway prizes.</summary>
        </member>
        <member name="F:TL.InputStorePaymentPremiumGiveaway.random_id">
            <summary>Random ID to avoid resending the giveaway</summary>
        </member>
        <member name="F:TL.InputStorePaymentPremiumGiveaway.until_date">
            <summary>The end date of the giveaway, must be at most <a href="https://corefork.telegram.org/api/config#giveaway-period-max">giveaway_period_max</a> seconds in the future; see <a href="https://corefork.telegram.org/api/giveaways">here »</a> for more info on giveaways.</summary>
        </member>
        <member name="F:TL.InputStorePaymentPremiumGiveaway.currency">
            <summary>Three-letter ISO 4217 <a href="https://corefork.telegram.org/bots/payments#supported-currencies">currency</a> code</summary>
        </member>
        <member name="F:TL.InputStorePaymentPremiumGiveaway.amount">
            <summary>Total price in the smallest units of the currency (integer, not float/double). For example, for a price of <c>US$ 1.45</c> pass <c>amount = 145</c>. See the exp parameter in <a href="https://corefork.telegram.org/bots/payments/currencies.json">currencies.json</a>, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies).</summary>
        </member>
        <member name="F:TL.InputStorePaymentPremiumGiveaway.Flags.only_new_subscribers">
            <summary>If set, only new subscribers starting from the giveaway creation date will be able to participate to the giveaway.</summary>
        </member>
        <member name="F:TL.InputStorePaymentPremiumGiveaway.Flags.has_additional_peers">
            <summary>Field <see cref="F:TL.InputStorePaymentPremiumGiveaway.additional_peers"/> has a value</summary>
        </member>
        <member name="F:TL.InputStorePaymentPremiumGiveaway.Flags.has_countries_iso2">
            <summary>Field <see cref="F:TL.InputStorePaymentPremiumGiveaway.countries_iso2"/> has a value</summary>
        </member>
        <member name="F:TL.InputStorePaymentPremiumGiveaway.Flags.winners_are_visible">
            <summary>If set, giveaway winners are public and will be listed in a <see cref="T:TL.MessageMediaGiveawayResults"/> message that will be automatically sent to the channel once the giveaway ends.</summary>
        </member>
        <member name="F:TL.InputStorePaymentPremiumGiveaway.Flags.has_prize_description">
            <summary>Field <see cref="F:TL.InputStorePaymentPremiumGiveaway.prize_description"/> has a value</summary>
        </member>
        <member name="T:TL.PremiumGiftOption">
            <summary>Telegram Premium gift option		<para>See <a href="https://corefork.telegram.org/constructor/premiumGiftOption"/></para></summary>
        </member>
        <member name="F:TL.PremiumGiftOption.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.PremiumGiftOption.months">
            <summary>Duration of gifted Telegram Premium subscription</summary>
        </member>
        <member name="F:TL.PremiumGiftOption.currency">
            <summary>Three-letter ISO 4217 <a href="https://corefork.telegram.org/bots/payments#supported-currencies">currency</a> code</summary>
        </member>
        <member name="F:TL.PremiumGiftOption.amount">
            <summary>Price of the product in the smallest units of the currency (integer, not float/double). For example, for a price of <c>US$ 1.45</c> pass <c>amount = 145</c>. See the exp parameter in <a href="https://corefork.telegram.org/bots/payments/currencies.json">currencies.json</a>, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies).</summary>
        </member>
        <member name="F:TL.PremiumGiftOption.bot_url">
            <summary>An <a href="https://corefork.telegram.org/api/links#invoice-links">invoice deep link »</a> to an invoice for in-app payment, using the official Premium bot; may be empty if direct payment isn't available.</summary>
        </member>
        <member name="F:TL.PremiumGiftOption.store_product">
            <summary>An identifier for the App Store/Play Store product associated with the Premium gift.</summary>
        </member>
        <member name="F:TL.PremiumGiftOption.Flags.has_store_product">
            <summary>Field <see cref="F:TL.PremiumGiftOption.store_product"/> has a value</summary>
        </member>
        <member name="T:TL.PaymentFormMethod">
            <summary>Represents an additional payment method		<para>See <a href="https://corefork.telegram.org/constructor/paymentFormMethod"/></para></summary>
        </member>
        <member name="F:TL.PaymentFormMethod.url">
            <summary>URL to open in a webview to process the payment</summary>
        </member>
        <member name="F:TL.PaymentFormMethod.title">
            <summary>Payment method description</summary>
        </member>
        <member name="T:TL.EmojiStatus">
            <summary>An <a href="https://corefork.telegram.org/api/emoji-status">emoji status</a>		<para>See <a href="https://corefork.telegram.org/constructor/emojiStatus"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/emojiStatusEmpty">emojiStatusEmpty</a></remarks>
        </member>
        <member name="F:TL.EmojiStatus.document_id">
            <summary><a href="https://corefork.telegram.org/api/custom-emoji">Custom emoji document ID</a></summary>
        </member>
        <member name="T:TL.EmojiStatusUntil">
            <summary>An <a href="https://corefork.telegram.org/api/emoji-status">emoji status</a> valid until the specified date		<para>See <a href="https://corefork.telegram.org/constructor/emojiStatusUntil"/></para></summary>
        </member>
        <member name="F:TL.EmojiStatusUntil.until">
            <summary>This status is valid until this date</summary>
        </member>
        <member name="T:TL.Account_EmojiStatuses">
            <summary>A list of <a href="https://corefork.telegram.org/api/emoji-status">emoji statuses</a>		<para>See <a href="https://corefork.telegram.org/constructor/account.emojiStatuses"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/account.emojiStatusesNotModified">account.emojiStatusesNotModified</a></remarks>
        </member>
        <member name="F:TL.Account_EmojiStatuses.hash">
            <summary><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></summary>
        </member>
        <member name="F:TL.Account_EmojiStatuses.statuses">
            <summary><a href="https://corefork.telegram.org/api/emoji-status">Emoji statuses</a></summary>
        </member>
        <member name="T:TL.Reaction">
            <summary><a href="https://corefork.telegram.org/api/reactions">Message reaction</a>		<para>See <a href="https://corefork.telegram.org/type/Reaction"/></para>		<para>Derived classes: <see cref="T:TL.ReactionEmoji"/>, <see cref="T:TL.ReactionCustomEmoji"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/reactionEmpty">reactionEmpty</a></remarks>
        </member>
        <member name="T:TL.ReactionEmoji">
            <summary>Normal emoji message reaction		<para>See <a href="https://corefork.telegram.org/constructor/reactionEmoji"/></para></summary>
        </member>
        <member name="F:TL.ReactionEmoji.emoticon">
            <summary>Emoji</summary>
        </member>
        <member name="T:TL.ReactionCustomEmoji">
            <summary><a href="https://corefork.telegram.org/api/custom-emoji">Custom emoji</a> message reaction		<para>See <a href="https://corefork.telegram.org/constructor/reactionCustomEmoji"/></para></summary>
        </member>
        <member name="F:TL.ReactionCustomEmoji.document_id">
            <summary><a href="https://corefork.telegram.org/api/custom-emoji">Custom emoji document ID</a></summary>
        </member>
        <member name="T:TL.ChatReactions">
            <summary>Available chat reactions		<para>See <a href="https://corefork.telegram.org/type/ChatReactions"/></para>		<para>Derived classes: <see cref="T:TL.ChatReactionsAll"/>, <see cref="T:TL.ChatReactionsSome"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/chatReactionsNone">chatReactionsNone</a></remarks>
        </member>
        <member name="T:TL.ChatReactionsAll">
            <summary>All reactions or all non-custom reactions are allowed		<para>See <a href="https://corefork.telegram.org/constructor/chatReactionsAll"/></para></summary>
        </member>
        <member name="F:TL.ChatReactionsAll.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.ChatReactionsAll.Flags.allow_custom">
            <summary>Whether to allow custom reactions</summary>
        </member>
        <member name="T:TL.ChatReactionsSome">
            <summary>Some reactions are allowed		<para>See <a href="https://corefork.telegram.org/constructor/chatReactionsSome"/></para></summary>
        </member>
        <member name="F:TL.ChatReactionsSome.reactions">
            <summary>Allowed set of reactions: the <a href="https://corefork.telegram.org/api/config#reactions-in-chat-max">reactions_in_chat_max</a> configuration field indicates the maximum number of reactions that can be specified in this field.</summary>
        </member>
        <member name="T:TL.Messages_Reactions">
            <summary>List of <a href="https://corefork.telegram.org/api/reactions">message reactions</a>		<para>See <a href="https://corefork.telegram.org/constructor/messages.reactions"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/messages.reactionsNotModified">messages.reactionsNotModified</a></remarks>
        </member>
        <member name="F:TL.Messages_Reactions.hash">
            <summary><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></summary>
        </member>
        <member name="F:TL.Messages_Reactions.reactions">
            <summary>Reactions</summary>
        </member>
        <member name="T:TL.EmailVerifyPurpose">
            <summary>Email verification purpose		<para>See <a href="https://corefork.telegram.org/type/EmailVerifyPurpose"/></para>		<para>Derived classes: <see cref="T:TL.EmailVerifyPurposeLoginSetup"/>, <see cref="T:TL.EmailVerifyPurposeLoginChange"/>, <see cref="T:TL.EmailVerifyPurposePassport"/></para></summary>
        </member>
        <member name="T:TL.EmailVerifyPurposeLoginSetup">
            <summary>Email verification purpose: setup login email		<para>See <a href="https://corefork.telegram.org/constructor/emailVerifyPurposeLoginSetup"/></para></summary>
        </member>
        <member name="F:TL.EmailVerifyPurposeLoginSetup.phone_number">
            <summary>Phone number</summary>
        </member>
        <member name="F:TL.EmailVerifyPurposeLoginSetup.phone_code_hash">
            <summary>Phone code hash as specified by the <a href="https://corefork.telegram.org/api/auth#email-verification">documentation</a></summary>
        </member>
        <member name="T:TL.EmailVerifyPurposeLoginChange">
            <summary>Email verification purpose: change login email		<para>See <a href="https://corefork.telegram.org/constructor/emailVerifyPurposeLoginChange"/></para></summary>
        </member>
        <member name="T:TL.EmailVerifyPurposePassport">
            <summary>Verify an email for use in <a href="https://corefork.telegram.org/api/passport">telegram passport</a>		<para>See <a href="https://corefork.telegram.org/constructor/emailVerifyPurposePassport"/></para></summary>
        </member>
        <member name="T:TL.EmailVerification">
            <summary>Email verification code or token		<para>See <a href="https://corefork.telegram.org/type/EmailVerification"/></para>		<para>Derived classes: <see cref="T:TL.EmailVerificationCode"/>, <see cref="T:TL.EmailVerificationGoogle"/>, <see cref="T:TL.EmailVerificationApple"/></para></summary>
        </member>
        <member name="T:TL.EmailVerificationCode">
            <summary>Email verification code		<para>See <a href="https://corefork.telegram.org/constructor/emailVerificationCode"/></para></summary>
        </member>
        <member name="F:TL.EmailVerificationCode.code">
            <summary>Received verification code</summary>
        </member>
        <member name="T:TL.EmailVerificationGoogle">
            <summary>Google ID email verification token		<para>See <a href="https://corefork.telegram.org/constructor/emailVerificationGoogle"/></para></summary>
        </member>
        <member name="F:TL.EmailVerificationGoogle.token">
            <summary>Token</summary>
        </member>
        <member name="T:TL.EmailVerificationApple">
            <summary>Apple ID email verification token		<para>See <a href="https://corefork.telegram.org/constructor/emailVerificationApple"/></para></summary>
        </member>
        <member name="F:TL.EmailVerificationApple.token">
            <summary>Token</summary>
        </member>
        <member name="T:TL.Account_EmailVerified">
            <summary>The email was verified correctly.		<para>See <a href="https://corefork.telegram.org/constructor/account.emailVerified"/></para></summary>
        </member>
        <member name="F:TL.Account_EmailVerified.email">
            <summary>The verified email address.</summary>
        </member>
        <member name="T:TL.Account_EmailVerifiedLogin">
            <summary>The email was verified correctly, and a login code was just sent to it.		<para>See <a href="https://corefork.telegram.org/constructor/account.emailVerifiedLogin"/></para></summary>
        </member>
        <member name="F:TL.Account_EmailVerifiedLogin.sent_code">
            <summary>Info about the sent <a href="https://corefork.telegram.org/api/auth">login code</a></summary>
        </member>
        <member name="T:TL.PremiumSubscriptionOption">
            <summary>Describes a Telegram Premium subscription option		<para>See <a href="https://corefork.telegram.org/constructor/premiumSubscriptionOption"/></para></summary>
        </member>
        <member name="F:TL.PremiumSubscriptionOption.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.PremiumSubscriptionOption.transaction">
            <summary>Identifier of the last in-store transaction for the currently used subscription on the current account.</summary>
        </member>
        <member name="F:TL.PremiumSubscriptionOption.months">
            <summary>Duration of subscription in months</summary>
        </member>
        <member name="F:TL.PremiumSubscriptionOption.currency">
            <summary>Three-letter ISO 4217 <a href="https://corefork.telegram.org/bots/payments#supported-currencies">currency</a> code</summary>
        </member>
        <member name="F:TL.PremiumSubscriptionOption.amount">
            <summary>Total price in the smallest units of the currency (integer, not float/double). For example, for a price of <c>US$ 1.45</c> pass <c>amount = 145</c>. See the exp parameter in <a href="https://corefork.telegram.org/bots/payments/currencies.json">currencies.json</a>, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies).</summary>
        </member>
        <member name="F:TL.PremiumSubscriptionOption.bot_url">
            <summary><a href="https://corefork.telegram.org/api/links">Deep link</a> used to initiate payment</summary>
        </member>
        <member name="F:TL.PremiumSubscriptionOption.store_product">
            <summary>Store product ID, only for official apps</summary>
        </member>
        <member name="F:TL.PremiumSubscriptionOption.Flags.has_store_product">
            <summary>Field <see cref="F:TL.PremiumSubscriptionOption.store_product"/> has a value</summary>
        </member>
        <member name="F:TL.PremiumSubscriptionOption.Flags.current">
            <summary>Whether this subscription option is currently in use.</summary>
        </member>
        <member name="F:TL.PremiumSubscriptionOption.Flags.can_purchase_upgrade">
            <summary>Whether this subscription option can be used to upgrade the existing Telegram Premium subscription. When upgrading Telegram Premium subscriptions bought through stores, make sure that the store transaction ID is equal to <c>transaction</c>, to avoid upgrading someone else's account, if the client is currently logged into multiple accounts.</summary>
        </member>
        <member name="F:TL.PremiumSubscriptionOption.Flags.has_transaction">
            <summary>Field <see cref="F:TL.PremiumSubscriptionOption.transaction"/> has a value</summary>
        </member>
        <member name="T:TL.SendAsPeer">
            <summary>Indicates a peer that can be used to send messages		<para>See <a href="https://corefork.telegram.org/constructor/sendAsPeer"/></para></summary>
        </member>
        <member name="F:TL.SendAsPeer.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.SendAsPeer.peer">
            <summary>Peer</summary>
        </member>
        <member name="F:TL.SendAsPeer.Flags.premium_required">
            <summary>Whether a Telegram Premium account is required to send messages as this peer</summary>
        </member>
        <member name="T:TL.MessageExtendedMediaBase">
            <summary>Extended media		<para>See <a href="https://corefork.telegram.org/type/MessageExtendedMedia"/></para>		<para>Derived classes: <see cref="T:TL.MessageExtendedMediaPreview"/>, <see cref="T:TL.MessageExtendedMedia"/></para></summary>
        </member>
        <member name="T:TL.MessageExtendedMediaPreview">
            <summary>Extended media preview		<para>See <a href="https://corefork.telegram.org/constructor/messageExtendedMediaPreview"/></para></summary>
        </member>
        <member name="F:TL.MessageExtendedMediaPreview.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.MessageExtendedMediaPreview.w">
            <summary>Width</summary>
        </member>
        <member name="F:TL.MessageExtendedMediaPreview.h">
            <summary>Height</summary>
        </member>
        <member name="F:TL.MessageExtendedMediaPreview.thumb">
            <summary>Thumbnail</summary>
        </member>
        <member name="F:TL.MessageExtendedMediaPreview.video_duration">
            <summary>Video duration</summary>
        </member>
        <member name="F:TL.MessageExtendedMediaPreview.Flags.has_w">
            <summary>Fields <see cref="F:TL.MessageExtendedMediaPreview.w"/> and <see cref="F:TL.MessageExtendedMediaPreview.h"/> have a value</summary>
        </member>
        <member name="F:TL.MessageExtendedMediaPreview.Flags.has_thumb">
            <summary>Field <see cref="F:TL.MessageExtendedMediaPreview.thumb"/> has a value</summary>
        </member>
        <member name="F:TL.MessageExtendedMediaPreview.Flags.has_video_duration">
            <summary>Field <see cref="F:TL.MessageExtendedMediaPreview.video_duration"/> has a value</summary>
        </member>
        <member name="T:TL.MessageExtendedMedia">
            <summary>Extended media		<para>See <a href="https://corefork.telegram.org/constructor/messageExtendedMedia"/></para></summary>
        </member>
        <member name="F:TL.MessageExtendedMedia.media">
            <summary>Media</summary>
        </member>
        <member name="T:TL.StickerKeyword">
            <summary>Keywords for a certain sticker		<para>See <a href="https://corefork.telegram.org/constructor/stickerKeyword"/></para></summary>
        </member>
        <member name="F:TL.StickerKeyword.document_id">
            <summary>Sticker ID</summary>
        </member>
        <member name="F:TL.StickerKeyword.keyword">
            <summary>Keywords</summary>
        </member>
        <member name="T:TL.Username">
            <summary>Contains information about a username.		<para>See <a href="https://corefork.telegram.org/constructor/username"/></para></summary>
        </member>
        <member name="F:TL.Username.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Username.username">
            <summary>The username.</summary>
        </member>
        <member name="F:TL.Username.Flags.editable">
            <summary>Whether the username is editable, meaning it wasn't bought on <a href="https://fragment.com">fragment</a>.</summary>
        </member>
        <member name="F:TL.Username.Flags.active">
            <summary>Whether the username is active.</summary>
        </member>
        <member name="T:TL.ForumTopicBase">
            <summary>Contains information about a <a href="https://corefork.telegram.org/api/forum#forum-topics">forum topic</a>		<para>See <a href="https://corefork.telegram.org/type/ForumTopic"/></para>		<para>Derived classes: <see cref="T:TL.ForumTopicDeleted"/>, <see cref="T:TL.ForumTopic"/></para></summary>
        </member>
        <member name="P:TL.ForumTopicBase.ID">
            <summary>The ID of the deleted forum topic.</summary>
        </member>
        <member name="T:TL.ForumTopicDeleted">
            <summary>Represents a deleted forum topic.		<para>See <a href="https://corefork.telegram.org/constructor/forumTopicDeleted"/></para></summary>
        </member>
        <member name="F:TL.ForumTopicDeleted.id">
            <summary>The ID of the deleted forum topic.</summary>
        </member>
        <member name="P:TL.ForumTopicDeleted.ID">
            <summary>The ID of the deleted forum topic.</summary>
        </member>
        <member name="T:TL.ForumTopic">
            <summary>Represents a <a href="https://corefork.telegram.org/api/forum#forum-topics">forum topic</a>.		<para>See <a href="https://corefork.telegram.org/constructor/forumTopic"/></para></summary>
        </member>
        <member name="F:TL.ForumTopic.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.ForumTopic.id">
            <summary><a href="https://corefork.telegram.org/api/forum#forum-topics">Topic ID</a></summary>
        </member>
        <member name="F:TL.ForumTopic.date">
            <summary>Topic creation date</summary>
        </member>
        <member name="F:TL.ForumTopic.title">
            <summary>Topic title</summary>
        </member>
        <member name="F:TL.ForumTopic.icon_color">
            <summary>If no custom emoji icon is specified, specifies the color of the fallback topic icon (RGB), one of <c>0x6FB9F0</c>, <c>0xFFD67E</c>, <c>0xCB86DB</c>, <c>0x8EEE98</c>, <c>0xFF93B2</c>, or <c>0xFB6F5F</c>.</summary>
        </member>
        <member name="F:TL.ForumTopic.icon_emoji_id">
            <summary>ID of the <a href="https://corefork.telegram.org/api/custom-emoji">custom emoji</a> used as topic icon.</summary>
        </member>
        <member name="F:TL.ForumTopic.top_message">
            <summary>ID of the last message that was sent to this topic</summary>
        </member>
        <member name="F:TL.ForumTopic.read_inbox_max_id">
            <summary>Position up to which all incoming messages are read.</summary>
        </member>
        <member name="F:TL.ForumTopic.read_outbox_max_id">
            <summary>Position up to which all outgoing messages are read.</summary>
        </member>
        <member name="F:TL.ForumTopic.unread_count">
            <summary>Number of unread messages</summary>
        </member>
        <member name="F:TL.ForumTopic.unread_mentions_count">
            <summary>Number of <a href="https://corefork.telegram.org/api/mentions">unread mentions</a></summary>
        </member>
        <member name="F:TL.ForumTopic.unread_reactions_count">
            <summary>Number of unread reactions to messages you sent</summary>
        </member>
        <member name="F:TL.ForumTopic.from_id">
            <summary>ID of the peer that created the topic</summary>
        </member>
        <member name="F:TL.ForumTopic.notify_settings">
            <summary>Notification settings</summary>
        </member>
        <member name="F:TL.ForumTopic.draft">
            <summary>Message <a href="https://corefork.telegram.org/api/drafts">draft</a></summary>
        </member>
        <member name="F:TL.ForumTopic.Flags.has_icon_emoji_id">
            <summary>Field <see cref="F:TL.ForumTopic.icon_emoji_id"/> has a value</summary>
        </member>
        <member name="F:TL.ForumTopic.Flags.my">
            <summary>Whether the topic was created by the current user</summary>
        </member>
        <member name="F:TL.ForumTopic.Flags.closed">
            <summary>Whether the topic is closed (no messages can be sent to it)</summary>
        </member>
        <member name="F:TL.ForumTopic.Flags.pinned">
            <summary>Whether the topic is pinned</summary>
        </member>
        <member name="F:TL.ForumTopic.Flags.has_draft">
            <summary>Field <see cref="F:TL.ForumTopic.draft"/> has a value</summary>
        </member>
        <member name="F:TL.ForumTopic.Flags.short_">
            <summary>Whether this constructor is a reduced version of the full topic information. <br/>If set, only the <c>my</c>, <c>closed</c>, <c>id</c>, <c>date</c>, <c>title</c>, <c>icon_color</c>, <c>icon_emoji_id</c> and <c>from_id</c> parameters will contain valid information. <br/>Reduced info is usually only returned in topic-related <a href="https://corefork.telegram.org/api/recent-actions">admin log events »</a> and in the <see cref="T:TL.Messages_ChannelMessages"/>: if needed, full information can be fetched using <see cref="M:TL.SchemaExtensions.Channels_GetForumTopicsByID(WTelegram.Client,TL.InputChannelBase,System.Int32[])">Channels_GetForumTopicsByID</see>.</summary>
        </member>
        <member name="F:TL.ForumTopic.Flags.hidden">
            <summary>Whether the topic is hidden (only valid for the "General" topic, <c>id=1</c>)</summary>
        </member>
        <member name="P:TL.ForumTopic.ID">
            <summary><a href="https://corefork.telegram.org/api/forum#forum-topics">Topic ID</a></summary>
        </member>
        <member name="T:TL.Messages_ForumTopics">
            <summary>Contains information about multiple <a href="https://corefork.telegram.org/api/forum#forum-topics">forum topics</a>		<para>See <a href="https://corefork.telegram.org/constructor/messages.forumTopics"/></para></summary>
        </member>
        <member name="F:TL.Messages_ForumTopics.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Messages_ForumTopics.count">
            <summary>Total number of topics matching query; may be more than the topics contained in <c>topics</c>, in which case <a href="https://corefork.telegram.org/api/offsets">pagination</a> is required.</summary>
        </member>
        <member name="F:TL.Messages_ForumTopics.topics">
            <summary>Forum topics</summary>
        </member>
        <member name="F:TL.Messages_ForumTopics.messages">
            <summary>Related messages (contains the messages mentioned by <see cref="T:TL.ForumTopic"/>.<c>top_message</c>).</summary>
        </member>
        <member name="F:TL.Messages_ForumTopics.chats">
            <summary>Related chats</summary>
        </member>
        <member name="F:TL.Messages_ForumTopics.users">
            <summary>Related users</summary>
        </member>
        <member name="F:TL.Messages_ForumTopics.pts">
            <summary><a href="https://corefork.telegram.org/api/updates">Event count after generation</a></summary>
        </member>
        <member name="F:TL.Messages_ForumTopics.Flags.order_by_create_date">
            <summary>Whether the returned topics are ordered by creation date; if set, pagination by <c>offset_date</c> should use <see cref="T:TL.ForumTopic"/>.<c>date</c>; otherwise topics are ordered by the last message date, so paginate by the <c>date</c> of the <see cref="T:TL.MessageBase"/> referenced by <see cref="T:TL.ForumTopic"/>.<c>top_message</c>.</summary>
        </member>
        <member name="M:TL.Messages_ForumTopics.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.DefaultHistoryTTL">
            <summary>Contains info about the default value of the Time-To-Live setting, applied to all new chats.		<para>See <a href="https://corefork.telegram.org/constructor/defaultHistoryTTL"/></para></summary>
        </member>
        <member name="F:TL.DefaultHistoryTTL.period">
            <summary>Time-To-Live setting applied to all new chats.</summary>
        </member>
        <member name="T:TL.ExportedContactToken">
            <summary>Describes a <a href="https://corefork.telegram.org/api/links#temporary-profile-links">temporary profile link</a>.		<para>See <a href="https://corefork.telegram.org/constructor/exportedContactToken"/></para></summary>
        </member>
        <member name="F:TL.ExportedContactToken.url">
            <summary>The <a href="https://corefork.telegram.org/api/links#temporary-profile-links">temporary profile link</a>.</summary>
        </member>
        <member name="F:TL.ExportedContactToken.expires">
            <summary>Its expiration date</summary>
        </member>
        <member name="T:TL.RequestPeerType">
            <summary>Filtering criteria to use for the peer selection list shown to the user.		<para>See <a href="https://corefork.telegram.org/type/RequestPeerType"/></para>		<para>Derived classes: <see cref="T:TL.RequestPeerTypeUser"/>, <see cref="T:TL.RequestPeerTypeChat"/>, <see cref="T:TL.RequestPeerTypeBroadcast"/></para></summary>
        </member>
        <member name="T:TL.RequestPeerTypeUser">
            <summary>Choose a user.		<para>See <a href="https://corefork.telegram.org/constructor/requestPeerTypeUser"/></para></summary>
        </member>
        <member name="F:TL.RequestPeerTypeUser.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.RequestPeerTypeUser.bot">
            <summary>Whether to allow choosing only bots.</summary>
        </member>
        <member name="F:TL.RequestPeerTypeUser.premium">
            <summary>Whether to allow choosing only <a href="https://corefork.telegram.org/api/premium">Premium</a> users.</summary>
        </member>
        <member name="F:TL.RequestPeerTypeUser.Flags.has_bot">
            <summary>Field <see cref="F:TL.RequestPeerTypeUser.bot"/> has a value</summary>
        </member>
        <member name="F:TL.RequestPeerTypeUser.Flags.has_premium">
            <summary>Field <see cref="F:TL.RequestPeerTypeUser.premium"/> has a value</summary>
        </member>
        <member name="T:TL.RequestPeerTypeChat">
            <summary>Choose a chat or supergroup		<para>See <a href="https://corefork.telegram.org/constructor/requestPeerTypeChat"/></para></summary>
        </member>
        <member name="F:TL.RequestPeerTypeChat.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.RequestPeerTypeChat.has_username">
            <summary>If specified, allows only choosing channels with or without a username, according to the value of <see cref="T:System.Boolean"/>.</summary>
        </member>
        <member name="F:TL.RequestPeerTypeChat.forum">
            <summary>If specified, allows only choosing chats or supergroups that are or aren't <a href="https://corefork.telegram.org/api/forum">forums</a>, according to the value of <see cref="T:System.Boolean"/>.</summary>
        </member>
        <member name="F:TL.RequestPeerTypeChat.user_admin_rights">
            <summary>If specified, allows only choosing chats or supergroups where the current user is an admin with at least the specified admin rights.</summary>
        </member>
        <member name="F:TL.RequestPeerTypeChat.bot_admin_rights">
            <summary>If specified, allows only choosing chats or supergroups where the bot is an admin with at least the specified admin rights.</summary>
        </member>
        <member name="F:TL.RequestPeerTypeChat.Flags.creator">
            <summary>Whether to allow only choosing chats or supergroups that were created by the current user.</summary>
        </member>
        <member name="F:TL.RequestPeerTypeChat.Flags.has_user_admin_rights">
            <summary>Field <see cref="F:TL.RequestPeerTypeChat.user_admin_rights"/> has a value</summary>
        </member>
        <member name="F:TL.RequestPeerTypeChat.Flags.has_bot_admin_rights">
            <summary>Field <see cref="F:TL.RequestPeerTypeChat.bot_admin_rights"/> has a value</summary>
        </member>
        <member name="F:TL.RequestPeerTypeChat.Flags.has_has_username">
            <summary>Field <see cref="F:TL.RequestPeerTypeChat.has_username"/> has a value</summary>
        </member>
        <member name="F:TL.RequestPeerTypeChat.Flags.has_forum">
            <summary>Field <see cref="F:TL.RequestPeerTypeChat.forum"/> has a value</summary>
        </member>
        <member name="F:TL.RequestPeerTypeChat.Flags.bot_participant">
            <summary>Whether to allow only choosing chats or supergroups where the bot is a participant.</summary>
        </member>
        <member name="T:TL.RequestPeerTypeBroadcast">
            <summary>Choose a channel		<para>See <a href="https://corefork.telegram.org/constructor/requestPeerTypeBroadcast"/></para></summary>
        </member>
        <member name="F:TL.RequestPeerTypeBroadcast.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.RequestPeerTypeBroadcast.has_username">
            <summary>If specified, allows only choosing channels with or without a username, according to the value of <see cref="T:System.Boolean"/>.</summary>
        </member>
        <member name="F:TL.RequestPeerTypeBroadcast.user_admin_rights">
            <summary>If specified, allows only choosing channels where the current user is an admin with at least the specified admin rights.</summary>
        </member>
        <member name="F:TL.RequestPeerTypeBroadcast.bot_admin_rights">
            <summary>If specified, allows only choosing channels where the bot is an admin with at least the specified admin rights.</summary>
        </member>
        <member name="F:TL.RequestPeerTypeBroadcast.Flags.creator">
            <summary>Whether to allow only choosing channels that were created by the current user.</summary>
        </member>
        <member name="F:TL.RequestPeerTypeBroadcast.Flags.has_user_admin_rights">
            <summary>Field <see cref="F:TL.RequestPeerTypeBroadcast.user_admin_rights"/> has a value</summary>
        </member>
        <member name="F:TL.RequestPeerTypeBroadcast.Flags.has_bot_admin_rights">
            <summary>Field <see cref="F:TL.RequestPeerTypeBroadcast.bot_admin_rights"/> has a value</summary>
        </member>
        <member name="F:TL.RequestPeerTypeBroadcast.Flags.has_has_username">
            <summary>Field <see cref="F:TL.RequestPeerTypeBroadcast.has_username"/> has a value</summary>
        </member>
        <member name="T:TL.EmojiList">
            <summary>Represents a list of <a href="https://corefork.telegram.org/api/custom-emoji">custom emojis</a>.		<para>See <a href="https://corefork.telegram.org/constructor/emojiList"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/emojiListNotModified">emojiListNotModified</a></remarks>
        </member>
        <member name="F:TL.EmojiList.hash">
            <summary><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></summary>
        </member>
        <member name="F:TL.EmojiList.document_id">
            <summary>Custom emoji IDs</summary>
        </member>
        <member name="T:TL.EmojiGroup">
            <summary>Represents an <a href="https://corefork.telegram.org/api/custom-emoji#emoji-categories">emoji category</a>.		<para>See <a href="https://corefork.telegram.org/constructor/emojiGroup"/></para></summary>
        </member>
        <member name="F:TL.EmojiGroup.title">
            <summary>Category name, i.e. "Animals", "Flags", "Faces" and so on...</summary>
        </member>
        <member name="F:TL.EmojiGroup.icon_emoji_id">
            <summary>A single custom emoji used as preview for the category.</summary>
        </member>
        <member name="F:TL.EmojiGroup.emoticons">
            <summary>A list of UTF-8 emojis, matching the category.</summary>
        </member>
        <member name="T:TL.Messages_EmojiGroups">
            <summary>Represents a list of <a href="https://corefork.telegram.org/api/custom-emoji#emoji-categories">emoji categories</a>.		<para>See <a href="https://corefork.telegram.org/constructor/messages.emojiGroups"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/messages.emojiGroupsNotModified">messages.emojiGroupsNotModified</a></remarks>
        </member>
        <member name="F:TL.Messages_EmojiGroups.hash">
            <summary><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></summary>
        </member>
        <member name="F:TL.Messages_EmojiGroups.groups">
            <summary>A list of <a href="https://corefork.telegram.org/api/custom-emoji#emoji-categories">emoji categories</a>.</summary>
        </member>
        <member name="T:TL.TextWithEntities">
            <summary>Styled text with <a href="https://corefork.telegram.org/api/entities">message entities</a>		<para>See <a href="https://corefork.telegram.org/constructor/textWithEntities"/></para></summary>
        </member>
        <member name="F:TL.TextWithEntities.text">
            <summary>Text</summary>
        </member>
        <member name="F:TL.TextWithEntities.entities">
            <summary><a href="https://corefork.telegram.org/api/entities">Message entities for styled text</a></summary>
        </member>
        <member name="T:TL.Messages_TranslatedText">
            <summary>Translated text with <a href="https://corefork.telegram.org/api/entities">entities</a>.		<para>See <a href="https://corefork.telegram.org/type/messages.TranslatedText"/></para>		<para>Derived classes: <see cref="T:TL.Messages_TranslateResult"/></para></summary>
        </member>
        <member name="T:TL.Messages_TranslateResult">
            <summary>Translated text with <a href="https://corefork.telegram.org/api/entities">entities</a>		<para>See <a href="https://corefork.telegram.org/constructor/messages.translateResult"/></para></summary>
        </member>
        <member name="F:TL.Messages_TranslateResult.result">
            <summary>Text+<a href="https://corefork.telegram.org/api/entities">entities</a>, for each input message.</summary>
        </member>
        <member name="T:TL.AutoSaveSettings">
            <summary>Media autosave settings		<para>See <a href="https://corefork.telegram.org/constructor/autoSaveSettings"/></para></summary>
        </member>
        <member name="F:TL.AutoSaveSettings.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.AutoSaveSettings.video_max_size">
            <summary>If set, specifies a size limit for autosavable videos</summary>
        </member>
        <member name="F:TL.AutoSaveSettings.Flags.photos">
            <summary>Whether photos should be autosaved to the gallery.</summary>
        </member>
        <member name="F:TL.AutoSaveSettings.Flags.videos">
            <summary>Whether videos should be autosaved to the gallery.</summary>
        </member>
        <member name="F:TL.AutoSaveSettings.Flags.has_video_max_size">
            <summary>Field <see cref="F:TL.AutoSaveSettings.video_max_size"/> has a value</summary>
        </member>
        <member name="T:TL.AutoSaveException">
            <summary>Peer-specific media autosave settings		<para>See <a href="https://corefork.telegram.org/constructor/autoSaveException"/></para></summary>
        </member>
        <member name="F:TL.AutoSaveException.peer">
            <summary>The peer</summary>
        </member>
        <member name="F:TL.AutoSaveException.settings">
            <summary>Media autosave settings</summary>
        </member>
        <member name="T:TL.Account_AutoSaveSettings">
            <summary>Contains media autosave settings		<para>See <a href="https://corefork.telegram.org/constructor/account.autoSaveSettings"/></para></summary>
        </member>
        <member name="F:TL.Account_AutoSaveSettings.users_settings">
            <summary>Default media autosave settings for private chats</summary>
        </member>
        <member name="F:TL.Account_AutoSaveSettings.chats_settings">
            <summary>Default media autosave settings for <a href="https://corefork.telegram.org/api/channel">groups and supergroups</a></summary>
        </member>
        <member name="F:TL.Account_AutoSaveSettings.broadcasts_settings">
            <summary>Default media autosave settings for <a href="https://corefork.telegram.org/api/channel">channels</a></summary>
        </member>
        <member name="F:TL.Account_AutoSaveSettings.exceptions">
            <summary>Peer-specific granular autosave settings</summary>
        </member>
        <member name="F:TL.Account_AutoSaveSettings.chats">
            <summary>Chats mentioned in the peer-specific granular autosave settings</summary>
        </member>
        <member name="F:TL.Account_AutoSaveSettings.users">
            <summary>Users mentioned in the peer-specific granular autosave settings</summary>
        </member>
        <member name="M:TL.Account_AutoSaveSettings.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Help_AppConfig">
            <summary>Contains various <a href="https://corefork.telegram.org/api/config#client-configuration">client configuration parameters</a>		<para>See <a href="https://corefork.telegram.org/constructor/help.appConfig"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/help.appConfigNotModified">help.appConfigNotModified</a></remarks>
        </member>
        <member name="F:TL.Help_AppConfig.hash">
            <summary><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></summary>
        </member>
        <member name="F:TL.Help_AppConfig.config">
            <summary><a href="https://corefork.telegram.org/api/config#client-configuration">Client configuration parameters</a></summary>
        </member>
        <member name="T:TL.InputBotApp">
            <summary>Used to fetch information about a <a href="https://corefork.telegram.org/api/bots/webapps#direct-link-mini-apps">direct link Mini App</a>		<para>See <a href="https://corefork.telegram.org/type/InputBotApp"/></para>		<para>Derived classes: <see cref="T:TL.InputBotAppID"/>, <see cref="T:TL.InputBotAppShortName"/></para></summary>
        </member>
        <member name="T:TL.InputBotAppID">
            <summary>Used to fetch information about a <a href="https://corefork.telegram.org/api/bots/webapps#direct-link-mini-apps">direct link Mini App</a> by its ID		<para>See <a href="https://corefork.telegram.org/constructor/inputBotAppID"/></para></summary>
        </member>
        <member name="F:TL.InputBotAppID.id">
            <summary><a href="https://corefork.telegram.org/api/bots/webapps#direct-link-mini-apps">direct link Mini App</a> ID.</summary>
        </member>
        <member name="F:TL.InputBotAppID.access_hash">
            <summary>⚠ <b>REQUIRED FIELD</b>. See <see href="https://wiz0u.github.io/WTelegramClient/FAQ#access-hash">how to obtain it</see><br/>Access hash, obtained from the <see cref="T:TL.BotApp"/>.</summary>
        </member>
        <member name="T:TL.InputBotAppShortName">
            <summary>Used to fetch information about a <a href="https://corefork.telegram.org/api/bots/webapps#direct-link-mini-apps">direct link Mini App</a> by its short name		<para>See <a href="https://corefork.telegram.org/constructor/inputBotAppShortName"/></para></summary>
        </member>
        <member name="F:TL.InputBotAppShortName.bot_id">
            <summary>ID of the bot that owns the bot mini app</summary>
        </member>
        <member name="F:TL.InputBotAppShortName.short_name">
            <summary>Short name, obtained from a <a href="https://corefork.telegram.org/api/links#direct-mini-app-links">Direct Mini App deep link</a></summary>
        </member>
        <member name="T:TL.BotApp">
            <summary>Contains information about a <a href="https://corefork.telegram.org/api/bots/webapps#direct-link-mini-apps">direct link Mini App</a>.		<para>See <a href="https://corefork.telegram.org/constructor/botApp"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/botAppNotModified">botAppNotModified</a></remarks>
        </member>
        <member name="F:TL.BotApp.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.BotApp.id">
            <summary>bot mini app ID</summary>
        </member>
        <member name="F:TL.BotApp.access_hash">
            <summary>bot mini app access hash</summary>
        </member>
        <member name="F:TL.BotApp.short_name">
            <summary>bot mini app short name, used to generate <a href="https://corefork.telegram.org/api/links#direct-mini-app-links">Direct Mini App deep links</a>.</summary>
        </member>
        <member name="F:TL.BotApp.title">
            <summary>bot mini app title.</summary>
        </member>
        <member name="F:TL.BotApp.description">
            <summary>bot mini app description.</summary>
        </member>
        <member name="F:TL.BotApp.photo">
            <summary>bot mini app photo.</summary>
        </member>
        <member name="F:TL.BotApp.document">
            <summary>bot mini app animation.</summary>
        </member>
        <member name="F:TL.BotApp.hash">
            <summary>Hash to pass to <see cref="M:TL.SchemaExtensions.Messages_GetBotApp(WTelegram.Client,TL.InputBotApp,System.Int64)">Messages_GetBotApp</see>, to avoid refetching bot app info if it hasn't changed.</summary>
        </member>
        <member name="F:TL.BotApp.Flags.has_document">
            <summary>Field <see cref="F:TL.BotApp.document"/> has a value</summary>
        </member>
        <member name="T:TL.Messages_BotApp">
            <summary>Contains information about a <a href="https://corefork.telegram.org/api/bots/webapps#direct-link-mini-apps">direct link Mini App</a>		<para>See <a href="https://corefork.telegram.org/constructor/messages.botApp"/></para></summary>
        </member>
        <member name="F:TL.Messages_BotApp.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Messages_BotApp.app">
            <summary>Bot app information</summary>
        </member>
        <member name="F:TL.Messages_BotApp.Flags.inactive">
            <summary>Whether the web app was never used by the user, and confirmation must be asked from the user before opening it.</summary>
        </member>
        <member name="F:TL.Messages_BotApp.Flags.request_write_access">
            <summary>The bot is asking permission to send messages to the user: if the user agrees, set the <c>write_allowed</c> flag when invoking <see cref="M:TL.SchemaExtensions.Messages_RequestAppWebView(WTelegram.Client,TL.InputPeer,TL.InputBotApp,System.String,System.String,TL.DataJSON,System.Boolean)">Messages_RequestAppWebView</see>.</summary>
        </member>
        <member name="F:TL.Messages_BotApp.Flags.has_settings">
            <summary>Deprecated flag, can be ignored.</summary>
        </member>
        <member name="T:TL.AppWebViewResult">
            <summary>Contains the link that must be used to open a <a href="https://corefork.telegram.org/api/bots/webapps#direct-link-mini-apps">direct link Mini App</a>.		<para>See <a href="https://corefork.telegram.org/type/AppWebViewResult"/></para>		<para>Derived classes: <see cref="T:TL.AppWebViewResultUrl"/></para></summary>
        </member>
        <member name="T:TL.AppWebViewResultUrl">
            <summary>Contains the link that must be used to open a <a href="https://corefork.telegram.org/api/bots/webapps#direct-link-mini-apps">direct link Mini App</a>.		<para>See <a href="https://corefork.telegram.org/constructor/appWebViewResultUrl"/></para></summary>
        </member>
        <member name="F:TL.AppWebViewResultUrl.url">
            <summary>The URL to open</summary>
        </member>
        <member name="T:TL.InlineBotWebView">
            <summary>Specifies an <a href="https://corefork.telegram.org/api/bots/webapps#inline-mode-mini-apps">inline mode mini app</a> button, shown on top of the inline query results list.		<para>See <a href="https://corefork.telegram.org/constructor/inlineBotWebView"/></para></summary>
        </member>
        <member name="F:TL.InlineBotWebView.text">
            <summary>Text of the button</summary>
        </member>
        <member name="F:TL.InlineBotWebView.url">
            <summary>Webapp URL</summary>
        </member>
        <member name="T:TL.ReadParticipantDate">
            <summary>Contains info about when a certain participant has read a message		<para>See <a href="https://corefork.telegram.org/constructor/readParticipantDate"/></para></summary>
        </member>
        <member name="F:TL.ReadParticipantDate.user_id">
            <summary>User ID</summary>
        </member>
        <member name="F:TL.ReadParticipantDate.date">
            <summary>When the user read the message</summary>
        </member>
        <member name="T:TL.InputChatlist">
            <summary>Represents a folder		<para>See <a href="https://corefork.telegram.org/type/InputChatlist"/></para>		<para>Derived classes: <see cref="T:TL.InputChatlistDialogFilter"/></para></summary>
        </member>
        <member name="T:TL.InputChatlistDialogFilter">
            <summary>Folder ID		<para>See <a href="https://corefork.telegram.org/constructor/inputChatlistDialogFilter"/></para></summary>
        </member>
        <member name="F:TL.InputChatlistDialogFilter.filter_id">
            <summary><a href="https://corefork.telegram.org/api/folders">Folder</a> ID</summary>
        </member>
        <member name="T:TL.ExportedChatlistInvite">
            <summary>Exported <a href="https://corefork.telegram.org/api/links#chat-folder-links">chat folder deep link »</a>.		<para>See <a href="https://corefork.telegram.org/constructor/exportedChatlistInvite"/></para></summary>
        </member>
        <member name="F:TL.ExportedChatlistInvite.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.ExportedChatlistInvite.title">
            <summary>Name of the link</summary>
        </member>
        <member name="F:TL.ExportedChatlistInvite.url">
            <summary>The <a href="https://corefork.telegram.org/api/links#chat-folder-links">chat folder deep link »</a>.</summary>
        </member>
        <member name="F:TL.ExportedChatlistInvite.peers">
            <summary>Peers to import</summary>
        </member>
        <member name="T:TL.Chatlists_ExportedChatlistInvite">
            <summary>Info about an exported <a href="https://corefork.telegram.org/api/links#chat-folder-links">chat folder deep link »</a>.		<para>See <a href="https://corefork.telegram.org/constructor/chatlists.exportedChatlistInvite"/></para></summary>
        </member>
        <member name="F:TL.Chatlists_ExportedChatlistInvite.filter">
            <summary>Folder ID</summary>
        </member>
        <member name="F:TL.Chatlists_ExportedChatlistInvite.invite">
            <summary>The exported <a href="https://corefork.telegram.org/api/links#chat-folder-links">chat folder deep link »</a>.</summary>
        </member>
        <member name="T:TL.Chatlists_ExportedInvites">
            <summary>Info about multiple <a href="https://corefork.telegram.org/api/links#chat-folder-links">chat folder deep links »</a>.		<para>See <a href="https://corefork.telegram.org/constructor/chatlists.exportedInvites"/></para></summary>
        </member>
        <member name="F:TL.Chatlists_ExportedInvites.invites">
            <summary>The <a href="https://corefork.telegram.org/api/links#chat-folder-links">chat folder deep links »</a>.</summary>
        </member>
        <member name="F:TL.Chatlists_ExportedInvites.chats">
            <summary>Related chat information</summary>
        </member>
        <member name="F:TL.Chatlists_ExportedInvites.users">
            <summary>Related user information</summary>
        </member>
        <member name="M:TL.Chatlists_ExportedInvites.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Chatlists_ChatlistInviteBase">
            <summary>Info about a <a href="https://corefork.telegram.org/api/links#chat-folder-links">chat folder deep link »</a>.		<para>See <a href="https://corefork.telegram.org/type/chatlists.ChatlistInvite"/></para>		<para>Derived classes: <see cref="T:TL.Chatlists_ChatlistInviteAlready"/>, <see cref="T:TL.Chatlists_ChatlistInvite"/></para></summary>
        </member>
        <member name="P:TL.Chatlists_ChatlistInviteBase.Chats">
            <summary>Related chat information</summary>
        </member>
        <member name="P:TL.Chatlists_ChatlistInviteBase.Users">
            <summary>Related user information</summary>
        </member>
        <member name="T:TL.Chatlists_ChatlistInviteAlready">
            <summary>Updated info about a <a href="https://corefork.telegram.org/api/links#chat-folder-links">chat folder deep link »</a> we already imported.		<para>See <a href="https://corefork.telegram.org/constructor/chatlists.chatlistInviteAlready"/></para></summary>
        </member>
        <member name="F:TL.Chatlists_ChatlistInviteAlready.filter_id">
            <summary>ID of the imported folder</summary>
        </member>
        <member name="F:TL.Chatlists_ChatlistInviteAlready.missing_peers">
            <summary>New peers to be imported</summary>
        </member>
        <member name="F:TL.Chatlists_ChatlistInviteAlready.already_peers">
            <summary>Peers that were already imported</summary>
        </member>
        <member name="F:TL.Chatlists_ChatlistInviteAlready.chats">
            <summary>Related chat information</summary>
        </member>
        <member name="F:TL.Chatlists_ChatlistInviteAlready.users">
            <summary>Related user information</summary>
        </member>
        <member name="P:TL.Chatlists_ChatlistInviteAlready.Chats">
            <summary>Related chat information</summary>
        </member>
        <member name="P:TL.Chatlists_ChatlistInviteAlready.Users">
            <summary>Related user information</summary>
        </member>
        <member name="M:TL.Chatlists_ChatlistInviteAlready.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Chatlists_ChatlistInvite">
            <summary>Info about a <a href="https://corefork.telegram.org/api/links#chat-folder-links">chat folder deep link »</a>.		<para>See <a href="https://corefork.telegram.org/constructor/chatlists.chatlistInvite"/></para></summary>
        </member>
        <member name="F:TL.Chatlists_ChatlistInvite.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Chatlists_ChatlistInvite.title">
            <summary>Name of the link</summary>
        </member>
        <member name="F:TL.Chatlists_ChatlistInvite.emoticon">
            <summary>Emoji to use as icon for the folder.</summary>
        </member>
        <member name="F:TL.Chatlists_ChatlistInvite.peers">
            <summary>Supergroups and channels to join</summary>
        </member>
        <member name="F:TL.Chatlists_ChatlistInvite.chats">
            <summary>Related chat information</summary>
        </member>
        <member name="F:TL.Chatlists_ChatlistInvite.users">
            <summary>Related user information</summary>
        </member>
        <member name="F:TL.Chatlists_ChatlistInvite.Flags.has_emoticon">
            <summary>Field <see cref="F:TL.Chatlists_ChatlistInvite.emoticon"/> has a value</summary>
        </member>
        <member name="P:TL.Chatlists_ChatlistInvite.Chats">
            <summary>Related chat information</summary>
        </member>
        <member name="P:TL.Chatlists_ChatlistInvite.Users">
            <summary>Related user information</summary>
        </member>
        <member name="M:TL.Chatlists_ChatlistInvite.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Chatlists_ChatlistUpdates">
            <summary>Updated information about a <a href="https://corefork.telegram.org/api/links#chat-folder-links">chat folder deep link »</a>.		<para>See <a href="https://corefork.telegram.org/constructor/chatlists.chatlistUpdates"/></para></summary>
        </member>
        <member name="F:TL.Chatlists_ChatlistUpdates.missing_peers">
            <summary>New peers to join</summary>
        </member>
        <member name="F:TL.Chatlists_ChatlistUpdates.chats">
            <summary>Related chat information</summary>
        </member>
        <member name="F:TL.Chatlists_ChatlistUpdates.users">
            <summary>Related user information</summary>
        </member>
        <member name="M:TL.Chatlists_ChatlistUpdates.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Bots_BotInfo">
            <summary>Localized information about a bot.		<para>See <a href="https://corefork.telegram.org/constructor/bots.botInfo"/></para></summary>
        </member>
        <member name="F:TL.Bots_BotInfo.name">
            <summary>Bot name</summary>
        </member>
        <member name="F:TL.Bots_BotInfo.about">
            <summary>Bot about text</summary>
        </member>
        <member name="F:TL.Bots_BotInfo.description">
            <summary>Bot description</summary>
        </member>
        <member name="T:TL.MessagePeerVoteBase">
            <summary>How a user voted in a poll		<para>See <a href="https://corefork.telegram.org/type/MessagePeerVote"/></para>		<para>Derived classes: <see cref="T:TL.MessagePeerVote"/>, <see cref="T:TL.MessagePeerVoteInputOption"/>, <see cref="T:TL.MessagePeerVoteMultiple"/></para></summary>
        </member>
        <member name="P:TL.MessagePeerVoteBase.Peer">
            <summary>Peer ID</summary>
        </member>
        <member name="P:TL.MessagePeerVoteBase.Date">
            <summary>When did the peer cast the vote</summary>
        </member>
        <member name="T:TL.MessagePeerVote">
            <summary>How a peer voted in a poll		<para>See <a href="https://corefork.telegram.org/constructor/messagePeerVote"/></para></summary>
        </member>
        <member name="F:TL.MessagePeerVote.peer">
            <summary>Peer ID</summary>
        </member>
        <member name="F:TL.MessagePeerVote.option">
            <summary>The option chosen by the peer</summary>
        </member>
        <member name="F:TL.MessagePeerVote.date">
            <summary>When did the peer cast the vote</summary>
        </member>
        <member name="P:TL.MessagePeerVote.Peer">
            <summary>Peer ID</summary>
        </member>
        <member name="P:TL.MessagePeerVote.Date">
            <summary>When did the peer cast the vote</summary>
        </member>
        <member name="T:TL.MessagePeerVoteInputOption">
            <summary>How a peer voted in a poll (reduced constructor, returned if an <c>option</c> was provided to <see cref="M:TL.SchemaExtensions.Messages_GetPollVotes(WTelegram.Client,TL.InputPeer,System.Int32,System.Int32,System.Byte[],System.String)">Messages_GetPollVotes</see>)		<para>See <a href="https://corefork.telegram.org/constructor/messagePeerVoteInputOption"/></para></summary>
        </member>
        <member name="F:TL.MessagePeerVoteInputOption.peer">
            <summary>The peer that voted for the queried <c>option</c></summary>
        </member>
        <member name="F:TL.MessagePeerVoteInputOption.date">
            <summary>When did the peer cast the vote</summary>
        </member>
        <member name="P:TL.MessagePeerVoteInputOption.Peer">
            <summary>The peer that voted for the queried <c>option</c></summary>
        </member>
        <member name="P:TL.MessagePeerVoteInputOption.Date">
            <summary>When did the peer cast the vote</summary>
        </member>
        <member name="T:TL.MessagePeerVoteMultiple">
            <summary>How a peer voted in a multiple-choice poll		<para>See <a href="https://corefork.telegram.org/constructor/messagePeerVoteMultiple"/></para></summary>
        </member>
        <member name="F:TL.MessagePeerVoteMultiple.peer">
            <summary>Peer ID</summary>
        </member>
        <member name="F:TL.MessagePeerVoteMultiple.options">
            <summary>Options chosen by the peer</summary>
        </member>
        <member name="F:TL.MessagePeerVoteMultiple.date">
            <summary>When did the peer cast their votes</summary>
        </member>
        <member name="P:TL.MessagePeerVoteMultiple.Peer">
            <summary>Peer ID</summary>
        </member>
        <member name="P:TL.MessagePeerVoteMultiple.Date">
            <summary>When did the peer cast their votes</summary>
        </member>
        <member name="T:TL.StoryViews">
            <summary>Aggregated view and reaction information of a <a href="https://corefork.telegram.org/api/stories">story</a>.		<para>See <a href="https://corefork.telegram.org/constructor/storyViews"/></para></summary>
        </member>
        <member name="F:TL.StoryViews.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.StoryViews.views_count">
            <summary>View counter of the story</summary>
        </member>
        <member name="F:TL.StoryViews.forwards_count">
            <summary>Forward counter of the story</summary>
        </member>
        <member name="F:TL.StoryViews.reactions">
            <summary>All reactions sent to this story</summary>
        </member>
        <member name="F:TL.StoryViews.reactions_count">
            <summary>Number of reactions added to the story</summary>
        </member>
        <member name="F:TL.StoryViews.recent_viewers">
            <summary>User IDs of some recent viewers of the story</summary>
        </member>
        <member name="F:TL.StoryViews.Flags.has_recent_viewers">
            <summary>Field <see cref="F:TL.StoryViews.recent_viewers"/> has a value</summary>
        </member>
        <member name="F:TL.StoryViews.Flags.has_viewers">
            <summary>If set, indicates that the viewers list is currently viewable, and was not yet deleted because the story has expired while the user didn't have a <a href="https://corefork.telegram.org/api/premium">Premium</a> account.</summary>
        </member>
        <member name="F:TL.StoryViews.Flags.has_forwards_count">
            <summary>Field <see cref="F:TL.StoryViews.forwards_count"/> has a value</summary>
        </member>
        <member name="F:TL.StoryViews.Flags.has_reactions">
            <summary>Field <see cref="F:TL.StoryViews.reactions"/> has a value</summary>
        </member>
        <member name="F:TL.StoryViews.Flags.has_reactions_count">
            <summary>Field <see cref="F:TL.StoryViews.reactions_count"/> has a value</summary>
        </member>
        <member name="T:TL.StoryItemBase">
            <summary>Represents a <a href="https://corefork.telegram.org/api/stories">Telegram Story</a>		<para>See <a href="https://corefork.telegram.org/type/StoryItem"/></para>		<para>Derived classes: <see cref="T:TL.StoryItemDeleted"/>, <see cref="T:TL.StoryItemSkipped"/>, <see cref="T:TL.StoryItem"/></para></summary>
        </member>
        <member name="P:TL.StoryItemBase.ID">
            <summary>Story ID</summary>
        </member>
        <member name="T:TL.StoryItemDeleted">
            <summary>Represents a previously active story, that was deleted		<para>See <a href="https://corefork.telegram.org/constructor/storyItemDeleted"/></para></summary>
        </member>
        <member name="F:TL.StoryItemDeleted.id">
            <summary>Story ID</summary>
        </member>
        <member name="P:TL.StoryItemDeleted.ID">
            <summary>Story ID</summary>
        </member>
        <member name="T:TL.StoryItemSkipped">
            <summary>Represents an active story, whose full information was omitted for space and performance reasons; use <see cref="M:TL.SchemaExtensions.Stories_GetStoriesByID(WTelegram.Client,TL.InputPeer,System.Int32[])">Stories_GetStoriesByID</see> to fetch full info about the skipped story when and if needed.		<para>See <a href="https://corefork.telegram.org/constructor/storyItemSkipped"/></para></summary>
        </member>
        <member name="F:TL.StoryItemSkipped.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.StoryItemSkipped.id">
            <summary>Story ID</summary>
        </member>
        <member name="F:TL.StoryItemSkipped.date">
            <summary>When was the story posted.</summary>
        </member>
        <member name="F:TL.StoryItemSkipped.expire_date">
            <summary>When does the story expire.</summary>
        </member>
        <member name="F:TL.StoryItemSkipped.Flags.close_friends">
            <summary>Whether this story can only be viewed by <a href="https://corefork.telegram.org/api/privacy">our close friends, see here »</a> for more info</summary>
        </member>
        <member name="P:TL.StoryItemSkipped.ID">
            <summary>Story ID</summary>
        </member>
        <member name="T:TL.StoryItem">
            <summary>Represents a <a href="https://corefork.telegram.org/api/stories">story</a>.		<para>See <a href="https://corefork.telegram.org/constructor/storyItem"/></para></summary>
        </member>
        <member name="F:TL.StoryItem.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.StoryItem.id">
            <summary>ID of the story.</summary>
        </member>
        <member name="F:TL.StoryItem.date">
            <summary>When was the story posted.</summary>
        </member>
        <member name="F:TL.StoryItem.fwd_from">
            <summary>For <a href="https://corefork.telegram.org/api/stories#reposting-stories">reposted stories »</a>, contains info about the original story.</summary>
        </member>
        <member name="F:TL.StoryItem.expire_date">
            <summary>When does the story expire.</summary>
        </member>
        <member name="F:TL.StoryItem.caption">
            <summary>Story caption.</summary>
        </member>
        <member name="F:TL.StoryItem.entities">
            <summary><a href="https://corefork.telegram.org/api/entities">Message entities for styled text</a></summary>
        </member>
        <member name="F:TL.StoryItem.media">
            <summary>Story media.</summary>
        </member>
        <member name="F:TL.StoryItem.media_areas">
            <summary>List of media areas, see <a href="https://corefork.telegram.org/api/stories#media-areas">here »</a> for more info on media areas.</summary>
        </member>
        <member name="F:TL.StoryItem.privacy">
            <summary><a href="https://corefork.telegram.org/api/privacy">Privacy rules</a> indicating who can and can't view this story</summary>
        </member>
        <member name="F:TL.StoryItem.views">
            <summary>View date and reaction information</summary>
        </member>
        <member name="F:TL.StoryItem.sent_reaction">
            <summary>The reaction we sent.</summary>
        </member>
        <member name="F:TL.StoryItem.Flags.has_caption">
            <summary>Field <see cref="F:TL.StoryItem.caption"/> has a value</summary>
        </member>
        <member name="F:TL.StoryItem.Flags.has_entities">
            <summary>Field <see cref="F:TL.StoryItem.entities"/> has a value</summary>
        </member>
        <member name="F:TL.StoryItem.Flags.has_privacy">
            <summary>Field <see cref="F:TL.StoryItem.privacy"/> has a value</summary>
        </member>
        <member name="F:TL.StoryItem.Flags.has_views">
            <summary>Field <see cref="F:TL.StoryItem.views"/> has a value</summary>
        </member>
        <member name="F:TL.StoryItem.Flags.pinned">
            <summary>Whether this story is pinned on the user's profile</summary>
        </member>
        <member name="F:TL.StoryItem.Flags.public_">
            <summary>Whether this story is public and can be viewed by everyone</summary>
        </member>
        <member name="F:TL.StoryItem.Flags.close_friends">
            <summary>Whether this story can only be viewed by <a href="https://corefork.telegram.org/api/privacy">our close friends, see here »</a> for more info</summary>
        </member>
        <member name="F:TL.StoryItem.Flags.min">
            <summary>Full information about this story was omitted for space and performance reasons; use <see cref="M:TL.SchemaExtensions.Stories_GetStoriesByID(WTelegram.Client,TL.InputPeer,System.Int32[])">Stories_GetStoriesByID</see> to fetch full info about this story when and if needed.</summary>
        </member>
        <member name="F:TL.StoryItem.Flags.noforwards">
            <summary>Whether this story is <a href="https://telegram.org/blog/protected-content-delete-by-date-and-more">protected</a> and thus cannot be forwarded; clients should also prevent users from saving attached media (i.e. videos should only be streamed, photos should be kept in RAM, et cetera).</summary>
        </member>
        <member name="F:TL.StoryItem.Flags.edited">
            <summary>Indicates whether the story was edited.</summary>
        </member>
        <member name="F:TL.StoryItem.Flags.contacts">
            <summary>Whether this story can only be viewed by our contacts</summary>
        </member>
        <member name="F:TL.StoryItem.Flags.selected_contacts">
            <summary>Whether this story can only be viewed by a select list of our contacts</summary>
        </member>
        <member name="F:TL.StoryItem.Flags.has_media_areas">
            <summary>Field <see cref="F:TL.StoryItem.media_areas"/> has a value</summary>
        </member>
        <member name="F:TL.StoryItem.Flags.has_sent_reaction">
            <summary>Field <see cref="F:TL.StoryItem.sent_reaction"/> has a value</summary>
        </member>
        <member name="F:TL.StoryItem.Flags.out_">
            <summary>indicates whether we sent this story.</summary>
        </member>
        <member name="F:TL.StoryItem.Flags.has_fwd_from">
            <summary>Field <see cref="F:TL.StoryItem.fwd_from"/> has a value</summary>
        </member>
        <member name="F:TL.StoryItem.Flags.has_from_id">
            <summary>Field <see cref="F:TL.StoryItem.from_id"/> has a value</summary>
        </member>
        <member name="P:TL.StoryItem.ID">
            <summary>ID of the story.</summary>
        </member>
        <member name="T:TL.Stories_AllStoriesBase">
            <summary>Full list of active (or active and hidden) <a href="https://corefork.telegram.org/api/stories#watching-stories">stories</a>.		<para>See <a href="https://corefork.telegram.org/type/stories.AllStories"/></para>		<para>Derived classes: <see cref="T:TL.Stories_AllStoriesNotModified"/>, <see cref="T:TL.Stories_AllStories"/></para></summary>
        </member>
        <member name="T:TL.Stories_AllStoriesNotModified">
            <summary>The list of active (or active and hidden) <a href="https://corefork.telegram.org/api/stories#watching-stories">stories</a> has not changed.		<para>See <a href="https://corefork.telegram.org/constructor/stories.allStoriesNotModified"/></para></summary>
        </member>
        <member name="F:TL.Stories_AllStoriesNotModified.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Stories_AllStoriesNotModified.state">
            <summary>State to use to ask for updates</summary>
        </member>
        <member name="F:TL.Stories_AllStoriesNotModified.stealth_mode">
            <summary>Current <a href="https://corefork.telegram.org/api/stories#stealth-mode">stealth mode</a> information</summary>
        </member>
        <member name="T:TL.Stories_AllStories">
            <summary>Full list of active (or active and hidden) <a href="https://corefork.telegram.org/api/stories#watching-stories">stories</a>.		<para>See <a href="https://corefork.telegram.org/constructor/stories.allStories"/></para></summary>
        </member>
        <member name="F:TL.Stories_AllStories.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Stories_AllStories.count">
            <summary>Total number of active (or active and hidden) stories</summary>
        </member>
        <member name="F:TL.Stories_AllStories.state">
            <summary>State to use for pagination</summary>
        </member>
        <member name="F:TL.Stories_AllStories.peer_stories">
            <summary>Stories</summary>
        </member>
        <member name="F:TL.Stories_AllStories.chats">
            <summary>Mentioned chats</summary>
        </member>
        <member name="F:TL.Stories_AllStories.users">
            <summary>Mentioned users</summary>
        </member>
        <member name="F:TL.Stories_AllStories.stealth_mode">
            <summary>Current <a href="https://corefork.telegram.org/api/stories#stealth-mode">stealth mode</a> information</summary>
        </member>
        <member name="F:TL.Stories_AllStories.Flags.has_more">
            <summary>Whether more results can be fetched as <a href="https://corefork.telegram.org/api/stories#watching-stories">described here »</a>.</summary>
        </member>
        <member name="M:TL.Stories_AllStories.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Stories_Stories">
            <summary>List of <a href="https://corefork.telegram.org/api/stories#pinned-or-archived-stories">stories</a>		<para>See <a href="https://corefork.telegram.org/constructor/stories.stories"/></para></summary>
        </member>
        <member name="F:TL.Stories_Stories.count">
            <summary>Total number of stories that can be fetched</summary>
        </member>
        <member name="F:TL.Stories_Stories.stories">
            <summary>Stories</summary>
        </member>
        <member name="F:TL.Stories_Stories.chats">
            <summary>Mentioned chats</summary>
        </member>
        <member name="F:TL.Stories_Stories.users">
            <summary>Mentioned users</summary>
        </member>
        <member name="F:TL.Stories_Stories.Flags.has_pinned_to_top">
            <summary>Field <see cref="F:TL.Stories_Stories.pinned_to_top"/> has a value</summary>
        </member>
        <member name="M:TL.Stories_Stories.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.StoryViewBase">
            <summary><a href="https://corefork.telegram.org/api/stories">Story</a> view date and reaction information		<para>See <a href="https://corefork.telegram.org/type/StoryView"/></para>		<para>Derived classes: <see cref="T:TL.StoryView"/>, <see cref="T:TL.StoryViewPublicForward"/>, <see cref="T:TL.StoryViewPublicRepost"/></para></summary>
        </member>
        <member name="T:TL.StoryView">
            <summary><a href="https://corefork.telegram.org/api/stories">Story</a> view date and reaction information		<para>See <a href="https://corefork.telegram.org/constructor/storyView"/></para></summary>
        </member>
        <member name="F:TL.StoryView.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.StoryView.user_id">
            <summary>The user that viewed the story</summary>
        </member>
        <member name="F:TL.StoryView.date">
            <summary>When did the user view the story</summary>
        </member>
        <member name="F:TL.StoryView.reaction">
            <summary>If present, contains the reaction that the user left on the story</summary>
        </member>
        <member name="F:TL.StoryView.Flags.blocked">
            <summary>Whether we have <a href="https://corefork.telegram.org/api/block">completely blocked</a> this user, including from viewing more of our stories.</summary>
        </member>
        <member name="F:TL.StoryView.Flags.blocked_my_stories_from">
            <summary>Whether we have <a href="https://corefork.telegram.org/api/block">blocked</a> this user from viewing more of our stories.</summary>
        </member>
        <member name="F:TL.StoryView.Flags.has_reaction">
            <summary>Field <see cref="F:TL.StoryView.reaction"/> has a value</summary>
        </member>
        <member name="T:TL.StoryViewPublicForward">
            <summary>A certain peer has forwarded the story as a message to a public chat or channel.		<para>See <a href="https://corefork.telegram.org/constructor/storyViewPublicForward"/></para></summary>
        </member>
        <member name="F:TL.StoryViewPublicForward.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.StoryViewPublicForward.message">
            <summary>The message with the forwarded story.</summary>
        </member>
        <member name="F:TL.StoryViewPublicForward.Flags.blocked">
            <summary>Whether we have <a href="https://corefork.telegram.org/api/block">completely blocked</a> this user, including from viewing more of our stories.</summary>
        </member>
        <member name="F:TL.StoryViewPublicForward.Flags.blocked_my_stories_from">
            <summary>Whether we have <a href="https://corefork.telegram.org/api/block">blocked</a> this user from viewing more of our stories.</summary>
        </member>
        <member name="T:TL.StoryViewPublicRepost">
            <summary>A certain peer has reposted the story.		<para>See <a href="https://corefork.telegram.org/constructor/storyViewPublicRepost"/></para></summary>
        </member>
        <member name="F:TL.StoryViewPublicRepost.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.StoryViewPublicRepost.peer_id">
            <summary>The peer that reposted the story.</summary>
        </member>
        <member name="F:TL.StoryViewPublicRepost.story">
            <summary>The reposted story.</summary>
        </member>
        <member name="F:TL.StoryViewPublicRepost.Flags.blocked">
            <summary>Whether we have <a href="https://corefork.telegram.org/api/block">completely blocked</a> this user, including from viewing more of our stories.</summary>
        </member>
        <member name="F:TL.StoryViewPublicRepost.Flags.blocked_my_stories_from">
            <summary>Whether we have <a href="https://corefork.telegram.org/api/block">blocked</a> this user from viewing more of our stories.</summary>
        </member>
        <member name="T:TL.Stories_StoryViewsList">
            <summary>Reaction and view counters for a <a href="https://corefork.telegram.org/api/stories">story</a>		<para>See <a href="https://corefork.telegram.org/constructor/stories.storyViewsList"/></para></summary>
        </member>
        <member name="F:TL.Stories_StoryViewsList.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Stories_StoryViewsList.count">
            <summary>Total number of results that can be fetched</summary>
        </member>
        <member name="F:TL.Stories_StoryViewsList.views_count">
            <summary>Total number of story views</summary>
        </member>
        <member name="F:TL.Stories_StoryViewsList.forwards_count">
            <summary>Total number of story forwards/reposts</summary>
        </member>
        <member name="F:TL.Stories_StoryViewsList.reactions_count">
            <summary>Number of reactions that were added to the story</summary>
        </member>
        <member name="F:TL.Stories_StoryViewsList.views">
            <summary>Story view date and reaction information</summary>
        </member>
        <member name="F:TL.Stories_StoryViewsList.chats">
            <summary>Mentioned chats</summary>
        </member>
        <member name="F:TL.Stories_StoryViewsList.users">
            <summary>Mentioned users</summary>
        </member>
        <member name="F:TL.Stories_StoryViewsList.next_offset">
            <summary>Offset for pagination</summary>
        </member>
        <member name="F:TL.Stories_StoryViewsList.Flags.has_next_offset">
            <summary>Field <see cref="F:TL.Stories_StoryViewsList.next_offset"/> has a value</summary>
        </member>
        <member name="M:TL.Stories_StoryViewsList.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Stories_StoryViews">
            <summary>Reaction and view counters for a list of <a href="https://corefork.telegram.org/api/stories">stories</a>		<para>See <a href="https://corefork.telegram.org/constructor/stories.storyViews"/></para></summary>
        </member>
        <member name="F:TL.Stories_StoryViews.views">
            <summary>View date and reaction information of multiple stories</summary>
        </member>
        <member name="F:TL.Stories_StoryViews.users">
            <summary>Mentioned users</summary>
        </member>
        <member name="T:TL.InputReplyTo">
            <summary>Contains info about a message or story to reply to.		<para>See <a href="https://corefork.telegram.org/type/InputReplyTo"/></para>		<para>Derived classes: <see cref="T:TL.InputReplyToMessage"/>, <see cref="T:TL.InputReplyToStory"/></para></summary>
        </member>
        <member name="T:TL.InputReplyToMessage">
            <summary>Reply to a message.		<para>See <a href="https://corefork.telegram.org/constructor/inputReplyToMessage"/></para></summary>
        </member>
        <member name="F:TL.InputReplyToMessage.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.InputReplyToMessage.reply_to_msg_id">
            <summary>The message ID to reply to.</summary>
        </member>
        <member name="F:TL.InputReplyToMessage.top_msg_id">
            <summary>This field must contain the topic ID <strong>only</strong> when replying to messages in forum topics different from the "General" topic (i.e. <c>reply_to_msg_id</c> is set and <c>reply_to_msg_id != topicID</c> and <c>topicID != 1</c>).  <br/>If the replied-to message is deleted before the method finishes execution, the value in this field will be used to send the message to the correct topic, instead of the "General" topic.</summary>
        </member>
        <member name="F:TL.InputReplyToMessage.reply_to_peer_id">
            <summary>Used to reply to messages sent to another chat (specified here), can only be used for non-<c>protected</c> chats and messages.</summary>
        </member>
        <member name="F:TL.InputReplyToMessage.quote_text">
            <summary>Used to quote-reply to only a certain section (specified here) of the original message. The maximum UTF-8 length for quotes is specified in the <a href="https://corefork.telegram.org/api/config#quote-length-max">quote_length_max</a> config key.</summary>
        </member>
        <member name="F:TL.InputReplyToMessage.quote_entities">
            <summary><a href="https://corefork.telegram.org/api/entities">Message entities for styled text</a> from the <c>quote_text</c> field.</summary>
        </member>
        <member name="F:TL.InputReplyToMessage.quote_offset">
            <summary>Offset of the message <c>quote_text</c> within the original message (in <a href="https://corefork.telegram.org/api/entities#entity-length">UTF-16 code units</a>).</summary>
        </member>
        <member name="F:TL.InputReplyToMessage.Flags.has_top_msg_id">
            <summary>Field <see cref="F:TL.InputReplyToMessage.top_msg_id"/> has a value</summary>
        </member>
        <member name="F:TL.InputReplyToMessage.Flags.has_reply_to_peer_id">
            <summary>Field <see cref="F:TL.InputReplyToMessage.reply_to_peer_id"/> has a value</summary>
        </member>
        <member name="F:TL.InputReplyToMessage.Flags.has_quote_text">
            <summary>Field <see cref="F:TL.InputReplyToMessage.quote_text"/> has a value</summary>
        </member>
        <member name="F:TL.InputReplyToMessage.Flags.has_quote_entities">
            <summary>Field <see cref="F:TL.InputReplyToMessage.quote_entities"/> has a value</summary>
        </member>
        <member name="F:TL.InputReplyToMessage.Flags.has_quote_offset">
            <summary>Field <see cref="F:TL.InputReplyToMessage.quote_offset"/> has a value</summary>
        </member>
        <member name="T:TL.InputReplyToStory">
            <summary>Reply to a story.		<para>See <a href="https://corefork.telegram.org/constructor/inputReplyToStory"/></para></summary>
        </member>
        <member name="F:TL.InputReplyToStory.story_id">
            <summary>ID of the story to reply to.</summary>
        </member>
        <member name="T:TL.ExportedStoryLink">
            <summary>Represents a <a href="https://corefork.telegram.org/api/stories#story-links">story deep link</a>.		<para>See <a href="https://corefork.telegram.org/constructor/exportedStoryLink"/></para></summary>
        </member>
        <member name="F:TL.ExportedStoryLink.link">
            <summary>The <a href="https://corefork.telegram.org/api/stories#story-links">story deep link</a>.</summary>
        </member>
        <member name="T:TL.StoriesStealthMode">
            <summary>Information about the current <a href="https://corefork.telegram.org/api/stories#stealth-mode">stealth mode</a> session.		<para>See <a href="https://corefork.telegram.org/constructor/storiesStealthMode"/></para></summary>
        </member>
        <member name="F:TL.StoriesStealthMode.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.StoriesStealthMode.active_until_date">
            <summary>The date up to which stealth mode will be active.</summary>
        </member>
        <member name="F:TL.StoriesStealthMode.cooldown_until_date">
            <summary>The date starting from which the user will be allowed to re-enable stealth mode again.</summary>
        </member>
        <member name="F:TL.StoriesStealthMode.Flags.has_active_until_date">
            <summary>Field <see cref="F:TL.StoriesStealthMode.active_until_date"/> has a value</summary>
        </member>
        <member name="F:TL.StoriesStealthMode.Flags.has_cooldown_until_date">
            <summary>Field <see cref="F:TL.StoriesStealthMode.cooldown_until_date"/> has a value</summary>
        </member>
        <member name="T:TL.MediaAreaCoordinates">
            <summary>Coordinates and size of a clicable rectangular area on top of a story.		<para>See <a href="https://corefork.telegram.org/constructor/mediaAreaCoordinates"/></para></summary>
        </member>
        <member name="F:TL.MediaAreaCoordinates.x">
            <summary>The abscissa of the rectangle's center, as a percentage of the media width (0-100).</summary>
        </member>
        <member name="F:TL.MediaAreaCoordinates.y">
            <summary>The ordinate of the rectangle's center, as a percentage of the media height (0-100).</summary>
        </member>
        <member name="F:TL.MediaAreaCoordinates.w">
            <summary>The width of the rectangle, as a percentage of the media width (0-100).</summary>
        </member>
        <member name="F:TL.MediaAreaCoordinates.h">
            <summary>The height of the rectangle, as a percentage of the media height (0-100).</summary>
        </member>
        <member name="F:TL.MediaAreaCoordinates.rotation">
            <summary>Clockwise rotation angle of the rectangle, in degrees (0-360).</summary>
        </member>
        <member name="T:TL.MediaArea">
            <summary>Represents a <a href="https://corefork.telegram.org/api/stories#media-areas">story media area »</a>		<para>See <a href="https://corefork.telegram.org/type/MediaArea"/></para>		<para>Derived classes: <see cref="T:TL.MediaAreaVenue"/>, <see cref="T:TL.InputMediaAreaVenue"/>, <see cref="T:TL.MediaAreaGeoPoint"/>, <see cref="T:TL.MediaAreaSuggestedReaction"/>, <see cref="T:TL.MediaAreaChannelPost"/>, <see cref="T:TL.InputMediaAreaChannelPost"/></para></summary>
        </member>
        <member name="T:TL.MediaAreaVenue">
            <summary>Represents a location tag attached to a <a href="https://corefork.telegram.org/api/stories">story</a>, with additional venue information.		<para>See <a href="https://corefork.telegram.org/constructor/mediaAreaVenue"/></para></summary>
        </member>
        <member name="F:TL.MediaAreaVenue.coordinates">
            <summary>The size and location of the media area corresponding to the location sticker on top of the story media.</summary>
        </member>
        <member name="F:TL.MediaAreaVenue.geo">
            <summary>Coordinates of the venue</summary>
        </member>
        <member name="F:TL.MediaAreaVenue.title">
            <summary>Venue name</summary>
        </member>
        <member name="F:TL.MediaAreaVenue.address">
            <summary>Address</summary>
        </member>
        <member name="F:TL.MediaAreaVenue.provider">
            <summary>Venue provider: currently only "foursquare" needs to be supported.</summary>
        </member>
        <member name="F:TL.MediaAreaVenue.venue_id">
            <summary>Venue ID in the provider's database</summary>
        </member>
        <member name="F:TL.MediaAreaVenue.venue_type">
            <summary>Venue type in the provider's database</summary>
        </member>
        <member name="T:TL.InputMediaAreaVenue">
            <summary>Represents a <a href="https://corefork.telegram.org/api/stories#media-areas">location tag</a> attached to a <a href="https://corefork.telegram.org/api/stories">story</a>, with additional venue information.		<para>See <a href="https://corefork.telegram.org/constructor/inputMediaAreaVenue"/></para></summary>
        </member>
        <member name="F:TL.InputMediaAreaVenue.coordinates">
            <summary>The size and location of the media area corresponding to the location sticker on top of the story media.</summary>
        </member>
        <member name="F:TL.InputMediaAreaVenue.query_id">
            <summary>The <c>query_id</c> from <see cref="T:TL.Messages_BotResults"/>, see <a href="https://corefork.telegram.org/api/stories#media-areas">here »</a> for more info.</summary>
        </member>
        <member name="F:TL.InputMediaAreaVenue.result_id">
            <summary>The <c>id</c> of the chosen result, see <a href="https://corefork.telegram.org/api/stories#media-areas">here »</a> for more info.</summary>
        </member>
        <member name="T:TL.MediaAreaGeoPoint">
            <summary>Represents a geolocation tag attached to a <a href="https://corefork.telegram.org/api/stories">story</a>.		<para>See <a href="https://corefork.telegram.org/constructor/mediaAreaGeoPoint"/></para></summary>
        </member>
        <member name="F:TL.MediaAreaGeoPoint.coordinates">
            <summary>The size and position of the media area corresponding to the location sticker on top of the story media.</summary>
        </member>
        <member name="F:TL.MediaAreaGeoPoint.geo">
            <summary>Coordinates of the geolocation tag.</summary>
        </member>
        <member name="T:TL.MediaAreaSuggestedReaction">
            <summary>Represents a reaction bubble.		<para>See <a href="https://corefork.telegram.org/constructor/mediaAreaSuggestedReaction"/></para></summary>
        </member>
        <member name="F:TL.MediaAreaSuggestedReaction.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.MediaAreaSuggestedReaction.coordinates">
            <summary>The coordinates of the media area corresponding to the reaction button.</summary>
        </member>
        <member name="F:TL.MediaAreaSuggestedReaction.reaction">
            <summary>The reaction that should be sent when this area is clicked.</summary>
        </member>
        <member name="F:TL.MediaAreaSuggestedReaction.Flags.dark">
            <summary>Whether the reaction bubble has a dark background.</summary>
        </member>
        <member name="F:TL.MediaAreaSuggestedReaction.Flags.flipped">
            <summary>Whether the reaction bubble is mirrored (see <a href="https://corefork.telegram.org/api/stories#reactions">here »</a> for more info).</summary>
        </member>
        <member name="T:TL.MediaAreaChannelPost">
            <summary>Represents a channel post.		<para>See <a href="https://corefork.telegram.org/constructor/mediaAreaChannelPost"/></para></summary>
        </member>
        <member name="F:TL.MediaAreaChannelPost.coordinates">
            <summary>The size and location of the media area corresponding to the location sticker on top of the story media.</summary>
        </member>
        <member name="F:TL.MediaAreaChannelPost.channel_id">
            <summary>The channel that posted the message</summary>
        </member>
        <member name="F:TL.MediaAreaChannelPost.msg_id">
            <summary>ID of the channel message</summary>
        </member>
        <member name="T:TL.InputMediaAreaChannelPost">
            <summary>Represents a channel post		<para>See <a href="https://corefork.telegram.org/constructor/inputMediaAreaChannelPost"/></para></summary>
        </member>
        <member name="F:TL.InputMediaAreaChannelPost.coordinates">
            <summary>The size and location of the media area corresponding to the location sticker on top of the story media.</summary>
        </member>
        <member name="F:TL.InputMediaAreaChannelPost.channel">
            <summary>The channel that posted the message</summary>
        </member>
        <member name="F:TL.InputMediaAreaChannelPost.msg_id">
            <summary>ID of the channel message</summary>
        </member>
        <member name="T:TL.PeerStories">
            <summary><a href="https://corefork.telegram.org/api/stories">Stories</a> associated to a peer		<para>See <a href="https://corefork.telegram.org/constructor/peerStories"/></para></summary>
        </member>
        <member name="F:TL.PeerStories.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.PeerStories.peer">
            <summary>The peer</summary>
        </member>
        <member name="F:TL.PeerStories.max_read_id">
            <summary>If set, contains the ID of the maximum read story</summary>
        </member>
        <member name="F:TL.PeerStories.stories">
            <summary>Stories</summary>
        </member>
        <member name="F:TL.PeerStories.Flags.has_max_read_id">
            <summary>Field <see cref="F:TL.PeerStories.max_read_id"/> has a value</summary>
        </member>
        <member name="T:TL.Stories_PeerStories">
            <summary><a href="https://corefork.telegram.org/api/stories#watching-stories">Active story list</a> of a specific peer.		<para>See <a href="https://corefork.telegram.org/constructor/stories.peerStories"/></para></summary>
        </member>
        <member name="F:TL.Stories_PeerStories.stories">
            <summary>Stories</summary>
        </member>
        <member name="F:TL.Stories_PeerStories.chats">
            <summary>Mentioned chats</summary>
        </member>
        <member name="F:TL.Stories_PeerStories.users">
            <summary>Mentioned users</summary>
        </member>
        <member name="M:TL.Stories_PeerStories.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Messages_WebPage">
            <summary>Represents an Instant View webpage.		<para>See <a href="https://corefork.telegram.org/constructor/messages.webPage"/></para></summary>
        </member>
        <member name="F:TL.Messages_WebPage.webpage">
            <summary>The instant view webpage.</summary>
        </member>
        <member name="F:TL.Messages_WebPage.chats">
            <summary>Chats mentioned in the webpage.</summary>
        </member>
        <member name="F:TL.Messages_WebPage.users">
            <summary>Users mentioned in the webpage.</summary>
        </member>
        <member name="M:TL.Messages_WebPage.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.PremiumGiftCodeOption">
            <summary>Contains info about a <a href="https://corefork.telegram.org/api/giveaways">giveaway/gift</a> option.		<para>See <a href="https://corefork.telegram.org/constructor/premiumGiftCodeOption"/></para></summary>
        </member>
        <member name="F:TL.PremiumGiftCodeOption.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.PremiumGiftCodeOption.users">
            <summary>Number of users which will be able to activate the gift codes.</summary>
        </member>
        <member name="F:TL.PremiumGiftCodeOption.months">
            <summary>Duration in months of each gifted <a href="https://corefork.telegram.org/api/premium">Telegram Premium</a> subscription.</summary>
        </member>
        <member name="F:TL.PremiumGiftCodeOption.store_product">
            <summary>Identifier of the store product associated with the option, official apps only.</summary>
        </member>
        <member name="F:TL.PremiumGiftCodeOption.store_quantity">
            <summary>Number of times the store product must be paid</summary>
        </member>
        <member name="F:TL.PremiumGiftCodeOption.currency">
            <summary>Three-letter ISO 4217 <a href="https://corefork.telegram.org/bots/payments#supported-currencies">currency</a> code</summary>
        </member>
        <member name="F:TL.PremiumGiftCodeOption.amount">
            <summary>Total price in the smallest units of the currency (integer, not float/double). For example, for a price of <c>US$ 1.45</c> pass <c>amount = 145</c>. See the exp parameter in <a href="https://corefork.telegram.org/bots/payments/currencies.json">currencies.json</a>, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies).</summary>
        </member>
        <member name="F:TL.PremiumGiftCodeOption.Flags.has_store_product">
            <summary>Field <see cref="F:TL.PremiumGiftCodeOption.store_product"/> has a value</summary>
        </member>
        <member name="F:TL.PremiumGiftCodeOption.Flags.has_store_quantity">
            <summary>Field <see cref="F:TL.PremiumGiftCodeOption.store_quantity"/> has a value</summary>
        </member>
        <member name="T:TL.Payments_CheckedGiftCode">
            <summary>Contains info about a <a href="https://corefork.telegram.org/api/links#premium-giftcode-links">Telegram Premium giftcode link</a>.		<para>See <a href="https://corefork.telegram.org/constructor/payments.checkedGiftCode"/></para></summary>
        </member>
        <member name="F:TL.Payments_CheckedGiftCode.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Payments_CheckedGiftCode.from_id">
            <summary>The peer that created the gift code.</summary>
        </member>
        <member name="F:TL.Payments_CheckedGiftCode.giveaway_msg_id">
            <summary>Message ID of the giveaway in the channel specified in <c>from_id</c>.</summary>
        </member>
        <member name="F:TL.Payments_CheckedGiftCode.to_id">
            <summary>The destination user of the gift.</summary>
        </member>
        <member name="F:TL.Payments_CheckedGiftCode.date">
            <summary>Creation date of the gift code.</summary>
        </member>
        <member name="F:TL.Payments_CheckedGiftCode.months">
            <summary>Duration in months of the gifted <a href="https://corefork.telegram.org/api/premium">Telegram Premium</a> subscription.</summary>
        </member>
        <member name="F:TL.Payments_CheckedGiftCode.used_date">
            <summary>When was the giftcode imported, if it was imported.</summary>
        </member>
        <member name="F:TL.Payments_CheckedGiftCode.chats">
            <summary>Mentioned chats</summary>
        </member>
        <member name="F:TL.Payments_CheckedGiftCode.users">
            <summary>Mentioned users</summary>
        </member>
        <member name="F:TL.Payments_CheckedGiftCode.Flags.has_to_id">
            <summary>Field <see cref="F:TL.Payments_CheckedGiftCode.to_id"/> has a value</summary>
        </member>
        <member name="F:TL.Payments_CheckedGiftCode.Flags.has_used_date">
            <summary>Field <see cref="F:TL.Payments_CheckedGiftCode.used_date"/> has a value</summary>
        </member>
        <member name="F:TL.Payments_CheckedGiftCode.Flags.via_giveaway">
            <summary>Whether this giftcode was created by a <a href="https://corefork.telegram.org/api/giveaways">giveaway</a>.</summary>
        </member>
        <member name="F:TL.Payments_CheckedGiftCode.Flags.has_giveaway_msg_id">
            <summary>Field <see cref="F:TL.Payments_CheckedGiftCode.giveaway_msg_id"/> has a value</summary>
        </member>
        <member name="F:TL.Payments_CheckedGiftCode.Flags.has_from_id">
            <summary>Field <see cref="F:TL.Payments_CheckedGiftCode.from_id"/> has a value</summary>
        </member>
        <member name="M:TL.Payments_CheckedGiftCode.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Payments_GiveawayInfoBase">
            <summary>Info about a <a href="https://corefork.telegram.org/api/giveaways">Telegram Premium Giveaway</a>.		<para>See <a href="https://corefork.telegram.org/type/payments.GiveawayInfo"/></para>		<para>Derived classes: <see cref="T:TL.Payments_GiveawayInfo"/>, <see cref="T:TL.Payments_GiveawayInfoResults"/></para></summary>
        </member>
        <member name="P:TL.Payments_GiveawayInfoBase.StartDate">
            <summary>When was the giveaway started</summary>
        </member>
        <member name="T:TL.Payments_GiveawayInfo">
            <summary>Contains info about an ongoing <a href="https://corefork.telegram.org/api/giveaways">giveaway</a>.		<para>See <a href="https://corefork.telegram.org/constructor/payments.giveawayInfo"/></para></summary>
        </member>
        <member name="F:TL.Payments_GiveawayInfo.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Payments_GiveawayInfo.start_date">
            <summary>When was the giveaway started</summary>
        </member>
        <member name="F:TL.Payments_GiveawayInfo.joined_too_early_date">
            <summary>The current user can't participate in the giveaway, because they were already a member of the channel when the giveaway started, and the <c>only_new_subscribers</c> was set when starting the giveaway.</summary>
        </member>
        <member name="F:TL.Payments_GiveawayInfo.admin_disallowed_chat_id">
            <summary>If set, the current user can't participate in the giveaway, because they are an administrator in one of the channels (ID specified in this flag) that created the giveaway.</summary>
        </member>
        <member name="F:TL.Payments_GiveawayInfo.disallowed_country">
            <summary>If set, the current user can't participate in this giveaway, because their phone number is from the specified disallowed country (specified as a two-letter ISO 3166-1 alpha-2 country code).</summary>
        </member>
        <member name="F:TL.Payments_GiveawayInfo.Flags.participating">
            <summary>The current user is participating in the giveaway.</summary>
        </member>
        <member name="F:TL.Payments_GiveawayInfo.Flags.has_joined_too_early_date">
            <summary>Field <see cref="F:TL.Payments_GiveawayInfo.joined_too_early_date"/> has a value</summary>
        </member>
        <member name="F:TL.Payments_GiveawayInfo.Flags.has_admin_disallowed_chat_id">
            <summary>Field <see cref="F:TL.Payments_GiveawayInfo.admin_disallowed_chat_id"/> has a value</summary>
        </member>
        <member name="F:TL.Payments_GiveawayInfo.Flags.preparing_results">
            <summary>If set, the giveaway has ended and the results are being prepared.</summary>
        </member>
        <member name="F:TL.Payments_GiveawayInfo.Flags.has_disallowed_country">
            <summary>Field <see cref="F:TL.Payments_GiveawayInfo.disallowed_country"/> has a value</summary>
        </member>
        <member name="P:TL.Payments_GiveawayInfo.StartDate">
            <summary>When was the giveaway started</summary>
        </member>
        <member name="T:TL.Payments_GiveawayInfoResults">
            <summary>A <a href="https://corefork.telegram.org/api/giveaways">giveaway</a> has ended.		<para>See <a href="https://corefork.telegram.org/constructor/payments.giveawayInfoResults"/></para></summary>
        </member>
        <member name="F:TL.Payments_GiveawayInfoResults.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Payments_GiveawayInfoResults.start_date">
            <summary>Start date of the giveaway</summary>
        </member>
        <member name="F:TL.Payments_GiveawayInfoResults.gift_code_slug">
            <summary>If we're one of the winners of this giveaway, contains the <a href="https://corefork.telegram.org/api/links#premium-giftcode-links">Premium gift code</a>, see <a href="https://corefork.telegram.org/api/giveaways">here »</a> for more info on the full giveaway flow.</summary>
        </member>
        <member name="F:TL.Payments_GiveawayInfoResults.finish_date">
            <summary>End date of the giveaway. May be bigger than the end date specified in parameters of the giveaway.</summary>
        </member>
        <member name="F:TL.Payments_GiveawayInfoResults.winners_count">
            <summary>Number of winners in the giveaway</summary>
        </member>
        <member name="F:TL.Payments_GiveawayInfoResults.activated_count">
            <summary>Number of winners, which activated their <a href="https://corefork.telegram.org/api/links#premium-giftcode-links">gift codes</a>.</summary>
        </member>
        <member name="F:TL.Payments_GiveawayInfoResults.Flags.winner">
            <summary>Whether we're one of the winners of this giveaway.</summary>
        </member>
        <member name="F:TL.Payments_GiveawayInfoResults.Flags.refunded">
            <summary>Whether the giveaway was canceled and was fully refunded.</summary>
        </member>
        <member name="P:TL.Payments_GiveawayInfoResults.StartDate">
            <summary>Start date of the giveaway</summary>
        </member>
        <member name="T:TL.PrepaidGiveaway">
            <summary>Contains info about a <a href="https://corefork.telegram.org/api/giveaways">prepaid giveaway »</a>.		<para>See <a href="https://corefork.telegram.org/constructor/prepaidGiveaway"/></para></summary>
        </member>
        <member name="F:TL.PrepaidGiveaway.id">
            <summary>Prepaid giveaway ID.</summary>
        </member>
        <member name="F:TL.PrepaidGiveaway.months">
            <summary>Duration in months of each gifted <a href="https://corefork.telegram.org/api/premium">Telegram Premium</a> subscription.</summary>
        </member>
        <member name="F:TL.PrepaidGiveaway.quantity">
            <summary>Number of given away <a href="https://corefork.telegram.org/api/premium">Telegram Premium</a> subscriptions.</summary>
        </member>
        <member name="F:TL.PrepaidGiveaway.date">
            <summary>Payment date.</summary>
        </member>
        <member name="T:TL.Boost">
            <summary>Info about one or more <a href="https://corefork.telegram.org/api/boost">boosts</a> applied by a specific user.		<para>See <a href="https://corefork.telegram.org/constructor/boost"/></para></summary>
        </member>
        <member name="F:TL.Boost.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Boost.id">
            <summary>Unique ID for this set of boosts.</summary>
        </member>
        <member name="F:TL.Boost.user_id">
            <summary>ID of the user that applied the boost.</summary>
        </member>
        <member name="F:TL.Boost.giveaway_msg_id">
            <summary>The message ID of the <a href="https://corefork.telegram.org/api/giveaways">giveaway</a></summary>
        </member>
        <member name="F:TL.Boost.date">
            <summary>When was the boost applied</summary>
        </member>
        <member name="F:TL.Boost.expires">
            <summary>When does the boost expire</summary>
        </member>
        <member name="F:TL.Boost.used_gift_slug">
            <summary>The created Telegram Premium gift code, only set if either <c>gift</c> or <c>giveaway</c> are set AND it is either a gift code for the currently logged in user or if it was already claimed.</summary>
        </member>
        <member name="F:TL.Boost.multiplier">
            <summary>If set, this boost counts as <c>multiplier</c> boosts, otherwise it counts as a single boost.</summary>
        </member>
        <member name="F:TL.Boost.Flags.has_user_id">
            <summary>Field <see cref="F:TL.Boost.user_id"/> has a value</summary>
        </member>
        <member name="F:TL.Boost.Flags.gift">
            <summary>Whether this boost was applied because the channel <a href="https://corefork.telegram.org/api/giveaways">directly gifted a subscription to the user</a>.</summary>
        </member>
        <member name="F:TL.Boost.Flags.giveaway">
            <summary>Whether this boost was applied because the user was chosen in a <a href="https://corefork.telegram.org/api/giveaways">giveaway started by the channel</a>.</summary>
        </member>
        <member name="F:TL.Boost.Flags.unclaimed">
            <summary>If set, the user hasn't yet invoked <see cref="M:TL.SchemaExtensions.Payments_ApplyGiftCode(WTelegram.Client,System.String)">Payments_ApplyGiftCode</see> to claim a subscription gifted <a href="https://corefork.telegram.org/api/giveaways">directly or in a giveaway by the channel</a>.</summary>
        </member>
        <member name="F:TL.Boost.Flags.has_used_gift_slug">
            <summary>Field <see cref="F:TL.Boost.used_gift_slug"/> has a value</summary>
        </member>
        <member name="F:TL.Boost.Flags.has_multiplier">
            <summary>Field <see cref="F:TL.Boost.multiplier"/> has a value</summary>
        </member>
        <member name="T:TL.Premium_BoostsList">
            <summary>List of <a href="https://corefork.telegram.org/api/boost">boosts</a> that were applied to a peer by multiple users.		<para>See <a href="https://corefork.telegram.org/constructor/premium.boostsList"/></para></summary>
        </member>
        <member name="F:TL.Premium_BoostsList.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Premium_BoostsList.count">
            <summary>Total number of results</summary>
        </member>
        <member name="F:TL.Premium_BoostsList.boosts">
            <summary><a href="https://corefork.telegram.org/api/boost">Boosts</a></summary>
        </member>
        <member name="F:TL.Premium_BoostsList.next_offset">
            <summary>Offset that can be used for <a href="https://corefork.telegram.org/api/offsets">pagination</a>.</summary>
        </member>
        <member name="F:TL.Premium_BoostsList.users">
            <summary>Mentioned users</summary>
        </member>
        <member name="F:TL.Premium_BoostsList.Flags.has_next_offset">
            <summary>Field <see cref="F:TL.Premium_BoostsList.next_offset"/> has a value</summary>
        </member>
        <member name="T:TL.MyBoost">
            <summary>Contains information about a single <a href="https://corefork.telegram.org/api/boost">boost slot »</a>.		<para>See <a href="https://corefork.telegram.org/constructor/myBoost"/></para></summary>
        </member>
        <member name="F:TL.MyBoost.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.MyBoost.slot">
            <summary><a href="https://corefork.telegram.org/api/boost">Boost slot ID »</a></summary>
        </member>
        <member name="F:TL.MyBoost.peer">
            <summary>If set, indicates this slot is currently occupied, i.e. we are <a href="https://corefork.telegram.org/api/boost">boosting</a> this peer.  <br/>Note that we can assign multiple boost slots to the same peer.</summary>
        </member>
        <member name="F:TL.MyBoost.date">
            <summary>When (unixtime) we started boosting the <c>peer</c>, <c>0</c> otherwise.</summary>
        </member>
        <member name="F:TL.MyBoost.expires">
            <summary>Indicates the (unixtime) expiration date of the boost in <c>peer</c> (<c>0</c> if <c>peer</c> is not set).</summary>
        </member>
        <member name="F:TL.MyBoost.cooldown_until_date">
            <summary>If <c>peer</c> is set, indicates the (unixtime) date after which this boost can be reassigned to another channel.</summary>
        </member>
        <member name="F:TL.MyBoost.Flags.has_peer">
            <summary>Field <see cref="F:TL.MyBoost.peer"/> has a value</summary>
        </member>
        <member name="F:TL.MyBoost.Flags.has_cooldown_until_date">
            <summary>Field <see cref="F:TL.MyBoost.cooldown_until_date"/> has a value</summary>
        </member>
        <member name="T:TL.Premium_MyBoosts">
            <summary>A list of peers we are currently <a href="https://corefork.telegram.org/api/boost">boosting</a>, and how many <a href="https://corefork.telegram.org/api/boost">boost slots</a> we have left.		<para>See <a href="https://corefork.telegram.org/constructor/premium.myBoosts"/></para></summary>
        </member>
        <member name="F:TL.Premium_MyBoosts.my_boosts">
            <summary>Info about boosted peers and remaining boost slots.</summary>
        </member>
        <member name="F:TL.Premium_MyBoosts.chats">
            <summary>Referenced chats</summary>
        </member>
        <member name="F:TL.Premium_MyBoosts.users">
            <summary>Referenced users</summary>
        </member>
        <member name="M:TL.Premium_MyBoosts.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Premium_BoostsStatus">
            <summary>Contains info about the current <a href="https://corefork.telegram.org/api/boost">boost status</a> of a peer.		<para>See <a href="https://corefork.telegram.org/constructor/premium.boostsStatus"/></para></summary>
        </member>
        <member name="F:TL.Premium_BoostsStatus.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Premium_BoostsStatus.level">
            <summary>The current boost level of the channel.</summary>
        </member>
        <member name="F:TL.Premium_BoostsStatus.current_level_boosts">
            <summary>The number of boosts acquired so far in the current level.</summary>
        </member>
        <member name="F:TL.Premium_BoostsStatus.boosts">
            <summary>Total number of boosts acquired so far.</summary>
        </member>
        <member name="F:TL.Premium_BoostsStatus.gift_boosts">
            <summary>The number of boosts acquired from created Telegram Premium <a href="https://corefork.telegram.org/api/giveaways">gift codes</a> and <a href="https://corefork.telegram.org/api/giveaways">giveaways</a>; only returned to channel admins.</summary>
        </member>
        <member name="F:TL.Premium_BoostsStatus.next_level_boosts">
            <summary>Total number of boosts needed to reach the next level; if absent, the next level isn't available.</summary>
        </member>
        <member name="F:TL.Premium_BoostsStatus.premium_audience">
            <summary>Only returned to channel admins: contains the approximated number of Premium users subscribed to the channel, related to the total number of subscribers.</summary>
        </member>
        <member name="F:TL.Premium_BoostsStatus.boost_url">
            <summary><a href="https://corefork.telegram.org/api/links#boost-links">Boost deep link »</a> that can be used to boost the chat.</summary>
        </member>
        <member name="F:TL.Premium_BoostsStatus.prepaid_giveaways">
            <summary>A list of prepaid <a href="https://corefork.telegram.org/api/giveaways">giveaways</a> available for the chat; only returned to channel admins.</summary>
        </member>
        <member name="F:TL.Premium_BoostsStatus.my_boost_slots">
            <summary>Indicates which of our <a href="https://corefork.telegram.org/api/boost">boost slots</a> we've assigned to this peer (populated if <c>my_boost</c> is set).</summary>
        </member>
        <member name="F:TL.Premium_BoostsStatus.Flags.has_next_level_boosts">
            <summary>Field <see cref="F:TL.Premium_BoostsStatus.next_level_boosts"/> has a value</summary>
        </member>
        <member name="F:TL.Premium_BoostsStatus.Flags.has_premium_audience">
            <summary>Field <see cref="F:TL.Premium_BoostsStatus.premium_audience"/> has a value</summary>
        </member>
        <member name="F:TL.Premium_BoostsStatus.Flags.my_boost">
            <summary>Whether we're currently boosting this channel, <c>my_boost_slots</c> will also be set.</summary>
        </member>
        <member name="F:TL.Premium_BoostsStatus.Flags.has_prepaid_giveaways">
            <summary>Field <see cref="F:TL.Premium_BoostsStatus.prepaid_giveaways"/> has a value</summary>
        </member>
        <member name="F:TL.Premium_BoostsStatus.Flags.has_gift_boosts">
            <summary>Field <see cref="F:TL.Premium_BoostsStatus.gift_boosts"/> has a value</summary>
        </member>
        <member name="T:TL.StoryFwdHeader">
            <summary>Contains info about the original poster of a reposted story.		<para>See <a href="https://corefork.telegram.org/constructor/storyFwdHeader"/></para></summary>
        </member>
        <member name="F:TL.StoryFwdHeader.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.StoryFwdHeader.from">
            <summary>Peer that originally posted the story; will be empty for stories forwarded from a user with forwards privacy enabled, in which case <c>from_name</c> will be set, instead.</summary>
        </member>
        <member name="F:TL.StoryFwdHeader.from_name">
            <summary>Will be set for stories forwarded from a user with forwards privacy enabled, in which case <c>from</c> will also be empty.</summary>
        </member>
        <member name="F:TL.StoryFwdHeader.story_id">
            <summary>, contains the story ID</summary>
        </member>
        <member name="F:TL.StoryFwdHeader.Flags.has_from">
            <summary>Field <see cref="F:TL.StoryFwdHeader.from"/> has a value</summary>
        </member>
        <member name="F:TL.StoryFwdHeader.Flags.has_from_name">
            <summary>Field <see cref="F:TL.StoryFwdHeader.from_name"/> has a value</summary>
        </member>
        <member name="F:TL.StoryFwdHeader.Flags.has_story_id">
            <summary>Field <see cref="F:TL.StoryFwdHeader.story_id"/> has a value</summary>
        </member>
        <member name="F:TL.StoryFwdHeader.Flags.modified">
            <summary>Whether the story media was modified before reposting it (for example by overlaying a round video with a reaction).</summary>
        </member>
        <member name="T:TL.PostInteractionCounters">
            <summary>Interaction counters		<para>See <a href="https://corefork.telegram.org/type/PostInteractionCounters"/></para>		<para>Derived classes: <see cref="T:TL.PostInteractionCountersMessage"/>, <see cref="T:TL.PostInteractionCountersStory"/></para></summary>
        </member>
        <member name="F:TL.PostInteractionCounters.views">
            <summary>Number of views</summary>
        </member>
        <member name="F:TL.PostInteractionCounters.forwards">
            <summary>Number of forwards to public channels</summary>
        </member>
        <member name="F:TL.PostInteractionCounters.reactions">
            <summary>Number of reactions</summary>
        </member>
        <member name="T:TL.PostInteractionCountersMessage">
            <summary>Interaction counters for a message.		<para>See <a href="https://corefork.telegram.org/constructor/postInteractionCountersMessage"/></para></summary>
        </member>
        <member name="F:TL.PostInteractionCountersMessage.msg_id">
            <summary>Message ID</summary>
        </member>
        <member name="T:TL.PostInteractionCountersStory">
            <summary>Interaction counters for a story.		<para>See <a href="https://corefork.telegram.org/constructor/postInteractionCountersStory"/></para></summary>
        </member>
        <member name="F:TL.PostInteractionCountersStory.story_id">
            <summary>Story ID</summary>
        </member>
        <member name="T:TL.Stats_StoryStats">
            <summary>Contains <a href="https://corefork.telegram.org/api/stats">statistics</a> about a <a href="https://corefork.telegram.org/api/stories">story</a>.		<para>See <a href="https://corefork.telegram.org/constructor/stats.storyStats"/></para></summary>
        </member>
        <member name="F:TL.Stats_StoryStats.views_graph">
            <summary>A graph containing the number of story views and shares</summary>
        </member>
        <member name="F:TL.Stats_StoryStats.reactions_by_emotion_graph">
            <summary>A bar graph containing the number of story reactions categorized by "emotion" (i.e. Positive, Negative, Other, etc...)</summary>
        </member>
        <member name="T:TL.PublicForward">
            <summary>Contains info about the forwards of a <a href="https://corefork.telegram.org/api/stories">story</a> as a message to public chats and reposts by public channels.		<para>See <a href="https://corefork.telegram.org/type/PublicForward"/></para>		<para>Derived classes: <see cref="T:TL.PublicForwardMessage"/>, <see cref="T:TL.PublicForwardStory"/></para></summary>
        </member>
        <member name="T:TL.PublicForwardMessage">
            <summary>Contains info about a forward of a <a href="https://corefork.telegram.org/api/stories">story</a> as a message.		<para>See <a href="https://corefork.telegram.org/constructor/publicForwardMessage"/></para></summary>
        </member>
        <member name="F:TL.PublicForwardMessage.message">
            <summary>Info about the message with the reposted story.</summary>
        </member>
        <member name="T:TL.PublicForwardStory">
            <summary>Contains info about a forward of a <a href="https://corefork.telegram.org/api/stories">story</a> as a repost by a public channel.		<para>See <a href="https://corefork.telegram.org/constructor/publicForwardStory"/></para></summary>
        </member>
        <member name="F:TL.PublicForwardStory.peer">
            <summary>The channel that reposted the story.</summary>
        </member>
        <member name="F:TL.PublicForwardStory.story">
            <summary>The reposted story (may be different from the original story).</summary>
        </member>
        <member name="T:TL.Stats_PublicForwards">
            <summary>Contains info about the forwards of a <a href="https://corefork.telegram.org/api/stories">story</a> as a message to public chats and reposts by public channels.		<para>See <a href="https://corefork.telegram.org/constructor/stats.publicForwards"/></para></summary>
        </member>
        <member name="F:TL.Stats_PublicForwards.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Stats_PublicForwards.count">
            <summary>Total number of results</summary>
        </member>
        <member name="F:TL.Stats_PublicForwards.forwards">
            <summary>Info about the forwards of a story.</summary>
        </member>
        <member name="F:TL.Stats_PublicForwards.next_offset">
            <summary>Offset used for <a href="https://corefork.telegram.org/api/offsets">pagination</a>.</summary>
        </member>
        <member name="F:TL.Stats_PublicForwards.chats">
            <summary>Mentioned chats</summary>
        </member>
        <member name="F:TL.Stats_PublicForwards.users">
            <summary>Mentioned users</summary>
        </member>
        <member name="F:TL.Stats_PublicForwards.Flags.has_next_offset">
            <summary>Field <see cref="F:TL.Stats_PublicForwards.next_offset"/> has a value</summary>
        </member>
        <member name="M:TL.Stats_PublicForwards.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.PeerColor">
            <summary>Represents a <a href="https://corefork.telegram.org/api/colors">color palette »</a>.		<para>See <a href="https://corefork.telegram.org/constructor/peerColor"/></para></summary>
        </member>
        <member name="F:TL.PeerColor.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.PeerColor.color">
            <summary><a href="https://corefork.telegram.org/api/colors">Color palette ID, see here »</a> for more info; if not set, the default palette should be used.</summary>
        </member>
        <member name="F:TL.PeerColor.background_emoji_id">
            <summary>Optional <a href="https://corefork.telegram.org/api/custom-emoji">custom emoji ID</a> used to generate the pattern.</summary>
        </member>
        <member name="F:TL.PeerColor.Flags.has_color">
            <summary>Field <see cref="F:TL.PeerColor.color"/> has a value</summary>
        </member>
        <member name="F:TL.PeerColor.Flags.has_background_emoji_id">
            <summary>Field <see cref="F:TL.PeerColor.background_emoji_id"/> has a value</summary>
        </member>
        <member name="T:TL.Help_PeerColorSetBase">
            <summary>Contains info about a <a href="https://corefork.telegram.org/api/colors">color palette »</a>.		<para>See <a href="https://corefork.telegram.org/type/help.PeerColorSet"/></para>		<para>Derived classes: <see cref="T:TL.Help_PeerColorSet"/>, <see cref="T:TL.Help_PeerColorProfileSet"/></para></summary>
        </member>
        <member name="T:TL.Help_PeerColorSet">
            <summary>Represents a <a href="https://corefork.telegram.org/api/colors">color palette that can be used in message accents »</a>.		<para>See <a href="https://corefork.telegram.org/constructor/help.peerColorSet"/></para></summary>
        </member>
        <member name="F:TL.Help_PeerColorSet.colors">
            <summary>A list of 1-3 colors in RGB format, describing the accent color.</summary>
        </member>
        <member name="T:TL.Help_PeerColorProfileSet">
            <summary>Represents a <a href="https://corefork.telegram.org/api/colors">color palette that can be used in profile pages »</a>.		<para>See <a href="https://corefork.telegram.org/constructor/help.peerColorProfileSet"/></para></summary>
        </member>
        <member name="F:TL.Help_PeerColorProfileSet.palette_colors">
            <summary>A list of 1-2 colors in RGB format, shown in the color palette settings to describe the current palette.</summary>
        </member>
        <member name="F:TL.Help_PeerColorProfileSet.bg_colors">
            <summary>A list of 1-2 colors in RGB format describing the colors used to generate the actual background used in the profile page.</summary>
        </member>
        <member name="F:TL.Help_PeerColorProfileSet.story_colors">
            <summary>A list of 2 colors in RGB format describing the colors of the gradient used for the unread active story indicator around the profile photo.</summary>
        </member>
        <member name="T:TL.Help_PeerColorOption">
            <summary>Contains info about a <a href="https://corefork.telegram.org/api/colors">color palette »</a>.		<para>See <a href="https://corefork.telegram.org/constructor/help.peerColorOption"/></para></summary>
        </member>
        <member name="F:TL.Help_PeerColorOption.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Help_PeerColorOption.color_id">
            <summary>Palette ID.</summary>
        </member>
        <member name="F:TL.Help_PeerColorOption.colors">
            <summary>Light mode palette. <br/>Will be empty for IDs <c>0</c> to <c>6</c> inclusive, in which case a palette containing a single color from the following colors should be used: red, orange, violet, green, cyan, blue, pink for indexes 0 to 6.</summary>
        </member>
        <member name="F:TL.Help_PeerColorOption.dark_colors">
            <summary>Dark mode palette. Optional, defaults to the palette in <c>colors</c> (or the autogenerated palette for IDs <c>0</c> to <c>6</c>) if absent.</summary>
        </member>
        <member name="F:TL.Help_PeerColorOption.channel_min_level">
            <summary>Channels can use this palette only after reaching at least the <a href="https://corefork.telegram.org/api/boost">boost level</a> specified in this field.</summary>
        </member>
        <member name="F:TL.Help_PeerColorOption.Flags.hidden">
            <summary>Whether this palette should not be displayed as an option to the user when choosing a palette to apply to profile pages or message accents.</summary>
        </member>
        <member name="F:TL.Help_PeerColorOption.Flags.has_colors">
            <summary>Field <see cref="F:TL.Help_PeerColorOption.colors"/> has a value</summary>
        </member>
        <member name="F:TL.Help_PeerColorOption.Flags.has_dark_colors">
            <summary>Field <see cref="F:TL.Help_PeerColorOption.dark_colors"/> has a value</summary>
        </member>
        <member name="F:TL.Help_PeerColorOption.Flags.has_channel_min_level">
            <summary>Field <see cref="F:TL.Help_PeerColorOption.channel_min_level"/> has a value</summary>
        </member>
        <member name="F:TL.Help_PeerColorOption.Flags.has_group_min_level">
            <summary>Field <see cref="F:TL.Help_PeerColorOption.group_min_level"/> has a value</summary>
        </member>
        <member name="T:TL.Help_PeerColors">
            <summary>Contains info about multiple <a href="https://corefork.telegram.org/api/colors">color palettes »</a>.		<para>See <a href="https://corefork.telegram.org/constructor/help.peerColors"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/help.peerColorsNotModified">help.peerColorsNotModified</a></remarks>
        </member>
        <member name="F:TL.Help_PeerColors.hash">
            <summary><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></summary>
        </member>
        <member name="F:TL.Help_PeerColors.colors">
            <summary>Usable <a href="https://corefork.telegram.org/api/colors">color palettes</a>.</summary>
        </member>
        <member name="T:TL.StoryReactionBase">
            <summary>How a certain peer reacted to or interacted with a story		<para>See <a href="https://corefork.telegram.org/type/StoryReaction"/></para>		<para>Derived classes: <see cref="T:TL.StoryReaction"/>, <see cref="T:TL.StoryReactionPublicForward"/>, <see cref="T:TL.StoryReactionPublicRepost"/></para></summary>
        </member>
        <member name="T:TL.StoryReaction">
            <summary>How a certain peer reacted to a story		<para>See <a href="https://corefork.telegram.org/constructor/storyReaction"/></para></summary>
        </member>
        <member name="F:TL.StoryReaction.peer_id">
            <summary>The peer</summary>
        </member>
        <member name="F:TL.StoryReaction.date">
            <summary>Reaction date</summary>
        </member>
        <member name="F:TL.StoryReaction.reaction">
            <summary>The reaction</summary>
        </member>
        <member name="T:TL.StoryReactionPublicForward">
            <summary>A certain peer has forwarded the story as a message to a public chat or channel.		<para>See <a href="https://corefork.telegram.org/constructor/storyReactionPublicForward"/></para></summary>
        </member>
        <member name="F:TL.StoryReactionPublicForward.message">
            <summary>The message with the forwarded story.</summary>
        </member>
        <member name="T:TL.StoryReactionPublicRepost">
            <summary>A certain peer has reposted the story.		<para>See <a href="https://corefork.telegram.org/constructor/storyReactionPublicRepost"/></para></summary>
        </member>
        <member name="F:TL.StoryReactionPublicRepost.peer_id">
            <summary>The peer that reposted the story.</summary>
        </member>
        <member name="F:TL.StoryReactionPublicRepost.story">
            <summary>The reposted story.</summary>
        </member>
        <member name="T:TL.Stories_StoryReactionsList">
            <summary>List of peers that reacted to or intercated with a specific <a href="https://corefork.telegram.org/api/stories">story</a>		<para>See <a href="https://corefork.telegram.org/constructor/stories.storyReactionsList"/></para></summary>
        </member>
        <member name="F:TL.Stories_StoryReactionsList.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Stories_StoryReactionsList.count">
            <summary>Total number of reactions matching query</summary>
        </member>
        <member name="F:TL.Stories_StoryReactionsList.reactions">
            <summary>List of peers that reacted to or interacted with a specific story</summary>
        </member>
        <member name="F:TL.Stories_StoryReactionsList.chats">
            <summary>Mentioned chats</summary>
        </member>
        <member name="F:TL.Stories_StoryReactionsList.users">
            <summary>Mentioned users</summary>
        </member>
        <member name="F:TL.Stories_StoryReactionsList.next_offset">
            <summary>If set, indicates the next offset to use to load more results by invoking <see cref="M:TL.SchemaExtensions.Stories_GetStoryReactionsList(WTelegram.Client,TL.InputPeer,System.Int32,System.Int32,TL.Reaction,System.String,System.Boolean)">Stories_GetStoryReactionsList</see>.</summary>
        </member>
        <member name="F:TL.Stories_StoryReactionsList.Flags.has_next_offset">
            <summary>Field <see cref="F:TL.Stories_StoryReactionsList.next_offset"/> has a value</summary>
        </member>
        <member name="M:TL.Stories_StoryReactionsList.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.SavedDialog">
            <summary>Represents a <a href="https://corefork.telegram.org/api/saved-messages">saved dialog »</a>.		<para>See <a href="https://corefork.telegram.org/constructor/savedDialog"/></para></summary>
        </member>
        <member name="F:TL.SavedDialog.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.SavedDialog.peer">
            <summary>The dialog</summary>
        </member>
        <member name="F:TL.SavedDialog.top_message">
            <summary>The latest message ID</summary>
        </member>
        <member name="F:TL.SavedDialog.Flags.pinned">
            <summary>Is the dialog pinned</summary>
        </member>
        <member name="T:TL.Messages_SavedDialogsBase">
            <summary>Represents some <a href="https://corefork.telegram.org/api/saved-messages">saved message dialogs »</a>.		<para>See <a href="https://corefork.telegram.org/type/messages.SavedDialogs"/></para>		<para>Derived classes: <see cref="T:TL.Messages_SavedDialogs"/>, <see cref="T:TL.Messages_SavedDialogsSlice"/>, <see cref="T:TL.Messages_SavedDialogsNotModified"/></para></summary>
        </member>
        <member name="P:TL.Messages_SavedDialogsBase.Dialogs">
            <summary><a href="https://corefork.telegram.org/api/saved-messages">Saved message dialogs »</a>.</summary>
        </member>
        <member name="P:TL.Messages_SavedDialogsBase.Messages">
            <summary>List of last messages from each saved dialog</summary>
        </member>
        <member name="P:TL.Messages_SavedDialogsBase.Chats">
            <summary>Mentioned chats</summary>
        </member>
        <member name="P:TL.Messages_SavedDialogsBase.Users">
            <summary>Mentioned users</summary>
        </member>
        <member name="T:TL.Messages_SavedDialogs">
            <summary>Represents some <a href="https://corefork.telegram.org/api/saved-messages">saved message dialogs »</a>.		<para>See <a href="https://corefork.telegram.org/constructor/messages.savedDialogs"/></para></summary>
        </member>
        <member name="F:TL.Messages_SavedDialogs.dialogs">
            <summary><a href="https://corefork.telegram.org/api/saved-messages">Saved message dialogs »</a>.</summary>
        </member>
        <member name="F:TL.Messages_SavedDialogs.messages">
            <summary>List of last messages from each saved dialog</summary>
        </member>
        <member name="F:TL.Messages_SavedDialogs.chats">
            <summary>Mentioned chats</summary>
        </member>
        <member name="F:TL.Messages_SavedDialogs.users">
            <summary>Mentioned users</summary>
        </member>
        <member name="P:TL.Messages_SavedDialogs.Dialogs">
            <summary><a href="https://corefork.telegram.org/api/saved-messages">Saved message dialogs »</a>.</summary>
        </member>
        <member name="P:TL.Messages_SavedDialogs.Messages">
            <summary>List of last messages from each saved dialog</summary>
        </member>
        <member name="P:TL.Messages_SavedDialogs.Chats">
            <summary>Mentioned chats</summary>
        </member>
        <member name="P:TL.Messages_SavedDialogs.Users">
            <summary>Mentioned users</summary>
        </member>
        <member name="M:TL.Messages_SavedDialogs.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Messages_SavedDialogsSlice">
            <summary>Incomplete list of <a href="https://corefork.telegram.org/api/saved-messages">saved message dialogs »</a> with messages and auxiliary data.		<para>See <a href="https://corefork.telegram.org/constructor/messages.savedDialogsSlice"/></para></summary>
        </member>
        <member name="F:TL.Messages_SavedDialogsSlice.count">
            <summary>Total number of saved message dialogs</summary>
        </member>
        <member name="T:TL.Messages_SavedDialogsNotModified">
            <summary>The saved dialogs haven't changed		<para>See <a href="https://corefork.telegram.org/constructor/messages.savedDialogsNotModified"/></para></summary>
        </member>
        <member name="F:TL.Messages_SavedDialogsNotModified.count">
            <summary>Number of <a href="https://corefork.telegram.org/api/saved-messages">saved dialogs</a> found server-side by the query</summary>
        </member>
        <member name="T:TL.SavedReactionTag">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/savedReactionTag"/></para></summary>
        </member>
        <member name="T:TL.Messages_SavedReactionTags">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/messages.savedReactionTags"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/messages.savedReactionTagsNotModified">messages.savedReactionTagsNotModified</a></remarks>
        </member>
        <member name="T:TL.OutboxReadDate">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/outboxReadDate"/></para></summary>
        </member>
        <member name="T:TL.Smsjobs_EligibilityToJoin">
            <summary><para>See <a href="https://corefork.telegram.org/type/smsjobs.EligibilityToJoin"/></para></summary>
        </member>
        <member name="T:TL.Smsjobs_EligibleToJoin">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/smsjobs.eligibleToJoin"/></para></summary>
        </member>
        <member name="T:TL.Smsjobs_Status">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/smsjobs.status"/></para></summary>
        </member>
        <member name="T:TL.SmsJob">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/smsJob"/></para></summary>
        </member>
        <member name="T:TL.BusinessWeeklyOpen">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/businessWeeklyOpen"/></para></summary>
        </member>
        <member name="T:TL.BusinessWorkHours">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/businessWorkHours"/></para></summary>
        </member>
        <member name="T:TL.BusinessLocation">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/businessLocation"/></para></summary>
        </member>
        <member name="T:TL.InputBusinessRecipients">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/inputBusinessRecipients"/></para></summary>
        </member>
        <member name="T:TL.BusinessRecipients">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/businessRecipients"/></para></summary>
        </member>
        <member name="T:TL.BusinessAwayMessageSchedule">
            <summary><para>See <a href="https://corefork.telegram.org/type/BusinessAwayMessageSchedule"/></para></summary>
        </member>
        <member name="T:TL.BusinessAwayMessageScheduleAlways">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/businessAwayMessageScheduleAlways"/></para></summary>
        </member>
        <member name="T:TL.BusinessAwayMessageScheduleOutsideWorkHours">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/businessAwayMessageScheduleOutsideWorkHours"/></para></summary>
        </member>
        <member name="T:TL.BusinessAwayMessageScheduleCustom">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/businessAwayMessageScheduleCustom"/></para></summary>
        </member>
        <member name="T:TL.InputBusinessGreetingMessage">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/inputBusinessGreetingMessage"/></para></summary>
        </member>
        <member name="T:TL.BusinessGreetingMessage">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/businessGreetingMessage"/></para></summary>
        </member>
        <member name="T:TL.InputBusinessAwayMessage">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/inputBusinessAwayMessage"/></para></summary>
        </member>
        <member name="T:TL.BusinessAwayMessage">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/businessAwayMessage"/></para></summary>
        </member>
        <member name="T:TL.Timezone">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/timezone"/></para></summary>
        </member>
        <member name="T:TL.Help_TimezonesList">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/help.timezonesList"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/help.timezonesListNotModified">help.timezonesListNotModified</a></remarks>
        </member>
        <member name="T:TL.QuickReply">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/quickReply"/></para></summary>
        </member>
        <member name="T:TL.InputQuickReplyShortcutBase">
            <summary><para>See <a href="https://corefork.telegram.org/type/InputQuickReplyShortcut"/></para></summary>
        </member>
        <member name="T:TL.InputQuickReplyShortcut">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/inputQuickReplyShortcut"/></para></summary>
        </member>
        <member name="T:TL.InputQuickReplyShortcutId">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/inputQuickReplyShortcutId"/></para></summary>
        </member>
        <member name="T:TL.Messages_QuickReplies">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/messages.quickReplies"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/messages.quickRepliesNotModified">messages.quickRepliesNotModified</a></remarks>
        </member>
        <member name="M:TL.Messages_QuickReplies.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.ConnectedBot">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/connectedBot"/></para></summary>
        </member>
        <member name="T:TL.Account_ConnectedBots">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/account.connectedBots"/></para></summary>
        </member>
        <member name="T:TL.Messages_DialogFilters">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/messages.dialogFilters"/></para></summary>
        </member>
        <member name="T:TL.Birthday">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/birthday"/></para></summary>
        </member>
        <member name="T:TL.BotBusinessConnection">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/botBusinessConnection"/></para></summary>
        </member>
        <member name="T:TL.InputBusinessIntro">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/inputBusinessIntro"/></para></summary>
        </member>
        <member name="T:TL.BusinessIntro">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/businessIntro"/></para></summary>
        </member>
        <member name="T:TL.Messages_MyStickers">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/messages.myStickers"/></para></summary>
        </member>
        <member name="T:TL.InputCollectible">
            <summary><para>See <a href="https://corefork.telegram.org/type/InputCollectible"/></para></summary>
        </member>
        <member name="T:TL.InputCollectibleUsername">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/inputCollectibleUsername"/></para></summary>
        </member>
        <member name="T:TL.InputCollectiblePhone">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/inputCollectiblePhone"/></para></summary>
        </member>
        <member name="T:TL.Fragment_CollectibleInfo">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/fragment.collectibleInfo"/></para></summary>
        </member>
        <member name="T:TL.InputBusinessBotRecipients">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/inputBusinessBotRecipients"/></para></summary>
        </member>
        <member name="T:TL.BusinessBotRecipients">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/businessBotRecipients"/></para></summary>
        </member>
        <member name="T:TL.ContactBirthday">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/contactBirthday"/></para></summary>
        </member>
        <member name="T:TL.Contacts_ContactBirthdays">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/contacts.contactBirthdays"/></para></summary>
        </member>
        <member name="T:TL.MissingInvitee">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/missingInvitee"/></para></summary>
        </member>
        <member name="T:TL.Messages_InvitedUsers">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/messages.invitedUsers"/></para></summary>
        </member>
        <member name="T:TL.InputBusinessChatLink">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/inputBusinessChatLink"/></para></summary>
        </member>
        <member name="T:TL.BusinessChatLink">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/businessChatLink"/></para></summary>
        </member>
        <member name="T:TL.Account_BusinessChatLinks">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/account.businessChatLinks"/></para></summary>
        </member>
        <member name="M:TL.Account_BusinessChatLinks.UserOrChat(TL.Peer)">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the given Peer</summary>
        </member>
        <member name="T:TL.Account_ResolvedBusinessChatLinks">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/account.resolvedBusinessChatLinks"/></para></summary>
        </member>
        <member name="P:TL.Account_ResolvedBusinessChatLinks.UserOrChat">
            <summary>returns a <see cref="T:TL.User"/> or <see cref="T:TL.ChatBase"/> for the result</summary>
        </member>
        <member name="T:TL.RequestedPeer">
            <summary><para>See <a href="https://corefork.telegram.org/type/RequestedPeer"/></para></summary>
        </member>
        <member name="T:TL.RequestedPeerUser">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/requestedPeerUser"/></para></summary>
        </member>
        <member name="T:TL.RequestedPeerChat">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/requestedPeerChat"/></para></summary>
        </member>
        <member name="T:TL.RequestedPeerChannel">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/requestedPeerChannel"/></para></summary>
        </member>
        <member name="T:TL.SponsoredMessageReportOption">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/sponsoredMessageReportOption"/></para></summary>
        </member>
        <member name="T:TL.Channels_SponsoredMessageReportResult">
            <summary><para>See <a href="https://corefork.telegram.org/type/channels.SponsoredMessageReportResult"/></para></summary>
        </member>
        <member name="T:TL.Channels_SponsoredMessageReportResultChooseOption">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/channels.sponsoredMessageReportResultChooseOption"/></para></summary>
        </member>
        <member name="T:TL.Channels_SponsoredMessageReportResultAdsHidden">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/channels.sponsoredMessageReportResultAdsHidden"/></para></summary>
        </member>
        <member name="T:TL.Channels_SponsoredMessageReportResultReported">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/channels.sponsoredMessageReportResultReported"/></para></summary>
        </member>
        <member name="T:TL.Stats_BroadcastRevenueStats">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/stats.broadcastRevenueStats"/></para></summary>
        </member>
        <member name="T:TL.Stats_BroadcastRevenueWithdrawalUrl">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/stats.broadcastRevenueWithdrawalUrl"/></para></summary>
        </member>
        <member name="T:TL.BroadcastRevenueTransaction">
            <summary><para>See <a href="https://corefork.telegram.org/type/BroadcastRevenueTransaction"/></para></summary>
        </member>
        <member name="T:TL.BroadcastRevenueTransactionProceeds">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/broadcastRevenueTransactionProceeds"/></para></summary>
        </member>
        <member name="T:TL.BroadcastRevenueTransactionWithdrawal">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/broadcastRevenueTransactionWithdrawal"/></para></summary>
        </member>
        <member name="T:TL.BroadcastRevenueTransactionRefund">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/broadcastRevenueTransactionRefund"/></para></summary>
        </member>
        <member name="T:TL.Stats_BroadcastRevenueTransactions">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/stats.broadcastRevenueTransactions"/></para></summary>
        </member>
        <member name="T:TL.ReactionNotificationsFrom">
            <summary><para>See <a href="https://corefork.telegram.org/type/ReactionNotificationsFrom"/></para></summary>
        </member>
        <member name="F:TL.ReactionNotificationsFrom.Contacts">
            <summary>See <a href="https://corefork.telegram.org/constructor/reactionNotificationsFromContacts"/></summary>
        </member>
        <member name="F:TL.ReactionNotificationsFrom.All">
            <summary>See <a href="https://corefork.telegram.org/constructor/reactionNotificationsFromAll"/></summary>
        </member>
        <member name="T:TL.ReactionsNotifySettings">
            <summary><para>See <a href="https://corefork.telegram.org/constructor/reactionsNotifySettings"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.InvokeAfterMsg``1(WTelegram.Client,System.Int64,TL.IMethod{``0})">
            <summary>Invokes a query after successful completion of one of the previous queries.		<para>See <a href="https://corefork.telegram.org/method/invokeAfterMsg"/></para></summary>
            <param name="msg_id">Message identifier on which a current query depends</param>
            <param name="query">The query itself</param>
        </member>
        <member name="M:TL.SchemaExtensions.InvokeAfterMsgs``1(WTelegram.Client,System.Int64[],TL.IMethod{``0})">
            <summary>Invokes a query after a successful completion of previous queries		<para>See <a href="https://corefork.telegram.org/method/invokeAfterMsgs"/></para></summary>
            <param name="msg_ids">List of messages on which a current query depends</param>
            <param name="query">The query itself</param>
        </member>
        <member name="M:TL.SchemaExtensions.InitConnection``1(WTelegram.Client,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,TL.IMethod{``0},TL.InputClientProxy,TL.JSONValue)">
            <summary>Initialize connection		<para>See <a href="https://corefork.telegram.org/method/initConnection"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/initConnection#possible-errors">details</a>)</para></summary>
            <param name="api_id">Application identifier (see. <a href="https://corefork.telegram.org/myapp">App configuration</a>)</param>
            <param name="device_model">Device model</param>
            <param name="system_version">Operation system version</param>
            <param name="app_version">Application version</param>
            <param name="system_lang_code">Code for the language used on the device's OS, ISO 639-1 standard</param>
            <param name="lang_pack">Language pack to use</param>
            <param name="lang_code">Code for the language used on the client, ISO 639-1 standard</param>
            <param name="proxy">Info about an MTProto proxy</param>
            <param name="params_">Additional initConnection parameters. <br/>For now, only the <c>tz_offset</c> field is supported, for specifying timezone offset in seconds.</param>
            <param name="query">The query itself</param>
        </member>
        <member name="M:TL.SchemaExtensions.InvokeWithLayer``1(WTelegram.Client,System.Int32,TL.IMethod{``0})">
            <summary>Invoke the specified query using the specified API <a href="https://corefork.telegram.org/api/invoking#layers">layer</a>		<para>See <a href="https://corefork.telegram.org/method/invokeWithLayer"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403,406 (<a href="https://corefork.telegram.org/method/invokeWithLayer#possible-errors">details</a>)</para></summary>
            <param name="layer">The layer to use</param>
            <param name="query">The query</param>
        </member>
        <member name="M:TL.SchemaExtensions.InvokeWithoutUpdates``1(WTelegram.Client,TL.IMethod{``0})">
            <summary>Invoke a request without subscribing the used connection for <a href="https://corefork.telegram.org/api/updates">updates</a> (this is enabled by default for <a href="https://corefork.telegram.org/api/files">file queries</a>).		<para>See <a href="https://corefork.telegram.org/method/invokeWithoutUpdates"/></para></summary>
            <param name="query">The query</param>
        </member>
        <member name="M:TL.SchemaExtensions.InvokeWithMessagesRange``1(WTelegram.Client,TL.MessageRange,TL.IMethod{``0})">
            <summary>Invoke with the given message range		<para>See <a href="https://corefork.telegram.org/method/invokeWithMessagesRange"/></para></summary>
            <param name="range">Message range</param>
            <param name="query">Query</param>
        </member>
        <member name="M:TL.SchemaExtensions.InvokeWithTakeout``1(WTelegram.Client,System.Int64,TL.IMethod{``0})">
            <summary>Invoke a method within a <a href="https://corefork.telegram.org/api/takeout">takeout session, see here » for more info</a>.		<para>See <a href="https://corefork.telegram.org/method/invokeWithTakeout"/></para></summary>
            <param name="takeout_id"><a href="https://corefork.telegram.org/api/takeout">Takeout session ID »</a></param>
            <param name="query">Query</param>
        </member>
        <member name="M:TL.SchemaExtensions.InvokeWithBusinessConnection``1(WTelegram.Client,System.String,TL.IMethod{``0})">
            <summary><para>See <a href="https://corefork.telegram.org/method/invokeWithBusinessConnection"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Auth_SendCode(WTelegram.Client,System.String,System.Int32,System.String,TL.CodeSettings)">
            <summary>Send the verification code for login		<para>See <a href="https://corefork.telegram.org/method/auth.sendCode"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,406,500 (<a href="https://corefork.telegram.org/method/auth.sendCode#possible-errors">details</a>)</para></summary>
            <param name="phone_number">Phone number in international format</param>
            <param name="api_id">Application identifier (see <a href="https://corefork.telegram.org/myapp">App configuration</a>)</param>
            <param name="api_hash">Application secret hash (see <a href="https://corefork.telegram.org/myapp">App configuration</a>)</param>
            <param name="settings">Settings for the code type to send</param>
        </member>
        <member name="M:TL.SchemaExtensions.Auth_SignUp(WTelegram.Client,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>Registers a validated phone number in the system.		<para>See <a href="https://corefork.telegram.org/method/auth.signUp"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,406 (<a href="https://corefork.telegram.org/method/auth.signUp#possible-errors">details</a>)</para></summary>
            <param name="phone_number">Phone number in the international format</param>
            <param name="phone_code_hash">SMS-message ID</param>
            <param name="first_name">New user first name</param>
            <param name="last_name">New user last name</param>
        </member>
        <member name="M:TL.SchemaExtensions.Auth_SignIn(WTelegram.Client,System.String,System.String,System.String,TL.EmailVerification)">
            <summary>Signs in a user with a validated phone number.		<para>See <a href="https://corefork.telegram.org/method/auth.signIn"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,406,500 (<a href="https://corefork.telegram.org/method/auth.signIn#possible-errors">details</a>)</para></summary>
            <param name="phone_number">Phone number in the international format</param>
            <param name="phone_code_hash">SMS-message ID, obtained from <see cref="M:TL.SchemaExtensions.Auth_SendCode(WTelegram.Client,System.String,System.Int32,System.String,TL.CodeSettings)">Auth_SendCode</see></param>
            <param name="phone_code">Valid numerical code from the SMS-message</param>
            <param name="email_verification">Email verification code or token</param>
        </member>
        <member name="M:TL.SchemaExtensions.Auth_LogOut(WTelegram.Client)">
            <summary>Logs out the user.		<para>See <a href="https://corefork.telegram.org/method/auth.logOut"/> [bots: ✓]</para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Auth_ResetAuthorizations(WTelegram.Client)">
            <summary>Terminates all user's authorized sessions except for the current one.		<para>See <a href="https://corefork.telegram.org/method/auth.resetAuthorizations"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 406 (<a href="https://corefork.telegram.org/method/auth.resetAuthorizations#possible-errors">details</a>)</para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Auth_ExportAuthorization(WTelegram.Client,System.Int32)">
            <summary>Returns data for copying authorization to another data-center.		<para>See <a href="https://corefork.telegram.org/method/auth.exportAuthorization"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/auth.exportAuthorization#possible-errors">details</a>)</para></summary>
            <param name="dc_id">Number of a target data-center</param>
        </member>
        <member name="M:TL.SchemaExtensions.Auth_ImportAuthorization(WTelegram.Client,System.Int64,System.Byte[])">
            <summary>Logs in a user using a key transmitted from his native data-center.		<para>See <a href="https://corefork.telegram.org/method/auth.importAuthorization"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/auth.importAuthorization#possible-errors">details</a>)</para></summary>
            <param name="id">User ID</param>
            <param name="bytes">Authorization key</param>
        </member>
        <member name="M:TL.SchemaExtensions.Auth_BindTempAuthKey(WTelegram.Client,System.Int64,System.Int64,System.DateTime,System.Byte[])">
            <summary>Binds a temporary authorization key <c>temp_auth_key_id</c> to the permanent authorization key <c>perm_auth_key_id</c>. Each permanent key may only be bound to one temporary key at a time, binding a new temporary key overwrites the previous one.		<para>See <a href="https://corefork.telegram.org/method/auth.bindTempAuthKey"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/auth.bindTempAuthKey#possible-errors">details</a>)</para></summary>
            <param name="perm_auth_key_id">Permanent auth_key_id to bind to</param>
            <param name="nonce">Random long from <a href="https://corefork.telegram.org/method/auth.bindTempAuthKey#binding-message-contents">Binding message contents</a></param>
            <param name="expires_at">Unix timestamp to invalidate temporary key, see <a href="https://corefork.telegram.org/method/auth.bindTempAuthKey#binding-message-contents">Binding message contents</a></param>
            <param name="encrypted_message">See <a href="https://corefork.telegram.org/method/auth.bindTempAuthKey#generating-encrypted-message">Generating encrypted_message</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Auth_ImportBotAuthorization(WTelegram.Client,System.Int32,System.Int32,System.String,System.String)">
            <summary>Login as a bot		<para>See <a href="https://corefork.telegram.org/method/auth.importBotAuthorization"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/auth.importBotAuthorization#possible-errors">details</a>)</para></summary>
            <param name="flags">Reserved for future use</param>
            <param name="api_id">Application identifier (see. <a href="https://corefork.telegram.org/myapp">App configuration</a>)</param>
            <param name="api_hash">Application identifier hash (see. <a href="https://corefork.telegram.org/myapp">App configuration</a>)</param>
            <param name="bot_auth_token">Bot token (see <a href="https://corefork.telegram.org/bots">bots</a>)</param>
        </member>
        <member name="M:TL.SchemaExtensions.Auth_CheckPassword(WTelegram.Client,TL.InputCheckPasswordSRP)">
            <summary>Try logging to an account protected by a <a href="https://corefork.telegram.org/api/srp">2FA password</a>.		<para>See <a href="https://corefork.telegram.org/method/auth.checkPassword"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/auth.checkPassword#possible-errors">details</a>)</para></summary>
            <param name="password">The account's password (see <a href="https://corefork.telegram.org/api/srp">SRP</a>)</param>
        </member>
        <member name="M:TL.SchemaExtensions.Auth_RequestPasswordRecovery(WTelegram.Client)">
            <summary>Request recovery code of a <a href="https://corefork.telegram.org/api/srp">2FA password</a>, only for accounts with a <a href="https://corefork.telegram.org/api/srp#email-verification">recovery email configured</a>.		<para>See <a href="https://corefork.telegram.org/method/auth.requestPasswordRecovery"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/auth.requestPasswordRecovery#possible-errors">details</a>)</para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Auth_RecoverPassword(WTelegram.Client,System.String,TL.Account_PasswordInputSettings)">
            <summary>Reset the <a href="https://corefork.telegram.org/api/srp">2FA password</a> using the recovery code sent using <see cref="M:TL.SchemaExtensions.Auth_RequestPasswordRecovery(WTelegram.Client)">Auth_RequestPasswordRecovery</see>.		<para>See <a href="https://corefork.telegram.org/method/auth.recoverPassword"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/auth.recoverPassword#possible-errors">details</a>)</para></summary>
            <param name="code">Code received via email</param>
            <param name="new_settings">New password</param>
        </member>
        <member name="M:TL.SchemaExtensions.Auth_ResendCode(WTelegram.Client,System.String,System.String)">
            <summary>Resend the login code via another medium, the phone code type is determined by the return value of the previous auth.sendCode/auth.resendCode: see <a href="https://corefork.telegram.org/api/auth">login</a> for more info.		<para>See <a href="https://corefork.telegram.org/method/auth.resendCode"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,406 (<a href="https://corefork.telegram.org/method/auth.resendCode#possible-errors">details</a>)</para></summary>
            <param name="phone_number">The phone number</param>
            <param name="phone_code_hash">The phone code hash obtained from <see cref="M:TL.SchemaExtensions.Auth_SendCode(WTelegram.Client,System.String,System.Int32,System.String,TL.CodeSettings)">Auth_SendCode</see></param>
        </member>
        <member name="M:TL.SchemaExtensions.Auth_CancelCode(WTelegram.Client,System.String,System.String)">
            <summary>Cancel the login verification code		<para>See <a href="https://corefork.telegram.org/method/auth.cancelCode"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,406 (<a href="https://corefork.telegram.org/method/auth.cancelCode#possible-errors">details</a>)</para></summary>
            <param name="phone_number">Phone number</param>
            <param name="phone_code_hash">Phone code hash from <see cref="M:TL.SchemaExtensions.Auth_SendCode(WTelegram.Client,System.String,System.Int32,System.String,TL.CodeSettings)">Auth_SendCode</see></param>
        </member>
        <member name="M:TL.SchemaExtensions.Auth_DropTempAuthKeys(WTelegram.Client,System.Int64[])">
            <summary>Delete all temporary authorization keys <strong>except for</strong> the ones specified		<para>See <a href="https://corefork.telegram.org/method/auth.dropTempAuthKeys"/> [bots: ✓]</para></summary>
            <param name="except_auth_keys">The auth keys that <strong>shouldn't</strong> be dropped.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Auth_ExportLoginToken(WTelegram.Client,System.Int32,System.String,System.Int64[])">
            <summary>Generate a login token, for <a href="https://corefork.telegram.org/api/qr-login">login via QR code</a>.<br/>The generated login token should be encoded using base64url, then shown as a <c>tg://login?token=base64encodedtoken</c> <a href="https://corefork.telegram.org/api/links#qr-code-login-links">deep link »</a> in the QR code.		<para>See <a href="https://corefork.telegram.org/method/auth.exportLoginToken"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/auth.exportLoginToken#possible-errors">details</a>)</para></summary>
            <param name="api_id">Application identifier (see. <a href="https://corefork.telegram.org/myapp">App configuration</a>)</param>
            <param name="api_hash">Application identifier hash (see. <a href="https://corefork.telegram.org/myapp">App configuration</a>)</param>
            <param name="except_ids">List of already logged-in user IDs, to prevent logging in twice with the same user</param>
        </member>
        <member name="M:TL.SchemaExtensions.Auth_ImportLoginToken(WTelegram.Client,System.Byte[])">
            <summary>Login using a redirected login token, generated in case of DC mismatch during <a href="https://corefork.telegram.org/api/qr-login">QR code login</a>.		<para>See <a href="https://corefork.telegram.org/method/auth.importLoginToken"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/auth.importLoginToken#possible-errors">details</a>)</para></summary>
            <param name="token">Login token</param>
        </member>
        <member name="M:TL.SchemaExtensions.Auth_AcceptLoginToken(WTelegram.Client,System.Byte[])">
            <summary>Accept QR code login token, logging in the app that generated it.		<para>See <a href="https://corefork.telegram.org/method/auth.acceptLoginToken"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/auth.acceptLoginToken#possible-errors">details</a>)</para></summary>
            <param name="token">Login token embedded in QR code, for more info, see <a href="https://corefork.telegram.org/api/qr-login">login via QR code</a>.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Auth_CheckRecoveryPassword(WTelegram.Client,System.String)">
            <summary>Check if the <a href="https://corefork.telegram.org/api/srp">2FA recovery code</a> sent using <see cref="M:TL.SchemaExtensions.Auth_RequestPasswordRecovery(WTelegram.Client)">Auth_RequestPasswordRecovery</see> is valid, before passing it to <see cref="M:TL.SchemaExtensions.Auth_RecoverPassword(WTelegram.Client,System.String,TL.Account_PasswordInputSettings)">Auth_RecoverPassword</see>.		<para>See <a href="https://corefork.telegram.org/method/auth.checkRecoveryPassword"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/auth.checkRecoveryPassword#possible-errors">details</a>)</para></summary>
            <param name="code">Code received via email</param>
        </member>
        <member name="M:TL.SchemaExtensions.Auth_ImportWebTokenAuthorization(WTelegram.Client,System.Int32,System.String,System.String)">
            <summary>Login by importing an authorization token		<para>See <a href="https://corefork.telegram.org/method/auth.importWebTokenAuthorization"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/auth.importWebTokenAuthorization#possible-errors">details</a>)</para></summary>
            <param name="api_id"><a href="https://corefork.telegram.org/api/obtaining_api_id">API ID</a></param>
            <param name="api_hash"><a href="https://corefork.telegram.org/api/obtaining_api_id">API hash</a></param>
            <param name="web_auth_token">The authorization token</param>
        </member>
        <member name="M:TL.SchemaExtensions.Auth_RequestFirebaseSms(WTelegram.Client,System.String,System.String,System.String,System.String)">
            <summary>Request an SMS code via Firebase.		<para>See <a href="https://corefork.telegram.org/method/auth.requestFirebaseSms"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/auth.requestFirebaseSms#possible-errors">details</a>)</para></summary>
            <param name="phone_number">Phone number</param>
            <param name="phone_code_hash">Phone code hash returned by <see cref="M:TL.SchemaExtensions.Auth_SendCode(WTelegram.Client,System.String,System.Int32,System.String,TL.CodeSettings)">Auth_SendCode</see></param>
            <param name="safety_net_token">On Android, a JWS object obtained as described in the <a href="https://corefork.telegram.org/api/auth">auth documentation »</a></param>
            <param name="ios_push_secret">Secret token received via an apple push notification</param>
        </member>
        <member name="M:TL.SchemaExtensions.Auth_ResetLoginEmail(WTelegram.Client,System.String,System.String)">
            <summary>Reset the <a href="https://corefork.telegram.org/api/auth#email-verification">login email »</a>.		<para>See <a href="https://corefork.telegram.org/method/auth.resetLoginEmail"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/auth.resetLoginEmail#possible-errors">details</a>)</para></summary>
            <param name="phone_number">Phone number of the account</param>
            <param name="phone_code_hash">Phone code hash, obtained as described in the <a href="https://corefork.telegram.org/api/auth">documentation »</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Auth_ReportMissingCode(WTelegram.Client,System.String,System.String,System.String)">
            <summary><para>See <a href="https://corefork.telegram.org/method/auth.reportMissingCode"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_RegisterDevice(WTelegram.Client,System.Int32,System.String,System.Boolean,System.Byte[],System.Int64[],System.Boolean)">
            <summary>Register device to receive <a href="https://corefork.telegram.org/api/push-updates">PUSH notifications</a>		<para>See <a href="https://corefork.telegram.org/method/account.registerDevice"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.registerDevice#possible-errors">details</a>)</para></summary>
            <param name="no_muted">Avoid receiving (silent and invisible background) notifications. Useful to save battery.</param>
            <param name="token_type">Device token type, see <a href="https://corefork.telegram.org/api/push-updates#subscribing-to-notifications">PUSH updates</a> for the possible values.</param>
            <param name="token">Device token, see <a href="https://corefork.telegram.org/api/push-updates#subscribing-to-notifications">PUSH updates</a> for the possible values.</param>
            <param name="app_sandbox">If <see langword="true"/> is transmitted, a sandbox-certificate will be used during transmission.</param>
            <param name="secret">For FCM and APNS VoIP, optional encryption key used to encrypt push notifications</param>
            <param name="other_uids">List of user identifiers of other users currently using the client</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_UnregisterDevice(WTelegram.Client,System.Int32,System.String,System.Int64[])">
            <summary>Deletes a device by its token, stops sending PUSH-notifications to it.		<para>See <a href="https://corefork.telegram.org/method/account.unregisterDevice"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.unregisterDevice#possible-errors">details</a>)</para></summary>
            <param name="token_type">Device token type, see <a href="https://corefork.telegram.org/api/push-updates#subscribing-to-notifications">PUSH updates</a> for the possible values.</param>
            <param name="token">Device token, see <a href="https://corefork.telegram.org/api/push-updates#subscribing-to-notifications">PUSH updates</a> for the possible values.</param>
            <param name="other_uids">List of user identifiers of other users currently using the client</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_UpdateNotifySettings(WTelegram.Client,TL.InputNotifyPeerBase,TL.InputPeerNotifySettings)">
            <summary>Edits notification settings from a given user/group, from all users/all groups.		<para>See <a href="https://corefork.telegram.org/method/account.updateNotifySettings"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.updateNotifySettings#possible-errors">details</a>)</para></summary>
            <param name="peer">Notification source</param>
            <param name="settings">Notification settings</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_GetNotifySettings(WTelegram.Client,TL.InputNotifyPeerBase)">
            <summary>Gets current notification settings for a given user/group, from all users/all groups.		<para>See <a href="https://corefork.telegram.org/method/account.getNotifySettings"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.getNotifySettings#possible-errors">details</a>)</para></summary>
            <param name="peer">Notification source</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_ResetNotifySettings(WTelegram.Client)">
            <summary>Resets all notification settings from users and groups.		<para>See <a href="https://corefork.telegram.org/method/account.resetNotifySettings"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_UpdateProfile(WTelegram.Client,System.String,System.String,System.String)">
            <summary>Updates user profile.		<para>See <a href="https://corefork.telegram.org/method/account.updateProfile"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.updateProfile#possible-errors">details</a>)</para></summary>
            <param name="first_name">New user first name</param>
            <param name="last_name">New user last name</param>
            <param name="about">New bio</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_UpdateStatus(WTelegram.Client,System.Boolean)">
            <summary>Updates online user status.		<para>See <a href="https://corefork.telegram.org/method/account.updateStatus"/></para></summary>
            <param name="offline">If <see langword="true"/> is transmitted, user status will change to <see cref="T:TL.UserStatusOffline"/>.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_GetWallPapers(WTelegram.Client,System.Int64)">
            <summary>Returns a list of available <a href="https://corefork.telegram.org/api/wallpapers">wallpapers</a>.		<para>See <a href="https://corefork.telegram.org/method/account.getWallPapers"/></para></summary>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/account.wallPapersNotModified">account.wallPapersNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Account_ReportPeer(WTelegram.Client,TL.InputPeer,TL.ReportReason,System.String)">
            <summary>Report a peer for violation of telegram's Terms of Service		<para>See <a href="https://corefork.telegram.org/method/account.reportPeer"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.reportPeer#possible-errors">details</a>)</para></summary>
            <param name="peer">The peer to report</param>
            <param name="reason">The reason why this peer is being reported</param>
            <param name="message">Comment for report moderation</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_CheckUsername(WTelegram.Client,System.String)">
            <summary>Validates a username and checks availability.		<para>See <a href="https://corefork.telegram.org/method/account.checkUsername"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.checkUsername#possible-errors">details</a>)</para></summary>
            <param name="username">username<br/>Accepted characters: A-z (case-insensitive), 0-9 and underscores.<br/>Length: 5-32 characters.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_UpdateUsername(WTelegram.Client,System.String)">
            <summary>Changes username for the current user.		<para>See <a href="https://corefork.telegram.org/method/account.updateUsername"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.updateUsername#possible-errors">details</a>)</para></summary>
            <param name="username">username or empty string if username is to be removed<br/>Accepted characters: a-z (case-insensitive), 0-9 and underscores.<br/>Length: 5-32 characters.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_GetPrivacy(WTelegram.Client,TL.InputPrivacyKey)">
            <summary>Get privacy settings of current account		<para>See <a href="https://corefork.telegram.org/method/account.getPrivacy"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.getPrivacy#possible-errors">details</a>)</para></summary>
            <param name="key">Peer category whose privacy settings should be fetched</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_SetPrivacy(WTelegram.Client,TL.InputPrivacyKey,TL.InputPrivacyRule[])">
            <summary>Change privacy settings of current account		<para>See <a href="https://corefork.telegram.org/method/account.setPrivacy"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.setPrivacy#possible-errors">details</a>)</para></summary>
            <param name="key">New privacy rule</param>
            <param name="rules">Peers to which the privacy rule will apply.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_DeleteAccount(WTelegram.Client,System.String,TL.InputCheckPasswordSRP)">
            <summary>Delete the user's account from the telegram servers.		<para>See <a href="https://corefork.telegram.org/method/account.deleteAccount"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 420 (<a href="https://corefork.telegram.org/method/account.deleteAccount#possible-errors">details</a>)</para></summary>
            <param name="reason">Why is the account being deleted, can be empty</param>
            <param name="password"><a href="https://corefork.telegram.org/api/srp">2FA password</a>: this field can be omitted even for accounts with 2FA enabled: in this case account account deletion will be delayed by 7 days <a href="https://corefork.telegram.org/api/account-deletion">as specified in the docs »</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_GetAccountTTL(WTelegram.Client)">
            <summary>Get days to live of account		<para>See <a href="https://corefork.telegram.org/method/account.getAccountTTL"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_SetAccountTTL(WTelegram.Client,TL.AccountDaysTTL)">
            <summary>Set account self-destruction period		<para>See <a href="https://corefork.telegram.org/method/account.setAccountTTL"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.setAccountTTL#possible-errors">details</a>)</para></summary>
            <param name="ttl">Time to live in days</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_SendChangePhoneCode(WTelegram.Client,System.String,TL.CodeSettings)">
            <summary>Verify a new phone number to associate to the current account		<para>See <a href="https://corefork.telegram.org/method/account.sendChangePhoneCode"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,406 (<a href="https://corefork.telegram.org/method/account.sendChangePhoneCode#possible-errors">details</a>)</para></summary>
            <param name="phone_number">New phone number</param>
            <param name="settings">Phone code settings</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_ChangePhone(WTelegram.Client,System.String,System.String,System.String)">
            <summary>Change the phone number of the current account		<para>See <a href="https://corefork.telegram.org/method/account.changePhone"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,406 (<a href="https://corefork.telegram.org/method/account.changePhone#possible-errors">details</a>)</para></summary>
            <param name="phone_number">New phone number</param>
            <param name="phone_code_hash">Phone code hash received when calling <see cref="M:TL.SchemaExtensions.Account_SendChangePhoneCode(WTelegram.Client,System.String,TL.CodeSettings)">Account_SendChangePhoneCode</see></param>
            <param name="phone_code">Phone code received when calling <see cref="M:TL.SchemaExtensions.Account_SendChangePhoneCode(WTelegram.Client,System.String,TL.CodeSettings)">Account_SendChangePhoneCode</see></param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_UpdateDeviceLocked(WTelegram.Client,System.Int32)">
            <summary>When client-side passcode lock feature is enabled, will not show message texts in incoming <a href="https://corefork.telegram.org/api/push-updates">PUSH notifications</a>.		<para>See <a href="https://corefork.telegram.org/method/account.updateDeviceLocked"/></para></summary>
            <param name="period">Inactivity period after which to start hiding message texts in <a href="https://corefork.telegram.org/api/push-updates">PUSH notifications</a>.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_GetAuthorizations(WTelegram.Client)">
            <summary>Get logged-in sessions		<para>See <a href="https://corefork.telegram.org/method/account.getAuthorizations"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_ResetAuthorization(WTelegram.Client,System.Int64)">
            <summary>Log out an active <a href="https://corefork.telegram.org/api/auth">authorized session</a> by its hash		<para>See <a href="https://corefork.telegram.org/method/account.resetAuthorization"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,406 (<a href="https://corefork.telegram.org/method/account.resetAuthorization#possible-errors">details</a>)</para></summary>
            <param name="hash">Session hash</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_GetPassword(WTelegram.Client)">
            <summary>Obtain configuration for two-factor authorization with password		<para>See <a href="https://corefork.telegram.org/method/account.getPassword"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_GetPasswordSettings(WTelegram.Client,TL.InputCheckPasswordSRP)">
            <summary>Get private info associated to the password info (recovery email, telegram <a href="https://corefork.telegram.org/passport">passport</a> info &amp; so on)		<para>See <a href="https://corefork.telegram.org/method/account.getPasswordSettings"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.getPasswordSettings#possible-errors">details</a>)</para></summary>
            <param name="password">The password (see <a href="https://corefork.telegram.org/api/srp">SRP</a>)</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_UpdatePasswordSettings(WTelegram.Client,TL.InputCheckPasswordSRP,TL.Account_PasswordInputSettings)">
            <summary>Set a new 2FA password		<para>See <a href="https://corefork.telegram.org/method/account.updatePasswordSettings"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.updatePasswordSettings#possible-errors">details</a>)</para></summary>
            <param name="password">The old password (see <a href="https://corefork.telegram.org/api/srp">SRP</a>)</param>
            <param name="new_settings">The new password (see <a href="https://corefork.telegram.org/api/srp">SRP</a>)</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_SendConfirmPhoneCode(WTelegram.Client,System.String,TL.CodeSettings)">
            <summary>Send confirmation code to cancel account deletion, for more info <a href="https://corefork.telegram.org/api/account-deletion">click here »</a>		<para>See <a href="https://corefork.telegram.org/method/account.sendConfirmPhoneCode"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.sendConfirmPhoneCode#possible-errors">details</a>)</para></summary>
            <param name="hash">The hash from the service notification, for more info <a href="https://corefork.telegram.org/api/account-deletion">click here »</a></param>
            <param name="settings">Phone code settings</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_ConfirmPhone(WTelegram.Client,System.String,System.String)">
            <summary>Confirm a phone number to cancel account deletion, for more info <a href="https://corefork.telegram.org/api/account-deletion">click here »</a>		<para>See <a href="https://corefork.telegram.org/method/account.confirmPhone"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.confirmPhone#possible-errors">details</a>)</para></summary>
            <param name="phone_code_hash">Phone code hash, for more info <a href="https://corefork.telegram.org/api/account-deletion">click here »</a></param>
            <param name="phone_code">SMS code, for more info <a href="https://corefork.telegram.org/api/account-deletion">click here »</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_GetTmpPassword(WTelegram.Client,TL.InputCheckPasswordSRP,System.Int32)">
            <summary>Get temporary payment password		<para>See <a href="https://corefork.telegram.org/method/account.getTmpPassword"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.getTmpPassword#possible-errors">details</a>)</para></summary>
            <param name="password">SRP password parameters</param>
            <param name="period">Time during which the temporary password will be valid, in seconds; should be between 60 and 86400</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_GetWebAuthorizations(WTelegram.Client)">
            <summary>Get web <a href="https://corefork.telegram.org/widgets/login">login widget</a> authorizations		<para>See <a href="https://corefork.telegram.org/method/account.getWebAuthorizations"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_ResetWebAuthorization(WTelegram.Client,System.Int64)">
            <summary>Log out an active web <a href="https://corefork.telegram.org/widgets/login">telegram login</a> session		<para>See <a href="https://corefork.telegram.org/method/account.resetWebAuthorization"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.resetWebAuthorization#possible-errors">details</a>)</para></summary>
            <param name="hash"><see cref="T:TL.WebAuthorization">Session</see> hash</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_ResetWebAuthorizations(WTelegram.Client)">
            <summary>Reset all active web <a href="https://corefork.telegram.org/widgets/login">telegram login</a> sessions		<para>See <a href="https://corefork.telegram.org/method/account.resetWebAuthorizations"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_GetAllSecureValues(WTelegram.Client)">
            <summary>Get all saved <a href="https://corefork.telegram.org/passport">Telegram Passport</a> documents, <a href="https://corefork.telegram.org/passport/encryption#encryption">for more info see the passport docs »</a>		<para>See <a href="https://corefork.telegram.org/method/account.getAllSecureValues"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_GetSecureValue(WTelegram.Client,TL.SecureValueType[])">
            <summary>Get saved <a href="https://corefork.telegram.org/passport">Telegram Passport</a> document, <a href="https://corefork.telegram.org/passport/encryption#encryption">for more info see the passport docs »</a>		<para>See <a href="https://corefork.telegram.org/method/account.getSecureValue"/></para></summary>
            <param name="types">Requested value types</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_SaveSecureValue(WTelegram.Client,TL.InputSecureValue,System.Int64)">
            <summary>Securely save <a href="https://corefork.telegram.org/passport">Telegram Passport</a> document, <a href="https://corefork.telegram.org/passport/encryption#encryption">for more info see the passport docs »</a>		<para>See <a href="https://corefork.telegram.org/method/account.saveSecureValue"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.saveSecureValue#possible-errors">details</a>)</para></summary>
            <param name="value">Secure value, <a href="https://corefork.telegram.org/passport/encryption#encryption">for more info see the passport docs »</a></param>
            <param name="secure_secret_id">Passport secret hash, <a href="https://corefork.telegram.org/passport/encryption#encryption">for more info see the passport docs »</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_DeleteSecureValue(WTelegram.Client,TL.SecureValueType[])">
            <summary>Delete stored <a href="https://corefork.telegram.org/passport">Telegram Passport</a> documents, <a href="https://corefork.telegram.org/passport/encryption#encryption">for more info see the passport docs »</a>		<para>See <a href="https://corefork.telegram.org/method/account.deleteSecureValue"/></para></summary>
            <param name="types">Document types to delete</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_GetAuthorizationForm(WTelegram.Client,System.Int64,System.String,System.String)">
            <summary>Returns a Telegram Passport authorization form for sharing data with a service		<para>See <a href="https://corefork.telegram.org/method/account.getAuthorizationForm"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.getAuthorizationForm#possible-errors">details</a>)</para></summary>
            <param name="bot_id">User identifier of the service's bot</param>
            <param name="scope">Telegram Passport element types requested by the service</param>
            <param name="public_key">Service's public key</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_AcceptAuthorization(WTelegram.Client,System.Int64,System.String,System.String,TL.SecureValueHash[],TL.SecureCredentialsEncrypted)">
            <summary>Sends a Telegram Passport authorization form, effectively sharing data with the service		<para>See <a href="https://corefork.telegram.org/method/account.acceptAuthorization"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.acceptAuthorization#possible-errors">details</a>)</para></summary>
            <param name="bot_id">Bot ID</param>
            <param name="scope">Telegram Passport element types requested by the service</param>
            <param name="public_key">Service's public key</param>
            <param name="value_hashes">Types of values sent and their hashes</param>
            <param name="credentials">Encrypted values</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_SendVerifyPhoneCode(WTelegram.Client,System.String,TL.CodeSettings)">
            <summary>Send the verification phone code for telegram <a href="https://corefork.telegram.org/passport">passport</a>.		<para>See <a href="https://corefork.telegram.org/method/account.sendVerifyPhoneCode"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.sendVerifyPhoneCode#possible-errors">details</a>)</para></summary>
            <param name="phone_number">The phone number to verify</param>
            <param name="settings">Phone code settings</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_VerifyPhone(WTelegram.Client,System.String,System.String,System.String)">
            <summary>Verify a phone number for telegram <a href="https://corefork.telegram.org/passport">passport</a>.		<para>See <a href="https://corefork.telegram.org/method/account.verifyPhone"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.verifyPhone#possible-errors">details</a>)</para></summary>
            <param name="phone_number">Phone number</param>
            <param name="phone_code_hash">Phone code hash received from the call to <see cref="M:TL.SchemaExtensions.Account_SendVerifyPhoneCode(WTelegram.Client,System.String,TL.CodeSettings)">Account_SendVerifyPhoneCode</see></param>
            <param name="phone_code">Code received after the call to <see cref="M:TL.SchemaExtensions.Account_SendVerifyPhoneCode(WTelegram.Client,System.String,TL.CodeSettings)">Account_SendVerifyPhoneCode</see></param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_SendVerifyEmailCode(WTelegram.Client,TL.EmailVerifyPurpose,System.String)">
            <summary>Send an email verification code.		<para>See <a href="https://corefork.telegram.org/method/account.sendVerifyEmailCode"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.sendVerifyEmailCode#possible-errors">details</a>)</para></summary>
            <param name="purpose">Verification purpose.</param>
            <param name="email">The email where to send the code.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_VerifyEmail(WTelegram.Client,TL.EmailVerifyPurpose,TL.EmailVerification)">
            <summary>Verify an email address.		<para>See <a href="https://corefork.telegram.org/method/account.verifyEmail"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.verifyEmail#possible-errors">details</a>)</para></summary>
            <param name="purpose">Verification purpose</param>
            <param name="verification">Email verification code or token</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_InitTakeoutSession(WTelegram.Client,System.Nullable{System.Int64},System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Initialize a <a href="https://corefork.telegram.org/api/takeout">takeout session, see here » for more info</a>.		<para>See <a href="https://corefork.telegram.org/method/account.initTakeoutSession"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 420 (<a href="https://corefork.telegram.org/method/account.initTakeoutSession#possible-errors">details</a>)</para></summary>
            <param name="contacts">Whether to export contacts</param>
            <param name="message_users">Whether to export messages in private chats</param>
            <param name="message_chats">Whether to export messages in <a href="https://corefork.telegram.org/api/channel#basic-groups">basic groups</a></param>
            <param name="message_megagroups">Whether to export messages in <a href="https://corefork.telegram.org/api/channel#supergroups">supergroups</a></param>
            <param name="message_channels">Whether to export messages in <a href="https://corefork.telegram.org/api/channel#channels">channels</a></param>
            <param name="files">Whether to export files</param>
            <param name="file_max_size">Maximum size of files to export</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_FinishTakeoutSession(WTelegram.Client,System.Boolean)">
            <summary>Terminate a <a href="https://corefork.telegram.org/api/takeout">takeout session, see here » for more info</a>.		<para>See <a href="https://corefork.telegram.org/method/account.finishTakeoutSession"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 403 (<a href="https://corefork.telegram.org/method/account.finishTakeoutSession#possible-errors">details</a>)</para></summary>
            <param name="success">Data exported successfully</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_ConfirmPasswordEmail(WTelegram.Client,System.String)">
            <summary>Verify an email to use as <a href="https://corefork.telegram.org/api/srp">2FA recovery method</a>.		<para>See <a href="https://corefork.telegram.org/method/account.confirmPasswordEmail"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.confirmPasswordEmail#possible-errors">details</a>)</para></summary>
            <param name="code">The phone code that was received after <a href="https://corefork.telegram.org/api/srp#email-verification">setting a recovery email</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_ResendPasswordEmail(WTelegram.Client)">
            <summary>Resend the code to verify an email to use as <a href="https://corefork.telegram.org/api/srp">2FA recovery method</a>.		<para>See <a href="https://corefork.telegram.org/method/account.resendPasswordEmail"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.resendPasswordEmail#possible-errors">details</a>)</para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_CancelPasswordEmail(WTelegram.Client)">
            <summary>Cancel the code that was sent to verify an email to use as <a href="https://corefork.telegram.org/api/srp">2FA recovery method</a>.		<para>See <a href="https://corefork.telegram.org/method/account.cancelPasswordEmail"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.cancelPasswordEmail#possible-errors">details</a>)</para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_GetContactSignUpNotification(WTelegram.Client)">
            <summary>Whether the user will receive notifications when contacts sign up		<para>See <a href="https://corefork.telegram.org/method/account.getContactSignUpNotification"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_SetContactSignUpNotification(WTelegram.Client,System.Boolean)">
            <summary>Toggle contact sign up notifications		<para>See <a href="https://corefork.telegram.org/method/account.setContactSignUpNotification"/></para></summary>
            <param name="silent">Whether to disable contact sign up notifications</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_GetNotifyExceptions(WTelegram.Client,TL.InputNotifyPeerBase,System.Boolean,System.Boolean)">
            <summary>Returns list of chats with non-default notification settings		<para>See <a href="https://corefork.telegram.org/method/account.getNotifyExceptions"/></para></summary>
            <param name="compare_sound">If set, chats with non-default sound will be returned</param>
            <param name="compare_stories">If set, chats with non-default notification settings for stories will be returned</param>
            <param name="peer">If specified, only chats of the specified category will be returned</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_GetWallPaper(WTelegram.Client,TL.InputWallPaperBase)">
            <summary>Get info about a certain <a href="https://corefork.telegram.org/api/wallpapers">wallpaper</a>		<para>See <a href="https://corefork.telegram.org/method/account.getWallPaper"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.getWallPaper#possible-errors">details</a>)</para></summary>
            <param name="wallpaper">The <a href="https://corefork.telegram.org/api/wallpapers">wallpaper</a> to get info about</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_UploadWallPaper(WTelegram.Client,TL.InputFileBase,System.String,TL.WallPaperSettings,System.Boolean)">
            <summary>Create and upload a new <a href="https://corefork.telegram.org/api/wallpapers">wallpaper</a>		<para>See <a href="https://corefork.telegram.org/method/account.uploadWallPaper"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.uploadWallPaper#possible-errors">details</a>)</para></summary>
            <param name="for_chat">Set this flag when uploading wallpapers to be passed to <see cref="M:TL.SchemaExtensions.Messages_SetChatWallPaper(WTelegram.Client,TL.InputPeer,TL.InputWallPaperBase,System.Nullable{System.Int32},TL.WallPaperSettings,System.Boolean,System.Boolean)">Messages_SetChatWallPaper</see>.</param>
            <param name="file">The JPG/PNG wallpaper</param>
            <param name="mime_type">MIME type of uploaded wallpaper</param>
            <param name="settings">Wallpaper settings</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_SaveWallPaper(WTelegram.Client,TL.InputWallPaperBase,System.Boolean,TL.WallPaperSettings)">
            <summary>Install/uninstall <a href="https://corefork.telegram.org/api/wallpapers">wallpaper</a>		<para>See <a href="https://corefork.telegram.org/method/account.saveWallPaper"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.saveWallPaper#possible-errors">details</a>)</para></summary>
            <param name="wallpaper"><a href="https://corefork.telegram.org/api/wallpapers">Wallpaper</a> to install or uninstall</param>
            <param name="unsave">Uninstall wallpaper?</param>
            <param name="settings">Wallpaper settings</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_InstallWallPaper(WTelegram.Client,TL.InputWallPaperBase,TL.WallPaperSettings)">
            <summary>Install <a href="https://corefork.telegram.org/api/wallpapers">wallpaper</a>		<para>See <a href="https://corefork.telegram.org/method/account.installWallPaper"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.installWallPaper#possible-errors">details</a>)</para></summary>
            <param name="wallpaper"><a href="https://corefork.telegram.org/api/wallpapers">Wallpaper</a> to install</param>
            <param name="settings"><a href="https://corefork.telegram.org/api/wallpapers">Wallpaper</a> settings</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_ResetWallPapers(WTelegram.Client)">
            <summary>Delete all installed <a href="https://corefork.telegram.org/api/wallpapers">wallpapers</a>, reverting to the default wallpaper set.		<para>See <a href="https://corefork.telegram.org/method/account.resetWallPapers"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_GetAutoDownloadSettings(WTelegram.Client)">
            <summary>Get media autodownload settings		<para>See <a href="https://corefork.telegram.org/method/account.getAutoDownloadSettings"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_SaveAutoDownloadSettings(WTelegram.Client,TL.AutoDownloadSettings,System.Boolean,System.Boolean)">
            <summary>Change media autodownload settings		<para>See <a href="https://corefork.telegram.org/method/account.saveAutoDownloadSettings"/></para></summary>
            <param name="low">Whether to save media in the low data usage preset</param>
            <param name="high">Whether to save media in the high data usage preset</param>
            <param name="settings">Media autodownload settings</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_UploadTheme(WTelegram.Client,TL.InputFileBase,System.String,System.String,TL.InputFileBase)">
            <summary>Upload theme		<para>See <a href="https://corefork.telegram.org/method/account.uploadTheme"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.uploadTheme#possible-errors">details</a>)</para></summary>
            <param name="file"><a href="https://corefork.telegram.org/api/themes#uploading-theme-files">Previously uploaded</a> theme file with platform-specific colors for UI components, can be left unset when creating themes that only modify the wallpaper or accent colors.</param>
            <param name="thumb">Thumbnail</param>
            <param name="file_name">File name</param>
            <param name="mime_type">MIME type, must be <c>application/x-tgtheme-{format}</c>, where <c>format</c> depends on the client</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_CreateTheme(WTelegram.Client,System.String,System.String,TL.InputDocument,TL.InputThemeSettings[])">
            <summary>Create a theme		<para>See <a href="https://corefork.telegram.org/method/account.createTheme"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.createTheme#possible-errors">details</a>)</para></summary>
            <param name="slug">Unique theme ID used to generate <a href="https://corefork.telegram.org/api/links#theme-links">theme deep links</a>, can be empty to autogenerate a random ID.</param>
            <param name="title">Theme name</param>
            <param name="document">Theme file</param>
            <param name="settings">Theme settings, multiple values can be provided for the different base themes (day/night mode, etc).</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_UpdateTheme(WTelegram.Client,System.String,TL.InputThemeBase,System.String,System.String,TL.InputDocument,TL.InputThemeSettings[])">
            <summary>Update theme		<para>See <a href="https://corefork.telegram.org/method/account.updateTheme"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.updateTheme#possible-errors">details</a>)</para></summary>
            <param name="format">Theme format, a string that identifies the theming engines supported by the client</param>
            <param name="theme">Theme to update</param>
            <param name="slug">Unique theme ID</param>
            <param name="title">Theme name</param>
            <param name="document">Theme file</param>
            <param name="settings">Theme settings</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_SaveTheme(WTelegram.Client,TL.InputThemeBase,System.Boolean)">
            <summary>Save a theme		<para>See <a href="https://corefork.telegram.org/method/account.saveTheme"/></para></summary>
            <param name="theme">Theme to save</param>
            <param name="unsave">Unsave</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_InstallTheme(WTelegram.Client,TL.InputThemeBase,System.String,TL.BaseTheme,System.Boolean)">
            <summary>Install a theme		<para>See <a href="https://corefork.telegram.org/method/account.installTheme"/></para></summary>
            <param name="dark">Whether to install the dark version</param>
            <param name="theme">Theme to install</param>
            <param name="format">Theme format, a string that identifies the theming engines supported by the client</param>
            <param name="base_theme">Indicates a basic theme provided by all clients</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_GetTheme(WTelegram.Client,System.String,TL.InputThemeBase)">
            <summary>Get theme information		<para>See <a href="https://corefork.telegram.org/method/account.getTheme"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.getTheme#possible-errors">details</a>)</para></summary>
            <param name="format">Theme format, a string that identifies the theming engines supported by the client</param>
            <param name="theme">Theme</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_GetThemes(WTelegram.Client,System.String,System.Int64)">
            <summary>Get installed themes		<para>See <a href="https://corefork.telegram.org/method/account.getThemes"/></para></summary>
            <param name="format">Theme format, a string that identifies the theming engines supported by the client</param>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/account.themesNotModified">account.themesNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Account_SetContentSettings(WTelegram.Client,System.Boolean)">
            <summary>Set sensitive content settings (for viewing or hiding NSFW content)		<para>See <a href="https://corefork.telegram.org/method/account.setContentSettings"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 403 (<a href="https://corefork.telegram.org/method/account.setContentSettings#possible-errors">details</a>)</para></summary>
            <param name="sensitive_enabled">Enable NSFW content</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_GetContentSettings(WTelegram.Client)">
            <summary>Get sensitive content settings		<para>See <a href="https://corefork.telegram.org/method/account.getContentSettings"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_GetMultiWallPapers(WTelegram.Client,TL.InputWallPaperBase[])">
            <summary>Get info about multiple <a href="https://corefork.telegram.org/api/wallpapers">wallpapers</a>		<para>See <a href="https://corefork.telegram.org/method/account.getMultiWallPapers"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.getMultiWallPapers#possible-errors">details</a>)</para></summary>
            <param name="wallpapers"><a href="https://corefork.telegram.org/api/wallpapers">Wallpapers</a> to fetch info about</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_GetGlobalPrivacySettings(WTelegram.Client)">
            <summary>Get global privacy settings		<para>See <a href="https://corefork.telegram.org/method/account.getGlobalPrivacySettings"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_SetGlobalPrivacySettings(WTelegram.Client,TL.GlobalPrivacySettings)">
            <summary>Set global privacy settings		<para>See <a href="https://corefork.telegram.org/method/account.setGlobalPrivacySettings"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.setGlobalPrivacySettings#possible-errors">details</a>)</para></summary>
            <param name="settings">Global privacy settings</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_ReportProfilePhoto(WTelegram.Client,TL.InputPeer,TL.InputPhoto,TL.ReportReason,System.String)">
            <summary>Report a profile photo of a dialog		<para>See <a href="https://corefork.telegram.org/method/account.reportProfilePhoto"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.reportProfilePhoto#possible-errors">details</a>)</para></summary>
            <param name="peer">The dialog</param>
            <param name="photo_id">Dialog photo ID</param>
            <param name="reason">Report reason</param>
            <param name="message">Comment for report moderation</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_ResetPassword(WTelegram.Client)">
            <summary>Initiate a 2FA password reset: can only be used if the user is already logged-in, <a href="https://corefork.telegram.org/api/srp#password-reset">see here for more info »</a>		<para>See <a href="https://corefork.telegram.org/method/account.resetPassword"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.resetPassword#possible-errors">details</a>)</para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_DeclinePasswordReset(WTelegram.Client)">
            <summary>Abort a pending 2FA password reset, <a href="https://corefork.telegram.org/api/srp#password-reset">see here for more info »</a>		<para>See <a href="https://corefork.telegram.org/method/account.declinePasswordReset"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.declinePasswordReset#possible-errors">details</a>)</para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_GetChatThemes(WTelegram.Client,System.Int64)">
            <summary>Get all available chat <a href="https://corefork.telegram.org/api/themes">themes »</a>.		<para>See <a href="https://corefork.telegram.org/method/account.getChatThemes"/></para></summary>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/account.themesNotModified">account.themesNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Account_SetAuthorizationTTL(WTelegram.Client,System.Int32)">
            <summary>Set time-to-live of current session		<para>See <a href="https://corefork.telegram.org/method/account.setAuthorizationTTL"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,406 (<a href="https://corefork.telegram.org/method/account.setAuthorizationTTL#possible-errors">details</a>)</para></summary>
            <param name="authorization_ttl_days">Time-to-live of current session in days</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_ChangeAuthorizationSettings(WTelegram.Client,System.Int64,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Boolean)">
            <summary>Change settings related to a session.		<para>See <a href="https://corefork.telegram.org/method/account.changeAuthorizationSettings"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.changeAuthorizationSettings#possible-errors">details</a>)</para></summary>
            <param name="confirmed">If set, <a href="https://corefork.telegram.org/api/auth#confirming-login">confirms a newly logged in session »</a>.</param>
            <param name="hash">Session ID from the <see cref="T:TL.Authorization"/>, fetchable using <see cref="M:TL.SchemaExtensions.Account_GetAuthorizations(WTelegram.Client)">Account_GetAuthorizations</see></param>
            <param name="encrypted_requests_disabled">Whether to enable or disable receiving encrypted chats: if the flag is not set, the previous setting is not changed</param>
            <param name="call_requests_disabled">Whether to enable or disable receiving calls: if the flag is not set, the previous setting is not changed</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_GetSavedRingtones(WTelegram.Client,System.Int64)">
            <summary>Fetch saved notification sounds		<para>See <a href="https://corefork.telegram.org/method/account.getSavedRingtones"/></para></summary>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/account.savedRingtonesNotModified">account.savedRingtonesNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Account_SaveRingtone(WTelegram.Client,TL.InputDocument,System.Boolean)">
            <summary>Save or remove saved notification sound.		<para>See <a href="https://corefork.telegram.org/method/account.saveRingtone"/></para></summary>
            <param name="id">Notification sound uploaded using <see cref="M:TL.SchemaExtensions.Account_UploadRingtone(WTelegram.Client,TL.InputFileBase,System.String,System.String)">Account_UploadRingtone</see></param>
            <param name="unsave">Whether to add or delete the notification sound</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_UploadRingtone(WTelegram.Client,TL.InputFileBase,System.String,System.String)">
            <summary>Upload notification sound, use <see cref="M:TL.SchemaExtensions.Account_SaveRingtone(WTelegram.Client,TL.InputDocument,System.Boolean)">Account_SaveRingtone</see> to convert it and add it to the list of saved notification sounds.		<para>See <a href="https://corefork.telegram.org/method/account.uploadRingtone"/></para></summary>
            <param name="file">Notification sound</param>
            <param name="file_name">File name</param>
            <param name="mime_type">MIME type of file</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_UpdateEmojiStatus(WTelegram.Client,TL.EmojiStatus)">
            <summary>Set an <a href="https://corefork.telegram.org/api/emoji-status">emoji status</a>		<para>See <a href="https://corefork.telegram.org/method/account.updateEmojiStatus"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.updateEmojiStatus#possible-errors">details</a>)</para></summary>
            <param name="emoji_status"><a href="https://corefork.telegram.org/api/emoji-status">Emoji status</a> to set</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_GetDefaultEmojiStatuses(WTelegram.Client,System.Int64)">
            <summary>Get a list of default suggested <a href="https://corefork.telegram.org/api/emoji-status">emoji statuses</a>		<para>See <a href="https://corefork.telegram.org/method/account.getDefaultEmojiStatuses"/></para></summary>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/account.emojiStatusesNotModified">account.emojiStatusesNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Account_GetRecentEmojiStatuses(WTelegram.Client,System.Int64)">
            <summary>Get recently used <a href="https://corefork.telegram.org/api/emoji-status">emoji statuses</a>		<para>See <a href="https://corefork.telegram.org/method/account.getRecentEmojiStatuses"/></para></summary>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/account.emojiStatusesNotModified">account.emojiStatusesNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Account_ClearRecentEmojiStatuses(WTelegram.Client)">
            <summary>Clears list of recently used <a href="https://corefork.telegram.org/api/emoji-status">emoji statuses</a>		<para>See <a href="https://corefork.telegram.org/method/account.clearRecentEmojiStatuses"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_ReorderUsernames(WTelegram.Client,System.String[])">
            <summary>Reorder usernames associated with the currently logged-in user.		<para>See <a href="https://corefork.telegram.org/method/account.reorderUsernames"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.reorderUsernames#possible-errors">details</a>)</para></summary>
            <param name="order">The new order for active usernames. All active usernames must be specified.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_ToggleUsername(WTelegram.Client,System.String,System.Boolean)">
            <summary>Activate or deactivate a purchased <a href="https://fragment.com">fragment.com</a> username associated to the currently logged-in user.		<para>See <a href="https://corefork.telegram.org/method/account.toggleUsername"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.toggleUsername#possible-errors">details</a>)</para></summary>
            <param name="username">Username</param>
            <param name="active">Whether to activate or deactivate it</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_GetDefaultProfilePhotoEmojis(WTelegram.Client,System.Int64)">
            <summary>Get a set of suggested <a href="https://corefork.telegram.org/api/custom-emoji">custom emoji stickers</a> that can be <a href="https://corefork.telegram.org/api/files#sticker-profile-pictures">used as profile picture</a>		<para>See <a href="https://corefork.telegram.org/method/account.getDefaultProfilePhotoEmojis"/></para></summary>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/emojiListNotModified">emojiListNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Account_GetDefaultGroupPhotoEmojis(WTelegram.Client,System.Int64)">
            <summary>Get a set of suggested <a href="https://corefork.telegram.org/api/custom-emoji">custom emoji stickers</a> that can be <a href="https://corefork.telegram.org/api/files#sticker-profile-pictures">used as group picture</a>		<para>See <a href="https://corefork.telegram.org/method/account.getDefaultGroupPhotoEmojis"/></para></summary>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/emojiListNotModified">emojiListNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Account_GetAutoSaveSettings(WTelegram.Client)">
            <summary>Get autosave settings		<para>See <a href="https://corefork.telegram.org/method/account.getAutoSaveSettings"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_SaveAutoSaveSettings(WTelegram.Client,TL.AutoSaveSettings,TL.InputPeer,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Modify autosave settings		<para>See <a href="https://corefork.telegram.org/method/account.saveAutoSaveSettings"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.saveAutoSaveSettings#possible-errors">details</a>)</para></summary>
            <param name="users">Whether the new settings should affect all private chats</param>
            <param name="chats">Whether the new settings should affect all groups</param>
            <param name="broadcasts">Whether the new settings should affect all <a href="https://corefork.telegram.org/api/channel">channels</a></param>
            <param name="peer">Whether the new settings should affect a specific peer</param>
            <param name="settings">The new autosave settings</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_DeleteAutoSaveExceptions(WTelegram.Client)">
            <summary>Clear all peer-specific autosave settings.		<para>See <a href="https://corefork.telegram.org/method/account.deleteAutoSaveExceptions"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_InvalidateSignInCodes(WTelegram.Client,System.String[])">
            <summary>Invalidate the specified login codes, see <a href="https://corefork.telegram.org/api/auth#invalidating-login-codes">here »</a> for more info.		<para>See <a href="https://corefork.telegram.org/method/account.invalidateSignInCodes"/></para></summary>
            <param name="codes">The login codes to invalidate.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_UpdateColor(WTelegram.Client,System.Nullable{System.Int64},System.Nullable{System.Int32},System.Boolean)">
            <summary>Update the <a href="https://corefork.telegram.org/api/colors">accent color and background custom emoji »</a> of the current account.		<para>See <a href="https://corefork.telegram.org/method/account.updateColor"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/account.updateColor#possible-errors">details</a>)</para></summary>
            <param name="for_profile">Whether to change the accent color emoji pattern of the profile page; otherwise, the accent color and emoji pattern of messages will be changed.</param>
            <param name="color"><a href="https://corefork.telegram.org/api/colors">ID of the accent color palette »</a> to use (not RGB24, see <a href="https://corefork.telegram.org/api/colors">here »</a> for more info).</param>
            <param name="background_emoji_id">Custom emoji ID used in the accent color pattern.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Account_GetDefaultBackgroundEmojis(WTelegram.Client,System.Int64)">
            <summary>Get a set of suggested <a href="https://corefork.telegram.org/api/custom-emoji">custom emoji stickers</a> that can be used in an <a href="https://corefork.telegram.org/api/colors">accent color pattern</a>.		<para>See <a href="https://corefork.telegram.org/method/account.getDefaultBackgroundEmojis"/></para></summary>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/emojiListNotModified">emojiListNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Account_GetChannelDefaultEmojiStatuses(WTelegram.Client,System.Int64)">
            <summary>Get a list of default suggested <a href="https://corefork.telegram.org/api/emoji-status">channel emoji statuses</a>.		<para>See <a href="https://corefork.telegram.org/method/account.getChannelDefaultEmojiStatuses"/></para></summary>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/account.emojiStatusesNotModified">account.emojiStatusesNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Account_GetChannelRestrictedStatusEmojis(WTelegram.Client,System.Int64)">
            <summary>Returns fetch the full list of <a href="https://corefork.telegram.org/api/custom-emoji">custom emoji IDs »</a> that cannot be used in <a href="https://corefork.telegram.org/api/emoji-status">channel emoji statuses »</a>.		<para>See <a href="https://corefork.telegram.org/method/account.getChannelRestrictedStatusEmojis"/></para></summary>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/emojiListNotModified">emojiListNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Account_UpdateBusinessWorkHours(WTelegram.Client,TL.BusinessWorkHours)">
            <summary><para>See <a href="https://corefork.telegram.org/method/account.updateBusinessWorkHours"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_UpdateBusinessLocation(WTelegram.Client,System.String,TL.InputGeoPoint)">
            <summary><para>See <a href="https://corefork.telegram.org/method/account.updateBusinessLocation"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_UpdateBusinessGreetingMessage(WTelegram.Client,TL.InputBusinessGreetingMessage)">
            <summary><para>See <a href="https://corefork.telegram.org/method/account.updateBusinessGreetingMessage"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_UpdateBusinessAwayMessage(WTelegram.Client,TL.InputBusinessAwayMessage)">
            <summary><para>See <a href="https://corefork.telegram.org/method/account.updateBusinessAwayMessage"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_UpdateConnectedBot(WTelegram.Client,TL.InputUserBase,TL.InputBusinessBotRecipients,System.Boolean,System.Boolean)">
            <summary><para>See <a href="https://corefork.telegram.org/method/account.updateConnectedBot"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_GetConnectedBots(WTelegram.Client)">
            <summary><para>See <a href="https://corefork.telegram.org/method/account.getConnectedBots"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_GetBotBusinessConnection(WTelegram.Client,System.String)">
            <summary><para>See <a href="https://corefork.telegram.org/method/account.getBotBusinessConnection"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_UpdateBusinessIntro(WTelegram.Client,TL.InputBusinessIntro)">
            <summary><para>See <a href="https://corefork.telegram.org/method/account.updateBusinessIntro"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_ToggleConnectedBotPaused(WTelegram.Client,TL.InputPeer,System.Boolean)">
            <summary><para>See <a href="https://corefork.telegram.org/method/account.toggleConnectedBotPaused"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_DisablePeerConnectedBot(WTelegram.Client,TL.InputPeer)">
            <summary><para>See <a href="https://corefork.telegram.org/method/account.disablePeerConnectedBot"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_UpdateBirthday(WTelegram.Client,TL.Birthday)">
            <summary><para>See <a href="https://corefork.telegram.org/method/account.updateBirthday"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_CreateBusinessChatLink(WTelegram.Client,TL.InputBusinessChatLink)">
            <summary><para>See <a href="https://corefork.telegram.org/method/account.createBusinessChatLink"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_EditBusinessChatLink(WTelegram.Client,System.String,TL.InputBusinessChatLink)">
            <summary><para>See <a href="https://corefork.telegram.org/method/account.editBusinessChatLink"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_DeleteBusinessChatLink(WTelegram.Client,System.String)">
            <summary><para>See <a href="https://corefork.telegram.org/method/account.deleteBusinessChatLink"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_GetBusinessChatLinks(WTelegram.Client)">
            <summary><para>See <a href="https://corefork.telegram.org/method/account.getBusinessChatLinks"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_ResolveBusinessChatLink(WTelegram.Client,System.String)">
            <summary><para>See <a href="https://corefork.telegram.org/method/account.resolveBusinessChatLink"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_UpdatePersonalChannel(WTelegram.Client,TL.InputChannelBase)">
            <summary><para>See <a href="https://corefork.telegram.org/method/account.updatePersonalChannel"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_ToggleSponsoredMessages(WTelegram.Client,System.Boolean)">
            <summary><para>See <a href="https://corefork.telegram.org/method/account.toggleSponsoredMessages"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_GetReactionsNotifySettings(WTelegram.Client)">
            <summary><para>See <a href="https://corefork.telegram.org/method/account.getReactionsNotifySettings"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Account_SetReactionsNotifySettings(WTelegram.Client,TL.ReactionsNotifySettings)">
            <summary><para>See <a href="https://corefork.telegram.org/method/account.setReactionsNotifySettings"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Users_GetUsers(WTelegram.Client,TL.InputUserBase[])">
            <summary>Returns basic user info according to their identifiers.		<para>See <a href="https://corefork.telegram.org/method/users.getUsers"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/users.getUsers#possible-errors">details</a>)</para></summary>
            <param name="id">List of user identifiers</param>
        </member>
        <member name="M:TL.SchemaExtensions.Users_GetFullUser(WTelegram.Client,TL.InputUserBase)">
            <summary>Returns extended user info by ID.		<para>See <a href="https://corefork.telegram.org/method/users.getFullUser"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/users.getFullUser#possible-errors">details</a>)</para></summary>
            <param name="id">User ID</param>
        </member>
        <member name="M:TL.SchemaExtensions.Users_SetSecureValueErrors(WTelegram.Client,TL.InputUserBase,TL.SecureValueErrorBase[])">
            <summary>Notify the user that the sent <a href="https://corefork.telegram.org/passport">passport</a> data contains some errors The user will not be able to re-submit their Passport data to you until the errors are fixed (the contents of the field for which you returned the error must change).		<para>See <a href="https://corefork.telegram.org/method/users.setSecureValueErrors"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/users.setSecureValueErrors#possible-errors">details</a>)</para></summary>
            <param name="id">The user</param>
            <param name="errors">Errors</param>
        </member>
        <member name="M:TL.SchemaExtensions.Users_GetIsPremiumRequiredToContact(WTelegram.Client,TL.InputUserBase[])">
            <summary><para>See <a href="https://corefork.telegram.org/method/users.getIsPremiumRequiredToContact"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Contacts_GetContactIDs(WTelegram.Client,System.Int64)">
            <summary>Get the telegram IDs of all contacts.<br/>Returns an array of Telegram user IDs for all contacts (0 if a contact does not have an associated Telegram account or have hidden their account using privacy settings).		<para>See <a href="https://corefork.telegram.org/method/contacts.getContactIDs"/></para></summary>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Contacts_GetStatuses(WTelegram.Client)">
            <summary>Use this method to obtain the online statuses of all contacts with an accessible Telegram account.		<para>See <a href="https://corefork.telegram.org/method/contacts.getStatuses"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Contacts_GetContacts(WTelegram.Client,System.Int64)">
            <summary>Returns the current user's contact list.		<para>See <a href="https://corefork.telegram.org/method/contacts.getContacts"/></para></summary>
            <param name="hash">If there already is a full contact list on the client, a <a href="https://corefork.telegram.org/api/offsets#hash-generation">hash</a> of a the list of contact IDs in ascending order may be passed in this parameter. If the contact set was not changed, <see langword="null"/> will be returned.</param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/contacts.contactsNotModified">contacts.contactsNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Contacts_ImportContacts(WTelegram.Client,TL.InputContact[])">
            <summary>Imports contacts: saves a full list on the server, adds already registered contacts to the contact list, returns added contacts and their info.		<para>See <a href="https://corefork.telegram.org/method/contacts.importContacts"/></para></summary>
            <param name="contacts">List of contacts to import</param>
        </member>
        <member name="M:TL.SchemaExtensions.Contacts_DeleteContacts(WTelegram.Client,TL.InputUserBase[])">
            <summary>Deletes several contacts from the list.		<para>See <a href="https://corefork.telegram.org/method/contacts.deleteContacts"/></para></summary>
            <param name="id">User ID list</param>
        </member>
        <member name="M:TL.SchemaExtensions.Contacts_DeleteByPhones(WTelegram.Client,System.String[])">
            <summary>Delete contacts by phone number		<para>See <a href="https://corefork.telegram.org/method/contacts.deleteByPhones"/></para></summary>
            <param name="phones">Phone numbers</param>
        </member>
        <member name="M:TL.SchemaExtensions.Contacts_Block(WTelegram.Client,TL.InputPeer,System.Boolean)">
            <summary>Adds a peer to a blocklist, see <a href="https://corefork.telegram.org/api/block">here »</a> for more info.		<para>See <a href="https://corefork.telegram.org/method/contacts.block"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/contacts.block#possible-errors">details</a>)</para></summary>
            <param name="my_stories_from">Whether the peer should be added to the story blocklist; if not set, the peer will be added to the main blocklist, see <a href="https://corefork.telegram.org/api/block">here »</a> for more info.</param>
            <param name="id">Peer</param>
        </member>
        <member name="M:TL.SchemaExtensions.Contacts_Unblock(WTelegram.Client,TL.InputPeer,System.Boolean)">
            <summary>Deletes a peer from a blocklist, see <a href="https://corefork.telegram.org/api/block">here »</a> for more info.		<para>See <a href="https://corefork.telegram.org/method/contacts.unblock"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/contacts.unblock#possible-errors">details</a>)</para></summary>
            <param name="my_stories_from">Whether the peer should be removed from the story blocklist; if not set, the peer will be removed from the main blocklist, see <a href="https://corefork.telegram.org/api/block">here »</a> for more info.</param>
            <param name="id">Peer</param>
        </member>
        <member name="M:TL.SchemaExtensions.Contacts_GetBlocked(WTelegram.Client,System.Int32,System.Int32,System.Boolean)">
            <summary>Returns the list of blocked users.		<para>See <a href="https://corefork.telegram.org/method/contacts.getBlocked"/></para></summary>
            <param name="my_stories_from">Whether to fetch the story blocklist; if not set, will fetch the main blocklist. See <a href="https://corefork.telegram.org/api/block">here »</a> for differences between the two.</param>
            <param name="offset">The number of list elements to be skipped</param>
            <param name="limit">The number of list elements to be returned</param>
        </member>
        <member name="M:TL.SchemaExtensions.Contacts_Search(WTelegram.Client,System.String,System.Int32)">
            <summary>Returns users found by username substring.		<para>See <a href="https://corefork.telegram.org/method/contacts.search"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/contacts.search#possible-errors">details</a>)</para></summary>
            <param name="q">Target substring</param>
            <param name="limit">Maximum number of users to be returned</param>
        </member>
        <member name="M:TL.SchemaExtensions.Contacts_ResolveUsername(WTelegram.Client,System.String)">
            <summary>Resolve a @username to get peer info		<para>See <a href="https://corefork.telegram.org/method/contacts.resolveUsername"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/contacts.resolveUsername#possible-errors">details</a>)</para></summary>
            <param name="username">@username to resolve</param>
        </member>
        <member name="M:TL.SchemaExtensions.Contacts_GetTopPeers(WTelegram.Client,System.Int32,System.Int32,System.Int64,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Get most used peers		<para>See <a href="https://corefork.telegram.org/method/contacts.getTopPeers"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/contacts.getTopPeers#possible-errors">details</a>)</para></summary>
            <param name="correspondents">Users we've chatted most frequently with</param>
            <param name="bots_pm">Most used bots</param>
            <param name="bots_inline">Most used inline bots</param>
            <param name="phone_calls">Most frequently called users</param>
            <param name="forward_users">Users to which the users often forwards messages to</param>
            <param name="forward_chats">Chats to which the users often forwards messages to</param>
            <param name="groups">Often-opened groups and supergroups</param>
            <param name="channels">Most frequently visited channels</param>
            <param name="offset">Offset for <a href="https://corefork.telegram.org/api/offsets">pagination</a></param>
            <param name="limit">Maximum number of results to return, <a href="https://corefork.telegram.org/api/offsets">see pagination</a></param>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/contacts.topPeersNotModified">contacts.topPeersNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Contacts_ResetTopPeerRating(WTelegram.Client,TL.TopPeerCategory,TL.InputPeer)">
            <summary>Reset <a href="https://corefork.telegram.org/api/top-rating">rating</a> of top peer		<para>See <a href="https://corefork.telegram.org/method/contacts.resetTopPeerRating"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/contacts.resetTopPeerRating#possible-errors">details</a>)</para></summary>
            <param name="category">Top peer category</param>
            <param name="peer">Peer whose rating should be reset</param>
        </member>
        <member name="M:TL.SchemaExtensions.Contacts_ResetSaved(WTelegram.Client)">
            <summary>Removes all contacts without an associated Telegram account.		<para>See <a href="https://corefork.telegram.org/method/contacts.resetSaved"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Contacts_GetSaved(WTelegram.Client)">
            <summary>Get all contacts, requires a <a href="https://corefork.telegram.org/api/takeout">takeout session, see here » for more info</a>.		<para>See <a href="https://corefork.telegram.org/method/contacts.getSaved"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 403 (<a href="https://corefork.telegram.org/method/contacts.getSaved#possible-errors">details</a>)</para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Contacts_ToggleTopPeers(WTelegram.Client,System.Boolean)">
            <summary>Enable/disable <a href="https://corefork.telegram.org/api/top-rating">top peers</a>		<para>See <a href="https://corefork.telegram.org/method/contacts.toggleTopPeers"/></para></summary>
            <param name="enabled">Enable/disable</param>
        </member>
        <member name="M:TL.SchemaExtensions.Contacts_AddContact(WTelegram.Client,TL.InputUserBase,System.String,System.String,System.String,System.Boolean)">
            <summary>Add an existing telegram user as contact.		<para>See <a href="https://corefork.telegram.org/method/contacts.addContact"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/contacts.addContact#possible-errors">details</a>)</para></summary>
            <param name="add_phone_privacy_exception">Allow the other user to see our phone number?</param>
            <param name="id">Telegram ID of the other user</param>
            <param name="first_name">First name</param>
            <param name="last_name">Last name</param>
            <param name="phone">User's phone number, may be omitted to simply add the user to the contact list, without a phone number.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Contacts_AcceptContact(WTelegram.Client,TL.InputUserBase)">
            <summary>If the <a href="https://corefork.telegram.org/api/action-bar#add-contact">add contact action bar is active</a>, add that user as contact		<para>See <a href="https://corefork.telegram.org/method/contacts.acceptContact"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/contacts.acceptContact#possible-errors">details</a>)</para></summary>
            <param name="id">The user to add as contact</param>
        </member>
        <member name="M:TL.SchemaExtensions.Contacts_GetLocated(WTelegram.Client,TL.InputGeoPoint,System.Nullable{System.Int32},System.Boolean)">
            <summary>Get users and geochats near you, see <a href="https://corefork.telegram.org/api/nearby">here »</a> for more info.		<para>See <a href="https://corefork.telegram.org/method/contacts.getLocated"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,406 (<a href="https://corefork.telegram.org/method/contacts.getLocated#possible-errors">details</a>)</para></summary>
            <param name="background">While the geolocation of the current user is public, clients should update it in the background every half-an-hour or so, while setting this flag. <br/>Do this only if the new location is more than 1 KM away from the previous one, or if the previous location is unknown.</param>
            <param name="geo_point">Geolocation</param>
            <param name="self_expires">If set, the geolocation of the current user will be public for the specified number of seconds; pass 0x7fffffff to disable expiry, 0 to make the current geolocation private; if the flag isn't set, no changes will be applied.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Contacts_BlockFromReplies(WTelegram.Client,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Stop getting notifications about <a href="https://corefork.telegram.org/api/discussion">discussion replies</a> of a certain user in <c>@replies</c>		<para>See <a href="https://corefork.telegram.org/method/contacts.blockFromReplies"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/contacts.blockFromReplies#possible-errors">details</a>)</para></summary>
            <param name="delete_message">Whether to delete the specified message as well</param>
            <param name="delete_history">Whether to delete all <c>@replies</c> messages from this user as well</param>
            <param name="report_spam">Whether to also report this user for spam</param>
            <param name="msg_id">ID of the message in the <a href="https://corefork.telegram.org/api/discussion#replies">@replies</a> chat</param>
        </member>
        <member name="M:TL.SchemaExtensions.Contacts_ResolvePhone(WTelegram.Client,System.String)">
            <summary>Resolve a phone number to get user info, if their privacy settings allow it.		<para>See <a href="https://corefork.telegram.org/method/contacts.resolvePhone"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/contacts.resolvePhone#possible-errors">details</a>)</para></summary>
            <param name="phone">Phone number in international format, possibly obtained from a <a href="https://corefork.telegram.org/api/links#phone-number-links">phone number deep link</a>.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Contacts_ExportContactToken(WTelegram.Client)">
            <summary>Generates a <a href="https://corefork.telegram.org/api/links#temporary-profile-links">temporary profile link</a> for the currently logged-in user.		<para>See <a href="https://corefork.telegram.org/method/contacts.exportContactToken"/> [bots: ✓]</para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Contacts_ImportContactToken(WTelegram.Client,System.String)">
            <summary>Obtain user info from a <a href="https://corefork.telegram.org/api/links#temporary-profile-links">temporary profile link</a>.		<para>See <a href="https://corefork.telegram.org/method/contacts.importContactToken"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/contacts.importContactToken#possible-errors">details</a>)</para></summary>
            <param name="token">The token extracted from the <a href="https://corefork.telegram.org/api/links#temporary-profile-links">temporary profile link</a>.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Contacts_EditCloseFriends(WTelegram.Client,System.Int64[])">
            <summary>Edit the <a href="https://corefork.telegram.org/api/privacy">close friends list, see here »</a> for more info.		<para>See <a href="https://corefork.telegram.org/method/contacts.editCloseFriends"/></para></summary>
            <param name="id">Full list of user IDs of close friends, see <a href="https://corefork.telegram.org/api/privacy">here</a> for more info.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Contacts_SetBlocked(WTelegram.Client,TL.InputPeer[],System.Int32,System.Boolean)">
            <summary>Replace the contents of an entire <a href="https://corefork.telegram.org/api/block">blocklist, see here for more info »</a>.		<para>See <a href="https://corefork.telegram.org/method/contacts.setBlocked"/></para></summary>
            <param name="my_stories_from">Whether to edit the story blocklist; if not set, will edit the main blocklist. See <a href="https://corefork.telegram.org/api/block">here »</a> for differences between the two.</param>
            <param name="id">Full content of the blocklist.</param>
            <param name="limit">Maximum number of results to return, <a href="https://corefork.telegram.org/api/offsets">see pagination</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Contacts_GetBirthdays(WTelegram.Client)">
            <summary><para>See <a href="https://corefork.telegram.org/method/contacts.getBirthdays"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetMessages(WTelegram.Client,TL.InputMessage[])">
            <summary><para>⚠ <b>This method is only for basic Chat</b>. See <see href="https://wiz0u.github.io/WTelegramClient/#terminology">Terminology</see> in the README to understand what this means<br/>Search for a similar method name starting with <c>Channels_</c> if you're dealing with a <see cref="T:TL.Channel"/></para>		Returns the list of messages by their IDs.		<para>See <a href="https://corefork.telegram.org/method/messages.getMessages"/> [bots: ✓]</para></summary>
            <param name="id">Message ID list</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetDialogs(WTelegram.Client,System.DateTime,System.Int32,TL.InputPeer,System.Int32,System.Int64,System.Nullable{System.Int32},System.Boolean)">
            <summary>Returns the current user dialog list.		<para>See <a href="https://corefork.telegram.org/method/messages.getDialogs"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/messages.getDialogs#possible-errors">details</a>)</para></summary>
            <param name="exclude_pinned">Exclude pinned dialogs</param>
            <param name="folder_id"><a href="https://corefork.telegram.org/api/folders#peer-folders">Peer folder ID, for more info click here</a></param>
            <param name="offset_date"><a href="https://corefork.telegram.org/api/offsets">Offsets for pagination, for more info click here</a></param>
            <param name="offset_id"><a href="https://corefork.telegram.org/api/offsets">Offsets for pagination, for more info click here</a> (<c>top_message</c> ID used for pagination)</param>
            <param name="offset_peer"><a href="https://corefork.telegram.org/api/offsets">Offset peer for pagination</a></param>
            <param name="limit">Number of list elements to be returned</param>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetHistory(WTelegram.Client,TL.InputPeer,System.Int32,System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Int64)">
            <summary>Returns the conversation history with one interlocutor / within a chat		<para>See <a href="https://corefork.telegram.org/method/messages.getHistory"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,406 (<a href="https://corefork.telegram.org/method/messages.getHistory#possible-errors">details</a>)</para></summary>
            <param name="peer">Target peer</param>
            <param name="offset_id">Only return messages starting from the specified message ID</param>
            <param name="offset_date">Only return messages sent before the specified date</param>
            <param name="add_offset">Number of list elements to be skipped, negative values are also accepted.</param>
            <param name="limit">Number of results to return</param>
            <param name="max_id">If a positive value was transferred, the method will return only messages with IDs less than <strong>max_id</strong></param>
            <param name="min_id">If a positive value was transferred, the method will return only messages with IDs more than <strong>min_id</strong></param>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets">Result hash</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_Search(WTelegram.Client,TL.InputPeer,System.String,TL.MessagesFilter,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int64,TL.InputPeer,System.Nullable{System.Int32},TL.InputPeer,TL.Reaction[])">
            <summary>Search for messages.		<para>See <a href="https://corefork.telegram.org/method/messages.search"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/messages.search#possible-errors">details</a>)</para></summary>
            <param name="peer">User or chat, histories with which are searched, or <see langword="null"/> to search in all private chats and <a href="https://corefork.telegram.org/api/channel">normal groups (not channels) »</a>. Use <see cref="M:TL.SchemaExtensions.Messages_SearchGlobal(WTelegram.Client,System.String,TL.MessagesFilter,System.DateTime,System.DateTime,System.Int32,TL.InputPeer,System.Int32,System.Int32,System.Nullable{System.Int32},System.Boolean)">Messages_SearchGlobal</see> to search globally in all chats, groups, supergroups and channels.</param>
            <param name="q">Text search request</param>
            <param name="from_id">Only return messages sent by the specified user ID</param>
            <param name="saved_peer_id">Search within the <a href="https://corefork.telegram.org/api/saved-messages">saved message dialog »</a> with this ID.</param>
            <param name="top_msg_id"><a href="https://corefork.telegram.org/api/threads">Thread ID</a></param>
            <param name="filter">Filter to return only specified message types</param>
            <param name="min_date">If a positive value was transferred, only messages with a sending date bigger than the transferred one will be returned</param>
            <param name="max_date">If a positive value was transferred, only messages with a sending date smaller than the transferred one will be returned</param>
            <param name="offset_id">Only return messages starting from the specified message ID</param>
            <param name="add_offset"><a href="https://corefork.telegram.org/api/offsets">Additional offset</a></param>
            <param name="limit"><a href="https://corefork.telegram.org/api/offsets">Number of results to return</a></param>
            <param name="max_id"><a href="https://corefork.telegram.org/api/offsets">Maximum message ID to return</a></param>
            <param name="min_id"><a href="https://corefork.telegram.org/api/offsets">Minimum message ID to return</a></param>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets">Hash</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_ReadHistory(WTelegram.Client,TL.InputPeer,System.Int32)">
            <summary>Marks message history as read.		<para>See <a href="https://corefork.telegram.org/method/messages.readHistory"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.readHistory#possible-errors">details</a>)</para></summary>
            <param name="peer">Target user or group</param>
            <param name="max_id">If a positive value is passed, only messages with identifiers less or equal than the given one will be read</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_DeleteHistory(WTelegram.Client,TL.InputPeer,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Boolean)">
            <summary>Deletes communication history.		<para>See <a href="https://corefork.telegram.org/method/messages.deleteHistory"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.deleteHistory#possible-errors">details</a>)</para></summary>
            <param name="just_clear">Just clear history for the current user, without actually removing messages for every chat user</param>
            <param name="revoke">Whether to delete the message history for all chat participants</param>
            <param name="peer">User or chat, communication history of which will be deleted</param>
            <param name="max_id">Maximum ID of message to delete</param>
            <param name="min_date">Delete all messages newer than this UNIX timestamp</param>
            <param name="max_date">Delete all messages older than this UNIX timestamp</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_DeleteMessages(WTelegram.Client,System.Int32[],System.Boolean)">
            <summary><para>⚠ <b>This method is only for basic Chat</b>. See <see href="https://wiz0u.github.io/WTelegramClient/#terminology">Terminology</see> in the README to understand what this means<br/>Search for a similar method name starting with <c>Channels_</c> if you're dealing with a <see cref="T:TL.Channel"/></para>		Deletes messages by their identifiers.		<para>See <a href="https://corefork.telegram.org/method/messages.deleteMessages"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/messages.deleteMessages#possible-errors">details</a>)</para></summary>
            <param name="revoke">Whether to delete messages for all participants of the chat</param>
            <param name="id">Message ID list</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_ReceivedMessages(WTelegram.Client,System.Int32)">
            <summary><para>⚠ <b>This method is only for basic Chat</b>. See <see href="https://wiz0u.github.io/WTelegramClient/#terminology">Terminology</see> in the README to understand what this means<br/>Search for a similar method name starting with <c>Channels_</c> if you're dealing with a <see cref="T:TL.Channel"/></para>		Confirms receipt of messages by a client, cancels PUSH-notification sending.		<para>See <a href="https://corefork.telegram.org/method/messages.receivedMessages"/></para></summary>
            <param name="max_id">Maximum message ID available in a client.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SetTyping(WTelegram.Client,TL.InputPeer,TL.SendMessageAction,System.Nullable{System.Int32})">
            <summary>Sends a current user typing event (see <see cref="T:TL.SendMessageAction"/> for all event types) to a conversation partner or group.		<para>See <a href="https://corefork.telegram.org/method/messages.setTyping"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403,406 (<a href="https://corefork.telegram.org/method/messages.setTyping#possible-errors">details</a>)</para></summary>
            <param name="peer">Target user or group</param>
            <param name="top_msg_id"><a href="https://corefork.telegram.org/api/threads">Topic ID</a></param>
            <param name="action">Type of action</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SendMessage(WTelegram.Client,TL.InputPeer,System.String,System.Int64,TL.InputReplyTo,TL.ReplyMarkup,TL.MessageEntity[],System.Nullable{System.DateTime},TL.InputPeer,TL.InputQuickReplyShortcutBase,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Sends a message to a chat		<para>See <a href="https://corefork.telegram.org/method/messages.sendMessage"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403,406,420,500 (<a href="https://corefork.telegram.org/method/messages.sendMessage#possible-errors">details</a>)</para></summary>
            <param name="no_webpage">Set this flag to disable generation of the webpage preview</param>
            <param name="silent">Send this message silently (no notifications for the receivers)</param>
            <param name="background">Send this message as background message</param>
            <param name="clear_draft">Clear the draft field</param>
            <param name="noforwards">Only for bots, disallows forwarding and saving of the messages, even if the destination chat doesn't have <a href="https://telegram.org/blog/protected-content-delete-by-date-and-more">content protection</a> enabled</param>
            <param name="update_stickersets_order">Whether to move used stickersets to top, <a href="https://corefork.telegram.org/api/stickers#recent-stickersets">see here for more info on this flag »</a></param>
            <param name="invert_media">If set, any eventual webpage preview will be shown on top of the message instead of at the bottom.</param>
            <param name="peer">The destination where the message will be sent</param>
            <param name="reply_to">If set, indicates that the message should be sent in reply to the specified message or story.</param>
            <param name="message">The message</param>
            <param name="random_id">Unique client message ID required to prevent message resending <para>You can use <see cref="M:WTelegram.Helpers.RandomLong"/></para></param>
            <param name="reply_markup">Reply markup for sending bot buttons</param>
            <param name="entities">Message <a href="https://corefork.telegram.org/api/entities">entities</a> for sending styled text</param>
            <param name="schedule_date">Scheduled message date for <a href="https://corefork.telegram.org/api/scheduled-messages">scheduled messages</a></param>
            <param name="send_as">Send this message as the specified peer</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SendMedia(WTelegram.Client,TL.InputPeer,TL.InputMedia,System.String,System.Int64,TL.InputReplyTo,TL.ReplyMarkup,TL.MessageEntity[],System.Nullable{System.DateTime},TL.InputPeer,TL.InputQuickReplyShortcutBase,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Send a media		<para>See <a href="https://corefork.telegram.org/method/messages.sendMedia"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403,406,420,500 (<a href="https://corefork.telegram.org/method/messages.sendMedia#possible-errors">details</a>)</para></summary>
            <param name="silent">Send message silently (no notification should be triggered)</param>
            <param name="background">Send message in background</param>
            <param name="clear_draft">Clear the draft</param>
            <param name="noforwards">Only for bots, disallows forwarding and saving of the messages, even if the destination chat doesn't have <a href="https://telegram.org/blog/protected-content-delete-by-date-and-more">content protection</a> enabled</param>
            <param name="update_stickersets_order">Whether to move used stickersets to top, <a href="https://corefork.telegram.org/api/stickers#recent-stickersets">see here for more info on this flag »</a></param>
            <param name="invert_media">If set, any eventual webpage preview will be shown on top of the message instead of at the bottom.</param>
            <param name="peer">Destination</param>
            <param name="reply_to">If set, indicates that the message should be sent in reply to the specified message or story.</param>
            <param name="media">Attached media</param>
            <param name="message">Caption</param>
            <param name="random_id">Random ID to avoid resending the same message <para>You can use <see cref="M:WTelegram.Helpers.RandomLong"/></para></param>
            <param name="reply_markup">Reply markup for bot keyboards</param>
            <param name="entities">Message <a href="https://corefork.telegram.org/api/entities">entities</a> for styled text</param>
            <param name="schedule_date">Scheduled message date for <a href="https://corefork.telegram.org/api/scheduled-messages">scheduled messages</a></param>
            <param name="send_as">Send this message as the specified peer</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_ForwardMessages(WTelegram.Client,TL.InputPeer,System.Int32[],System.Int64[],TL.InputPeer,System.Nullable{System.Int32},System.Nullable{System.DateTime},TL.InputPeer,TL.InputQuickReplyShortcutBase,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Forwards messages by their IDs.		<para>See <a href="https://corefork.telegram.org/method/messages.forwardMessages"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403,406,420,500 (<a href="https://corefork.telegram.org/method/messages.forwardMessages#possible-errors">details</a>)</para></summary>
            <param name="silent">Whether to send messages silently (no notification will be triggered on the destination clients)</param>
            <param name="background">Whether to send the message in background</param>
            <param name="with_my_score">When forwarding games, whether to include your score in the game</param>
            <param name="drop_author">Whether to forward messages without quoting the original author</param>
            <param name="drop_media_captions">Whether to strip captions from media</param>
            <param name="noforwards">Only for bots, disallows further re-forwarding and saving of the messages, even if the destination chat doesn't have <a href="https://telegram.org/blog/protected-content-delete-by-date-and-more">content protection</a> enabled</param>
            <param name="from_peer">Source of messages</param>
            <param name="id">IDs of messages</param>
            <param name="random_id">Random ID to prevent resending of messages <para>You can use <see cref="M:WTelegram.Helpers.RandomLong"/></para></param>
            <param name="to_peer">Destination peer</param>
            <param name="top_msg_id">Destination <a href="https://corefork.telegram.org/api/forum#forum-topics">forum topic</a></param>
            <param name="schedule_date">Scheduled message date for scheduled messages</param>
            <param name="send_as">Forward the messages as the specified peer</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_ReportSpam(WTelegram.Client,TL.InputPeer)">
            <summary>Report a new incoming chat for spam, if the <see cref="T:TL.PeerSettings"/> of the chat allow us to do that		<para>See <a href="https://corefork.telegram.org/method/messages.reportSpam"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.reportSpam#possible-errors">details</a>)</para></summary>
            <param name="peer">Peer to report</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetPeerSettings(WTelegram.Client,TL.InputPeer)">
            <summary>Get peer settings		<para>See <a href="https://corefork.telegram.org/method/messages.getPeerSettings"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.getPeerSettings#possible-errors">details</a>)</para></summary>
            <param name="peer">The peer</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_Report(WTelegram.Client,TL.InputPeer,System.Int32[],TL.ReportReason,System.String)">
            <summary>Report a message in a chat for violation of telegram's Terms of Service		<para>See <a href="https://corefork.telegram.org/method/messages.report"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.report#possible-errors">details</a>)</para></summary>
            <param name="peer">Peer</param>
            <param name="id">IDs of messages to report</param>
            <param name="reason">Why are these messages being reported</param>
            <param name="message">Comment for report moderation</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetChats(WTelegram.Client,System.Int64[])">
            <summary><para>⚠ <b>This method is only for basic Chat</b>. See <see href="https://wiz0u.github.io/WTelegramClient/#terminology">Terminology</see> in the README to understand what this means<br/>Search for a similar method name starting with <c>Channels_</c> if you're dealing with a <see cref="T:TL.Channel"/></para>		Returns chat basic info on their IDs.		<para>See <a href="https://corefork.telegram.org/method/messages.getChats"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.getChats#possible-errors">details</a>)</para></summary>
            <param name="id">List of chat IDs</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetFullChat(WTelegram.Client,System.Int64)">
            <summary><para>⚠ <b>This method is only for basic Chat</b>. See <see href="https://wiz0u.github.io/WTelegramClient/#terminology">Terminology</see> in the README to understand what this means<br/>Search for a similar method name starting with <c>Channels_</c> if you're dealing with a <see cref="T:TL.Channel"/></para>		Get full info about a <a href="https://corefork.telegram.org/api/channel#basic-groups">basic group</a>.		<para>See <a href="https://corefork.telegram.org/method/messages.getFullChat"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.getFullChat#possible-errors">details</a>)</para></summary>
            <param name="chat_id"><a href="https://corefork.telegram.org/api/channel#basic-groups">Basic group</a> ID.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_EditChatTitle(WTelegram.Client,System.Int64,System.String)">
            <summary><para>⚠ <b>This method is only for basic Chat</b>. See <see href="https://wiz0u.github.io/WTelegramClient/#terminology">Terminology</see> in the README to understand what this means<br/>Search for a similar method name starting with <c>Channels_</c> if you're dealing with a <see cref="T:TL.Channel"/></para>		Changes chat name and sends a service message on it.		<para>See <a href="https://corefork.telegram.org/method/messages.editChatTitle"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.editChatTitle#possible-errors">details</a>)</para></summary>
            <param name="chat_id">Chat ID</param>
            <param name="title">New chat name, different from the old one</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_EditChatPhoto(WTelegram.Client,System.Int64,TL.InputChatPhotoBase)">
            <summary><para>⚠ <b>This method is only for basic Chat</b>. See <see href="https://wiz0u.github.io/WTelegramClient/#terminology">Terminology</see> in the README to understand what this means<br/>Search for a similar method name starting with <c>Channels_</c> if you're dealing with a <see cref="T:TL.Channel"/></para>		Changes chat photo and sends a service message on it		<para>See <a href="https://corefork.telegram.org/method/messages.editChatPhoto"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.editChatPhoto#possible-errors">details</a>)</para></summary>
            <param name="chat_id">Chat ID</param>
            <param name="photo">Photo to be set</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_AddChatUser(WTelegram.Client,System.Int64,TL.InputUserBase,System.Int32)">
            <summary><para>⚠ <b>This method is only for basic Chat</b>. See <see href="https://wiz0u.github.io/WTelegramClient/#terminology">Terminology</see> in the README to understand what this means<br/>Search for a similar method name starting with <c>Channels_</c> if you're dealing with a <see cref="T:TL.Channel"/></para>		Adds a user to a chat and sends a service message on it.		<para>See <a href="https://corefork.telegram.org/method/messages.addChatUser"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/messages.addChatUser#possible-errors">details</a>)</para></summary>
            <param name="chat_id">Chat ID</param>
            <param name="user_id">User ID to be added</param>
            <param name="fwd_limit">Number of last messages to be forwarded</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_DeleteChatUser(WTelegram.Client,System.Int64,TL.InputUserBase,System.Boolean)">
            <summary><para>⚠ <b>This method is only for basic Chat</b>. See <see href="https://wiz0u.github.io/WTelegramClient/#terminology">Terminology</see> in the README to understand what this means<br/>Search for a similar method name starting with <c>Channels_</c> if you're dealing with a <see cref="T:TL.Channel"/></para>		Deletes a user from a chat and sends a service message on it.		<para>See <a href="https://corefork.telegram.org/method/messages.deleteChatUser"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.deleteChatUser#possible-errors">details</a>)</para></summary>
            <param name="revoke_history">Remove the entire chat history of the specified user in this chat.</param>
            <param name="chat_id">Chat ID</param>
            <param name="user_id">User ID to be deleted</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_CreateChat(WTelegram.Client,TL.InputUserBase[],System.String,System.Nullable{System.Int32})">
            <summary>Creates a new chat.		<para>See <a href="https://corefork.telegram.org/method/messages.createChat"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,406,500 (<a href="https://corefork.telegram.org/method/messages.createChat#possible-errors">details</a>)</para></summary>
            <param name="users">List of user IDs to be invited</param>
            <param name="title">Chat name</param>
            <param name="ttl_period">Time-to-live of all messages that will be sent in the chat: once message.date+message.ttl_period === time(), the message will be deleted on the server, and must be deleted locally as well. You can use <see cref="M:TL.SchemaExtensions.Messages_SetDefaultHistoryTTL(WTelegram.Client,System.Int32)">Messages_SetDefaultHistoryTTL</see> to edit this value later.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetDhConfig(WTelegram.Client,System.Int32,System.Int32)">
            <summary>Returns configuration parameters for Diffie-Hellman key generation. Can also return a random sequence of bytes of required length.		<para>See <a href="https://corefork.telegram.org/method/messages.getDhConfig"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.getDhConfig#possible-errors">details</a>)</para></summary>
            <param name="version">Value of the <strong>version</strong> parameter from <see cref="T:TL.Messages_DhConfig"/>, available at the client</param>
            <param name="random_length">Length of the required random sequence</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_RequestEncryption(WTelegram.Client,TL.InputUserBase,System.Int32,System.Byte[])">
            <summary>Sends a request to start a secret chat to the user.		<para>See <a href="https://corefork.telegram.org/method/messages.requestEncryption"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.requestEncryption#possible-errors">details</a>)</para></summary>
            <param name="user_id">User ID</param>
            <param name="random_id">Unique client request ID required to prevent resending. This also doubles as the chat ID.</param>
            <param name="g_a"><c>A = g ^ a mod p</c>, see <a href="https://en.wikipedia.org/wiki/Diffie%E2%80%93Hellman_key_exchange">Wikipedia</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_AcceptEncryption(WTelegram.Client,TL.InputEncryptedChat,System.Byte[],System.Int64)">
            <summary>Confirms creation of a secret chat		<para>See <a href="https://corefork.telegram.org/method/messages.acceptEncryption"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.acceptEncryption#possible-errors">details</a>)</para></summary>
            <param name="peer">Secret chat ID</param>
            <param name="g_b"><c>B = g ^ b mod p</c>, see <a href="https://en.wikipedia.org/wiki/Diffie%E2%80%93Hellman_key_exchange">Wikipedia</a></param>
            <param name="key_fingerprint">64-bit fingerprint of the received key</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_DiscardEncryption(WTelegram.Client,System.Int32,System.Boolean)">
            <summary>Cancels a request for creation and/or delete info on secret chat.		<para>See <a href="https://corefork.telegram.org/method/messages.discardEncryption"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.discardEncryption#possible-errors">details</a>)</para></summary>
            <param name="delete_history">Whether to delete the entire chat history for the other user as well</param>
            <param name="chat_id">Secret chat ID</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SetEncryptedTyping(WTelegram.Client,TL.InputEncryptedChat,System.Boolean)">
            <summary>Send typing event by the current user to a secret chat.		<para>See <a href="https://corefork.telegram.org/method/messages.setEncryptedTyping"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.setEncryptedTyping#possible-errors">details</a>)</para></summary>
            <param name="peer">Secret chat ID</param>
            <param name="typing">Typing.<br/><strong>Possible values</strong>:<br/><see langword="true"/>, if the user started typing and more than <strong>5 seconds</strong> have passed since the last request<br/><see langword="false"/>, if the user stopped typing</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_ReadEncryptedHistory(WTelegram.Client,TL.InputEncryptedChat,System.DateTime)">
            <summary>Marks message history within a secret chat as read.		<para>See <a href="https://corefork.telegram.org/method/messages.readEncryptedHistory"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.readEncryptedHistory#possible-errors">details</a>)</para></summary>
            <param name="peer">Secret chat ID</param>
            <param name="max_date">Maximum date value for received messages in history</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SendEncrypted(WTelegram.Client,TL.InputEncryptedChat,System.Int64,System.Byte[],System.Boolean)">
            <summary>Sends a text message to a secret chat.		<para>See <a href="https://corefork.telegram.org/method/messages.sendEncrypted"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403,500 (<a href="https://corefork.telegram.org/method/messages.sendEncrypted#possible-errors">details</a>)</para></summary>
            <param name="silent">Send encrypted message without a notification</param>
            <param name="peer">Secret chat ID</param>
            <param name="random_id">Unique client message ID, necessary to avoid message resending <para>You can use <see cref="M:WTelegram.Helpers.RandomLong"/></para></param>
            <param name="data">TL-serialization of <see cref="T:TL.DecryptedMessageBase"/> type, encrypted with a key that was created during chat initialization</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SendEncryptedFile(WTelegram.Client,TL.InputEncryptedChat,System.Int64,System.Byte[],TL.InputEncryptedFileBase,System.Boolean)">
            <summary>Sends a message with a file attachment to a secret chat		<para>See <a href="https://corefork.telegram.org/method/messages.sendEncryptedFile"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.sendEncryptedFile#possible-errors">details</a>)</para></summary>
            <param name="silent">Whether to send the file without triggering a notification</param>
            <param name="peer">Secret chat ID</param>
            <param name="random_id">Unique client message ID necessary to prevent message resending <para>You can use <see cref="M:WTelegram.Helpers.RandomLong"/></para></param>
            <param name="data">TL-serialization of <see cref="T:TL.DecryptedMessageBase"/> type, encrypted with a key generated during chat initialization</param>
            <param name="file">File attachment for the secret chat</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SendEncryptedService(WTelegram.Client,TL.InputEncryptedChat,System.Int64,System.Byte[])">
            <summary>Sends a service message to a secret chat.		<para>See <a href="https://corefork.telegram.org/method/messages.sendEncryptedService"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403,500 (<a href="https://corefork.telegram.org/method/messages.sendEncryptedService#possible-errors">details</a>)</para></summary>
            <param name="peer">Secret chat ID</param>
            <param name="random_id">Unique client message ID required to prevent message resending <para>You can use <see cref="M:WTelegram.Helpers.RandomLong"/></para></param>
            <param name="data">TL-serialization of  <see cref="T:TL.DecryptedMessageBase"/> type, encrypted with a key generated during chat initialization</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_ReceivedQueue(WTelegram.Client,System.Int32)">
            <summary>Confirms receipt of messages in a secret chat by client, cancels push notifications.<br/>The method returns a list of <strong>random_id</strong>s of messages for which push notifications were cancelled.		<para>See <a href="https://corefork.telegram.org/method/messages.receivedQueue"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,500 (<a href="https://corefork.telegram.org/method/messages.receivedQueue#possible-errors">details</a>)</para></summary>
            <param name="max_qts">Maximum qts value available at the client</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_ReportEncryptedSpam(WTelegram.Client,TL.InputEncryptedChat)">
            <summary>Report a secret chat for spam		<para>See <a href="https://corefork.telegram.org/method/messages.reportEncryptedSpam"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.reportEncryptedSpam#possible-errors">details</a>)</para></summary>
            <param name="peer">The secret chat to report</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_ReadMessageContents(WTelegram.Client,System.Int32[])">
            <summary><para>⚠ <b>This method is only for basic Chat</b>. See <see href="https://wiz0u.github.io/WTelegramClient/#terminology">Terminology</see> in the README to understand what this means<br/>Search for a similar method name starting with <c>Channels_</c> if you're dealing with a <see cref="T:TL.Channel"/></para>		Notifies the sender about the recipient having listened a voice message or watched a video.		<para>See <a href="https://corefork.telegram.org/method/messages.readMessageContents"/></para></summary>
            <param name="id">Message ID list</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetStickers(WTelegram.Client,System.String,System.Int64)">
            <summary>Get stickers by emoji		<para>See <a href="https://corefork.telegram.org/method/messages.getStickers"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.getStickers#possible-errors">details</a>)</para></summary>
            <param name="emoticon">The emoji</param>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/messages.stickersNotModified">messages.stickersNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetAllStickers(WTelegram.Client,System.Int64)">
            <summary>Get all installed stickers		<para>See <a href="https://corefork.telegram.org/method/messages.getAllStickers"/></para></summary>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/messages.allStickersNotModified">messages.allStickersNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetWebPagePreview(WTelegram.Client,System.String,TL.MessageEntity[])">
            <summary>Get preview of webpage		<para>See <a href="https://corefork.telegram.org/method/messages.getWebPagePreview"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.getWebPagePreview#possible-errors">details</a>)</para></summary>
            <param name="message">Message from which to extract the preview</param>
            <param name="entities"><a href="https://corefork.telegram.org/api/entities">Message entities for styled text</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/messageMediaEmpty">messageMediaEmpty</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_ExportChatInvite(WTelegram.Client,TL.InputPeer,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Boolean,System.Boolean)">
            <summary>Export an invite link for a chat		<para>See <a href="https://corefork.telegram.org/method/messages.exportChatInvite"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/messages.exportChatInvite#possible-errors">details</a>)</para></summary>
            <param name="legacy_revoke_permanent">Legacy flag, reproducing legacy behavior of this method: if set, revokes all previous links before creating a new one. Kept for bot API BC, should not be used by modern clients.</param>
            <param name="request_needed">Whether admin confirmation is required before admitting each separate user into the chat</param>
            <param name="peer">Chat</param>
            <param name="expire_date">Expiration date</param>
            <param name="usage_limit">Maximum number of users that can join using this link</param>
            <param name="title">Description of the invite link, visible only to administrators</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_CheckChatInvite(WTelegram.Client,System.String)">
            <summary>Check the validity of a chat invite link and get basic info about it		<para>See <a href="https://corefork.telegram.org/method/messages.checkChatInvite"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,406 (<a href="https://corefork.telegram.org/method/messages.checkChatInvite#possible-errors">details</a>)</para></summary>
            <param name="hash">Invite hash from <a href="https://corefork.telegram.org/api/links#chat-invite-links">chat invite deep link »</a>.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_ImportChatInvite(WTelegram.Client,System.String)">
            <summary>Import a chat invite and join a private chat/supergroup/channel		<para>See <a href="https://corefork.telegram.org/method/messages.importChatInvite"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,406 (<a href="https://corefork.telegram.org/method/messages.importChatInvite#possible-errors">details</a>)</para></summary>
            <param name="hash"><c>hash</c> from a <a href="https://corefork.telegram.org/api/links#chat-invite-links">chat invite deep link</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetStickerSet(WTelegram.Client,TL.InputStickerSet,System.Int32)">
            <summary>Get info about a stickerset		<para>See <a href="https://corefork.telegram.org/method/messages.getStickerSet"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,406 (<a href="https://corefork.telegram.org/method/messages.getStickerSet#possible-errors">details</a>)</para></summary>
            <param name="stickerset">Stickerset</param>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/messages.stickerSetNotModified">messages.stickerSetNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_InstallStickerSet(WTelegram.Client,TL.InputStickerSet,System.Boolean)">
            <summary>Install a stickerset		<para>See <a href="https://corefork.telegram.org/method/messages.installStickerSet"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 406 (<a href="https://corefork.telegram.org/method/messages.installStickerSet#possible-errors">details</a>)</para></summary>
            <param name="stickerset">Stickerset to install</param>
            <param name="archived">Whether to archive stickerset</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_UninstallStickerSet(WTelegram.Client,TL.InputStickerSet)">
            <summary>Uninstall a stickerset		<para>See <a href="https://corefork.telegram.org/method/messages.uninstallStickerSet"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 406 (<a href="https://corefork.telegram.org/method/messages.uninstallStickerSet#possible-errors">details</a>)</para></summary>
            <param name="stickerset">The stickerset to uninstall</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_StartBot(WTelegram.Client,TL.InputUserBase,TL.InputPeer,System.Int64,System.String)">
            <summary>Start a conversation with a bot using a <a href="https://corefork.telegram.org/api/links#bot-links">deep linking parameter</a>		<para>See <a href="https://corefork.telegram.org/method/messages.startBot"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403,500 (<a href="https://corefork.telegram.org/method/messages.startBot#possible-errors">details</a>)</para></summary>
            <param name="bot">The bot</param>
            <param name="peer">The chat where to start the bot, can be the bot's private chat or a group</param>
            <param name="random_id">Random ID to avoid resending the same message <para>You can use <see cref="M:WTelegram.Helpers.RandomLong"/></para></param>
            <param name="start_param"><a href="https://corefork.telegram.org/api/links#bot-links">Deep linking parameter</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetMessagesViews(WTelegram.Client,TL.InputPeer,System.Int32[],System.Boolean)">
            <summary>Get and increase the view counter of a message sent or forwarded from a <a href="https://corefork.telegram.org/api/channel">channel</a>		<para>See <a href="https://corefork.telegram.org/method/messages.getMessagesViews"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,406 (<a href="https://corefork.telegram.org/method/messages.getMessagesViews#possible-errors">details</a>)</para></summary>
            <param name="peer">Peer where the message was found</param>
            <param name="id">ID of message</param>
            <param name="increment">Whether to mark the message as viewed and increment the view counter</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_EditChatAdmin(WTelegram.Client,System.Int64,TL.InputUserBase,System.Boolean)">
            <summary><para>⚠ <b>This method is only for basic Chat</b>. See <see href="https://wiz0u.github.io/WTelegramClient/#terminology">Terminology</see> in the README to understand what this means<br/>Search for a similar method name starting with <c>Channels_</c> if you're dealing with a <see cref="T:TL.Channel"/></para>		Make a user admin in a <a href="https://corefork.telegram.org/api/channel#basic-groups">basic group</a>.		<para>See <a href="https://corefork.telegram.org/method/messages.editChatAdmin"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.editChatAdmin#possible-errors">details</a>)</para></summary>
            <param name="chat_id">The ID of the group</param>
            <param name="user_id">The user to make admin</param>
            <param name="is_admin">Whether to make them admin</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_MigrateChat(WTelegram.Client,System.Int64)">
            <summary><para>⚠ <b>This method is only for basic Chat</b>. See <see href="https://wiz0u.github.io/WTelegramClient/#terminology">Terminology</see> in the README to understand what this means<br/>Search for a similar method name starting with <c>Channels_</c> if you're dealing with a <see cref="T:TL.Channel"/></para>		Turn a <a href="https://corefork.telegram.org/api/channel#migration">basic group into a supergroup</a>		<para>See <a href="https://corefork.telegram.org/method/messages.migrateChat"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403,500 (<a href="https://corefork.telegram.org/method/messages.migrateChat#possible-errors">details</a>)</para></summary>
            <param name="chat_id"><a href="https://corefork.telegram.org/api/channel#basic-groups">Basic group</a> to migrate</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SearchGlobal(WTelegram.Client,System.String,TL.MessagesFilter,System.DateTime,System.DateTime,System.Int32,TL.InputPeer,System.Int32,System.Int32,System.Nullable{System.Int32},System.Boolean)">
            <summary>Search for messages and peers globally		<para>See <a href="https://corefork.telegram.org/method/messages.searchGlobal"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.searchGlobal#possible-errors">details</a>)</para></summary>
            <param name="folder_id"><a href="https://corefork.telegram.org/api/folders#peer-folders">Peer folder ID, for more info click here</a></param>
            <param name="q">Query</param>
            <param name="filter">Global search filter</param>
            <param name="min_date">If a positive value was specified, the method will return only messages with date bigger than min_date</param>
            <param name="max_date">If a positive value was transferred, the method will return only messages with date smaller than max_date</param>
            <param name="offset_rate">Initially 0, then set to the <see cref="T:TL.Messages_MessagesSlice"><c>next_rate</c> parameter of messages.messagesSlice</see></param>
            <param name="offset_peer"><a href="https://corefork.telegram.org/api/offsets">Offsets for pagination, for more info click here</a></param>
            <param name="offset_id"><a href="https://corefork.telegram.org/api/offsets">Offsets for pagination, for more info click here</a></param>
            <param name="limit"><a href="https://corefork.telegram.org/api/offsets">Offsets for pagination, for more info click here</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_ReorderStickerSets(WTelegram.Client,System.Int64[],System.Boolean,System.Boolean)">
            <summary>Reorder installed stickersets		<para>See <a href="https://corefork.telegram.org/method/messages.reorderStickerSets"/></para></summary>
            <param name="masks">Reorder mask stickersets</param>
            <param name="emojis">Reorder <a href="https://corefork.telegram.org/api/custom-emoji">custom emoji stickersets</a></param>
            <param name="order">New stickerset order by stickerset IDs</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetDocumentByHash(WTelegram.Client,System.Byte[],System.Int64,System.String)">
            <summary>Get a document by its SHA256 hash, mainly used for gifs		<para>See <a href="https://corefork.telegram.org/method/messages.getDocumentByHash"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.getDocumentByHash#possible-errors">details</a>)</para></summary>
            <param name="sha256">SHA256 of file</param>
            <param name="size">Size of the file in bytes</param>
            <param name="mime_type">Mime type</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetSavedGifs(WTelegram.Client,System.Int64)">
            <summary>Get saved GIFs		<para>See <a href="https://corefork.telegram.org/method/messages.getSavedGifs"/></para></summary>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/messages.savedGifsNotModified">messages.savedGifsNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SaveGif(WTelegram.Client,TL.InputDocument,System.Boolean)">
            <summary>Add GIF to saved gifs list		<para>See <a href="https://corefork.telegram.org/method/messages.saveGif"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.saveGif#possible-errors">details</a>)</para></summary>
            <param name="id">GIF to save</param>
            <param name="unsave">Whether to remove GIF from saved gifs list</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetInlineBotResults(WTelegram.Client,TL.InputUserBase,TL.InputPeer,System.String,System.String,TL.InputGeoPoint)">
            <summary>Query an inline bot		<para>See <a href="https://corefork.telegram.org/method/messages.getInlineBotResults"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,406,-503 (<a href="https://corefork.telegram.org/method/messages.getInlineBotResults#possible-errors">details</a>)</para></summary>
            <param name="bot">The bot to query</param>
            <param name="peer">The currently opened chat</param>
            <param name="geo_point">The geolocation, if requested</param>
            <param name="query">The query</param>
            <param name="offset">The offset within the results, will be passed directly as-is to the bot.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SetInlineBotResults(WTelegram.Client,System.Int64,TL.InputBotInlineResultBase[],System.Int32,System.String,TL.InlineBotSwitchPM,TL.InlineBotWebView,System.Boolean,System.Boolean)">
            <summary>Answer an inline query, for bots only		<para>See <a href="https://corefork.telegram.org/method/messages.setInlineBotResults"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/messages.setInlineBotResults#possible-errors">details</a>)</para></summary>
            <param name="gallery">Set this flag if the results are composed of media files</param>
            <param name="private_">Set this flag if results may be cached on the server side only for the user that sent the query. By default, results may be returned to any user who sends the same query</param>
            <param name="query_id">Unique identifier for the answered query</param>
            <param name="results">Vector of results for the inline query</param>
            <param name="cache_time">The maximum amount of time in seconds that the result of the inline query may be cached on the server. Defaults to 300.</param>
            <param name="next_offset">Pass the offset that a client should send in the next query with the same text to receive more results. Pass an empty string if there are no more results or if you don't support pagination. Offset length can't exceed 64 bytes.</param>
            <param name="switch_pm">If passed, clients will display a button on top of the remaining inline result list with the specified text, that switches the user to a private chat with the bot and sends the bot a start message with a certain parameter.</param>
            <param name="switch_webview">If passed, clients will display a button on top of the remaining inline result list with the specified text, that switches the user to the specified <a href="https://corefork.telegram.org/api/bots/webapps#inline-mode-mini-apps">inline mode mini app</a>.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SendInlineBotResult(WTelegram.Client,TL.InputPeer,System.Int64,System.Int64,System.String,TL.InputReplyTo,System.Nullable{System.DateTime},TL.InputPeer,TL.InputQuickReplyShortcutBase,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Send a result obtained using <see cref="M:TL.SchemaExtensions.Messages_GetInlineBotResults(WTelegram.Client,TL.InputUserBase,TL.InputPeer,System.String,System.String,TL.InputGeoPoint)">Messages_GetInlineBotResults</see>.		<para>See <a href="https://corefork.telegram.org/method/messages.sendInlineBotResult"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403,420,500 (<a href="https://corefork.telegram.org/method/messages.sendInlineBotResult#possible-errors">details</a>)</para></summary>
            <param name="silent">Whether to send the message silently (no notification will be triggered on the other client)</param>
            <param name="background">Whether to send the message in background</param>
            <param name="clear_draft">Whether to clear the <a href="https://corefork.telegram.org/api/drafts">draft</a></param>
            <param name="hide_via">Whether to hide the <c>via @botname</c> in the resulting message (only for bot usernames encountered in the <see cref="T:TL.Config"/>)</param>
            <param name="peer">Destination</param>
            <param name="reply_to">If set, indicates that the message should be sent in reply to the specified message or story.</param>
            <param name="random_id">Random ID to avoid resending the same query <para>You can use <see cref="M:WTelegram.Helpers.RandomLong"/></para></param>
            <param name="query_id">Query ID from <see cref="M:TL.SchemaExtensions.Messages_GetInlineBotResults(WTelegram.Client,TL.InputUserBase,TL.InputPeer,System.String,System.String,TL.InputGeoPoint)">Messages_GetInlineBotResults</see></param>
            <param name="id">Result ID from <see cref="M:TL.SchemaExtensions.Messages_GetInlineBotResults(WTelegram.Client,TL.InputUserBase,TL.InputPeer,System.String,System.String,TL.InputGeoPoint)">Messages_GetInlineBotResults</see></param>
            <param name="schedule_date">Scheduled message date for scheduled messages</param>
            <param name="send_as">Send this message as the specified peer</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetMessageEditData(WTelegram.Client,TL.InputPeer,System.Int32)">
            <summary>Find out if a media message's caption can be edited		<para>See <a href="https://corefork.telegram.org/method/messages.getMessageEditData"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/messages.getMessageEditData#possible-errors">details</a>)</para></summary>
            <param name="peer">Peer where the media was sent</param>
            <param name="id">ID of message</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_EditMessage(WTelegram.Client,TL.InputPeer,System.Int32,System.String,TL.InputMedia,TL.ReplyMarkup,TL.MessageEntity[],System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>Edit message		<para>See <a href="https://corefork.telegram.org/method/messages.editMessage"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403,406,500 (<a href="https://corefork.telegram.org/method/messages.editMessage#possible-errors">details</a>)</para></summary>
            <param name="no_webpage">Disable webpage preview</param>
            <param name="invert_media">If set, any eventual webpage preview will be shown on top of the message instead of at the bottom.</param>
            <param name="peer">Where was the message sent</param>
            <param name="id">ID of the message to edit</param>
            <param name="message">New message</param>
            <param name="media">New attached media</param>
            <param name="reply_markup">Reply markup for inline keyboards</param>
            <param name="entities"><a href="https://corefork.telegram.org/api/entities">Message entities for styled text</a></param>
            <param name="schedule_date">Scheduled message date for <a href="https://corefork.telegram.org/api/scheduled-messages">scheduled messages</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_EditInlineBotMessage(WTelegram.Client,TL.InputBotInlineMessageIDBase,System.String,TL.InputMedia,TL.ReplyMarkup,TL.MessageEntity[],System.Boolean,System.Boolean)">
            <summary>Edit an inline bot message		<para>See <a href="https://corefork.telegram.org/method/messages.editInlineBotMessage"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.editInlineBotMessage#possible-errors">details</a>)</para></summary>
            <param name="no_webpage">Disable webpage preview</param>
            <param name="invert_media">If set, any eventual webpage preview will be shown on top of the message instead of at the bottom.</param>
            <param name="id">Sent inline message ID</param>
            <param name="message">Message</param>
            <param name="media">Media</param>
            <param name="reply_markup">Reply markup for inline keyboards</param>
            <param name="entities"><a href="https://corefork.telegram.org/api/entities">Message entities for styled text</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetBotCallbackAnswer(WTelegram.Client,TL.InputPeer,System.Int32,System.Byte[],TL.InputCheckPasswordSRP,System.Boolean)">
            <summary>Press an inline callback button and get a callback answer from the bot		<para>See <a href="https://corefork.telegram.org/method/messages.getBotCallbackAnswer"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,-503 (<a href="https://corefork.telegram.org/method/messages.getBotCallbackAnswer#possible-errors">details</a>)</para></summary>
            <param name="game">Whether this is a "play game" button</param>
            <param name="peer">Where was the inline keyboard sent</param>
            <param name="msg_id">ID of the Message with the inline keyboard</param>
            <param name="data">Callback data</param>
            <param name="password">For buttons <see cref="T:TL.KeyboardButtonCallback">requiring you to verify your identity with your 2FA password</see>, the SRP payload generated using <a href="https://corefork.telegram.org/api/srp">SRP</a>.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SetBotCallbackAnswer(WTelegram.Client,System.Int64,System.Int32,System.String,System.String,System.Boolean)">
            <summary>Set the callback answer to a user button press (bots only)		<para>See <a href="https://corefork.telegram.org/method/messages.setBotCallbackAnswer"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.setBotCallbackAnswer#possible-errors">details</a>)</para></summary>
            <param name="alert">Whether to show the message as a popup instead of a toast notification</param>
            <param name="query_id">Query ID</param>
            <param name="message">Popup to show</param>
            <param name="url">URL to open</param>
            <param name="cache_time">Cache validity</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetPeerDialogs(WTelegram.Client,TL.InputDialogPeerBase[])">
            <summary>Get dialog info of specified peers		<para>See <a href="https://corefork.telegram.org/method/messages.getPeerDialogs"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,406 (<a href="https://corefork.telegram.org/method/messages.getPeerDialogs#possible-errors">details</a>)</para></summary>
            <param name="peers">Peers</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SaveDraft(WTelegram.Client,TL.InputPeer,System.String,TL.MessageEntity[],TL.InputReplyTo,TL.InputMedia,System.Boolean,System.Boolean)">
            <summary>Save a message <a href="https://corefork.telegram.org/api/drafts">draft</a> associated to a chat.		<para>See <a href="https://corefork.telegram.org/method/messages.saveDraft"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.saveDraft#possible-errors">details</a>)</para></summary>
            <param name="no_webpage">Disable generation of the webpage preview</param>
            <param name="invert_media">If set, any eventual webpage preview will be shown on top of the message instead of at the bottom.</param>
            <param name="reply_to">If set, indicates that the message should be sent in reply to the specified message or story.</param>
            <param name="peer">Destination of the message that should be sent</param>
            <param name="message">The draft</param>
            <param name="entities">Message <a href="https://corefork.telegram.org/api/entities">entities</a> for styled text</param>
            <param name="media">Attached media</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetAllDrafts(WTelegram.Client)">
            <summary>Return all message <a href="https://corefork.telegram.org/api/drafts">drafts</a>.<br/>Returns all the latest <see cref="T:TL.UpdateDraftMessage"/> updates related to all chats with drafts.		<para>See <a href="https://corefork.telegram.org/method/messages.getAllDrafts"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetFeaturedStickers(WTelegram.Client,System.Int64)">
            <summary>Get featured stickers		<para>See <a href="https://corefork.telegram.org/method/messages.getFeaturedStickers"/></para></summary>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_ReadFeaturedStickers(WTelegram.Client,System.Int64[])">
            <summary>Mark new featured stickers as read		<para>See <a href="https://corefork.telegram.org/method/messages.readFeaturedStickers"/></para></summary>
            <param name="id">IDs of stickersets to mark as read</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetRecentStickers(WTelegram.Client,System.Int64,System.Boolean)">
            <summary>Get recent stickers		<para>See <a href="https://corefork.telegram.org/method/messages.getRecentStickers"/></para></summary>
            <param name="attached">Get stickers recently attached to photo or video files</param>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/messages.recentStickersNotModified">messages.recentStickersNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SaveRecentSticker(WTelegram.Client,TL.InputDocument,System.Boolean,System.Boolean)">
            <summary>Add/remove sticker from recent stickers list		<para>See <a href="https://corefork.telegram.org/method/messages.saveRecentSticker"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.saveRecentSticker#possible-errors">details</a>)</para></summary>
            <param name="attached">Whether to add/remove stickers recently attached to photo or video files</param>
            <param name="id">Sticker</param>
            <param name="unsave">Whether to save or unsave the sticker</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_ClearRecentStickers(WTelegram.Client,System.Boolean)">
            <summary>Clear recent stickers		<para>See <a href="https://corefork.telegram.org/method/messages.clearRecentStickers"/></para></summary>
            <param name="attached">Set this flag to clear the list of stickers recently attached to photo or video files</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetArchivedStickers(WTelegram.Client,System.Int64,System.Int32,System.Boolean,System.Boolean)">
            <summary>Get all archived stickers		<para>See <a href="https://corefork.telegram.org/method/messages.getArchivedStickers"/></para></summary>
            <param name="masks">Get <a href="https://corefork.telegram.org/api/stickers#mask-stickers">mask stickers</a></param>
            <param name="emojis">Get <a href="https://corefork.telegram.org/api/custom-emoji">custom emoji stickers</a></param>
            <param name="offset_id"><a href="https://corefork.telegram.org/api/offsets">Offsets for pagination, for more info click here</a></param>
            <param name="limit">Maximum number of results to return, <a href="https://corefork.telegram.org/api/offsets">see pagination</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetMaskStickers(WTelegram.Client,System.Int64)">
            <summary>Get installed mask stickers		<para>See <a href="https://corefork.telegram.org/method/messages.getMaskStickers"/></para></summary>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/messages.allStickersNotModified">messages.allStickersNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetAttachedStickers(WTelegram.Client,TL.InputStickeredMedia)">
            <summary>Get stickers attached to a photo or video		<para>See <a href="https://corefork.telegram.org/method/messages.getAttachedStickers"/></para></summary>
            <param name="media">Stickered media</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SetGameScore(WTelegram.Client,TL.InputPeer,System.Int32,TL.InputUserBase,System.Int32,System.Boolean,System.Boolean)">
            <summary>Use this method to set the score of the specified user in a game sent as a normal message (bots only).		<para>See <a href="https://corefork.telegram.org/method/messages.setGameScore"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.setGameScore#possible-errors">details</a>)</para></summary>
            <param name="edit_message">Set this flag if the game message should be automatically edited to include the current scoreboard</param>
            <param name="force">Set this flag if the high score is allowed to decrease. This can be useful when fixing mistakes or banning cheaters</param>
            <param name="peer">Unique identifier of target chat</param>
            <param name="id">Identifier of the sent message</param>
            <param name="user_id">User identifier</param>
            <param name="score">New score</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SetInlineGameScore(WTelegram.Client,TL.InputBotInlineMessageIDBase,TL.InputUserBase,System.Int32,System.Boolean,System.Boolean)">
            <summary>Use this method to set the score of the specified user in a game sent as an inline message (bots only).		<para>See <a href="https://corefork.telegram.org/method/messages.setInlineGameScore"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.setInlineGameScore#possible-errors">details</a>)</para></summary>
            <param name="edit_message">Set this flag if the game message should be automatically edited to include the current scoreboard</param>
            <param name="force">Set this flag if the high score is allowed to decrease. This can be useful when fixing mistakes or banning cheaters</param>
            <param name="id">ID of the inline message</param>
            <param name="user_id">User identifier</param>
            <param name="score">New score</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetGameHighScores(WTelegram.Client,TL.InputPeer,System.Int32,TL.InputUserBase)">
            <summary>Get highscores of a game		<para>See <a href="https://corefork.telegram.org/method/messages.getGameHighScores"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.getGameHighScores#possible-errors">details</a>)</para></summary>
            <param name="peer">Where was the game sent</param>
            <param name="id">ID of message with game media attachment</param>
            <param name="user_id">Get high scores made by a certain user</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetInlineGameHighScores(WTelegram.Client,TL.InputBotInlineMessageIDBase,TL.InputUserBase)">
            <summary>Get highscores of a game sent using an inline bot		<para>See <a href="https://corefork.telegram.org/method/messages.getInlineGameHighScores"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.getInlineGameHighScores#possible-errors">details</a>)</para></summary>
            <param name="id">ID of inline message</param>
            <param name="user_id">Get high scores of a certain user</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetCommonChats(WTelegram.Client,TL.InputUserBase,System.Int64,System.Int32)">
            <summary>Get chats in common with a user		<para>See <a href="https://corefork.telegram.org/method/messages.getCommonChats"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.getCommonChats#possible-errors">details</a>)</para></summary>
            <param name="user_id">User ID</param>
            <param name="max_id">Maximum ID of chat to return (see <a href="https://corefork.telegram.org/api/offsets">pagination</a>)</param>
            <param name="limit">Maximum number of results to return, <a href="https://corefork.telegram.org/api/offsets">see pagination</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetWebPage(WTelegram.Client,System.String,System.Int32)">
            <summary>Get <a href="https://instantview.telegram.org">instant view</a> page		<para>See <a href="https://corefork.telegram.org/method/messages.getWebPage"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.getWebPage#possible-errors">details</a>)</para></summary>
            <param name="url">URL of IV page to fetch</param>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_ToggleDialogPin(WTelegram.Client,TL.InputDialogPeerBase,System.Boolean)">
            <summary>Pin/unpin a dialog		<para>See <a href="https://corefork.telegram.org/method/messages.toggleDialogPin"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.toggleDialogPin#possible-errors">details</a>)</para></summary>
            <param name="pinned">Whether to pin or unpin the dialog</param>
            <param name="peer">The dialog to pin</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_ReorderPinnedDialogs(WTelegram.Client,System.Int32,TL.InputDialogPeerBase[],System.Boolean)">
            <summary>Reorder pinned dialogs		<para>See <a href="https://corefork.telegram.org/method/messages.reorderPinnedDialogs"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.reorderPinnedDialogs#possible-errors">details</a>)</para></summary>
            <param name="force">If set, dialogs pinned server-side but not present in the <c>order</c> field will be unpinned.</param>
            <param name="folder_id"><a href="https://corefork.telegram.org/api/folders#peer-folders">Peer folder ID, for more info click here</a></param>
            <param name="order">New dialog order</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetPinnedDialogs(WTelegram.Client,System.Int32)">
            <summary>Get pinned dialogs		<para>See <a href="https://corefork.telegram.org/method/messages.getPinnedDialogs"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.getPinnedDialogs#possible-errors">details</a>)</para></summary>
            <param name="folder_id"><a href="https://corefork.telegram.org/api/folders#peer-folders">Peer folder ID, for more info click here</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SetBotShippingResults(WTelegram.Client,System.Int64,System.String,TL.ShippingOption[])">
            <summary>If you sent an invoice requesting a shipping address and the parameter is_flexible was specified, the bot will receive an <see cref="T:TL.UpdateBotShippingQuery"/> update. Use this method to reply to shipping queries.		<para>See <a href="https://corefork.telegram.org/method/messages.setBotShippingResults"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.setBotShippingResults#possible-errors">details</a>)</para></summary>
            <param name="query_id">Unique identifier for the query to be answered</param>
            <param name="error">Error message in human readable form that explains why it is impossible to complete the order (e.g. "Sorry, delivery to your desired address is unavailable"). Telegram will display this message to the user.</param>
            <param name="shipping_options">A vector of available shipping options.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SetBotPrecheckoutResults(WTelegram.Client,System.Int64,System.String,System.Boolean)">
            <summary>Once the user has confirmed their payment and shipping details, the bot receives an <see cref="T:TL.UpdateBotPrecheckoutQuery"/> update.<br/>Use this method to respond to such pre-checkout queries.<br/><strong>Note</strong>: Telegram must receive an answer within 10 seconds after the pre-checkout query was sent.		<para>See <a href="https://corefork.telegram.org/method/messages.setBotPrecheckoutResults"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.setBotPrecheckoutResults#possible-errors">details</a>)</para></summary>
            <param name="success">Set this flag if everything is alright (goods are available, etc.) and the bot is ready to proceed with the order, otherwise do not set it, and set the <c>error</c> field, instead</param>
            <param name="query_id">Unique identifier for the query to be answered</param>
            <param name="error">Required if the <c>success</c> isn't set. Error message in human readable form that explains the reason for failure to proceed with the checkout (e.g. "Sorry, somebody just bought the last of our amazing black T-shirts while you were busy filling out your payment details. Please choose a different color or garment!"). Telegram will display this message to the user.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_UploadMedia(WTelegram.Client,TL.InputPeer,TL.InputMedia,System.String)">
            <summary>Upload a file and associate it to a chat (without actually sending it to the chat)		<para>See <a href="https://corefork.telegram.org/method/messages.uploadMedia"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/messages.uploadMedia#possible-errors">details</a>)</para></summary>
            <param name="peer">The chat, can be <see langword="null"/> for bots and <see cref="T:TL.InputPeerSelf"/> for users.</param>
            <param name="media">File uploaded in chunks as described in <a href="https://corefork.telegram.org/api/files">files »</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/messageMediaEmpty">messageMediaEmpty</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SendScreenshotNotification(WTelegram.Client,TL.InputPeer,TL.InputReplyTo,System.Int64)">
            <summary>Notify the other user in a private chat that a screenshot of the chat was taken		<para>See <a href="https://corefork.telegram.org/method/messages.sendScreenshotNotification"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.sendScreenshotNotification#possible-errors">details</a>)</para></summary>
            <param name="peer">Other user</param>
            <param name="reply_to">Indicates the message that was screenshotted (the specified message ID can also be <c>0</c> to avoid indicating any specific message).</param>
            <param name="random_id">Random ID to avoid message resending <para>You can use <see cref="M:WTelegram.Helpers.RandomLong"/></para></param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetFavedStickers(WTelegram.Client,System.Int64)">
            <summary>Get faved stickers		<para>See <a href="https://corefork.telegram.org/method/messages.getFavedStickers"/></para></summary>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/messages.favedStickersNotModified">messages.favedStickersNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_FaveSticker(WTelegram.Client,TL.InputDocument,System.Boolean)">
            <summary>Mark or unmark a sticker as favorite		<para>See <a href="https://corefork.telegram.org/method/messages.faveSticker"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.faveSticker#possible-errors">details</a>)</para></summary>
            <param name="id">Sticker in question</param>
            <param name="unfave">Whether to add or remove a sticker from favorites</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetUnreadMentions(WTelegram.Client,TL.InputPeer,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>Get unread messages where we were mentioned		<para>See <a href="https://corefork.telegram.org/method/messages.getUnreadMentions"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.getUnreadMentions#possible-errors">details</a>)</para></summary>
            <param name="peer">Peer where to look for mentions</param>
            <param name="top_msg_id">If set, considers only messages within the specified <a href="https://corefork.telegram.org/api/forum#forum-topics">forum topic</a></param>
            <param name="offset_id"><a href="https://corefork.telegram.org/api/offsets">Offsets for pagination, for more info click here</a></param>
            <param name="add_offset"><a href="https://corefork.telegram.org/api/offsets">Offsets for pagination, for more info click here</a></param>
            <param name="limit">Maximum number of results to return, <a href="https://corefork.telegram.org/api/offsets">see pagination</a></param>
            <param name="max_id">Maximum message ID to return, <a href="https://corefork.telegram.org/api/offsets">see pagination</a></param>
            <param name="min_id">Minimum message ID to return, <a href="https://corefork.telegram.org/api/offsets">see pagination</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_ReadMentions(WTelegram.Client,TL.InputPeer,System.Nullable{System.Int32})">
            <summary>Mark mentions as read		<para>See <a href="https://corefork.telegram.org/method/messages.readMentions"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.readMentions#possible-errors">details</a>)</para></summary>
            <param name="peer">Dialog</param>
            <param name="top_msg_id">Mark as read only mentions within the specified <a href="https://corefork.telegram.org/api/forum#forum-topics">forum topic</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetRecentLocations(WTelegram.Client,TL.InputPeer,System.Int32,System.Int64)">
            <summary>Get live location history of a certain user		<para>See <a href="https://corefork.telegram.org/method/messages.getRecentLocations"/></para></summary>
            <param name="peer">User</param>
            <param name="limit">Maximum number of results to return, <a href="https://corefork.telegram.org/api/offsets">see pagination</a></param>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SendMultiMedia(WTelegram.Client,TL.InputPeer,TL.InputSingleMedia[],TL.InputReplyTo,System.Nullable{System.DateTime},TL.InputPeer,TL.InputQuickReplyShortcutBase,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Send an <a href="https://corefork.telegram.org/api/files#albums-grouped-media">album or grouped media</a>		<para>See <a href="https://corefork.telegram.org/method/messages.sendMultiMedia"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403,420,500 (<a href="https://corefork.telegram.org/method/messages.sendMultiMedia#possible-errors">details</a>)</para></summary>
            <param name="silent">Whether to send the album silently (no notification triggered)</param>
            <param name="background">Send in background?</param>
            <param name="clear_draft">Whether to clear <a href="https://corefork.telegram.org/api/drafts">drafts</a></param>
            <param name="noforwards">Only for bots, disallows forwarding and saving of the messages, even if the destination chat doesn't have <a href="https://telegram.org/blog/protected-content-delete-by-date-and-more">content protection</a> enabled</param>
            <param name="update_stickersets_order">Whether to move used stickersets to top, <a href="https://corefork.telegram.org/api/stickers#recent-stickersets">see here for more info on this flag »</a></param>
            <param name="invert_media">If set, any eventual webpage preview will be shown on top of the message instead of at the bottom.</param>
            <param name="peer">The destination chat</param>
            <param name="reply_to">If set, indicates that the message should be sent in reply to the specified message or story.</param>
            <param name="multi_media">The medias to send: note that they must be separately uploaded using <see cref="M:TL.SchemaExtensions.Messages_UploadMedia(WTelegram.Client,TL.InputPeer,TL.InputMedia,System.String)">Messages_UploadMedia</see> first, using raw <c>inputMediaUploaded*</c> constructors is not supported.</param>
            <param name="schedule_date">Scheduled message date for scheduled messages</param>
            <param name="send_as">Send this message as the specified peer</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_UploadEncryptedFile(WTelegram.Client,TL.InputEncryptedChat,TL.InputEncryptedFileBase)">
            <summary>Upload encrypted file and associate it to a secret chat		<para>See <a href="https://corefork.telegram.org/method/messages.uploadEncryptedFile"/></para></summary>
            <param name="peer">The secret chat to associate the file to</param>
            <param name="file">The file</param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/encryptedFileEmpty">encryptedFileEmpty</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SearchStickerSets(WTelegram.Client,System.String,System.Int64,System.Boolean)">
            <summary>Search for stickersets		<para>See <a href="https://corefork.telegram.org/method/messages.searchStickerSets"/></para></summary>
            <param name="exclude_featured">Exclude featured stickersets from results</param>
            <param name="q">Query string</param>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/messages.foundStickerSetsNotModified">messages.foundStickerSetsNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetSplitRanges(WTelegram.Client)">
            <summary>Get message ranges for saving the user's chat history		<para>See <a href="https://corefork.telegram.org/method/messages.getSplitRanges"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_MarkDialogUnread(WTelegram.Client,TL.InputDialogPeerBase,System.Boolean)">
            <summary>Manually mark dialog as unread		<para>See <a href="https://corefork.telegram.org/method/messages.markDialogUnread"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.markDialogUnread#possible-errors">details</a>)</para></summary>
            <param name="unread">Mark as unread/read</param>
            <param name="peer">Dialog</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetDialogUnreadMarks(WTelegram.Client)">
            <summary>Get dialogs manually marked as unread		<para>See <a href="https://corefork.telegram.org/method/messages.getDialogUnreadMarks"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_ClearAllDrafts(WTelegram.Client)">
            <summary>Clear all <a href="https://corefork.telegram.org/api/drafts">drafts</a>.		<para>See <a href="https://corefork.telegram.org/method/messages.clearAllDrafts"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_UpdatePinnedMessage(WTelegram.Client,TL.InputPeer,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Pin a message		<para>See <a href="https://corefork.telegram.org/method/messages.updatePinnedMessage"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/messages.updatePinnedMessage#possible-errors">details</a>)</para></summary>
            <param name="silent">Pin the message silently, without triggering a notification</param>
            <param name="unpin">Whether the message should unpinned or pinned</param>
            <param name="pm_oneside">Whether the message should only be pinned on the local side of a one-to-one chat</param>
            <param name="peer">The peer where to pin the message</param>
            <param name="id">The message to pin or unpin</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SendVote(WTelegram.Client,TL.InputPeer,System.Int32,System.Byte[][])">
            <summary>Vote in a <see cref="T:TL.Poll"/>		<para>See <a href="https://corefork.telegram.org/method/messages.sendVote"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.sendVote#possible-errors">details</a>)</para></summary>
            <param name="peer">The chat where the poll was sent</param>
            <param name="msg_id">The message ID of the poll</param>
            <param name="options">The options that were chosen</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetPollResults(WTelegram.Client,TL.InputPeer,System.Int32)">
            <summary>Get poll results		<para>See <a href="https://corefork.telegram.org/method/messages.getPollResults"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.getPollResults#possible-errors">details</a>)</para></summary>
            <param name="peer">Peer where the poll was found</param>
            <param name="msg_id">Message ID of poll message</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetOnlines(WTelegram.Client,TL.InputPeer)">
            <summary>Get count of online users in a chat		<para>See <a href="https://corefork.telegram.org/method/messages.getOnlines"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.getOnlines#possible-errors">details</a>)</para></summary>
            <param name="peer">The chat</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_EditChatAbout(WTelegram.Client,TL.InputPeer,System.String)">
            <summary>Edit the description of a <a href="https://corefork.telegram.org/api/channel">group/supergroup/channel</a>.		<para>See <a href="https://corefork.telegram.org/method/messages.editChatAbout"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/messages.editChatAbout#possible-errors">details</a>)</para></summary>
            <param name="peer">The <a href="https://corefork.telegram.org/api/channel">group/supergroup/channel</a>.</param>
            <param name="about">The new description</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_EditChatDefaultBannedRights(WTelegram.Client,TL.InputPeer,TL.ChatBannedRights)">
            <summary>Edit the default banned rights of a <a href="https://corefork.telegram.org/api/channel">channel/supergroup/group</a>.		<para>See <a href="https://corefork.telegram.org/method/messages.editChatDefaultBannedRights"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/messages.editChatDefaultBannedRights#possible-errors">details</a>)</para></summary>
            <param name="peer">The peer</param>
            <param name="banned_rights">The new global rights</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetEmojiKeywords(WTelegram.Client,System.String)">
            <summary>Get localized <a href="https://corefork.telegram.org/api/custom-emoji#emoji-keywords">emoji keywords »</a>.		<para>See <a href="https://corefork.telegram.org/method/messages.getEmojiKeywords"/></para></summary>
            <param name="lang_code">Language code</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetEmojiKeywordsDifference(WTelegram.Client,System.String,System.Int32)">
            <summary>Get changed <a href="https://corefork.telegram.org/api/custom-emoji#emoji-keywords">emoji keywords »</a>.		<para>See <a href="https://corefork.telegram.org/method/messages.getEmojiKeywordsDifference"/></para></summary>
            <param name="lang_code">Language code</param>
            <param name="from_version">Previous stored emoji keyword list <c>version</c></param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetEmojiKeywordsLanguages(WTelegram.Client,System.String[])">
            <summary>Obtain a list of related languages that must be used when fetching <a href="https://corefork.telegram.org/api/custom-emoji#emoji-keywords">emoji keyword lists »</a>.		<para>See <a href="https://corefork.telegram.org/method/messages.getEmojiKeywordsLanguages"/></para></summary>
            <param name="lang_codes">The user's language codes</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetEmojiURL(WTelegram.Client,System.String)">
            <summary>Returns an HTTP URL which can be used to automatically log in into translation platform and suggest new <a href="https://corefork.telegram.org/api/custom-emoji#emoji-keywords">emoji keywords »</a>. The URL will be valid for 30 seconds after generation.		<para>See <a href="https://corefork.telegram.org/method/messages.getEmojiURL"/></para></summary>
            <param name="lang_code">Language code for which the emoji keywords will be suggested</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetSearchCounters(WTelegram.Client,TL.InputPeer,TL.MessagesFilter[],System.Nullable{System.Int32},TL.InputPeer)">
            <summary>Get the number of results that would be found by a <see cref="M:TL.SchemaExtensions.Messages_Search(WTelegram.Client,TL.InputPeer,System.String,TL.MessagesFilter,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int64,TL.InputPeer,System.Nullable{System.Int32},TL.InputPeer,TL.Reaction[])">Messages_Search</see> call with the same parameters		<para>See <a href="https://corefork.telegram.org/method/messages.getSearchCounters"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.getSearchCounters#possible-errors">details</a>)</para></summary>
            <param name="peer">Peer where to search</param>
            <param name="saved_peer_id">Search within the <a href="https://corefork.telegram.org/api/saved-messages">saved message dialog »</a> with this ID.</param>
            <param name="top_msg_id">If set, consider only messages within the specified <a href="https://corefork.telegram.org/api/forum#forum-topics">forum topic</a></param>
            <param name="filters">Search filters</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_RequestUrlAuth(WTelegram.Client,TL.InputPeer,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>Get more info about a Seamless Telegram Login authorization request, for more info <a href="https://corefork.telegram.org/api/url-authorization">click here »</a>		<para>See <a href="https://corefork.telegram.org/method/messages.requestUrlAuth"/></para></summary>
            <param name="peer">Peer where the message is located</param>
            <param name="msg_id">The message</param>
            <param name="button_id">The ID of the button with the authorization request</param>
            <param name="url">URL used for <a href="https://corefork.telegram.org/api/url-authorization#link-url-authorization">link URL authorization, click here for more info »</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/urlAuthResultDefault">urlAuthResultDefault</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_AcceptUrlAuth(WTelegram.Client,TL.InputPeer,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Boolean)">
            <summary>Use this to accept a Seamless Telegram Login authorization request, for more info <a href="https://corefork.telegram.org/api/url-authorization">click here »</a>		<para>See <a href="https://corefork.telegram.org/method/messages.acceptUrlAuth"/></para></summary>
            <param name="write_allowed">Set this flag to allow the bot to send messages to you (if requested)</param>
            <param name="peer">The location of the message</param>
            <param name="msg_id">Message ID of the message with the login button</param>
            <param name="button_id">ID of the login button</param>
            <param name="url">URL used for <a href="https://corefork.telegram.org/api/url-authorization#link-url-authorization">link URL authorization, click here for more info »</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/urlAuthResultDefault">urlAuthResultDefault</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_HidePeerSettingsBar(WTelegram.Client,TL.InputPeer)">
            <summary>Should be called after the user hides the <a href="https://corefork.telegram.org/api/action-bar">report spam/add as contact bar</a> of a new chat, effectively prevents the user from executing the actions specified in the <a href="https://corefork.telegram.org/api/action-bar">action bar »</a>.		<para>See <a href="https://corefork.telegram.org/method/messages.hidePeerSettingsBar"/></para></summary>
            <param name="peer">Peer</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetScheduledHistory(WTelegram.Client,TL.InputPeer,System.Int64)">
            <summary>Get scheduled messages		<para>See <a href="https://corefork.telegram.org/method/messages.getScheduledHistory"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.getScheduledHistory#possible-errors">details</a>)</para></summary>
            <param name="peer">Peer</param>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetScheduledMessages(WTelegram.Client,TL.InputPeer,System.Int32[])">
            <summary>Get scheduled messages		<para>See <a href="https://corefork.telegram.org/method/messages.getScheduledMessages"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.getScheduledMessages#possible-errors">details</a>)</para></summary>
            <param name="peer">Peer</param>
            <param name="id">IDs of scheduled messages</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SendScheduledMessages(WTelegram.Client,TL.InputPeer,System.Int32[])">
            <summary>Send scheduled messages right away		<para>See <a href="https://corefork.telegram.org/method/messages.sendScheduledMessages"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.sendScheduledMessages#possible-errors">details</a>)</para></summary>
            <param name="peer">Peer</param>
            <param name="id">Scheduled message IDs</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_DeleteScheduledMessages(WTelegram.Client,TL.InputPeer,System.Int32[])">
            <summary>Delete scheduled messages		<para>See <a href="https://corefork.telegram.org/method/messages.deleteScheduledMessages"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.deleteScheduledMessages#possible-errors">details</a>)</para></summary>
            <param name="peer">Peer</param>
            <param name="id">Scheduled message IDs</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetPollVotes(WTelegram.Client,TL.InputPeer,System.Int32,System.Int32,System.Byte[],System.String)">
            <summary>Get poll results for non-anonymous polls		<para>See <a href="https://corefork.telegram.org/method/messages.getPollVotes"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/messages.getPollVotes#possible-errors">details</a>)</para></summary>
            <param name="peer">Chat where the poll was sent</param>
            <param name="id">Message ID</param>
            <param name="option">Get only results for the specified poll <c>option</c></param>
            <param name="offset">Offset for results, taken from the <c>next_offset</c> field of <see cref="T:TL.Messages_VotesList"/>, initially an empty string. <br/>Note: if no more results are available, the method call will return an empty <c>next_offset</c>; thus, avoid providing the <c>next_offset</c> returned in <see cref="T:TL.Messages_VotesList"/> if it is empty, to avoid an infinite loop.</param>
            <param name="limit">Number of results to return</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_ToggleStickerSets(WTelegram.Client,TL.InputStickerSet[],System.Boolean,System.Boolean,System.Boolean)">
            <summary>Apply changes to multiple stickersets		<para>See <a href="https://corefork.telegram.org/method/messages.toggleStickerSets"/></para></summary>
            <param name="uninstall">Uninstall the specified stickersets</param>
            <param name="archive">Archive the specified stickersets</param>
            <param name="unarchive">Unarchive the specified stickersets</param>
            <param name="stickersets">Stickersets to act upon</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetDialogFilters(WTelegram.Client)">
            <summary>Get <a href="https://corefork.telegram.org/api/folders">folders</a>		<para>See <a href="https://corefork.telegram.org/method/messages.getDialogFilters"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetSuggestedDialogFilters(WTelegram.Client)">
            <summary>Get <a href="https://corefork.telegram.org/api/folders">suggested folders</a>		<para>See <a href="https://corefork.telegram.org/method/messages.getSuggestedDialogFilters"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_UpdateDialogFilter(WTelegram.Client,System.Int32,TL.DialogFilterBase)">
            <summary>Update <a href="https://corefork.telegram.org/api/folders">folder</a>		<para>See <a href="https://corefork.telegram.org/method/messages.updateDialogFilter"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.updateDialogFilter#possible-errors">details</a>)</para></summary>
            <param name="id"><a href="https://corefork.telegram.org/api/folders">Folder</a> ID</param>
            <param name="filter"><a href="https://corefork.telegram.org/api/folders">Folder</a> info</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_UpdateDialogFiltersOrder(WTelegram.Client,System.Int32[])">
            <summary>Reorder <a href="https://corefork.telegram.org/api/folders">folders</a>		<para>See <a href="https://corefork.telegram.org/method/messages.updateDialogFiltersOrder"/></para></summary>
            <param name="order">New <a href="https://corefork.telegram.org/api/folders">folder</a> order</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetOldFeaturedStickers(WTelegram.Client,System.Int32,System.Int32,System.Int64)">
            <summary>Method for fetching previously featured stickers		<para>See <a href="https://corefork.telegram.org/method/messages.getOldFeaturedStickers"/></para></summary>
            <param name="offset">Offset</param>
            <param name="limit">Maximum number of results to return, <a href="https://corefork.telegram.org/api/offsets">see pagination</a></param>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetReplies(WTelegram.Client,TL.InputPeer,System.Int32,System.Int32,System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Int64)">
            <summary>Get messages in a reply thread		<para>See <a href="https://corefork.telegram.org/method/messages.getReplies"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.getReplies#possible-errors">details</a>)</para></summary>
            <param name="peer">Peer</param>
            <param name="msg_id">Message ID</param>
            <param name="offset_id"><a href="https://corefork.telegram.org/api/offsets">Offsets for pagination, for more info click here</a></param>
            <param name="offset_date"><a href="https://corefork.telegram.org/api/offsets">Offsets for pagination, for more info click here</a></param>
            <param name="add_offset"><a href="https://corefork.telegram.org/api/offsets">Offsets for pagination, for more info click here</a></param>
            <param name="limit">Maximum number of results to return, <a href="https://corefork.telegram.org/api/offsets">see pagination</a></param>
            <param name="max_id">If a positive value was transferred, the method will return only messages with ID smaller than max_id</param>
            <param name="min_id">If a positive value was transferred, the method will return only messages with ID bigger than min_id</param>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetDiscussionMessage(WTelegram.Client,TL.InputPeer,System.Int32)">
            <summary>Get <a href="https://corefork.telegram.org/api/threads">discussion message</a> from the <a href="https://corefork.telegram.org/api/discussion">associated discussion group</a> of a channel to show it on top of the comment section, without actually joining the group		<para>See <a href="https://corefork.telegram.org/method/messages.getDiscussionMessage"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.getDiscussionMessage#possible-errors">details</a>)</para></summary>
            <param name="peer"><a href="https://corefork.telegram.org/api/channel">Channel ID</a></param>
            <param name="msg_id">Message ID</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_ReadDiscussion(WTelegram.Client,TL.InputPeer,System.Int32,System.Int32)">
            <summary>Mark a <a href="https://corefork.telegram.org/api/threads">thread</a> as read		<para>See <a href="https://corefork.telegram.org/method/messages.readDiscussion"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.readDiscussion#possible-errors">details</a>)</para></summary>
            <param name="peer">Group ID</param>
            <param name="msg_id">ID of message that started the thread</param>
            <param name="read_max_id">ID up to which thread messages were read</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_UnpinAllMessages(WTelegram.Client,TL.InputPeer,System.Nullable{System.Int32})">
            <summary><a href="https://corefork.telegram.org/api/pin">Unpin</a> all pinned messages		<para>See <a href="https://corefork.telegram.org/method/messages.unpinAllMessages"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.unpinAllMessages#possible-errors">details</a>)</para></summary>
            <param name="peer">Chat where to unpin</param>
            <param name="top_msg_id"><a href="https://corefork.telegram.org/api/forum#forum-topics">Forum topic</a> where to unpin</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_DeleteChat(WTelegram.Client,System.Int64)">
            <summary><para>⚠ <b>This method is only for basic Chat</b>. See <see href="https://wiz0u.github.io/WTelegramClient/#terminology">Terminology</see> in the README to understand what this means<br/>Search for a similar method name starting with <c>Channels_</c> if you're dealing with a <see cref="T:TL.Channel"/></para>		Delete a <a href="https://corefork.telegram.org/api/channel">chat</a>		<para>See <a href="https://corefork.telegram.org/method/messages.deleteChat"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.deleteChat#possible-errors">details</a>)</para></summary>
            <param name="chat_id">Chat ID</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_DeletePhoneCallHistory(WTelegram.Client,System.Boolean)">
            <summary>Delete the entire phone call history.		<para>See <a href="https://corefork.telegram.org/method/messages.deletePhoneCallHistory"/></para></summary>
            <param name="revoke">Whether to remove phone call history for participants as well</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_CheckHistoryImport(WTelegram.Client,System.String)">
            <summary>Obtains information about a chat export file, generated by a foreign chat app, <a href="https://corefork.telegram.org/api/import">click here for more info about imported chats »</a>.		<para>See <a href="https://corefork.telegram.org/method/messages.checkHistoryImport"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.checkHistoryImport#possible-errors">details</a>)</para></summary>
            <param name="import_head">Beginning of the message file; up to 100 lines.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_InitHistoryImport(WTelegram.Client,TL.InputPeer,TL.InputFileBase,System.Int32)">
            <summary>Import chat history from a foreign chat app into a specific Telegram chat, <a href="https://corefork.telegram.org/api/import">click here for more info about imported chats »</a>.		<para>See <a href="https://corefork.telegram.org/method/messages.initHistoryImport"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,406 (<a href="https://corefork.telegram.org/method/messages.initHistoryImport#possible-errors">details</a>)</para></summary>
            <param name="peer">The Telegram chat where the <a href="https://corefork.telegram.org/api/import">history should be imported</a>.</param>
            <param name="file">File with messages to import.</param>
            <param name="media_count">Number of media files associated with the chat that will be uploaded using <see cref="M:TL.SchemaExtensions.Messages_UploadImportedMedia(WTelegram.Client,TL.InputPeer,System.Int64,System.String,TL.InputMedia)">Messages_UploadImportedMedia</see>.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_UploadImportedMedia(WTelegram.Client,TL.InputPeer,System.Int64,System.String,TL.InputMedia)">
            <summary>Upload a media file associated with an <a href="https://corefork.telegram.org/api/import">imported chat, click here for more info »</a>.		<para>See <a href="https://corefork.telegram.org/method/messages.uploadImportedMedia"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.uploadImportedMedia#possible-errors">details</a>)</para></summary>
            <param name="peer">The Telegram chat where the media will be imported</param>
            <param name="import_id">Identifier of a <a href="https://corefork.telegram.org/api/import">history import session</a>, returned by <see cref="M:TL.SchemaExtensions.Messages_InitHistoryImport(WTelegram.Client,TL.InputPeer,TL.InputFileBase,System.Int32)">Messages_InitHistoryImport</see></param>
            <param name="file_name">File name</param>
            <param name="media">Media metadata</param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/messageMediaEmpty">messageMediaEmpty</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_StartHistoryImport(WTelegram.Client,TL.InputPeer,System.Int64)">
            <summary>Complete the <a href="https://corefork.telegram.org/api/import">history import process</a>, importing all messages into the chat.<br/>To be called only after initializing the import with <see cref="M:TL.SchemaExtensions.Messages_InitHistoryImport(WTelegram.Client,TL.InputPeer,TL.InputFileBase,System.Int32)">Messages_InitHistoryImport</see> and uploading all files using <see cref="M:TL.SchemaExtensions.Messages_UploadImportedMedia(WTelegram.Client,TL.InputPeer,System.Int64,System.String,TL.InputMedia)">Messages_UploadImportedMedia</see>.		<para>See <a href="https://corefork.telegram.org/method/messages.startHistoryImport"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.startHistoryImport#possible-errors">details</a>)</para></summary>
            <param name="peer">The Telegram chat where the messages should be <a href="https://corefork.telegram.org/api/import">imported, click here for more info »</a></param>
            <param name="import_id">Identifier of a history import session, returned by <see cref="M:TL.SchemaExtensions.Messages_InitHistoryImport(WTelegram.Client,TL.InputPeer,TL.InputFileBase,System.Int32)">Messages_InitHistoryImport</see>.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetExportedChatInvites(WTelegram.Client,TL.InputPeer,TL.InputUserBase,System.Int32,System.Nullable{System.DateTime},System.String,System.Boolean)">
            <summary>Get info about the chat invites of a specific chat		<para>See <a href="https://corefork.telegram.org/method/messages.getExportedChatInvites"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/messages.getExportedChatInvites#possible-errors">details</a>)</para></summary>
            <param name="revoked">Whether to fetch revoked chat invites</param>
            <param name="peer">Chat</param>
            <param name="admin_id">Whether to only fetch chat invites from this admin</param>
            <param name="offset_date"><a href="https://corefork.telegram.org/api/offsets">Offsets for pagination, for more info click here</a></param>
            <param name="offset_link"><a href="https://corefork.telegram.org/api/offsets">Offsets for pagination, for more info click here</a></param>
            <param name="limit">Maximum number of results to return, <a href="https://corefork.telegram.org/api/offsets">see pagination</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetExportedChatInvite(WTelegram.Client,TL.InputPeer,System.String)">
            <summary>Get info about a chat invite		<para>See <a href="https://corefork.telegram.org/method/messages.getExportedChatInvite"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/messages.getExportedChatInvite#possible-errors">details</a>)</para></summary>
            <param name="peer">Chat</param>
            <param name="link">Invite link</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_EditExportedChatInvite(WTelegram.Client,TL.InputPeer,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.Boolean)">
            <summary>Edit an exported chat invite		<para>See <a href="https://corefork.telegram.org/method/messages.editExportedChatInvite"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/messages.editExportedChatInvite#possible-errors">details</a>)</para></summary>
            <param name="revoked">Whether to revoke the chat invite</param>
            <param name="peer">Chat</param>
            <param name="link">Invite link</param>
            <param name="expire_date">New expiration date</param>
            <param name="usage_limit">Maximum number of users that can join using this link</param>
            <param name="request_needed">Whether admin confirmation is required before admitting each separate user into the chat</param>
            <param name="title">Description of the invite link, visible only to administrators</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_DeleteRevokedExportedChatInvites(WTelegram.Client,TL.InputPeer,TL.InputUserBase)">
            <summary>Delete all revoked chat invites		<para>See <a href="https://corefork.telegram.org/method/messages.deleteRevokedExportedChatInvites"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.deleteRevokedExportedChatInvites#possible-errors">details</a>)</para></summary>
            <param name="peer">Chat</param>
            <param name="admin_id">ID of the admin that originally generated the revoked chat invites</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_DeleteExportedChatInvite(WTelegram.Client,TL.InputPeer,System.String)">
            <summary>Delete a chat invite		<para>See <a href="https://corefork.telegram.org/method/messages.deleteExportedChatInvite"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.deleteExportedChatInvite#possible-errors">details</a>)</para></summary>
            <param name="peer">Peer</param>
            <param name="link">Invite link</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetAdminsWithInvites(WTelegram.Client,TL.InputPeer)">
            <summary>Get info about chat invites generated by admins.		<para>See <a href="https://corefork.telegram.org/method/messages.getAdminsWithInvites"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/messages.getAdminsWithInvites#possible-errors">details</a>)</para></summary>
            <param name="peer">Chat</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetChatInviteImporters(WTelegram.Client,TL.InputPeer,System.DateTime,TL.InputUserBase,System.Int32,System.String,System.String,System.Boolean)">
            <summary>Get info about the users that joined the chat using a specific chat invite		<para>See <a href="https://corefork.telegram.org/method/messages.getChatInviteImporters"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/messages.getChatInviteImporters#possible-errors">details</a>)</para></summary>
            <param name="requested">If set, only returns info about users with pending <a href="https://corefork.telegram.org/api/invites#join-requests">join requests »</a></param>
            <param name="peer">Chat</param>
            <param name="link">Invite link</param>
            <param name="q">Search for a user in the pending <a href="https://corefork.telegram.org/api/invites#join-requests">join requests »</a> list: only available when the <c>requested</c> flag is set, cannot be used together with a specific <c>link</c>.</param>
            <param name="offset_date"><a href="https://corefork.telegram.org/api/offsets">Offsets for pagination, for more info click here</a></param>
            <param name="offset_user">User ID for <a href="https://corefork.telegram.org/api/offsets">pagination</a>: if set, <c>offset_date</c> must also be set.</param>
            <param name="limit">Maximum number of results to return, <a href="https://corefork.telegram.org/api/offsets">see pagination</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SetHistoryTTL(WTelegram.Client,TL.InputPeer,System.Int32)">
            <summary>Set maximum Time-To-Live of all messages in the specified chat		<para>See <a href="https://corefork.telegram.org/method/messages.setHistoryTTL"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.setHistoryTTL#possible-errors">details</a>)</para></summary>
            <param name="peer">The dialog</param>
            <param name="period">Automatically delete all messages sent in the chat after this many seconds</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_CheckHistoryImportPeer(WTelegram.Client,TL.InputPeer)">
            <summary>Check whether chat history exported from another chat app can be <a href="https://corefork.telegram.org/api/import">imported into a specific Telegram chat, click here for more info »</a>.		<para>See <a href="https://corefork.telegram.org/method/messages.checkHistoryImportPeer"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.checkHistoryImportPeer#possible-errors">details</a>)</para></summary>
            <param name="peer">The chat where we want to <a href="https://corefork.telegram.org/api/import">import history »</a>.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SetChatTheme(WTelegram.Client,TL.InputPeer,System.String)">
            <summary>Change the chat theme of a certain chat		<para>See <a href="https://corefork.telegram.org/method/messages.setChatTheme"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.setChatTheme#possible-errors">details</a>)</para></summary>
            <param name="peer">Private chat where to change theme</param>
            <param name="emoticon">Emoji, identifying a specific chat theme; a list of chat themes can be fetched using <see cref="M:TL.SchemaExtensions.Account_GetChatThemes(WTelegram.Client,System.Int64)">Account_GetChatThemes</see></param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetMessageReadParticipants(WTelegram.Client,TL.InputPeer,System.Int32)">
            <summary>Get which users read a specific message: only available for groups and supergroups with less than <a href="https://corefork.telegram.org/api/config#chat-read-mark-size-threshold"><c>chat_read_mark_size_threshold</c> members</a>, read receipts will be stored for <a href="https://corefork.telegram.org/api/config#chat-read-mark-expire-period"><c>chat_read_mark_expire_period</c> seconds after the message was sent</a>, see <a href="https://corefork.telegram.org/api/config#client-configuration">client configuration for more info »</a>.		<para>See <a href="https://corefork.telegram.org/method/messages.getMessageReadParticipants"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.getMessageReadParticipants#possible-errors">details</a>)</para></summary>
            <param name="peer">Dialog</param>
            <param name="msg_id">Message ID</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetSearchResultsCalendar(WTelegram.Client,TL.InputPeer,TL.MessagesFilter,System.Int32,System.DateTime,TL.InputPeer)">
            <summary>Returns information about the next messages of the specified type in the chat split by days.		<para>See <a href="https://corefork.telegram.org/method/messages.getSearchResultsCalendar"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.getSearchResultsCalendar#possible-errors">details</a>)</para></summary>
            <param name="peer">Peer where to search</param>
            <param name="saved_peer_id">Search within the <a href="https://corefork.telegram.org/api/saved-messages">saved message dialog »</a> with this ID.</param>
            <param name="filter">Message filter, <see langword="null"/>, <see cref="T:TL.InputMessagesFilterMyMentions"/> filters are not supported by this method.</param>
            <param name="offset_id"><a href="https://corefork.telegram.org/api/offsets">Offsets for pagination, for more info click here</a></param>
            <param name="offset_date"><a href="https://corefork.telegram.org/api/offsets">Offsets for pagination, for more info click here</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetSearchResultsPositions(WTelegram.Client,TL.InputPeer,TL.MessagesFilter,System.Int32,System.Int32,TL.InputPeer)">
            <summary>Returns sparse positions of messages of the specified type in the chat to be used for shared media scroll implementation.		<para>See <a href="https://corefork.telegram.org/method/messages.getSearchResultsPositions"/></para></summary>
            <param name="peer">Peer where to search</param>
            <param name="saved_peer_id">Search within the <a href="https://corefork.telegram.org/api/saved-messages">saved message dialog »</a> with this ID.</param>
            <param name="filter">Message filter, <see langword="null"/>, <see cref="T:TL.InputMessagesFilterMyMentions"/> filters are not supported by this method.</param>
            <param name="offset_id"><a href="https://corefork.telegram.org/api/offsets">Offsets for pagination, for more info click here</a></param>
            <param name="limit">Maximum number of results to return, <a href="https://corefork.telegram.org/api/offsets">see pagination</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_HideChatJoinRequest(WTelegram.Client,TL.InputPeer,TL.InputUserBase,System.Boolean)">
            <summary>Dismiss or approve a chat <a href="https://corefork.telegram.org/api/invites#join-requests">join request</a> related to a specific chat or channel.		<para>See <a href="https://corefork.telegram.org/method/messages.hideChatJoinRequest"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/messages.hideChatJoinRequest#possible-errors">details</a>)</para></summary>
            <param name="approved">Whether to dismiss or approve the chat <a href="https://corefork.telegram.org/api/invites#join-requests">join request »</a></param>
            <param name="peer">The chat or channel</param>
            <param name="user_id">The user whose <a href="https://corefork.telegram.org/api/invites#join-requests">join request »</a> should be dismissed or approved</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_HideAllChatJoinRequests(WTelegram.Client,TL.InputPeer,System.String,System.Boolean)">
            <summary>Dismiss or approve all <a href="https://corefork.telegram.org/api/invites#join-requests">join requests</a> related to a specific chat or channel.		<para>See <a href="https://corefork.telegram.org/method/messages.hideAllChatJoinRequests"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/messages.hideAllChatJoinRequests#possible-errors">details</a>)</para></summary>
            <param name="approved">Whether to dismiss or approve all chat <a href="https://corefork.telegram.org/api/invites#join-requests">join requests »</a></param>
            <param name="peer">The chat or channel</param>
            <param name="link">Only dismiss or approve <a href="https://corefork.telegram.org/api/invites#join-requests">join requests »</a> initiated using this invite link</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_ToggleNoForwards(WTelegram.Client,TL.InputPeer,System.Boolean)">
            <summary>Enable or disable <a href="https://telegram.org/blog/protected-content-delete-by-date-and-more">content protection</a> on a channel or chat		<para>See <a href="https://corefork.telegram.org/method/messages.toggleNoForwards"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.toggleNoForwards#possible-errors">details</a>)</para></summary>
            <param name="peer">The chat or channel</param>
            <param name="enabled">Enable or disable content protection</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SaveDefaultSendAs(WTelegram.Client,TL.InputPeer,TL.InputPeer)">
            <summary>Change the default peer that should be used when sending messages, reactions, poll votes to a specific group		<para>See <a href="https://corefork.telegram.org/method/messages.saveDefaultSendAs"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.saveDefaultSendAs#possible-errors">details</a>)</para></summary>
            <param name="peer">Group</param>
            <param name="send_as">The default peer that should be used when sending messages to the group</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SendReaction(WTelegram.Client,TL.InputPeer,System.Int32,TL.Reaction[],System.Boolean,System.Boolean)">
            <summary>React to message.		<para>See <a href="https://corefork.telegram.org/method/messages.sendReaction"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/messages.sendReaction#possible-errors">details</a>)</para></summary>
            <param name="big">Whether a bigger and longer reaction should be shown</param>
            <param name="add_to_recent">Whether to add this reaction to the <a href="https://corefork.telegram.org/api/reactions#recent-reactions">recent reactions list »</a>.</param>
            <param name="peer">Peer</param>
            <param name="msg_id">Message ID to react to</param>
            <param name="reaction">A list of reactions</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetMessagesReactions(WTelegram.Client,TL.InputPeer,System.Int32[])">
            <summary>Get <a href="https://corefork.telegram.org/api/reactions">message reactions »</a>		<para>See <a href="https://corefork.telegram.org/method/messages.getMessagesReactions"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.getMessagesReactions#possible-errors">details</a>)</para></summary>
            <param name="peer">Peer</param>
            <param name="id">Message IDs</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetMessageReactionsList(WTelegram.Client,TL.InputPeer,System.Int32,System.Int32,TL.Reaction,System.String)">
            <summary>Get <a href="https://corefork.telegram.org/api/reactions">message reaction</a> list, along with the sender of each reaction.		<para>See <a href="https://corefork.telegram.org/method/messages.getMessageReactionsList"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/messages.getMessageReactionsList#possible-errors">details</a>)</para></summary>
            <param name="peer">Peer</param>
            <param name="id">Message ID</param>
            <param name="reaction">Get only reactions of this type</param>
            <param name="offset">Offset for pagination (taken from the <c>next_offset</c> field of the returned <see cref="T:TL.Messages_MessageReactionsList"/>); empty in the first request.</param>
            <param name="limit">Maximum number of results to return, <a href="https://corefork.telegram.org/api/offsets">see pagination</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SetChatAvailableReactions(WTelegram.Client,TL.InputPeer,TL.ChatReactions,System.Nullable{System.Int32})">
            <summary>Change the set of <a href="https://corefork.telegram.org/api/reactions">message reactions »</a> that can be used in a certain group, supergroup or channel		<para>See <a href="https://corefork.telegram.org/method/messages.setChatAvailableReactions"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.setChatAvailableReactions#possible-errors">details</a>)</para></summary>
            <param name="peer">Group where to apply changes</param>
            <param name="available_reactions">Allowed reaction emojis</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetAvailableReactions(WTelegram.Client,System.Int32)">
            <summary>Obtain available <a href="https://corefork.telegram.org/api/reactions">message reactions »</a>		<para>See <a href="https://corefork.telegram.org/method/messages.getAvailableReactions"/></para></summary>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/messages.availableReactionsNotModified">messages.availableReactionsNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SetDefaultReaction(WTelegram.Client,TL.Reaction)">
            <summary>Change default emoji reaction to use in the quick reaction menu: the value is synced across devices and can be fetched using <see cref="M:TL.SchemaExtensions.Help_GetConfig(WTelegram.Client)">Help_GetConfig</see>.		<para>See <a href="https://corefork.telegram.org/method/messages.setDefaultReaction"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.setDefaultReaction#possible-errors">details</a>)</para></summary>
            <param name="reaction">New emoji reaction</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_TranslateText(WTelegram.Client,System.String,TL.InputPeer,System.Int32[],TL.TextWithEntities[])">
            <summary>Translate a given text.		<para>See <a href="https://corefork.telegram.org/method/messages.translateText"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.translateText#possible-errors">details</a>)</para></summary>
            <param name="peer">If the text is a chat message, the peer ID</param>
            <param name="id">A list of message IDs to translate</param>
            <param name="text">A list of styled messages to translate</param>
            <param name="to_lang">Two-letter ISO 639-1 language code of the language to which the message is translated</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetUnreadReactions(WTelegram.Client,TL.InputPeer,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>Get unread reactions to messages you sent		<para>See <a href="https://corefork.telegram.org/method/messages.getUnreadReactions"/></para></summary>
            <param name="peer">Peer</param>
            <param name="top_msg_id">If set, considers only reactions to messages within the specified <a href="https://corefork.telegram.org/api/forum#forum-topics">forum topic</a></param>
            <param name="offset_id"><a href="https://corefork.telegram.org/api/offsets">Offsets for pagination, for more info click here</a></param>
            <param name="add_offset"><a href="https://corefork.telegram.org/api/offsets">Offsets for pagination, for more info click here</a></param>
            <param name="limit">Maximum number of results to return, <a href="https://corefork.telegram.org/api/offsets">see pagination</a></param>
            <param name="max_id">Only return reactions for messages up until this message ID</param>
            <param name="min_id">Only return reactions for messages starting from this message ID</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_ReadReactions(WTelegram.Client,TL.InputPeer,System.Nullable{System.Int32})">
            <summary>Mark <a href="https://corefork.telegram.org/api/reactions">message reactions »</a> as read		<para>See <a href="https://corefork.telegram.org/method/messages.readReactions"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.readReactions#possible-errors">details</a>)</para></summary>
            <param name="peer">Peer</param>
            <param name="top_msg_id">Mark as read only reactions to messages within the specified <a href="https://corefork.telegram.org/api/forum#forum-topics">forum topic</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SearchSentMedia(WTelegram.Client,System.String,TL.MessagesFilter,System.Int32)">
            <summary>View and search recently sent media.<br/>This method does not support pagination.		<para>See <a href="https://corefork.telegram.org/method/messages.searchSentMedia"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.searchSentMedia#possible-errors">details</a>)</para></summary>
            <param name="q">Optional search query</param>
            <param name="filter">Message filter</param>
            <param name="limit">Maximum number of results to return (max 100).</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetAttachMenuBots(WTelegram.Client,System.Int64)">
            <summary>Returns installed attachment menu <a href="https://corefork.telegram.org/api/bots/attach">bot mini apps »</a>		<para>See <a href="https://corefork.telegram.org/method/messages.getAttachMenuBots"/></para></summary>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/attachMenuBotsNotModified">attachMenuBotsNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetAttachMenuBot(WTelegram.Client,TL.InputUserBase)">
            <summary>Returns attachment menu entry for a <a href="https://corefork.telegram.org/api/bots/attach">bot mini app that can be launched from the attachment menu »</a>		<para>See <a href="https://corefork.telegram.org/method/messages.getAttachMenuBot"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.getAttachMenuBot#possible-errors">details</a>)</para></summary>
            <param name="bot">Bot ID</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_ToggleBotInAttachMenu(WTelegram.Client,TL.InputUserBase,System.Boolean,System.Boolean)">
            <summary>Enable or disable <a href="https://corefork.telegram.org/api/bots/attach">web bot attachment menu »</a>		<para>See <a href="https://corefork.telegram.org/method/messages.toggleBotInAttachMenu"/></para></summary>
            <param name="write_allowed">Whether the user authorizes the bot to write messages to them, if requested by <see cref="T:TL.AttachMenuBot"/>.<c>request_write_access</c></param>
            <param name="bot">Bot ID</param>
            <param name="enabled">Toggle</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_RequestWebView(WTelegram.Client,TL.InputPeer,TL.InputUserBase,System.String,TL.InputReplyTo,System.String,TL.DataJSON,System.String,TL.InputPeer,System.Boolean,System.Boolean)">
            <summary>Open a <a href="https://corefork.telegram.org/bots/webapps">bot mini app</a>, sending over user information after user confirmation.		<para>See <a href="https://corefork.telegram.org/method/messages.requestWebView"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.requestWebView#possible-errors">details</a>)</para></summary>
            <param name="from_bot_menu">Whether the webview was opened by clicking on the bot's <a href="https://corefork.telegram.org/api/bots/menu">menu button »</a>.</param>
            <param name="silent">Whether the inline message that will be sent by the bot on behalf of the user once the web app interaction is <see cref="M:TL.SchemaExtensions.Messages_SendWebViewResultMessage(WTelegram.Client,System.String,TL.InputBotInlineResultBase)">Messages_SendWebViewResultMessage</see> should be sent silently (no notifications for the receivers).</param>
            <param name="peer">Dialog where the web app is being opened, and where the resulting message will be sent (see the <a href="https://corefork.telegram.org/api/bots/webapps">docs for more info »</a>).</param>
            <param name="bot">Bot that owns the <a href="https://corefork.telegram.org/api/bots/webapps">web app</a></param>
            <param name="url"><a href="https://corefork.telegram.org/api/bots/webapps">Web app URL</a></param>
            <param name="start_param">If the web app was opened from the attachment menu using a <a href="https://corefork.telegram.org/api/links#bot-attachment-or-side-menu-links">attachment menu deep link</a>, <c>start_param</c> should contain the <c>data</c> from the <c>startattach</c> parameter.</param>
            <param name="theme_params"><a href="https://corefork.telegram.org/api/bots/webapps#theme-parameters">Theme parameters »</a></param>
            <param name="platform">Short name of the application; 0-64 English letters, digits, and underscores</param>
            <param name="reply_to">If set, indicates that the inline message that will be sent by the bot on behalf of the user once the web app interaction is <see cref="M:TL.SchemaExtensions.Messages_SendWebViewResultMessage(WTelegram.Client,System.String,TL.InputBotInlineResultBase)">Messages_SendWebViewResultMessage</see> should be sent in reply to the specified message or story.</param>
            <param name="send_as">Open the web app as the specified peer, sending the resulting the message as the specified peer.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_ProlongWebView(WTelegram.Client,TL.InputPeer,TL.InputUserBase,System.Int64,TL.InputReplyTo,TL.InputPeer,System.Boolean)">
            <summary>Indicate to the server (from the user side) that the user is still using a web app.		<para>See <a href="https://corefork.telegram.org/method/messages.prolongWebView"/></para></summary>
            <param name="silent">Whether the inline message that will be sent by the bot on behalf of the user once the web app interaction is <see cref="M:TL.SchemaExtensions.Messages_SendWebViewResultMessage(WTelegram.Client,System.String,TL.InputBotInlineResultBase)">Messages_SendWebViewResultMessage</see> should be sent silently (no notifications for the receivers).</param>
            <param name="peer">Dialog where the web app was opened.</param>
            <param name="bot">Bot that owns the <a href="https://corefork.telegram.org/api/bots/webapps">web app</a></param>
            <param name="query_id">Web app interaction ID obtained from <see cref="M:TL.SchemaExtensions.Messages_RequestWebView(WTelegram.Client,TL.InputPeer,TL.InputUserBase,System.String,TL.InputReplyTo,System.String,TL.DataJSON,System.String,TL.InputPeer,System.Boolean,System.Boolean)">Messages_RequestWebView</see></param>
            <param name="reply_to">If set, indicates that the inline message that will be sent by the bot on behalf of the user once the web app interaction is <see cref="M:TL.SchemaExtensions.Messages_SendWebViewResultMessage(WTelegram.Client,System.String,TL.InputBotInlineResultBase)">Messages_SendWebViewResultMessage</see> should be sent in reply to the specified message or story.</param>
            <param name="send_as">Open the web app as the specified peer</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_RequestSimpleWebView(WTelegram.Client,TL.InputUserBase,System.String,TL.DataJSON,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>Open a <a href="https://corefork.telegram.org/api/bots/webapps">bot mini app</a>.		<para>See <a href="https://corefork.telegram.org/method/messages.requestSimpleWebView"/></para></summary>
            <param name="from_switch_webview">Whether the webapp was opened by clicking on the <c>switch_webview</c> button shown on top of the inline results list returned by <see cref="M:TL.SchemaExtensions.Messages_GetInlineBotResults(WTelegram.Client,TL.InputUserBase,TL.InputPeer,System.String,System.String,TL.InputGeoPoint)">Messages_GetInlineBotResults</see>.</param>
            <param name="from_side_menu">Set this flag if opening the Mini App from the installed <a href="https://corefork.telegram.org/api/bots/attach">side menu entry »</a> or from a <a href="https://corefork.telegram.org/api/links#mini-app-links">Mini App link »</a>.</param>
            <param name="bot">Bot that owns the mini app</param>
            <param name="url">Web app URL, if opening from a keyboard button or inline result</param>
            <param name="start_param">Start parameter, if opening from a <a href="https://corefork.telegram.org/api/links#mini-app-links">Mini App link »</a>.</param>
            <param name="theme_params"><a href="https://corefork.telegram.org/api/bots/webapps#theme-parameters">Theme parameters »</a></param>
            <param name="platform">Short name of the application; 0-64 English letters, digits, and underscores</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SendWebViewResultMessage(WTelegram.Client,System.String,TL.InputBotInlineResultBase)">
            <summary><para>⚠ <b>This method is only for basic Chat</b>. See <see href="https://wiz0u.github.io/WTelegramClient/#terminology">Terminology</see> in the README to understand what this means<br/>Search for a similar method name starting with <c>Channels_</c> if you're dealing with a <see cref="T:TL.Channel"/></para>		Terminate webview interaction started with <see cref="M:TL.SchemaExtensions.Messages_RequestWebView(WTelegram.Client,TL.InputPeer,TL.InputUserBase,System.String,TL.InputReplyTo,System.String,TL.DataJSON,System.String,TL.InputPeer,System.Boolean,System.Boolean)">Messages_RequestWebView</see>, sending the specified message to the chat on behalf of the user.		<para>See <a href="https://corefork.telegram.org/method/messages.sendWebViewResultMessage"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.sendWebViewResultMessage#possible-errors">details</a>)</para></summary>
            <param name="bot_query_id">Webview interaction ID obtained from <see cref="M:TL.SchemaExtensions.Messages_RequestWebView(WTelegram.Client,TL.InputPeer,TL.InputUserBase,System.String,TL.InputReplyTo,System.String,TL.DataJSON,System.String,TL.InputPeer,System.Boolean,System.Boolean)">Messages_RequestWebView</see></param>
            <param name="result">Message to send</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SendWebViewData(WTelegram.Client,TL.InputUserBase,System.Int64,System.String,System.String)">
            <summary>Used by the user to relay data from an opened <a href="https://corefork.telegram.org/api/bots/webapps">reply keyboard bot mini app</a> to the bot that owns it.		<para>See <a href="https://corefork.telegram.org/method/messages.sendWebViewData"/></para></summary>
            <param name="bot">Bot that owns the web app</param>
            <param name="random_id">Unique client message ID to prevent duplicate sending of the same event <para>You can use <see cref="M:WTelegram.Helpers.RandomLong"/></para></param>
            <param name="button_text">Text of the <see cref="T:TL.KeyboardButtonSimpleWebView"/> that was pressed to open the web app.</param>
            <param name="data">Data to relay to the bot, obtained from a <a href="https://corefork.telegram.org/api/web-events#web-app-data-send"><c>web_app_data_send</c> JS event</a>.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_TranscribeAudio(WTelegram.Client,TL.InputPeer,System.Int32)">
            <summary><a href="https://corefork.telegram.org/api/transcribe">Transcribe voice message</a>		<para>See <a href="https://corefork.telegram.org/method/messages.transcribeAudio"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/messages.transcribeAudio#possible-errors">details</a>)</para></summary>
            <param name="peer">Peer ID where the voice message was sent</param>
            <param name="msg_id">Voice message ID</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_RateTranscribedAudio(WTelegram.Client,TL.InputPeer,System.Int32,System.Int64,System.Boolean)">
            <summary>Rate <a href="https://corefork.telegram.org/api/transcribe">transcribed voice message</a>		<para>See <a href="https://corefork.telegram.org/method/messages.rateTranscribedAudio"/></para></summary>
            <param name="peer">Peer where the voice message was sent</param>
            <param name="msg_id">Message ID</param>
            <param name="transcription_id">Transcription ID</param>
            <param name="good">Whether the transcription was correct</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetCustomEmojiDocuments(WTelegram.Client,System.Int64[])">
            <summary>Fetch <a href="https://corefork.telegram.org/api/custom-emoji">custom emoji stickers »</a>.		<para>See <a href="https://corefork.telegram.org/method/messages.getCustomEmojiDocuments"/> [bots: ✓]</para></summary>
            <param name="document_id"><a href="https://corefork.telegram.org/api/custom-emoji">Custom emoji</a> IDs from a <see cref="T:TL.MessageEntityCustomEmoji"/>.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetEmojiStickers(WTelegram.Client,System.Int64)">
            <summary>Gets the list of currently installed <a href="https://corefork.telegram.org/api/custom-emoji">custom emoji stickersets</a>.		<para>See <a href="https://corefork.telegram.org/method/messages.getEmojiStickers"/></para></summary>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/messages.allStickersNotModified">messages.allStickersNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetFeaturedEmojiStickers(WTelegram.Client,System.Int64)">
            <summary>Gets featured custom emoji stickersets.		<para>See <a href="https://corefork.telegram.org/method/messages.getFeaturedEmojiStickers"/></para></summary>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_ReportReaction(WTelegram.Client,TL.InputPeer,System.Int32,TL.InputPeer)">
            <summary>Report a <a href="https://corefork.telegram.org/api/reactions">message reaction</a>		<para>See <a href="https://corefork.telegram.org/method/messages.reportReaction"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.reportReaction#possible-errors">details</a>)</para></summary>
            <param name="peer">Peer where the message was sent</param>
            <param name="id">Message ID</param>
            <param name="reaction_peer">Peer that sent the reaction</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetTopReactions(WTelegram.Client,System.Int32,System.Int64)">
            <summary>Got popular <a href="https://corefork.telegram.org/api/reactions">message reactions</a>		<para>See <a href="https://corefork.telegram.org/method/messages.getTopReactions"/></para></summary>
            <param name="limit">Maximum number of results to return, <a href="https://corefork.telegram.org/api/offsets">see pagination</a></param>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/messages.reactionsNotModified">messages.reactionsNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetRecentReactions(WTelegram.Client,System.Int32,System.Int64)">
            <summary>Get recently used <a href="https://corefork.telegram.org/api/reactions">message reactions</a>		<para>See <a href="https://corefork.telegram.org/method/messages.getRecentReactions"/></para></summary>
            <param name="limit">Maximum number of results to return, <a href="https://corefork.telegram.org/api/offsets">see pagination</a></param>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/messages.reactionsNotModified">messages.reactionsNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_ClearRecentReactions(WTelegram.Client)">
            <summary>Clear recently used <a href="https://corefork.telegram.org/api/reactions">message reactions</a>		<para>See <a href="https://corefork.telegram.org/method/messages.clearRecentReactions"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetExtendedMedia(WTelegram.Client,TL.InputPeer,System.Int32[])">
            <summary>Get information about extended media		<para>See <a href="https://corefork.telegram.org/method/messages.getExtendedMedia"/></para></summary>
            <param name="peer">Peer</param>
            <param name="id">Message IDs</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SetDefaultHistoryTTL(WTelegram.Client,System.Int32)">
            <summary>Changes the default value of the Time-To-Live setting, applied to all new chats.		<para>See <a href="https://corefork.telegram.org/method/messages.setDefaultHistoryTTL"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.setDefaultHistoryTTL#possible-errors">details</a>)</para></summary>
            <param name="period">The new default Time-To-Live of all messages sent in new chats.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetDefaultHistoryTTL(WTelegram.Client)">
            <summary>Gets the default value of the Time-To-Live setting, applied to all new chats.		<para>See <a href="https://corefork.telegram.org/method/messages.getDefaultHistoryTTL"/> [bots: ✓]</para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SendBotRequestedPeer(WTelegram.Client,TL.InputPeer,System.Int32,System.Int32,TL.InputPeer[])">
            <summary>Send one or more chosen peers, as requested by a <see cref="T:TL.KeyboardButtonRequestPeer"/> button.		<para>See <a href="https://corefork.telegram.org/method/messages.sendBotRequestedPeer"/></para></summary>
            <param name="peer">The bot that sent the <see cref="T:TL.KeyboardButtonRequestPeer"/> button.</param>
            <param name="msg_id">ID of the message that contained the reply keyboard with the <see cref="T:TL.KeyboardButtonRequestPeer"/> button.</param>
            <param name="button_id">The <c>button_id</c> field from the <see cref="T:TL.KeyboardButtonRequestPeer"/>.</param>
            <param name="requested_peers">The chosen peers.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetEmojiGroups(WTelegram.Client,System.Int32)">
            <summary>Represents a list of <a href="https://corefork.telegram.org/api/custom-emoji#emoji-categories">emoji categories</a>, to be used when selecting <a href="https://corefork.telegram.org/api/custom-emoji">custom emojis</a>.		<para>See <a href="https://corefork.telegram.org/method/messages.getEmojiGroups"/> [bots: ✓]</para></summary>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/messages.emojiGroupsNotModified">messages.emojiGroupsNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetEmojiStatusGroups(WTelegram.Client,System.Int32)">
            <summary>Represents a list of <a href="https://corefork.telegram.org/api/custom-emoji#emoji-categories">emoji categories</a>, to be used when selecting custom emojis to set as <a href="https://corefork.telegram.org/api">custom emoji status</a>.		<para>See <a href="https://corefork.telegram.org/method/messages.getEmojiStatusGroups"/> [bots: ✓]</para></summary>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/messages.emojiGroupsNotModified">messages.emojiGroupsNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetEmojiProfilePhotoGroups(WTelegram.Client,System.Int32)">
            <summary>Represents a list of <a href="https://corefork.telegram.org/api/custom-emoji#emoji-categories">emoji categories</a>, to be used when selecting custom emojis to set as <a href="https://corefork.telegram.org/api/files#sticker-profile-pictures">profile picture</a>.		<para>See <a href="https://corefork.telegram.org/method/messages.getEmojiProfilePhotoGroups"/> [bots: ✓]</para></summary>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/messages.emojiGroupsNotModified">messages.emojiGroupsNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SearchCustomEmoji(WTelegram.Client,System.String,System.Int64)">
            <summary>Look for <a href="https://corefork.telegram.org/api/custom-emoji">custom emojis</a> associated to a UTF8 emoji		<para>See <a href="https://corefork.telegram.org/method/messages.searchCustomEmoji"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.searchCustomEmoji#possible-errors">details</a>)</para></summary>
            <param name="emoticon">The emoji</param>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/emojiListNotModified">emojiListNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_TogglePeerTranslations(WTelegram.Client,TL.InputPeer,System.Boolean)">
            <summary>Show or hide the <a href="https://corefork.telegram.org/api/translation">real-time chat translation popup</a> for a certain chat		<para>See <a href="https://corefork.telegram.org/method/messages.togglePeerTranslations"/> [bots: ✓]</para></summary>
            <param name="disabled">Whether to disable or enable the real-time chat translation popup</param>
            <param name="peer">The peer</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetBotApp(WTelegram.Client,TL.InputBotApp,System.Int64)">
            <summary>Obtain information about a <a href="https://corefork.telegram.org/api/bots/webapps#direct-link-mini-apps">direct link Mini App</a>		<para>See <a href="https://corefork.telegram.org/method/messages.getBotApp"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.getBotApp#possible-errors">details</a>)</para></summary>
            <param name="app">Bot app information obtained from a <a href="https://corefork.telegram.org/api/links#direct-mini-app-links">Direct Mini App deep link »</a>.</param>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_RequestAppWebView(WTelegram.Client,TL.InputPeer,TL.InputBotApp,System.String,System.String,TL.DataJSON,System.Boolean)">
            <summary>Open a <a href="https://corefork.telegram.org/bots/webapps">bot mini app</a> from a <a href="https://corefork.telegram.org/api/links#direct-mini-app-links">direct Mini App deep link</a>, sending over user information after user confirmation.		<para>See <a href="https://corefork.telegram.org/method/messages.requestAppWebView"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.requestAppWebView#possible-errors">details</a>)</para></summary>
            <param name="write_allowed">Set this flag if the bot is asking permission to send messages to the user as specified in the <a href="https://corefork.telegram.org/api/links#direct-mini-app-links">direct Mini App deep link</a> docs, and the user agreed.</param>
            <param name="peer">If the client has clicked on the link in a Telegram chat, pass the chat's peer information; otherwise pass the bot's peer information, instead.</param>
            <param name="app">The app obtained by invoking <see cref="M:TL.SchemaExtensions.Messages_GetBotApp(WTelegram.Client,TL.InputBotApp,System.Int64)">Messages_GetBotApp</see> as specified in the <a href="https://corefork.telegram.org/api/links#direct-mini-app-links">direct Mini App deep link</a> docs.</param>
            <param name="start_param">If the <c>startapp</c> query string parameter is present in the <a href="https://corefork.telegram.org/api/links#direct-mini-app-links">direct Mini App deep link</a>, pass it to <c>start_param</c>.</param>
            <param name="theme_params"><a href="https://corefork.telegram.org/api/bots/webapps#theme-parameters">Theme parameters »</a></param>
            <param name="platform">Short name of the application; 0-64 English letters, digits, and underscores</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SetChatWallPaper(WTelegram.Client,TL.InputPeer,TL.InputWallPaperBase,System.Nullable{System.Int32},TL.WallPaperSettings,System.Boolean,System.Boolean)">
            <summary>Set a custom <a href="https://corefork.telegram.org/api/wallpapers">wallpaper »</a> in a specific private chat with another user.		<para>See <a href="https://corefork.telegram.org/method/messages.setChatWallPaper"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.setChatWallPaper#possible-errors">details</a>)</para></summary>
            <param name="for_both">Only for <a href="https://corefork.telegram.org/api/premium">Premium</a> users, sets the specified wallpaper for both users of the chat, without requiring confirmation from the other user.</param>
            <param name="revert">If we don't like the new wallpaper the other user of the chat has chosen for us using the <c>for_both</c> flag, we can re-set our previous wallpaper just on our side using this flag.</param>
            <param name="peer">The private chat where the wallpaper will be set</param>
            <param name="wallpaper">The <a href="https://corefork.telegram.org/api/wallpapers">wallpaper »</a>, obtained as described in the <a href="https://corefork.telegram.org/api/wallpapers#uploading-wallpapers">wallpaper documentation »</a>; must <strong>not</strong> be provided when installing a wallpaper obtained from a <see cref="T:TL.MessageActionSetChatWallPaper"/> service message (<c>id</c> must be provided, instead).</param>
            <param name="settings">Wallpaper settings, obtained as described in the <a href="https://corefork.telegram.org/api/wallpapers#uploading-wallpapers">wallpaper documentation »</a> or from <see cref="T:TL.MessageActionSetChatWallPaper"/>.<c>wallpaper</c>.<c>settings</c>.</param>
            <param name="id">If the wallpaper was obtained from a <see cref="T:TL.MessageActionSetChatWallPaper"/> service message, must contain the ID of that message.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SearchEmojiStickerSets(WTelegram.Client,System.String,System.Int64,System.Boolean)">
            <summary>Search for <a href="https://corefork.telegram.org/api/custom-emoji">custom emoji stickersets »</a>		<para>See <a href="https://corefork.telegram.org/method/messages.searchEmojiStickerSets"/></para></summary>
            <param name="exclude_featured">Exclude featured stickersets from results</param>
            <param name="q">Query string</param>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/messages.foundStickerSetsNotModified">messages.foundStickerSetsNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetSavedDialogs(WTelegram.Client,System.DateTime,System.Int32,TL.InputPeer,System.Int32,System.Int64,System.Boolean)">
            <summary>Returns the current saved dialog list, see <a href="https://corefork.telegram.org/api/saved-messages">here »</a> for more info.		<para>See <a href="https://corefork.telegram.org/method/messages.getSavedDialogs"/></para></summary>
            <param name="exclude_pinned">Exclude pinned dialogs</param>
            <param name="offset_date"><a href="https://corefork.telegram.org/api/offsets">Offsets for pagination, for more info click here</a></param>
            <param name="offset_id"><a href="https://corefork.telegram.org/api/offsets">Offsets for pagination, for more info click here</a> (<c>top_message</c> ID used for pagination)</param>
            <param name="offset_peer"><a href="https://corefork.telegram.org/api/offsets">Offset peer for pagination</a></param>
            <param name="limit">Number of list elements to be returned</param>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetSavedHistory(WTelegram.Client,TL.InputPeer,System.Int32,System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Int64)">
            <summary>Returns <a href="https://corefork.telegram.org/api/saved-messages">saved messages »</a> forwarded from a specific peer		<para>See <a href="https://corefork.telegram.org/method/messages.getSavedHistory"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.getSavedHistory#possible-errors">details</a>)</para></summary>
            <param name="peer">Target peer</param>
            <param name="offset_id">Only return messages starting from the specified message ID</param>
            <param name="offset_date">Only return messages sent before the specified date</param>
            <param name="add_offset">Number of list elements to be skipped, negative values are also accepted.</param>
            <param name="limit">Number of results to return</param>
            <param name="max_id">If a positive value was transferred, the method will return only messages with IDs less than <strong>max_id</strong></param>
            <param name="min_id">If a positive value was transferred, the method will return only messages with IDs more than <strong>min_id</strong></param>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets">Result hash</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_DeleteSavedHistory(WTelegram.Client,TL.InputPeer,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>Deletes messages forwarded from a specific peer to <a href="https://corefork.telegram.org/api/saved-messages">saved messages »</a>.		<para>See <a href="https://corefork.telegram.org/method/messages.deleteSavedHistory"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.deleteSavedHistory#possible-errors">details</a>)</para></summary>
            <param name="peer">Peer, whose messages will be deleted from <a href="https://corefork.telegram.org/api/saved-messages">saved messages »</a></param>
            <param name="max_id">Maximum ID of message to delete</param>
            <param name="min_date">Delete all messages newer than this UNIX timestamp</param>
            <param name="max_date">Delete all messages older than this UNIX timestamp</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetPinnedSavedDialogs(WTelegram.Client)">
            <summary>Get pinned <a href="https://corefork.telegram.org/api/saved-messages">saved dialogs, see here »</a> for more info.		<para>See <a href="https://corefork.telegram.org/method/messages.getPinnedSavedDialogs"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_ToggleSavedDialogPin(WTelegram.Client,TL.InputDialogPeerBase,System.Boolean)">
            <summary>Pin or unpin a <a href="https://corefork.telegram.org/api/saved-messages">saved message dialog »</a>.		<para>See <a href="https://corefork.telegram.org/method/messages.toggleSavedDialogPin"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/messages.toggleSavedDialogPin#possible-errors">details</a>)</para></summary>
            <param name="pinned">Whether to pin or unpin the dialog</param>
            <param name="peer">The dialog to pin</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_ReorderPinnedSavedDialogs(WTelegram.Client,TL.InputDialogPeerBase[],System.Boolean)">
            <summary>Reorder pinned <a href="https://corefork.telegram.org/api/saved-messages">saved message dialogs »</a>.		<para>See <a href="https://corefork.telegram.org/method/messages.reorderPinnedSavedDialogs"/></para></summary>
            <param name="force">If set, dialogs pinned server-side but not present in the <c>order</c> field will be unpinned.</param>
            <param name="order">New dialog order</param>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetSavedReactionTags(WTelegram.Client,System.Int64,TL.InputPeer)">
            <summary><para>See <a href="https://corefork.telegram.org/method/messages.getSavedReactionTags"/></para></summary>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/messages.savedReactionTagsNotModified">messages.savedReactionTagsNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_UpdateSavedReactionTag(WTelegram.Client,TL.Reaction,System.String)">
            <summary><para>See <a href="https://corefork.telegram.org/method/messages.updateSavedReactionTag"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetDefaultTagReactions(WTelegram.Client,System.Int64)">
            <summary><para>See <a href="https://corefork.telegram.org/method/messages.getDefaultTagReactions"/></para></summary>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/messages.reactionsNotModified">messages.reactionsNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetOutboxReadDate(WTelegram.Client,TL.InputPeer,System.Int32)">
            <summary><para>See <a href="https://corefork.telegram.org/method/messages.getOutboxReadDate"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetQuickReplies(WTelegram.Client,System.Int64)">
            <summary><para>See <a href="https://corefork.telegram.org/method/messages.getQuickReplies"/></para></summary>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/messages.quickRepliesNotModified">messages.quickRepliesNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_ReorderQuickReplies(WTelegram.Client,System.Int32[])">
            <summary><para>See <a href="https://corefork.telegram.org/method/messages.reorderQuickReplies"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_CheckQuickReplyShortcut(WTelegram.Client,System.String)">
            <summary><para>See <a href="https://corefork.telegram.org/method/messages.checkQuickReplyShortcut"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_EditQuickReplyShortcut(WTelegram.Client,System.Int32,System.String)">
            <summary><para>See <a href="https://corefork.telegram.org/method/messages.editQuickReplyShortcut"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_DeleteQuickReplyShortcut(WTelegram.Client,System.Int32)">
            <summary><para>See <a href="https://corefork.telegram.org/method/messages.deleteQuickReplyShortcut"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetQuickReplyMessages(WTelegram.Client,System.Int32,System.Int64,System.Int32[])">
            <summary><para>⚠ <b>This method is only for basic Chat</b>. See <see href="https://wiz0u.github.io/WTelegramClient/#terminology">Terminology</see> in the README to understand what this means<br/>Search for a similar method name starting with <c>Channels_</c> if you're dealing with a <see cref="T:TL.Channel"/></para>		<para>See <a href="https://corefork.telegram.org/method/messages.getQuickReplyMessages"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_SendQuickReplyMessages(WTelegram.Client,TL.InputPeer,System.Int32,System.Int32[],System.Int64[])">
            <summary><para>See <a href="https://corefork.telegram.org/method/messages.sendQuickReplyMessages"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_DeleteQuickReplyMessages(WTelegram.Client,System.Int32,System.Int32[])">
            <summary><para>⚠ <b>This method is only for basic Chat</b>. See <see href="https://wiz0u.github.io/WTelegramClient/#terminology">Terminology</see> in the README to understand what this means<br/>Search for a similar method name starting with <c>Channels_</c> if you're dealing with a <see cref="T:TL.Channel"/></para>		<para>See <a href="https://corefork.telegram.org/method/messages.deleteQuickReplyMessages"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_ToggleDialogFilterTags(WTelegram.Client,System.Boolean)">
            <summary><para>See <a href="https://corefork.telegram.org/method/messages.toggleDialogFilterTags"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Messages_GetMyStickers(WTelegram.Client,System.Int64,System.Int32)">
            <summary><para>See <a href="https://corefork.telegram.org/method/messages.getMyStickers"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Updates_GetState(WTelegram.Client)">
            <summary>Returns a current state of updates.		<para>See <a href="https://corefork.telegram.org/method/updates.getState"/> [bots: ✓]</para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Updates_GetDifference(WTelegram.Client,System.Int32,System.DateTime,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>Get new <a href="https://corefork.telegram.org/api/updates">updates</a>.		<para>See <a href="https://corefork.telegram.org/method/updates.getDifference"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403,500 (<a href="https://corefork.telegram.org/method/updates.getDifference#possible-errors">details</a>)</para></summary>
            <param name="pts">PTS, see <a href="https://corefork.telegram.org/api/updates">updates</a>.</param>
            <param name="pts_limit">PTS limit</param>
            <param name="pts_total_limit">For fast updating: if provided and <c>pts + pts_total_limit &lt; remote pts</c>, <see cref="T:TL.Updates_DifferenceTooLong"/> will be returned.<br/>Simply tells the server to not return the difference if it is bigger than <c>pts_total_limit</c><br/>If the remote pts is too big (&gt; ~4000000), this field will default to 1000000</param>
            <param name="date">date, see <a href="https://corefork.telegram.org/api/updates">updates</a>.</param>
            <param name="qts">QTS, see <a href="https://corefork.telegram.org/api/updates">updates</a>.</param>
            <param name="qts_limit">QTS limit</param>
        </member>
        <member name="M:TL.SchemaExtensions.Updates_GetChannelDifference(WTelegram.Client,TL.InputChannelBase,TL.ChannelMessagesFilter,System.Int32,System.Int32,System.Boolean)">
            <summary>Returns the difference between the current state of updates of a certain channel and transmitted.		<para>See <a href="https://corefork.telegram.org/method/updates.getChannelDifference"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403,406,500 (<a href="https://corefork.telegram.org/method/updates.getChannelDifference#possible-errors">details</a>)</para></summary>
            <param name="force">Set to true to skip some possibly unneeded updates and reduce server-side load</param>
            <param name="channel">The channel</param>
            <param name="filter">Messsage filter</param>
            <param name="pts">Persistent timestamp (see <a href="https://corefork.telegram.org/api/updates">updates</a>)</param>
            <param name="limit">How many updates to fetch, max <c>100000</c><br/>Ordinary (non-bot) users are supposed to pass <c>10-100</c></param>
        </member>
        <member name="M:TL.SchemaExtensions.Photos_UpdateProfilePhoto(WTelegram.Client,TL.InputPhoto,TL.InputUserBase,System.Boolean)">
            <summary>Installs a previously uploaded photo as a profile photo.		<para>See <a href="https://corefork.telegram.org/method/photos.updateProfilePhoto"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/photos.updateProfilePhoto#possible-errors">details</a>)</para></summary>
            <param name="fallback">If set, the chosen profile photo will be shown to users that can't display your main profile photo due to your privacy settings.</param>
            <param name="bot">Can contain info of a bot we own, to change the profile photo of that bot, instead of the current user.</param>
            <param name="id">Input photo</param>
        </member>
        <member name="M:TL.SchemaExtensions.Photos_UploadProfilePhoto(WTelegram.Client,TL.InputFileBase,TL.InputFileBase,System.Nullable{System.Double},TL.VideoSizeBase,TL.InputUserBase,System.Boolean)">
            <summary>Updates current user profile photo.		<para>See <a href="https://corefork.telegram.org/method/photos.uploadProfilePhoto"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/photos.uploadProfilePhoto#possible-errors">details</a>)</para></summary>
            <param name="fallback">If set, the chosen profile photo will be shown to users that can't display your main profile photo due to your privacy settings.</param>
            <param name="bot">Can contain info of a bot we own, to change the profile photo of that bot, instead of the current user.</param>
            <param name="file">Profile photo</param>
            <param name="video"><a href="https://corefork.telegram.org/api/files#animated-profile-pictures">Animated profile picture</a> video</param>
            <param name="video_start_ts">Floating point UNIX timestamp in seconds, indicating the frame of the video/sticker that should be used as static preview; can only be used if <c>video</c> or <c>video_emoji_markup</c> is set.</param>
            <param name="video_emoji_markup">Animated sticker profile picture, must contain either a <see cref="T:TL.VideoSizeEmojiMarkup"/> or a <see cref="T:TL.VideoSizeStickerMarkup"/>.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Photos_DeletePhotos(WTelegram.Client,TL.InputPhoto[])">
            <summary>Deletes profile photos. The method returns a list of successfully deleted photo IDs.		<para>See <a href="https://corefork.telegram.org/method/photos.deletePhotos"/></para></summary>
            <param name="id">Input photos to delete</param>
        </member>
        <member name="M:TL.SchemaExtensions.Photos_GetUserPhotos(WTelegram.Client,TL.InputUserBase,System.Int32,System.Int64,System.Int32)">
            <summary>Returns the list of user photos.		<para>See <a href="https://corefork.telegram.org/method/photos.getUserPhotos"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/photos.getUserPhotos#possible-errors">details</a>)</para></summary>
            <param name="user_id">User ID</param>
            <param name="offset">Number of list elements to be skipped</param>
            <param name="max_id">If a positive value was transferred, the method will return only photos with IDs less than the set one. This parameter is often useful when <a href="https://corefork.telegram.org/api/file_reference">refetching file references »</a>, as in conjuction with <c>limit=1</c> and <c>offset=-1</c> the <see cref="T:TL.Photo"/> object with the <c>id</c> specified in <c>max_id</c> can be fetched.</param>
            <param name="limit">Number of list elements to be returned</param>
        </member>
        <member name="M:TL.SchemaExtensions.Photos_UploadContactProfilePhoto(WTelegram.Client,TL.InputUserBase,TL.InputFileBase,TL.InputFileBase,System.Nullable{System.Double},TL.VideoSizeBase,System.Boolean,System.Boolean)">
            <summary>Upload a custom profile picture for a contact, or suggest a new profile picture to a contact.		<para>See <a href="https://corefork.telegram.org/method/photos.uploadContactProfilePhoto"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/photos.uploadContactProfilePhoto#possible-errors">details</a>)</para></summary>
            <param name="suggest">If set, will send a <see cref="T:TL.MessageActionSuggestProfilePhoto"/> service message to <c>user_id</c>, suggesting them to use the specified profile picture; otherwise, will set a personal profile picture for the user (only visible to the current user).</param>
            <param name="save">If set, removes a previously set personal profile picture (does not affect suggested profile pictures, to remove them simply deleted the <see cref="T:TL.MessageActionSuggestProfilePhoto"/> service message with <see cref="M:TL.SchemaExtensions.Messages_DeleteMessages(WTelegram.Client,System.Int32[],System.Boolean)">Messages_DeleteMessages</see>).</param>
            <param name="user_id">The contact</param>
            <param name="file">Profile photo</param>
            <param name="video"><a href="https://corefork.telegram.org/api/files#animated-profile-pictures">Animated profile picture</a> video</param>
            <param name="video_start_ts">Floating point UNIX timestamp in seconds, indicating the frame of the video/sticker that should be used as static preview; can only be used if <c>video</c> or <c>video_emoji_markup</c> is set.</param>
            <param name="video_emoji_markup">Animated sticker profile picture, must contain either a <see cref="T:TL.VideoSizeEmojiMarkup"/> or a <see cref="T:TL.VideoSizeStickerMarkup"/>.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Upload_SaveFilePart(WTelegram.Client,System.Int64,System.Int32,System.Byte[])">
            <summary>Saves a part of file for further sending to one of the methods.		<para>See <a href="https://corefork.telegram.org/method/upload.saveFilePart"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/upload.saveFilePart#possible-errors">details</a>)</para></summary>
            <param name="file_id">Random file identifier created by the client</param>
            <param name="file_part">Numerical order of a part</param>
            <param name="bytes">Binary data, content of a part</param>
        </member>
        <member name="M:TL.SchemaExtensions.Upload_GetFile(WTelegram.Client,TL.InputFileLocationBase,System.Int64,System.Int32,System.Boolean,System.Boolean)">
            <summary>Returns content of a whole file or its part.		<para>See <a href="https://corefork.telegram.org/method/upload.getFile"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,406 (<a href="https://corefork.telegram.org/method/upload.getFile#possible-errors">details</a>)</para></summary>
            <param name="precise">Disable some checks on limit and offset values, useful for example to stream videos by keyframes</param>
            <param name="cdn_supported">Whether the current client supports <a href="https://corefork.telegram.org/cdn">CDN downloads</a></param>
            <param name="location">File location</param>
            <param name="offset">Number of bytes to be skipped</param>
            <param name="limit">Number of bytes to be returned</param>
        </member>
        <member name="M:TL.SchemaExtensions.Upload_SaveBigFilePart(WTelegram.Client,System.Int64,System.Int32,System.Int32,System.Byte[])">
            <summary>Saves a part of a large file (over 10 MB in size) to be later passed to one of the methods.		<para>See <a href="https://corefork.telegram.org/method/upload.saveBigFilePart"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/upload.saveBigFilePart#possible-errors">details</a>)</para></summary>
            <param name="file_id">Random file id, created by the client</param>
            <param name="file_part">Part sequence number</param>
            <param name="file_total_parts">Total number of parts</param>
            <param name="bytes">Binary data, part contents</param>
        </member>
        <member name="M:TL.SchemaExtensions.Upload_GetWebFile(WTelegram.Client,TL.InputWebFileLocationBase,System.Int32,System.Int32)">
            <summary>Returns content of a web file, by proxying the request through telegram, see the <a href="https://corefork.telegram.org/api/files#downloading-webfiles">webfile docs for more info</a>.		<para>See <a href="https://corefork.telegram.org/method/upload.getWebFile"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/upload.getWebFile#possible-errors">details</a>)</para></summary>
            <param name="location">The file to download</param>
            <param name="offset">Number of bytes to be skipped</param>
            <param name="limit">Number of bytes to be returned</param>
        </member>
        <member name="M:TL.SchemaExtensions.Upload_GetCdnFile(WTelegram.Client,System.Byte[],System.Int64,System.Int32)">
            <summary>Download a <a href="https://corefork.telegram.org/cdn">CDN</a> file.		<para>See <a href="https://corefork.telegram.org/method/upload.getCdnFile"/></para></summary>
            <param name="file_token">File token</param>
            <param name="offset">Offset of chunk to download</param>
            <param name="limit">Length of chunk to download</param>
        </member>
        <member name="M:TL.SchemaExtensions.Upload_ReuploadCdnFile(WTelegram.Client,System.Byte[],System.Byte[])">
            <summary>Request a reupload of a certain file to a <a href="https://corefork.telegram.org/cdn">CDN DC</a>.		<para>See <a href="https://corefork.telegram.org/method/upload.reuploadCdnFile"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,500 (<a href="https://corefork.telegram.org/method/upload.reuploadCdnFile#possible-errors">details</a>)</para></summary>
            <param name="file_token">File token</param>
            <param name="request_token">Request token</param>
        </member>
        <member name="M:TL.SchemaExtensions.Upload_GetCdnFileHashes(WTelegram.Client,System.Byte[],System.Int64)">
            <summary>Get SHA256 hashes for verifying downloaded <a href="https://corefork.telegram.org/cdn">CDN</a> files		<para>See <a href="https://corefork.telegram.org/method/upload.getCdnFileHashes"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/upload.getCdnFileHashes#possible-errors">details</a>)</para></summary>
            <param name="file_token">File</param>
            <param name="offset">Offset from which to start getting hashes</param>
        </member>
        <member name="M:TL.SchemaExtensions.Upload_GetFileHashes(WTelegram.Client,TL.InputFileLocationBase,System.Int64)">
            <summary>Get SHA256 hashes for verifying downloaded files		<para>See <a href="https://corefork.telegram.org/method/upload.getFileHashes"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/upload.getFileHashes#possible-errors">details</a>)</para></summary>
            <param name="location">File</param>
            <param name="offset">Offset from which to get file hashes</param>
        </member>
        <member name="M:TL.SchemaExtensions.Help_GetConfig(WTelegram.Client)">
            <summary>Returns current configuration, including data center configuration.		<para>See <a href="https://corefork.telegram.org/method/help.getConfig"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/help.getConfig#possible-errors">details</a>)</para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Help_GetNearestDc(WTelegram.Client)">
            <summary>Returns info on data center nearest to the user.		<para>See <a href="https://corefork.telegram.org/method/help.getNearestDc"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Help_GetAppUpdate(WTelegram.Client,System.String)">
            <summary>Returns information on update availability for the current application.		<para>See <a href="https://corefork.telegram.org/method/help.getAppUpdate"/></para></summary>
            <param name="source">Source</param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/help.noAppUpdate">help.noAppUpdate</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Help_GetInviteText(WTelegram.Client)">
            <summary>Returns localized text of a text message with an invitation.		<para>See <a href="https://corefork.telegram.org/method/help.getInviteText"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Help_GetSupport(WTelegram.Client)">
            <summary>Returns the support user for the "ask a question" feature.		<para>See <a href="https://corefork.telegram.org/method/help.getSupport"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Help_SetBotUpdatesStatus(WTelegram.Client,System.Int32,System.String)">
            <summary>Informs the server about the number of pending bot updates if they haven't been processed for a long time; for bots only		<para>See <a href="https://corefork.telegram.org/method/help.setBotUpdatesStatus"/> [bots: ✓]</para></summary>
            <param name="pending_updates_count">Number of pending updates</param>
            <param name="message">Error message, if present</param>
        </member>
        <member name="M:TL.SchemaExtensions.Help_GetCdnConfig(WTelegram.Client)">
            <summary>Get configuration for <a href="https://corefork.telegram.org/cdn">CDN</a> file downloads.		<para>See <a href="https://corefork.telegram.org/method/help.getCdnConfig"/> [bots: ✓]</para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Help_GetRecentMeUrls(WTelegram.Client,System.String)">
            <summary>Get recently used <c>t.me</c> links.		<para>See <a href="https://corefork.telegram.org/method/help.getRecentMeUrls"/></para></summary>
            <param name="referer">Referrer</param>
        </member>
        <member name="M:TL.SchemaExtensions.Help_GetTermsOfServiceUpdate(WTelegram.Client)">
            <summary>Look for updates of telegram's terms of service		<para>See <a href="https://corefork.telegram.org/method/help.getTermsOfServiceUpdate"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Help_AcceptTermsOfService(WTelegram.Client,TL.DataJSON)">
            <summary>Accept the new terms of service		<para>See <a href="https://corefork.telegram.org/method/help.acceptTermsOfService"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/help.acceptTermsOfService#possible-errors">details</a>)</para></summary>
            <param name="id">ID of terms of service</param>
        </member>
        <member name="M:TL.SchemaExtensions.Help_GetDeepLinkInfo(WTelegram.Client,System.String)">
            <summary>Get info about an unsupported deep link, see <a href="https://corefork.telegram.org/api/links#unsupported-links">here for more info »</a>.		<para>See <a href="https://corefork.telegram.org/method/help.getDeepLinkInfo"/></para></summary>
            <param name="path">Path component of a <c>tg:</c> link</param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/help.deepLinkInfoEmpty">help.deepLinkInfoEmpty</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Help_GetAppConfig(WTelegram.Client,System.Int32)">
            <summary>Get app-specific configuration, see <a href="https://corefork.telegram.org/api/config#client-configuration">client configuration</a> for more info on the result.		<para>See <a href="https://corefork.telegram.org/method/help.getAppConfig"/></para></summary>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/help.appConfigNotModified">help.appConfigNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Help_SaveAppLog(WTelegram.Client,TL.InputAppEvent[])">
            <summary>Saves logs of application on the server.		<para>See <a href="https://corefork.telegram.org/method/help.saveAppLog"/></para></summary>
            <param name="events">List of input events</param>
        </member>
        <member name="M:TL.SchemaExtensions.Help_GetPassportConfig(WTelegram.Client,System.Int32)">
            <summary>Get <a href="https://corefork.telegram.org/passport">passport</a> configuration		<para>See <a href="https://corefork.telegram.org/method/help.getPassportConfig"/></para></summary>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/help.passportConfigNotModified">help.passportConfigNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Help_GetSupportName(WTelegram.Client)">
            <summary>Get localized name of the telegram support user		<para>See <a href="https://corefork.telegram.org/method/help.getSupportName"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 403 (<a href="https://corefork.telegram.org/method/help.getSupportName#possible-errors">details</a>)</para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Help_GetUserInfo(WTelegram.Client,TL.InputUserBase)">
            <summary>Can only be used by TSF members to obtain internal information.		<para>See <a href="https://corefork.telegram.org/method/help.getUserInfo"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 403 (<a href="https://corefork.telegram.org/method/help.getUserInfo#possible-errors">details</a>)</para></summary>
            <param name="user_id">User ID</param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/help.userInfoEmpty">help.userInfoEmpty</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Help_EditUserInfo(WTelegram.Client,TL.InputUserBase,System.String,TL.MessageEntity[])">
            <summary>Internal use		<para>See <a href="https://corefork.telegram.org/method/help.editUserInfo"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/help.editUserInfo#possible-errors">details</a>)</para></summary>
            <param name="user_id">User</param>
            <param name="message">Message</param>
            <param name="entities"><a href="https://corefork.telegram.org/api/entities">Message entities for styled text</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/help.userInfoEmpty">help.userInfoEmpty</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Help_GetPromoData(WTelegram.Client)">
            <summary>Get MTProxy/Public Service Announcement information		<para>See <a href="https://corefork.telegram.org/method/help.getPromoData"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Help_HidePromoData(WTelegram.Client,TL.InputPeer)">
            <summary>Hide MTProxy/Public Service Announcement information		<para>See <a href="https://corefork.telegram.org/method/help.hidePromoData"/></para></summary>
            <param name="peer">Peer to hide</param>
        </member>
        <member name="M:TL.SchemaExtensions.Help_DismissSuggestion(WTelegram.Client,TL.InputPeer,System.String)">
            <summary>Dismiss a <a href="https://corefork.telegram.org/api/config#suggestions">suggestion, see here for more info »</a>.		<para>See <a href="https://corefork.telegram.org/method/help.dismissSuggestion"/></para></summary>
            <param name="peer">In the case of pending suggestions in <see cref="T:TL.ChannelFull">channels</see>, the channel ID.</param>
            <param name="suggestion"><a href="https://corefork.telegram.org/api/config#suggestions">Suggestion, see here for more info »</a>.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Help_GetCountriesList(WTelegram.Client,System.String,System.Int32)">
            <summary>Get name, ISO code, localized name and phone codes/patterns of all available countries		<para>See <a href="https://corefork.telegram.org/method/help.getCountriesList"/></para></summary>
            <param name="lang_code">Language code of the current user</param>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/help.countriesListNotModified">help.countriesListNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Help_GetPremiumPromo(WTelegram.Client)">
            <summary>Get Telegram Premium promotion information		<para>See <a href="https://corefork.telegram.org/method/help.getPremiumPromo"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Help_GetPeerColors(WTelegram.Client,System.Int32)">
            <summary>Get the set of <a href="https://corefork.telegram.org/api/colors">accent color palettes »</a> that can be used for message accents.		<para>See <a href="https://corefork.telegram.org/method/help.getPeerColors"/></para></summary>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/help.peerColorsNotModified">help.peerColorsNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Help_GetPeerProfileColors(WTelegram.Client,System.Int32)">
            <summary>Get the set of <a href="https://corefork.telegram.org/api/colors">accent color palettes »</a> that can be used in profile page backgrounds.		<para>See <a href="https://corefork.telegram.org/method/help.getPeerProfileColors"/></para></summary>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets#hash-generation">Hash for pagination, for more info click here</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/help.peerColorsNotModified">help.peerColorsNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Help_GetTimezonesList(WTelegram.Client,System.Int32)">
            <summary><para>See <a href="https://corefork.telegram.org/method/help.getTimezonesList"/></para></summary>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/help.timezonesListNotModified">help.timezonesListNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_ReadHistory(WTelegram.Client,TL.InputChannelBase,System.Int32)">
            <summary>Mark <a href="https://corefork.telegram.org/api/channel">channel/supergroup</a> history as read		<para>See <a href="https://corefork.telegram.org/method/channels.readHistory"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,406 (<a href="https://corefork.telegram.org/method/channels.readHistory#possible-errors">details</a>)</para></summary>
            <param name="channel"><a href="https://corefork.telegram.org/api/channel">Channel/supergroup</a></param>
            <param name="max_id">ID of message up to which messages should be marked as read</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_DeleteMessages(WTelegram.Client,TL.InputChannelBase,System.Int32[])">
            <summary>Delete messages in a <a href="https://corefork.telegram.org/api/channel">channel/supergroup</a>		<para>See <a href="https://corefork.telegram.org/method/channels.deleteMessages"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403,406 (<a href="https://corefork.telegram.org/method/channels.deleteMessages#possible-errors">details</a>)</para></summary>
            <param name="channel"><a href="https://corefork.telegram.org/api/channel">Channel/supergroup</a></param>
            <param name="id">IDs of messages to delete</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_ReportSpam(WTelegram.Client,TL.InputChannelBase,TL.InputPeer,System.Int32[])">
            <summary>Reports some messages from a user in a supergroup as spam; requires administrator rights in the supergroup		<para>See <a href="https://corefork.telegram.org/method/channels.reportSpam"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/channels.reportSpam#possible-errors">details</a>)</para></summary>
            <param name="channel">Supergroup</param>
            <param name="participant">Participant whose messages should be reported</param>
            <param name="id">IDs of spam messages</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_GetMessages(WTelegram.Client,TL.InputChannelBase,TL.InputMessage[])">
            <summary>Get <a href="https://corefork.telegram.org/api/channel">channel/supergroup</a> messages		<para>See <a href="https://corefork.telegram.org/method/channels.getMessages"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,406 (<a href="https://corefork.telegram.org/method/channels.getMessages#possible-errors">details</a>)</para></summary>
            <param name="channel">Channel/supergroup</param>
            <param name="id">IDs of messages to get</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_GetParticipants(WTelegram.Client,TL.InputChannelBase,TL.ChannelParticipantsFilter,System.Int32,System.Int32,System.Int64)">
            <summary>Get the participants of a <a href="https://corefork.telegram.org/api/channel">supergroup/channel</a>		<para>See <a href="https://corefork.telegram.org/method/channels.getParticipants"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403,406 (<a href="https://corefork.telegram.org/method/channels.getParticipants#possible-errors">details</a>)</para></summary>
            <param name="channel">Channel</param>
            <param name="filter">Which participant types to fetch</param>
            <param name="offset"><a href="https://corefork.telegram.org/api/offsets">Offset</a></param>
            <param name="limit"><a href="https://corefork.telegram.org/api/offsets">Limit</a></param>
            <param name="hash"><a href="https://corefork.telegram.org/api/offsets">Hash</a></param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/channels.channelParticipantsNotModified">channels.channelParticipantsNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_GetParticipant(WTelegram.Client,TL.InputChannelBase,TL.InputPeer)">
            <summary>Get info about a <a href="https://corefork.telegram.org/api/channel">channel/supergroup</a> participant		<para>See <a href="https://corefork.telegram.org/method/channels.getParticipant"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403,406 (<a href="https://corefork.telegram.org/method/channels.getParticipant#possible-errors">details</a>)</para></summary>
            <param name="channel">Channel/supergroup</param>
            <param name="participant">Participant to get info about</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_GetChannels(WTelegram.Client,TL.InputChannelBase[])">
            <summary>Get info about <a href="https://corefork.telegram.org/api/channel">channels/supergroups</a>		<para>See <a href="https://corefork.telegram.org/method/channels.getChannels"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,406 (<a href="https://corefork.telegram.org/method/channels.getChannels#possible-errors">details</a>)</para></summary>
            <param name="id">IDs of channels/supergroups to get info about</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_GetFullChannel(WTelegram.Client,TL.InputChannelBase)">
            <summary>Get full info about a <a href="https://corefork.telegram.org/api/channel#supergroups">supergroup</a>, <a href="https://corefork.telegram.org/api/channel#gigagroups">gigagroup</a> or <a href="https://corefork.telegram.org/api/channel#channels">channel</a>		<para>See <a href="https://corefork.telegram.org/method/channels.getFullChannel"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403,406 (<a href="https://corefork.telegram.org/method/channels.getFullChannel#possible-errors">details</a>)</para></summary>
            <param name="channel">The <a href="https://corefork.telegram.org/api/channel#channels">channel</a>, <a href="https://corefork.telegram.org/api/channel#supergroups">supergroup</a> or <a href="https://corefork.telegram.org/api/channel#gigagroups">gigagroup</a> to get info about</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_CreateChannel(WTelegram.Client,System.String,System.String,TL.InputGeoPoint,System.String,System.Nullable{System.Int32},System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Create a <a href="https://corefork.telegram.org/api/channel">supergroup/channel</a>.		<para>See <a href="https://corefork.telegram.org/method/channels.createChannel"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,406,500 (<a href="https://corefork.telegram.org/method/channels.createChannel#possible-errors">details</a>)</para></summary>
            <param name="broadcast">Whether to create a <a href="https://corefork.telegram.org/api/channel">channel</a></param>
            <param name="megagroup">Whether to create a <a href="https://corefork.telegram.org/api/channel">supergroup</a></param>
            <param name="for_import">Whether the supergroup is being created to import messages from a foreign chat service using <see cref="M:TL.SchemaExtensions.Messages_InitHistoryImport(WTelegram.Client,TL.InputPeer,TL.InputFileBase,System.Int32)">Messages_InitHistoryImport</see></param>
            <param name="forum">Whether to create a <a href="https://corefork.telegram.org/api/forum">forum</a></param>
            <param name="title">Channel title</param>
            <param name="about">Channel description</param>
            <param name="geo_point">Geogroup location, see <a href="https://corefork.telegram.org/api/nearby">here »</a> for more info on geogroups.</param>
            <param name="address">Geogroup address, see <a href="https://corefork.telegram.org/api/nearby">here »</a> for more info on geogroups.</param>
            <param name="ttl_period">Time-to-live of all messages that will be sent in the supergroup: once message.date+message.ttl_period === time(), the message will be deleted on the server, and must be deleted locally as well. You can use <see cref="M:TL.SchemaExtensions.Messages_SetDefaultHistoryTTL(WTelegram.Client,System.Int32)">Messages_SetDefaultHistoryTTL</see> to edit this value later.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_EditAdmin(WTelegram.Client,TL.InputChannelBase,TL.InputUserBase,TL.ChatAdminRights,System.String)">
            <summary>Modify the admin rights of a user in a <a href="https://corefork.telegram.org/api/channel">supergroup/channel</a>.		<para>See <a href="https://corefork.telegram.org/method/channels.editAdmin"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403,406 (<a href="https://corefork.telegram.org/method/channels.editAdmin#possible-errors">details</a>)</para></summary>
            <param name="channel">The <a href="https://corefork.telegram.org/api/channel">supergroup/channel</a>.</param>
            <param name="user_id">The ID of the user whose admin rights should be modified</param>
            <param name="admin_rights">The admin rights</param>
            <param name="rank">Indicates the role (rank) of the admin in the group: just an arbitrary string</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_EditTitle(WTelegram.Client,TL.InputChannelBase,System.String)">
            <summary>Edit the name of a <a href="https://corefork.telegram.org/api/channel">channel/supergroup</a>		<para>See <a href="https://corefork.telegram.org/method/channels.editTitle"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/channels.editTitle#possible-errors">details</a>)</para></summary>
            <param name="channel">Channel/supergroup</param>
            <param name="title">New name</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_EditPhoto(WTelegram.Client,TL.InputChannelBase,TL.InputChatPhotoBase)">
            <summary>Change the photo of a <a href="https://corefork.telegram.org/api/channel">channel/supergroup</a>		<para>See <a href="https://corefork.telegram.org/method/channels.editPhoto"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/channels.editPhoto#possible-errors">details</a>)</para></summary>
            <param name="channel">Channel/supergroup whose photo should be edited</param>
            <param name="photo">New photo</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_CheckUsername(WTelegram.Client,TL.InputChannelBase,System.String)">
            <summary>Check if a username is free and can be assigned to a channel/supergroup		<para>See <a href="https://corefork.telegram.org/method/channels.checkUsername"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/channels.checkUsername#possible-errors">details</a>)</para></summary>
            <param name="channel">The <a href="https://corefork.telegram.org/api/channel">channel/supergroup</a> that will assigned the specified username</param>
            <param name="username">The username to check</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_UpdateUsername(WTelegram.Client,TL.InputChannelBase,System.String)">
            <summary>Change or remove the username of a supergroup/channel		<para>See <a href="https://corefork.telegram.org/method/channels.updateUsername"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/channels.updateUsername#possible-errors">details</a>)</para></summary>
            <param name="channel">Channel</param>
            <param name="username">New username, pass an empty string to remove the username</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_JoinChannel(WTelegram.Client,TL.InputChannelBase)">
            <summary>Join a channel/supergroup		<para>See <a href="https://corefork.telegram.org/method/channels.joinChannel"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,406 (<a href="https://corefork.telegram.org/method/channels.joinChannel#possible-errors">details</a>)</para></summary>
            <param name="channel">Channel/supergroup to join</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_LeaveChannel(WTelegram.Client,TL.InputChannelBase)">
            <summary>Leave a <a href="https://corefork.telegram.org/api/channel">channel/supergroup</a>		<para>See <a href="https://corefork.telegram.org/method/channels.leaveChannel"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403,406 (<a href="https://corefork.telegram.org/method/channels.leaveChannel#possible-errors">details</a>)</para></summary>
            <param name="channel"><a href="https://corefork.telegram.org/api/channel">Channel/supergroup</a> to leave</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_InviteToChannel(WTelegram.Client,TL.InputChannelBase,TL.InputUserBase[])">
            <summary>Invite users to a channel/supergroup		<para>See <a href="https://corefork.telegram.org/method/channels.inviteToChannel"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403,406 (<a href="https://corefork.telegram.org/method/channels.inviteToChannel#possible-errors">details</a>)</para></summary>
            <param name="channel">Channel/supergroup</param>
            <param name="users">Users to invite</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_DeleteChannel(WTelegram.Client,TL.InputChannelBase)">
            <summary>Delete a <a href="https://corefork.telegram.org/api/channel">channel/supergroup</a>		<para>See <a href="https://corefork.telegram.org/method/channels.deleteChannel"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403,406 (<a href="https://corefork.telegram.org/method/channels.deleteChannel#possible-errors">details</a>)</para></summary>
            <param name="channel"><a href="https://corefork.telegram.org/api/channel">Channel/supergroup</a> to delete</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_ExportMessageLink(WTelegram.Client,TL.InputChannelBase,System.Int32,System.Boolean,System.Boolean)">
            <summary>Get link and embed info of a message in a <a href="https://corefork.telegram.org/api/channel">channel/supergroup</a>		<para>See <a href="https://corefork.telegram.org/method/channels.exportMessageLink"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/channels.exportMessageLink#possible-errors">details</a>)</para></summary>
            <param name="grouped">Whether to include other grouped media (for albums)</param>
            <param name="thread">Whether to also include a thread ID, if available, inside of the link</param>
            <param name="channel">Channel</param>
            <param name="id">Message ID</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_ToggleSignatures(WTelegram.Client,TL.InputChannelBase,System.Boolean)">
            <summary>Enable/disable message signatures in channels		<para>See <a href="https://corefork.telegram.org/method/channels.toggleSignatures"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/channels.toggleSignatures#possible-errors">details</a>)</para></summary>
            <param name="channel">Channel</param>
            <param name="enabled">Value</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_GetAdminedPublicChannels(WTelegram.Client,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Get <a href="https://corefork.telegram.org/api/channel">channels/supergroups/geogroups</a> we're admin in. Usually called when the user exceeds the <see cref="T:TL.Config">limit</see> for owned public <a href="https://corefork.telegram.org/api/channel">channels/supergroups/geogroups</a>, and the user is given the choice to remove one of his channels/supergroups/geogroups.		<para>See <a href="https://corefork.telegram.org/method/channels.getAdminedPublicChannels"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/channels.getAdminedPublicChannels#possible-errors">details</a>)</para></summary>
            <param name="by_location">Get geogroups</param>
            <param name="check_limit">If set and the user has reached the limit of owned public <a href="https://corefork.telegram.org/api/channel">channels/supergroups/geogroups</a>, instead of returning the channel list one of the specified <a href="https://corefork.telegram.org/method/channels.getAdminedPublicChannels#possible-errors">errors</a> will be returned.<br/>Useful to check if a new public channel can indeed be created, even before asking the user to enter a channel username to use in <see cref="M:TL.SchemaExtensions.Channels_CheckUsername(WTelegram.Client,TL.InputChannelBase,System.String)">Channels_CheckUsername</see>/<see cref="M:TL.SchemaExtensions.Channels_UpdateUsername(WTelegram.Client,TL.InputChannelBase,System.String)">Channels_UpdateUsername</see>.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_EditBanned(WTelegram.Client,TL.InputChannelBase,TL.InputPeer,TL.ChatBannedRights)">
            <summary>Ban/unban/kick a user in a <a href="https://corefork.telegram.org/api/channel">supergroup/channel</a>.		<para>See <a href="https://corefork.telegram.org/method/channels.editBanned"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403,406 (<a href="https://corefork.telegram.org/method/channels.editBanned#possible-errors">details</a>)</para></summary>
            <param name="channel">The <a href="https://corefork.telegram.org/api/channel">supergroup/channel</a>.</param>
            <param name="participant">Participant to ban</param>
            <param name="banned_rights">The banned rights</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_GetAdminLog(WTelegram.Client,TL.InputChannelBase,System.String,System.Int64,System.Int64,System.Int32,TL.ChannelAdminLogEventsFilter,TL.InputUserBase[])">
            <summary>Get the admin log of a <a href="https://corefork.telegram.org/api/channel">channel/supergroup</a>		<para>See <a href="https://corefork.telegram.org/method/channels.getAdminLog"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403,406 (<a href="https://corefork.telegram.org/method/channels.getAdminLog#possible-errors">details</a>)</para></summary>
            <param name="channel">Channel</param>
            <param name="q">Search query, can be empty</param>
            <param name="events_filter">Event filter</param>
            <param name="admins">Only show events from these admins</param>
            <param name="max_id">Maximum ID of message to return (see <a href="https://corefork.telegram.org/api/offsets">pagination</a>)</param>
            <param name="min_id">Minimum ID of message to return (see <a href="https://corefork.telegram.org/api/offsets">pagination</a>)</param>
            <param name="limit">Maximum number of results to return, <a href="https://corefork.telegram.org/api/offsets">see pagination</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_SetStickers(WTelegram.Client,TL.InputChannelBase,TL.InputStickerSet)">
            <summary>Associate a stickerset to the supergroup		<para>See <a href="https://corefork.telegram.org/method/channels.setStickers"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,406 (<a href="https://corefork.telegram.org/method/channels.setStickers#possible-errors">details</a>)</para></summary>
            <param name="channel">Supergroup</param>
            <param name="stickerset">The stickerset to associate</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_ReadMessageContents(WTelegram.Client,TL.InputChannelBase,System.Int32[])">
            <summary>Mark <a href="https://corefork.telegram.org/api/channel">channel/supergroup</a> message contents as read		<para>See <a href="https://corefork.telegram.org/method/channels.readMessageContents"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,406 (<a href="https://corefork.telegram.org/method/channels.readMessageContents#possible-errors">details</a>)</para></summary>
            <param name="channel"><a href="https://corefork.telegram.org/api/channel">Channel/supergroup</a></param>
            <param name="id">IDs of messages whose contents should be marked as read</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_DeleteHistory(WTelegram.Client,TL.InputChannelBase,System.Int32,System.Boolean)">
            <summary>Delete the history of a <a href="https://corefork.telegram.org/api/channel">supergroup</a>		<para>See <a href="https://corefork.telegram.org/method/channels.deleteHistory"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/channels.deleteHistory#possible-errors">details</a>)</para></summary>
            <param name="for_everyone">Whether the history should be deleted for everyone</param>
            <param name="channel"><a href="https://corefork.telegram.org/api/channel">Supergroup</a> whose history must be deleted</param>
            <param name="max_id">ID of message <strong>up to which</strong> the history must be deleted</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_TogglePreHistoryHidden(WTelegram.Client,TL.InputChannelBase,System.Boolean)">
            <summary>Hide/unhide message history for new channel/supergroup users		<para>See <a href="https://corefork.telegram.org/method/channels.togglePreHistoryHidden"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/channels.togglePreHistoryHidden#possible-errors">details</a>)</para></summary>
            <param name="channel">Channel/supergroup</param>
            <param name="enabled">Hide/unhide</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_GetLeftChannels(WTelegram.Client,System.Int32)">
            <summary>Get a list of <a href="https://corefork.telegram.org/api/channel">channels/supergroups</a> we left, requires a <a href="https://corefork.telegram.org/api/takeout">takeout session, see here » for more info</a>.		<para>See <a href="https://corefork.telegram.org/method/channels.getLeftChannels"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 403 (<a href="https://corefork.telegram.org/method/channels.getLeftChannels#possible-errors">details</a>)</para></summary>
            <param name="offset">Offset for <a href="https://corefork.telegram.org/api/offsets">pagination</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_GetGroupsForDiscussion(WTelegram.Client)">
            <summary>Get all groups that can be used as <a href="https://corefork.telegram.org/api/discussion">discussion groups</a>.		<para>See <a href="https://corefork.telegram.org/method/channels.getGroupsForDiscussion"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_SetDiscussionGroup(WTelegram.Client,TL.InputChannelBase,TL.InputChannelBase)">
            <summary>Associate a group to a channel as <a href="https://corefork.telegram.org/api/discussion">discussion group</a> for that channel		<para>See <a href="https://corefork.telegram.org/method/channels.setDiscussionGroup"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/channels.setDiscussionGroup#possible-errors">details</a>)</para></summary>
            <param name="broadcast">Channel</param>
            <param name="group"><a href="https://corefork.telegram.org/api/discussion">Discussion group</a> to associate to the channel</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_EditCreator(WTelegram.Client,TL.InputChannelBase,TL.InputUserBase,TL.InputCheckPasswordSRP)">
            <summary>Transfer channel ownership		<para>See <a href="https://corefork.telegram.org/method/channels.editCreator"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/channels.editCreator#possible-errors">details</a>)</para></summary>
            <param name="channel">Channel</param>
            <param name="user_id">New channel owner</param>
            <param name="password"><a href="https://corefork.telegram.org/api/srp">2FA password</a> of account</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_EditLocation(WTelegram.Client,TL.InputChannelBase,TL.InputGeoPoint,System.String)">
            <summary>Edit location of geogroup, see <a href="https://corefork.telegram.org/api/nearby">here »</a> for more info on geogroups.		<para>See <a href="https://corefork.telegram.org/method/channels.editLocation"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/channels.editLocation#possible-errors">details</a>)</para></summary>
            <param name="channel"><a href="https://corefork.telegram.org/api/channel">Geogroup</a></param>
            <param name="geo_point">New geolocation</param>
            <param name="address">Address string</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_ToggleSlowMode(WTelegram.Client,TL.InputChannelBase,System.Int32)">
            <summary>Toggle supergroup slow mode: if enabled, users will only be able to send one message every <c>seconds</c> seconds		<para>See <a href="https://corefork.telegram.org/method/channels.toggleSlowMode"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/channels.toggleSlowMode#possible-errors">details</a>)</para></summary>
            <param name="channel">The <a href="https://corefork.telegram.org/api/channel">supergroup</a></param>
            <param name="seconds">Users will only be able to send one message every <c>seconds</c> seconds, <c>0</c> to disable the limitation</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_GetInactiveChannels(WTelegram.Client)">
            <summary>Get inactive channels and supergroups		<para>See <a href="https://corefork.telegram.org/method/channels.getInactiveChannels"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_ConvertToGigagroup(WTelegram.Client,TL.InputChannelBase)">
            <summary>Convert a <a href="https://corefork.telegram.org/api/channel">supergroup</a> to a <a href="https://corefork.telegram.org/api/channel">gigagroup</a>, when requested by <a href="https://corefork.telegram.org/api/config#channel-suggestions">channel suggestions</a>.		<para>See <a href="https://corefork.telegram.org/method/channels.convertToGigagroup"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/channels.convertToGigagroup#possible-errors">details</a>)</para></summary>
            <param name="channel">The <a href="https://corefork.telegram.org/api/channel">supergroup</a> to convert</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_ViewSponsoredMessage(WTelegram.Client,TL.InputChannelBase,System.Byte[])">
            <summary>Mark a specific sponsored message as read		<para>See <a href="https://corefork.telegram.org/method/channels.viewSponsoredMessage"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/channels.viewSponsoredMessage#possible-errors">details</a>)</para></summary>
            <param name="channel">Peer</param>
            <param name="random_id">Message ID</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_GetSponsoredMessages(WTelegram.Client,TL.InputChannelBase)">
            <summary>Get a list of sponsored messages		<para>See <a href="https://corefork.telegram.org/method/channels.getSponsoredMessages"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/channels.getSponsoredMessages#possible-errors">details</a>)</para></summary>
            <param name="channel">Peer</param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/messages.sponsoredMessagesEmpty">messages.sponsoredMessagesEmpty</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_GetSendAs(WTelegram.Client,TL.InputPeer)">
            <summary>Obtains a list of peers that can be used to send messages in a specific group		<para>See <a href="https://corefork.telegram.org/method/channels.getSendAs"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/channels.getSendAs#possible-errors">details</a>)</para></summary>
            <param name="peer">The group where we intend to send messages</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_DeleteParticipantHistory(WTelegram.Client,TL.InputChannelBase,TL.InputPeer)">
            <summary>Delete all messages sent by a specific participant of a given supergroup		<para>See <a href="https://corefork.telegram.org/method/channels.deleteParticipantHistory"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/channels.deleteParticipantHistory#possible-errors">details</a>)</para></summary>
            <param name="channel">Supergroup</param>
            <param name="participant">The participant whose messages should be deleted</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_ToggleJoinToSend(WTelegram.Client,TL.InputChannelBase,System.Boolean)">
            <summary>Set whether all users <a href="https://corefork.telegram.org/api/discussion#requiring-users-to-join-the-group">should join a discussion group in order to comment on a post »</a>		<para>See <a href="https://corefork.telegram.org/method/channels.toggleJoinToSend"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/channels.toggleJoinToSend#possible-errors">details</a>)</para></summary>
            <param name="channel">Discussion group</param>
            <param name="enabled">Toggle</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_ToggleJoinRequest(WTelegram.Client,TL.InputChannelBase,System.Boolean)">
            <summary>Set whether all users should <a href="https://corefork.telegram.org/api/invites#join-requests">request admin approval to join the group »</a>.		<para>See <a href="https://corefork.telegram.org/method/channels.toggleJoinRequest"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/channels.toggleJoinRequest#possible-errors">details</a>)</para></summary>
            <param name="channel">Group</param>
            <param name="enabled">Toggle</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_ReorderUsernames(WTelegram.Client,TL.InputChannelBase,System.String[])">
            <summary>Reorder active usernames		<para>See <a href="https://corefork.telegram.org/method/channels.reorderUsernames"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/channels.reorderUsernames#possible-errors">details</a>)</para></summary>
            <param name="channel">The supergroup or channel</param>
            <param name="order">The new order for active usernames. All active usernames must be specified.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_ToggleUsername(WTelegram.Client,TL.InputChannelBase,System.String,System.Boolean)">
            <summary>Activate or deactivate a purchased <a href="https://fragment.com">fragment.com</a> username associated to a <a href="https://corefork.telegram.org/api/channel">supergroup or channel</a> we own.		<para>See <a href="https://corefork.telegram.org/method/channels.toggleUsername"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/channels.toggleUsername#possible-errors">details</a>)</para></summary>
            <param name="channel"><a href="https://corefork.telegram.org/api/channel">Supergroup or channel</a></param>
            <param name="username">Username</param>
            <param name="active">Whether to activate or deactivate the username</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_DeactivateAllUsernames(WTelegram.Client,TL.InputChannelBase)">
            <summary>Disable all purchased usernames of a supergroup or channel		<para>See <a href="https://corefork.telegram.org/method/channels.deactivateAllUsernames"/> [bots: ✓]</para></summary>
            <param name="channel">Supergroup or channel</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_ToggleForum(WTelegram.Client,TL.InputChannelBase,System.Boolean)">
            <summary>Enable or disable <a href="https://corefork.telegram.org/api/forum">forum functionality</a> in a supergroup.		<para>See <a href="https://corefork.telegram.org/method/channels.toggleForum"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/channels.toggleForum#possible-errors">details</a>)</para></summary>
            <param name="channel">Supergroup ID</param>
            <param name="enabled">Enable or disable forum functionality</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_CreateForumTopic(WTelegram.Client,TL.InputChannelBase,System.String,System.Int64,System.Nullable{System.Int32},TL.InputPeer,System.Nullable{System.Int64})">
            <summary>Create a <a href="https://corefork.telegram.org/api/forum">forum topic</a>; requires <a href="https://corefork.telegram.org/api/rights"><c>manage_topics</c> rights</a>.		<para>See <a href="https://corefork.telegram.org/method/channels.createForumTopic"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/channels.createForumTopic#possible-errors">details</a>)</para></summary>
            <param name="channel"><a href="https://corefork.telegram.org/api/forum">The forum</a></param>
            <param name="title">Topic title (maximum UTF-8 length: 128)</param>
            <param name="icon_color">If no custom emoji icon is specified, specifies the color of the fallback topic icon (RGB), one of <c>0x6FB9F0</c>, <c>0xFFD67E</c>, <c>0xCB86DB</c>, <c>0x8EEE98</c>, <c>0xFF93B2</c>, or <c>0xFB6F5F</c>.</param>
            <param name="icon_emoji_id">ID of the <a href="https://corefork.telegram.org/api/custom-emoji">custom emoji</a> used as topic icon. <a href="https://corefork.telegram.org/api/premium">Telegram Premium</a> users can use any custom emoji, other users can only use the custom emojis contained in the <see cref="T:TL.InputStickerSetEmojiDefaultTopicIcons"/> emoji pack.</param>
            <param name="random_id">Unique client message ID to prevent duplicate sending of the same event <para>You can use <see cref="M:WTelegram.Helpers.RandomLong"/></para></param>
            <param name="send_as">Create the topic as the specified peer</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_GetForumTopics(WTelegram.Client,TL.InputChannelBase,System.DateTime,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>Get <a href="https://corefork.telegram.org/api/forum">topics of a forum</a>		<para>See <a href="https://corefork.telegram.org/method/channels.getForumTopics"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/channels.getForumTopics#possible-errors">details</a>)</para></summary>
            <param name="channel">Supergroup</param>
            <param name="q">Search query</param>
            <param name="offset_date"><a href="https://corefork.telegram.org/api/offsets">Offsets for pagination, for more info click here</a>, date of the last message of the last found topic. Use 0 or any date in the future to get results from the last topic.</param>
            <param name="offset_id"><a href="https://corefork.telegram.org/api/offsets">Offsets for pagination, for more info click here</a>, ID of the last message of the last found topic (or initially <c>0</c>).</param>
            <param name="offset_topic"><a href="https://corefork.telegram.org/api/offsets">Offsets for pagination, for more info click here</a>, ID of the last found topic (or initially <c>0</c>).</param>
            <param name="limit">Maximum number of results to return, <a href="https://corefork.telegram.org/api/offsets">see pagination</a>. For optimal performance, the number of returned topics is chosen by the server and can be smaller than the specified limit.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_GetForumTopicsByID(WTelegram.Client,TL.InputChannelBase,System.Int32[])">
            <summary>Get forum topics by their ID		<para>See <a href="https://corefork.telegram.org/method/channels.getForumTopicsByID"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/channels.getForumTopicsByID#possible-errors">details</a>)</para></summary>
            <param name="channel">Forum</param>
            <param name="topics">Topic IDs</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_EditForumTopic(WTelegram.Client,TL.InputChannelBase,System.Int32,System.String,System.Nullable{System.Int64},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>Edit <a href="https://corefork.telegram.org/api/forum">forum topic</a>; requires <a href="https://corefork.telegram.org/api/rights"><c>manage_topics</c> rights</a>.		<para>See <a href="https://corefork.telegram.org/method/channels.editForumTopic"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/channels.editForumTopic#possible-errors">details</a>)</para></summary>
            <param name="channel">Supergroup</param>
            <param name="topic_id">Topic ID</param>
            <param name="title">If present, will update the topic title (maximum UTF-8 length: 128).</param>
            <param name="icon_emoji_id">If present, updates the <a href="https://corefork.telegram.org/api/custom-emoji">custom emoji</a> used as topic icon. <a href="https://corefork.telegram.org/api/premium">Telegram Premium</a> users can use any custom emoji, other users can only use the custom emojis contained in the <see cref="T:TL.InputStickerSetEmojiDefaultTopicIcons"/> emoji pack. Pass 0 to switch to the fallback topic icon.</param>
            <param name="closed">If present, will update the open/closed status of the topic.</param>
            <param name="hidden">If present, will hide/unhide the topic (only valid for the "General" topic, <c>id=1</c>).</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_UpdatePinnedForumTopic(WTelegram.Client,TL.InputChannelBase,System.Int32,System.Boolean)">
            <summary>Pin or unpin <a href="https://corefork.telegram.org/api/forum">forum topics</a>		<para>See <a href="https://corefork.telegram.org/method/channels.updatePinnedForumTopic"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/channels.updatePinnedForumTopic#possible-errors">details</a>)</para></summary>
            <param name="channel">Supergroup ID</param>
            <param name="topic_id"><a href="https://corefork.telegram.org/api/forum">Forum topic ID</a></param>
            <param name="pinned">Whether to pin or unpin the topic</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_DeleteTopicHistory(WTelegram.Client,TL.InputChannelBase,System.Int32)">
            <summary>Delete message history of a <a href="https://corefork.telegram.org/api/forum">forum topic</a>		<para>See <a href="https://corefork.telegram.org/method/channels.deleteTopicHistory"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/channels.deleteTopicHistory#possible-errors">details</a>)</para></summary>
            <param name="channel">Forum</param>
            <param name="top_msg_id">Topic ID</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_ReorderPinnedForumTopics(WTelegram.Client,TL.InputChannelBase,System.Int32[],System.Boolean)">
            <summary>Reorder pinned forum topics		<para>See <a href="https://corefork.telegram.org/method/channels.reorderPinnedForumTopics"/> [bots: ✓]</para></summary>
            <param name="force">If not set, the order of only the topics present both server-side and in <c>order</c> will be changed (i.e. mentioning topics not pinned server-side in <c>order</c> will not pin them, and not mentioning topics pinned server-side will not unpin them).  <br/>If set, the entire server-side pinned topic list will be replaced with <c>order</c> (i.e. mentioning topics not pinned server-side in <c>order</c> will pin them, and not mentioning topics pinned server-side will unpin them)</param>
            <param name="channel">Supergroup ID</param>
            <param name="order"><a href="https://corefork.telegram.org/api/forum">Topic IDs »</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_ToggleAntiSpam(WTelegram.Client,TL.InputChannelBase,System.Boolean)">
            <summary>Enable or disable the <a href="https://corefork.telegram.org/api/antispam">native antispam system</a>.		<para>See <a href="https://corefork.telegram.org/method/channels.toggleAntiSpam"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/channels.toggleAntiSpam#possible-errors">details</a>)</para></summary>
            <param name="channel">Supergroup ID. The specified supergroup must have at least <c>telegram_antispam_group_size_min</c> members to enable antispam functionality, as specified by the <a href="https://corefork.telegram.org/api/config#client-configuration">client configuration parameters</a>.</param>
            <param name="enabled">Enable or disable the native antispam system.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_ReportAntiSpamFalsePositive(WTelegram.Client,TL.InputChannelBase,System.Int32)">
            <summary>Report a <a href="https://corefork.telegram.org/api/antispam">native antispam</a> false positive		<para>See <a href="https://corefork.telegram.org/method/channels.reportAntiSpamFalsePositive"/> [bots: ✓]</para></summary>
            <param name="channel">Supergroup ID</param>
            <param name="msg_id">Message ID that was mistakenly deleted by the <a href="https://corefork.telegram.org/api/antispam">native antispam</a> system, taken from the <a href="https://corefork.telegram.org/api/recent-actions">admin log</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_ToggleParticipantsHidden(WTelegram.Client,TL.InputChannelBase,System.Boolean)">
            <summary>Hide or display the participants list in a <a href="https://corefork.telegram.org/api/channel">supergroup</a>.		<para>See <a href="https://corefork.telegram.org/method/channels.toggleParticipantsHidden"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/channels.toggleParticipantsHidden#possible-errors">details</a>)</para></summary>
            <param name="channel">Supergroup ID</param>
            <param name="enabled">If true, will hide the participants list; otherwise will unhide it.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_ClickSponsoredMessage(WTelegram.Client,TL.InputChannelBase,System.Byte[])">
            <summary>Informs the server that the user has either:		<para>See <a href="https://corefork.telegram.org/method/channels.clickSponsoredMessage"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/channels.clickSponsoredMessage#possible-errors">details</a>)</para></summary>
            <param name="channel">Channel where the sponsored message was posted</param>
            <param name="random_id">Message ID</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_UpdateColor(WTelegram.Client,TL.InputChannelBase,System.Nullable{System.Int64},System.Nullable{System.Int32},System.Boolean)">
            <summary>Update the <a href="https://corefork.telegram.org/api/colors">accent color and background custom emoji »</a> of a channel.		<para>See <a href="https://corefork.telegram.org/method/channels.updateColor"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/channels.updateColor#possible-errors">details</a>)</para></summary>
            <param name="for_profile">Whether to change the accent color emoji pattern of the profile page; otherwise, the accent color and emoji pattern of messages will be changed.</param>
            <param name="channel">Channel whose accent color should be changed.</param>
            <param name="color"><a href="https://corefork.telegram.org/api/colors">ID of the accent color palette »</a> to use (not RGB24, see <a href="https://corefork.telegram.org/api/colors">here »</a> for more info); if not set, the default palette is used.</param>
            <param name="background_emoji_id">Custom emoji ID used in the accent color pattern.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_ToggleViewForumAsMessages(WTelegram.Client,TL.InputChannelBase,System.Boolean)">
            <summary>Users may also choose to display messages from all topics of a <a href="https://corefork.telegram.org/api/forum">forum</a> as if they were sent to a normal group, using a "View as messages" setting in the local client: this setting only affects the current account, and is synced to other logged in sessions using this method.		<para>See <a href="https://corefork.telegram.org/method/channels.toggleViewForumAsMessages"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/channels.toggleViewForumAsMessages#possible-errors">details</a>)</para></summary>
            <param name="channel">The forum</param>
            <param name="enabled">The new value of the <c>view_forum_as_messages</c> flag.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_GetChannelRecommendations(WTelegram.Client,TL.InputChannelBase)">
            <summary>Obtain a list of similarly themed public channels, selected based on similarities in their <strong>subscriber bases</strong>.		<para>See <a href="https://corefork.telegram.org/method/channels.getChannelRecommendations"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/channels.getChannelRecommendations#possible-errors">details</a>)</para></summary>
            <param name="channel">The method will return channels related to the passed <c>channel</c>.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_UpdateEmojiStatus(WTelegram.Client,TL.InputChannelBase,TL.EmojiStatus)">
            <summary>Set an <a href="https://corefork.telegram.org/api/emoji-status">emoji status</a> for a channel.		<para>See <a href="https://corefork.telegram.org/method/channels.updateEmojiStatus"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/channels.updateEmojiStatus#possible-errors">details</a>)</para></summary>
            <param name="channel">The channel, must have at least <a href="https://corefork.telegram.org/api/config#channel-emoji-status-level-min"><c>channel_emoji_status_level_min</c> boosts</a>.</param>
            <param name="emoji_status"><a href="https://corefork.telegram.org/api/emoji-status">Emoji status</a> to set</param>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_SetBoostsToUnblockRestrictions(WTelegram.Client,TL.InputChannelBase,System.Int32)">
            <summary><para>See <a href="https://corefork.telegram.org/method/channels.setBoostsToUnblockRestrictions"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_SetEmojiStickers(WTelegram.Client,TL.InputChannelBase,TL.InputStickerSet)">
            <summary><para>See <a href="https://corefork.telegram.org/method/channels.setEmojiStickers"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_ReportSponsoredMessage(WTelegram.Client,TL.InputChannelBase,System.Byte[],System.Byte[])">
            <summary><para>See <a href="https://corefork.telegram.org/method/channels.reportSponsoredMessage"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Channels_RestrictSponsoredMessages(WTelegram.Client,TL.InputChannelBase,System.Boolean)">
            <summary><para>See <a href="https://corefork.telegram.org/method/channels.restrictSponsoredMessages"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Bots_SendCustomRequest(WTelegram.Client,System.String,TL.DataJSON)">
            <summary>Sends a custom request; for bots only		<para>See <a href="https://corefork.telegram.org/method/bots.sendCustomRequest"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/bots.sendCustomRequest#possible-errors">details</a>)</para></summary>
            <param name="custom_method">The method name</param>
            <param name="params_">JSON-serialized method parameters</param>
        </member>
        <member name="M:TL.SchemaExtensions.Bots_AnswerWebhookJSONQuery(WTelegram.Client,System.Int64,TL.DataJSON)">
            <summary>Answers a custom query; for bots only		<para>See <a href="https://corefork.telegram.org/method/bots.answerWebhookJSONQuery"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/bots.answerWebhookJSONQuery#possible-errors">details</a>)</para></summary>
            <param name="query_id">Identifier of a custom query</param>
            <param name="data">JSON-serialized answer to the query</param>
        </member>
        <member name="M:TL.SchemaExtensions.Bots_SetBotCommands(WTelegram.Client,TL.BotCommandScope,System.String,TL.BotCommand[])">
            <summary>Set bot command list		<para>See <a href="https://corefork.telegram.org/method/bots.setBotCommands"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/bots.setBotCommands#possible-errors">details</a>)</para></summary>
            <param name="scope">Command scope</param>
            <param name="lang_code">Language code</param>
            <param name="commands">Bot commands</param>
        </member>
        <member name="M:TL.SchemaExtensions.Bots_ResetBotCommands(WTelegram.Client,TL.BotCommandScope,System.String)">
            <summary>Clear bot commands for the specified bot scope and language code		<para>See <a href="https://corefork.telegram.org/method/bots.resetBotCommands"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/bots.resetBotCommands#possible-errors">details</a>)</para></summary>
            <param name="scope">Command scope</param>
            <param name="lang_code">Language code</param>
        </member>
        <member name="M:TL.SchemaExtensions.Bots_GetBotCommands(WTelegram.Client,TL.BotCommandScope,System.String)">
            <summary>Obtain a list of bot commands for the specified bot scope and language code		<para>See <a href="https://corefork.telegram.org/method/bots.getBotCommands"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/bots.getBotCommands#possible-errors">details</a>)</para></summary>
            <param name="scope">Command scope</param>
            <param name="lang_code">Language code</param>
        </member>
        <member name="M:TL.SchemaExtensions.Bots_SetBotMenuButton(WTelegram.Client,TL.InputUserBase,TL.BotMenuButtonBase)">
            <summary>Sets the <a href="https://corefork.telegram.org/api/bots/menu">menu button action »</a> for a given user or for all users		<para>See <a href="https://corefork.telegram.org/method/bots.setBotMenuButton"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/bots.setBotMenuButton#possible-errors">details</a>)</para></summary>
            <param name="user_id">User ID</param>
            <param name="button">Bot menu button action</param>
        </member>
        <member name="M:TL.SchemaExtensions.Bots_GetBotMenuButton(WTelegram.Client,TL.InputUserBase)">
            <summary>Gets the menu button action for a given user or for all users, previously set using <see cref="M:TL.SchemaExtensions.Bots_SetBotMenuButton(WTelegram.Client,TL.InputUserBase,TL.BotMenuButtonBase)">Bots_SetBotMenuButton</see>; users can see this information in the <see cref="T:TL.BotInfo"/>.		<para>See <a href="https://corefork.telegram.org/method/bots.getBotMenuButton"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/bots.getBotMenuButton#possible-errors">details</a>)</para></summary>
            <param name="user_id">User ID or empty for the default menu button.</param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/botMenuButtonDefault">botMenuButtonDefault</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Bots_SetBotBroadcastDefaultAdminRights(WTelegram.Client,TL.ChatAdminRights)">
            <summary>Set the default <a href="https://corefork.telegram.org/api/rights#suggested-bot-rights">suggested admin rights</a> for bots being added as admins to channels, see <a href="https://corefork.telegram.org/api/rights#suggested-bot-rights">here for more info on how to handle them »</a>.		<para>See <a href="https://corefork.telegram.org/method/bots.setBotBroadcastDefaultAdminRights"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/bots.setBotBroadcastDefaultAdminRights#possible-errors">details</a>)</para></summary>
            <param name="admin_rights">Admin rights</param>
        </member>
        <member name="M:TL.SchemaExtensions.Bots_SetBotGroupDefaultAdminRights(WTelegram.Client,TL.ChatAdminRights)">
            <summary>Set the default <a href="https://corefork.telegram.org/api/rights#suggested-bot-rights">suggested admin rights</a> for bots being added as admins to groups, see <a href="https://corefork.telegram.org/api/rights#suggested-bot-rights">here for more info on how to handle them »</a>.		<para>See <a href="https://corefork.telegram.org/method/bots.setBotGroupDefaultAdminRights"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/bots.setBotGroupDefaultAdminRights#possible-errors">details</a>)</para></summary>
            <param name="admin_rights">Admin rights</param>
        </member>
        <member name="M:TL.SchemaExtensions.Bots_SetBotInfo(WTelegram.Client,System.String,System.String,System.String,TL.InputUserBase,System.String)">
            <summary>Set localized name, about text and description of a bot (or of the current account, if called by a bot).		<para>See <a href="https://corefork.telegram.org/method/bots.setBotInfo"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/bots.setBotInfo#possible-errors">details</a>)</para></summary>
            <param name="bot">If called by a user, <strong>must</strong> contain the peer of a bot we own.</param>
            <param name="lang_code">Language code, if left empty update the fallback about text and description</param>
            <param name="name">New bot name</param>
            <param name="about">New about text</param>
            <param name="description">New description</param>
        </member>
        <member name="M:TL.SchemaExtensions.Bots_GetBotInfo(WTelegram.Client,System.String,TL.InputUserBase)">
            <summary>Get localized name, about text and description of a bot (or of the current account, if called by a bot).		<para>See <a href="https://corefork.telegram.org/method/bots.getBotInfo"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/bots.getBotInfo#possible-errors">details</a>)</para></summary>
            <param name="bot">If called by a user, <strong>must</strong> contain the peer of a bot we own.</param>
            <param name="lang_code">Language code, if left empty this method will return the fallback about text and description.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Bots_ReorderUsernames(WTelegram.Client,TL.InputUserBase,System.String[])">
            <summary>Reorder usernames associated to a bot we own.		<para>See <a href="https://corefork.telegram.org/method/bots.reorderUsernames"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/bots.reorderUsernames#possible-errors">details</a>)</para></summary>
            <param name="bot">The bot</param>
            <param name="order">The new order for active usernames. All active usernames must be specified.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Bots_ToggleUsername(WTelegram.Client,TL.InputUserBase,System.String,System.Boolean)">
            <summary>Activate or deactivate a purchased <a href="https://fragment.com">fragment.com</a> username associated to a bot we own.		<para>See <a href="https://corefork.telegram.org/method/bots.toggleUsername"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/bots.toggleUsername#possible-errors">details</a>)</para></summary>
            <param name="bot">The bot</param>
            <param name="username">Username</param>
            <param name="active">Whether to activate or deactivate it</param>
        </member>
        <member name="M:TL.SchemaExtensions.Bots_CanSendMessage(WTelegram.Client,TL.InputUserBase)">
            <summary>Check whether the specified bot can send us messages		<para>See <a href="https://corefork.telegram.org/method/bots.canSendMessage"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/bots.canSendMessage#possible-errors">details</a>)</para></summary>
            <param name="bot">The bot</param>
        </member>
        <member name="M:TL.SchemaExtensions.Bots_AllowSendMessage(WTelegram.Client,TL.InputUserBase)">
            <summary>Allow the specified bot to send us messages		<para>See <a href="https://corefork.telegram.org/method/bots.allowSendMessage"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/bots.allowSendMessage#possible-errors">details</a>)</para></summary>
            <param name="bot">The bot</param>
        </member>
        <member name="M:TL.SchemaExtensions.Bots_InvokeWebViewCustomMethod(WTelegram.Client,TL.InputUserBase,System.String,TL.DataJSON)">
            <summary>Send a custom request from a <a href="https://corefork.telegram.org/api/bots/webapps">mini bot app</a>, triggered by a <a href="https://corefork.telegram.org/api/web-events#web-app-invoke-custom-method">web_app_invoke_custom_method event »</a>.		<para>See <a href="https://corefork.telegram.org/method/bots.invokeWebViewCustomMethod"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/bots.invokeWebViewCustomMethod#possible-errors">details</a>)</para></summary>
            <param name="bot">Identifier of the bot associated to the <a href="https://corefork.telegram.org/api/bots/webapps">mini bot app</a></param>
            <param name="custom_method">Identifier of the custom method to invoke</param>
            <param name="params_">Method parameters</param>
        </member>
        <member name="M:TL.SchemaExtensions.Payments_GetPaymentForm(WTelegram.Client,TL.InputInvoice,TL.DataJSON)">
            <summary>Get a payment form		<para>See <a href="https://corefork.telegram.org/method/payments.getPaymentForm"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/payments.getPaymentForm#possible-errors">details</a>)</para></summary>
            <param name="invoice">Invoice</param>
            <param name="theme_params">A JSON object with the following keys, containing color theme information (integers, RGB24) to pass to the payment provider, to apply in eventual verification pages: <br/><c>bg_color</c> - Background color <br/><c>text_color</c> - Text color <br/><c>hint_color</c> - Hint text color <br/><c>link_color</c> - Link color <br/><c>button_color</c> - Button color <br/><c>button_text_color</c> - Button text color</param>
        </member>
        <member name="M:TL.SchemaExtensions.Payments_GetPaymentReceipt(WTelegram.Client,TL.InputPeer,System.Int32)">
            <summary>Get payment receipt		<para>See <a href="https://corefork.telegram.org/method/payments.getPaymentReceipt"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/payments.getPaymentReceipt#possible-errors">details</a>)</para></summary>
            <param name="peer">The peer where the payment receipt was sent</param>
            <param name="msg_id">Message ID of receipt</param>
        </member>
        <member name="M:TL.SchemaExtensions.Payments_ValidateRequestedInfo(WTelegram.Client,TL.InputInvoice,TL.PaymentRequestedInfo,System.Boolean)">
            <summary>Submit requested order information for validation		<para>See <a href="https://corefork.telegram.org/method/payments.validateRequestedInfo"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/payments.validateRequestedInfo#possible-errors">details</a>)</para></summary>
            <param name="save">Save order information to re-use it for future orders</param>
            <param name="invoice">Invoice</param>
            <param name="info">Requested order information</param>
        </member>
        <member name="M:TL.SchemaExtensions.Payments_SendPaymentForm(WTelegram.Client,System.Int64,TL.InputInvoice,TL.InputPaymentCredentialsBase,System.String,System.String,System.Nullable{System.Int64})">
            <summary>Send compiled payment form		<para>See <a href="https://corefork.telegram.org/method/payments.sendPaymentForm"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/payments.sendPaymentForm#possible-errors">details</a>)</para></summary>
            <param name="form_id">Form ID</param>
            <param name="invoice">Invoice</param>
            <param name="requested_info_id">ID of saved and validated <see cref="T:TL.Payments_ValidatedRequestedInfo">order info</see></param>
            <param name="shipping_option_id">Chosen shipping option ID</param>
            <param name="credentials">Payment credentials</param>
            <param name="tip_amount">Tip, in the smallest units of the currency (integer, not float/double). For example, for a price of <c>US$ 1.45</c> pass <c>amount = 145</c>. See the exp parameter in <a href="https://corefork.telegram.org/bots/payments/currencies.json">currencies.json</a>, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies).</param>
        </member>
        <member name="M:TL.SchemaExtensions.Payments_GetSavedInfo(WTelegram.Client)">
            <summary>Get saved payment information		<para>See <a href="https://corefork.telegram.org/method/payments.getSavedInfo"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Payments_ClearSavedInfo(WTelegram.Client,System.Boolean,System.Boolean)">
            <summary>Clear saved payment information		<para>See <a href="https://corefork.telegram.org/method/payments.clearSavedInfo"/></para></summary>
            <param name="credentials">Remove saved payment credentials</param>
            <param name="info">Clear the last order settings saved by the user</param>
        </member>
        <member name="M:TL.SchemaExtensions.Payments_GetBankCardData(WTelegram.Client,System.String)">
            <summary>Get info about a credit card		<para>See <a href="https://corefork.telegram.org/method/payments.getBankCardData"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/payments.getBankCardData#possible-errors">details</a>)</para></summary>
            <param name="number">Credit card number</param>
        </member>
        <member name="M:TL.SchemaExtensions.Payments_ExportInvoice(WTelegram.Client,TL.InputMedia)">
            <summary>Generate an <a href="https://corefork.telegram.org/api/links#invoice-links">invoice deep link</a>		<para>See <a href="https://corefork.telegram.org/method/payments.exportInvoice"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/payments.exportInvoice#possible-errors">details</a>)</para></summary>
            <param name="invoice_media">Invoice</param>
        </member>
        <member name="M:TL.SchemaExtensions.Payments_AssignAppStoreTransaction(WTelegram.Client,System.Byte[],TL.InputStorePaymentPurpose)">
            <summary>Informs server about a purchase made through the App Store: for official applications only.		<para>See <a href="https://corefork.telegram.org/method/payments.assignAppStoreTransaction"/></para></summary>
            <param name="receipt">Receipt</param>
            <param name="purpose">Payment purpose</param>
        </member>
        <member name="M:TL.SchemaExtensions.Payments_AssignPlayMarketTransaction(WTelegram.Client,TL.DataJSON,TL.InputStorePaymentPurpose)">
            <summary>Informs server about a purchase made through the Play Store: for official applications only.		<para>See <a href="https://corefork.telegram.org/method/payments.assignPlayMarketTransaction"/></para></summary>
            <param name="receipt">Receipt</param>
            <param name="purpose">Payment purpose</param>
        </member>
        <member name="M:TL.SchemaExtensions.Payments_CanPurchasePremium(WTelegram.Client,TL.InputStorePaymentPurpose)">
            <summary>Checks whether Telegram Premium purchase is possible. Must be called before in-store Premium purchase, official apps only.		<para>See <a href="https://corefork.telegram.org/method/payments.canPurchasePremium"/></para></summary>
            <param name="purpose">Payment purpose</param>
        </member>
        <member name="M:TL.SchemaExtensions.Payments_GetPremiumGiftCodeOptions(WTelegram.Client,TL.InputPeer)">
            <summary>Obtain a list of Telegram Premium <a href="https://corefork.telegram.org/api/giveaways">giveaway/gift code »</a> options.		<para>See <a href="https://corefork.telegram.org/method/payments.getPremiumGiftCodeOptions"/></para></summary>
            <param name="boost_peer">The channel that will start the giveaway</param>
        </member>
        <member name="M:TL.SchemaExtensions.Payments_CheckGiftCode(WTelegram.Client,System.String)">
            <summary>Obtain information about a <a href="https://corefork.telegram.org/api/giveaways">Telegram Premium giftcode »</a>		<para>See <a href="https://corefork.telegram.org/method/payments.checkGiftCode"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/payments.checkGiftCode#possible-errors">details</a>)</para></summary>
            <param name="slug">The giftcode to check</param>
        </member>
        <member name="M:TL.SchemaExtensions.Payments_ApplyGiftCode(WTelegram.Client,System.String)">
            <summary>Apply a <a href="https://corefork.telegram.org/api/giveaways">Telegram Premium giftcode »</a>		<para>See <a href="https://corefork.telegram.org/method/payments.applyGiftCode"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,420 (<a href="https://corefork.telegram.org/method/payments.applyGiftCode#possible-errors">details</a>)</para></summary>
            <param name="slug">The code to apply</param>
        </member>
        <member name="M:TL.SchemaExtensions.Payments_GetGiveawayInfo(WTelegram.Client,TL.InputPeer,System.Int32)">
            <summary>Obtain information about a <a href="https://corefork.telegram.org/api/giveaways">Telegram Premium giveaway »</a>.		<para>See <a href="https://corefork.telegram.org/method/payments.getGiveawayInfo"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/payments.getGiveawayInfo#possible-errors">details</a>)</para></summary>
            <param name="peer">The peer where the giveaway was posted.</param>
            <param name="msg_id">Message ID of the <see cref="T:TL.MessageActionGiveawayLaunch"/> service message</param>
        </member>
        <member name="M:TL.SchemaExtensions.Payments_LaunchPrepaidGiveaway(WTelegram.Client,TL.InputPeer,System.Int64,TL.InputStorePaymentPurpose)">
            <summary>Launch a <a href="https://corefork.telegram.org/api/giveaways">prepaid giveaway »</a>.		<para>See <a href="https://corefork.telegram.org/method/payments.launchPrepaidGiveaway"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/payments.launchPrepaidGiveaway#possible-errors">details</a>)</para></summary>
            <param name="peer">The peer where to launch the giveaway.</param>
            <param name="giveaway_id">The prepaid giveaway ID.</param>
            <param name="purpose">Giveway parameters</param>
        </member>
        <member name="M:TL.SchemaExtensions.Stickers_CreateStickerSet(WTelegram.Client,TL.InputUserBase,System.String,System.String,TL.InputStickerSetItem[],TL.InputDocument,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Create a stickerset, bots only.		<para>See <a href="https://corefork.telegram.org/method/stickers.createStickerSet"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/stickers.createStickerSet#possible-errors">details</a>)</para></summary>
            <param name="masks">Whether this is a mask stickerset</param>
            <param name="emojis">Whether this is a <a href="https://corefork.telegram.org/api/custom-emoji">custom emoji</a> stickerset.</param>
            <param name="text_color">Whether the color of TGS custom emojis contained in this set should be changed to the text color when used in messages, the accent color if used as emoji status, white on chat photos, or another appropriate color based on context. For custom emoji stickersets only.</param>
            <param name="user_id">Stickerset owner</param>
            <param name="title">Stickerset name, <c>1-64</c> chars</param>
            <param name="short_name">Short name of sticker set, to be used in <a href="https://corefork.telegram.org/api/links#stickerset-links">sticker deep links »</a>. Can contain only english letters, digits and underscores. Must begin with a letter, can't contain consecutive underscores and, <strong>if called by a bot</strong>, must end in <c>"_by_&lt;bot_username&gt;"</c>. <c>&lt;bot_username&gt;</c> is case insensitive. 1-64 characters.</param>
            <param name="thumb">Thumbnail</param>
            <param name="stickers">Stickers</param>
            <param name="software">Used when <a href="https://corefork.telegram.org/import-stickers">importing stickers using the sticker import SDKs</a>, specifies the name of the software that created the stickers</param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/messages.stickerSetNotModified">messages.stickerSetNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Stickers_RemoveStickerFromSet(WTelegram.Client,TL.InputDocument)">
            <summary>Remove a sticker from the set where it belongs, bots only. The sticker set must have been created by the bot.		<para>See <a href="https://corefork.telegram.org/method/stickers.removeStickerFromSet"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/stickers.removeStickerFromSet#possible-errors">details</a>)</para></summary>
            <param name="sticker">The sticker to remove</param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/messages.stickerSetNotModified">messages.stickerSetNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Stickers_ChangeStickerPosition(WTelegram.Client,TL.InputDocument,System.Int32)">
            <summary>Changes the absolute position of a sticker in the set to which it belongs; for bots only. The sticker set must have been created by the bot		<para>See <a href="https://corefork.telegram.org/method/stickers.changeStickerPosition"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/stickers.changeStickerPosition#possible-errors">details</a>)</para></summary>
            <param name="sticker">The sticker</param>
            <param name="position">The new position of the sticker, zero-based</param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/messages.stickerSetNotModified">messages.stickerSetNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Stickers_AddStickerToSet(WTelegram.Client,TL.InputStickerSet,TL.InputStickerSetItem)">
            <summary>Add a sticker to a stickerset, bots only. The sticker set must have been created by the bot.		<para>See <a href="https://corefork.telegram.org/method/stickers.addStickerToSet"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,406 (<a href="https://corefork.telegram.org/method/stickers.addStickerToSet#possible-errors">details</a>)</para></summary>
            <param name="stickerset">The stickerset</param>
            <param name="sticker">The sticker</param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/messages.stickerSetNotModified">messages.stickerSetNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Stickers_SetStickerSetThumb(WTelegram.Client,TL.InputStickerSet,TL.InputDocument,System.Nullable{System.Int64})">
            <summary>Set stickerset thumbnail		<para>See <a href="https://corefork.telegram.org/method/stickers.setStickerSetThumb"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/stickers.setStickerSetThumb#possible-errors">details</a>)</para></summary>
            <param name="stickerset">Stickerset</param>
            <param name="thumb">Thumbnail (only for normal stickersets, not custom emoji stickersets).</param>
            <param name="thumb_document_id">Only for <a href="https://corefork.telegram.org/api/custom-emoji">custom emoji stickersets</a>, ID of a custom emoji present in the set to use as thumbnail; pass 0 to fallback to the first custom emoji of the set.</param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/messages.stickerSetNotModified">messages.stickerSetNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Stickers_CheckShortName(WTelegram.Client,System.String)">
            <summary>Check whether the given short name is available		<para>See <a href="https://corefork.telegram.org/method/stickers.checkShortName"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/stickers.checkShortName#possible-errors">details</a>)</para></summary>
            <param name="short_name">Short name</param>
        </member>
        <member name="M:TL.SchemaExtensions.Stickers_SuggestShortName(WTelegram.Client,System.String)">
            <summary>Suggests a short name for a given stickerpack name		<para>See <a href="https://corefork.telegram.org/method/stickers.suggestShortName"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/stickers.suggestShortName#possible-errors">details</a>)</para></summary>
            <param name="title">Sticker pack name</param>
        </member>
        <member name="M:TL.SchemaExtensions.Stickers_ChangeSticker(WTelegram.Client,TL.InputDocument,System.String,TL.MaskCoords,System.String)">
            <summary>Update the keywords, emojis or <a href="https://corefork.telegram.org/api/stickers#mask-stickers">mask coordinates</a> of a sticker, bots only.		<para>See <a href="https://corefork.telegram.org/method/stickers.changeSticker"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/stickers.changeSticker#possible-errors">details</a>)</para></summary>
            <param name="sticker">The sticker</param>
            <param name="emoji">If set, updates the emoji list associated to the sticker</param>
            <param name="mask_coords">If set, updates the <a href="https://corefork.telegram.org/api/stickers#mask-stickers">mask coordinates</a></param>
            <param name="keywords">If set, updates the sticker keywords (separated by commas). Can't be provided for mask stickers.</param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/messages.stickerSetNotModified">messages.stickerSetNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Stickers_RenameStickerSet(WTelegram.Client,TL.InputStickerSet,System.String)">
            <summary>Renames a stickerset, bots only.		<para>See <a href="https://corefork.telegram.org/method/stickers.renameStickerSet"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/stickers.renameStickerSet#possible-errors">details</a>)</para></summary>
            <param name="stickerset">Stickerset to rename</param>
            <param name="title">New stickerset title</param>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/messages.stickerSetNotModified">messages.stickerSetNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Stickers_DeleteStickerSet(WTelegram.Client,TL.InputStickerSet)">
            <summary>Deletes a stickerset we created, bots only.		<para>See <a href="https://corefork.telegram.org/method/stickers.deleteStickerSet"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/stickers.deleteStickerSet#possible-errors">details</a>)</para></summary>
            <param name="stickerset">Stickerset to delete</param>
        </member>
        <member name="M:TL.SchemaExtensions.Stickers_ReplaceSticker(WTelegram.Client,TL.InputDocument,TL.InputStickerSetItem)">
            <summary><para>See <a href="https://corefork.telegram.org/method/stickers.replaceSticker"/></para></summary>
            <returns>a <c>null</c> value means <a href="https://corefork.telegram.org/constructor/messages.stickerSetNotModified">messages.stickerSetNotModified</a></returns>
        </member>
        <member name="M:TL.SchemaExtensions.Phone_GetCallConfig(WTelegram.Client)">
            <summary>Get phone call configuration to be passed to libtgvoip's shared config		<para>See <a href="https://corefork.telegram.org/method/phone.getCallConfig"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Phone_RequestCall(WTelegram.Client,TL.InputUserBase,System.Int32,System.Byte[],TL.PhoneCallProtocol,System.Boolean)">
            <summary>Start a telegram phone call		<para>See <a href="https://corefork.telegram.org/method/phone.requestCall"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/phone.requestCall#possible-errors">details</a>)</para></summary>
            <param name="video">Whether to start a video call</param>
            <param name="user_id">Destination of the phone call</param>
            <param name="random_id">Random ID to avoid resending the same object</param>
            <param name="g_a_hash"><a href="https://corefork.telegram.org/api/end-to-end/voice-calls">Parameter for E2E encryption key exchange »</a></param>
            <param name="protocol">Phone call settings</param>
        </member>
        <member name="M:TL.SchemaExtensions.Phone_AcceptCall(WTelegram.Client,TL.InputPhoneCall,System.Byte[],TL.PhoneCallProtocol)">
            <summary>Accept incoming call		<para>See <a href="https://corefork.telegram.org/method/phone.acceptCall"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,406,500 (<a href="https://corefork.telegram.org/method/phone.acceptCall#possible-errors">details</a>)</para></summary>
            <param name="peer">The call to accept</param>
            <param name="g_b"><a href="https://corefork.telegram.org/api/end-to-end/voice-calls">Parameter for E2E encryption key exchange »</a></param>
            <param name="protocol">Phone call settings</param>
        </member>
        <member name="M:TL.SchemaExtensions.Phone_ConfirmCall(WTelegram.Client,TL.InputPhoneCall,System.Byte[],System.Int64,TL.PhoneCallProtocol)">
            <summary><a href="https://corefork.telegram.org/api/end-to-end/voice-calls">Complete phone call E2E encryption key exchange »</a>		<para>See <a href="https://corefork.telegram.org/method/phone.confirmCall"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/phone.confirmCall#possible-errors">details</a>)</para></summary>
            <param name="peer">The phone call</param>
            <param name="g_a"><a href="https://corefork.telegram.org/api/end-to-end/voice-calls">Parameter for E2E encryption key exchange »</a></param>
            <param name="key_fingerprint">Key fingerprint</param>
            <param name="protocol">Phone call settings</param>
        </member>
        <member name="M:TL.SchemaExtensions.Phone_ReceivedCall(WTelegram.Client,TL.InputPhoneCall)">
            <summary>Optional: notify the server that the user is currently busy in a call: this will automatically refuse all incoming phone calls until the current phone call is ended.		<para>See <a href="https://corefork.telegram.org/method/phone.receivedCall"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/phone.receivedCall#possible-errors">details</a>)</para></summary>
            <param name="peer">The phone call we're currently in</param>
        </member>
        <member name="M:TL.SchemaExtensions.Phone_DiscardCall(WTelegram.Client,TL.InputPhoneCall,System.Int32,TL.PhoneCallDiscardReason,System.Int64,System.Boolean)">
            <summary>Refuse or end running call		<para>See <a href="https://corefork.telegram.org/method/phone.discardCall"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,500 (<a href="https://corefork.telegram.org/method/phone.discardCall#possible-errors">details</a>)</para></summary>
            <param name="video">Whether this is a video call</param>
            <param name="peer">The phone call</param>
            <param name="duration">Call duration</param>
            <param name="reason">Why was the call discarded</param>
            <param name="connection_id">Preferred libtgvoip relay ID</param>
        </member>
        <member name="M:TL.SchemaExtensions.Phone_SetCallRating(WTelegram.Client,TL.InputPhoneCall,System.Int32,System.String,System.Boolean)">
            <summary>Rate a call, returns info about the rating message sent to the official VoIP bot.		<para>See <a href="https://corefork.telegram.org/method/phone.setCallRating"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/phone.setCallRating#possible-errors">details</a>)</para></summary>
            <param name="user_initiative">Whether the user decided on their own initiative to rate the call</param>
            <param name="peer">The call to rate</param>
            <param name="rating">Rating in <c>1-5</c> stars</param>
            <param name="comment">An additional comment</param>
        </member>
        <member name="M:TL.SchemaExtensions.Phone_SaveCallDebug(WTelegram.Client,TL.InputPhoneCall,TL.DataJSON)">
            <summary>Send phone call debug data to server		<para>See <a href="https://corefork.telegram.org/method/phone.saveCallDebug"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/phone.saveCallDebug#possible-errors">details</a>)</para></summary>
            <param name="peer">Phone call</param>
            <param name="debug">Debug statistics obtained from libtgvoip</param>
        </member>
        <member name="M:TL.SchemaExtensions.Phone_SendSignalingData(WTelegram.Client,TL.InputPhoneCall,System.Byte[])">
            <summary>Send VoIP signaling data		<para>See <a href="https://corefork.telegram.org/method/phone.sendSignalingData"/></para></summary>
            <param name="peer">Phone call</param>
            <param name="data">Signaling payload</param>
        </member>
        <member name="M:TL.SchemaExtensions.Phone_CreateGroupCall(WTelegram.Client,TL.InputPeer,System.Int32,System.String,System.Nullable{System.DateTime},System.Boolean)">
            <summary>Create a group call or livestream		<para>See <a href="https://corefork.telegram.org/method/phone.createGroupCall"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/phone.createGroupCall#possible-errors">details</a>)</para></summary>
            <param name="rtmp_stream">Whether RTMP stream support should be enabled: only the <a href="https://corefork.telegram.org/api/channel">group/supergroup/channel</a> owner can use this flag.</param>
            <param name="peer">Associate the group call or livestream to the provided <a href="https://corefork.telegram.org/api/channel">group/supergroup/channel</a></param>
            <param name="random_id">Unique client message ID required to prevent creation of duplicate group calls</param>
            <param name="title">Call title</param>
            <param name="schedule_date">For scheduled group call or livestreams, the absolute date when the group call will start</param>
        </member>
        <member name="M:TL.SchemaExtensions.Phone_JoinGroupCall(WTelegram.Client,TL.InputGroupCall,TL.InputPeer,TL.DataJSON,System.String,System.Boolean,System.Boolean)">
            <summary>Join a group call		<para>See <a href="https://corefork.telegram.org/method/phone.joinGroupCall"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/phone.joinGroupCall#possible-errors">details</a>)</para></summary>
            <param name="muted">If set, the user will be muted by default upon joining.</param>
            <param name="video_stopped">If set, the user's video will be disabled by default upon joining.</param>
            <param name="call">The group call</param>
            <param name="join_as">Join the group call, presenting yourself as the specified user/channel</param>
            <param name="invite_hash">The invitation hash from the <a href="https://corefork.telegram.org/api/links#video-chat-livestream-links">invite link »</a>, if provided allows speaking in a livestream or muted group chat.</param>
            <param name="params_">WebRTC parameters</param>
        </member>
        <member name="M:TL.SchemaExtensions.Phone_LeaveGroupCall(WTelegram.Client,TL.InputGroupCall,System.Int32)">
            <summary>Leave a group call		<para>See <a href="https://corefork.telegram.org/method/phone.leaveGroupCall"/></para></summary>
            <param name="call">The group call</param>
            <param name="source">Your source ID</param>
        </member>
        <member name="M:TL.SchemaExtensions.Phone_InviteToGroupCall(WTelegram.Client,TL.InputGroupCall,TL.InputUserBase[])">
            <summary>Invite a set of users to a group call.		<para>See <a href="https://corefork.telegram.org/method/phone.inviteToGroupCall"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/phone.inviteToGroupCall#possible-errors">details</a>)</para></summary>
            <param name="call">The group call</param>
            <param name="users">The users to invite.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Phone_DiscardGroupCall(WTelegram.Client,TL.InputGroupCall)">
            <summary>Terminate a group call		<para>See <a href="https://corefork.telegram.org/method/phone.discardGroupCall"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/phone.discardGroupCall#possible-errors">details</a>)</para></summary>
            <param name="call">The group call to terminate</param>
        </member>
        <member name="M:TL.SchemaExtensions.Phone_ToggleGroupCallSettings(WTelegram.Client,TL.InputGroupCall,System.Nullable{System.Boolean},System.Boolean)">
            <summary>Change group call settings		<para>See <a href="https://corefork.telegram.org/method/phone.toggleGroupCallSettings"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/phone.toggleGroupCallSettings#possible-errors">details</a>)</para></summary>
            <param name="reset_invite_hash">Invalidate existing invite links</param>
            <param name="call">Group call</param>
            <param name="join_muted">Whether all users will that join this group call are muted by default upon joining the group call</param>
        </member>
        <member name="M:TL.SchemaExtensions.Phone_GetGroupCall(WTelegram.Client,TL.InputGroupCall,System.Int32)">
            <summary>Get info about a group call		<para>See <a href="https://corefork.telegram.org/method/phone.getGroupCall"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/phone.getGroupCall#possible-errors">details</a>)</para></summary>
            <param name="call">The group call</param>
            <param name="limit">Maximum number of results to return, <a href="https://corefork.telegram.org/api/offsets">see pagination</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Phone_GetGroupParticipants(WTelegram.Client,TL.InputGroupCall,TL.InputPeer[],System.Int32[],System.String,System.Int32)">
            <summary>Get group call participants		<para>See <a href="https://corefork.telegram.org/method/phone.getGroupParticipants"/></para></summary>
            <param name="call">Group call</param>
            <param name="ids">If specified, will fetch group participant info about the specified peers</param>
            <param name="sources">If specified, will fetch group participant info about the specified WebRTC source IDs</param>
            <param name="offset">Offset for results, taken from the <c>next_offset</c> field of <see cref="T:TL.Phone_GroupParticipants"/>, initially an empty string. <br/>Note: if no more results are available, the method call will return an empty <c>next_offset</c>; thus, avoid providing the <c>next_offset</c> returned in <see cref="T:TL.Phone_GroupParticipants"/> if it is empty, to avoid an infinite loop.</param>
            <param name="limit">Maximum number of results to return, <a href="https://corefork.telegram.org/api/offsets">see pagination</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Phone_CheckGroupCall(WTelegram.Client,TL.InputGroupCall,System.Int32[])">
            <summary>Check whether the group call Server Forwarding Unit is currently receiving the streams with the specified WebRTC source IDs.<br/>Returns an intersection of the source IDs specified in <c>sources</c>, and the source IDs currently being forwarded by the SFU.		<para>See <a href="https://corefork.telegram.org/method/phone.checkGroupCall"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/phone.checkGroupCall#possible-errors">details</a>)</para></summary>
            <param name="call">Group call</param>
            <param name="sources">Source IDs</param>
        </member>
        <member name="M:TL.SchemaExtensions.Phone_ToggleGroupCallRecord(WTelegram.Client,TL.InputGroupCall,System.String,System.Nullable{System.Boolean},System.Boolean,System.Boolean)">
            <summary>Start or stop recording a group call: the recorded audio and video streams will be automatically sent to <c>Saved messages</c> (the chat with ourselves).		<para>See <a href="https://corefork.telegram.org/method/phone.toggleGroupCallRecord"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/phone.toggleGroupCallRecord#possible-errors">details</a>)</para></summary>
            <param name="start">Whether to start or stop recording</param>
            <param name="video">Whether to also record video streams</param>
            <param name="call">The group call or livestream</param>
            <param name="title">Recording title</param>
            <param name="video_portrait">If video stream recording is enabled, whether to record in portrait or landscape mode</param>
        </member>
        <member name="M:TL.SchemaExtensions.Phone_EditGroupCallParticipant(WTelegram.Client,TL.InputGroupCall,TL.InputPeer,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>Edit information about a given group call participant		<para>See <a href="https://corefork.telegram.org/method/phone.editGroupCallParticipant"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/phone.editGroupCallParticipant#possible-errors">details</a>)</para></summary>
            <param name="call">The group call</param>
            <param name="participant">The group call participant (can also be the user itself)</param>
            <param name="muted">Whether to mute or unmute the specified participant</param>
            <param name="volume">New volume</param>
            <param name="raise_hand">Raise or lower hand</param>
            <param name="video_stopped">Start or stop the video stream</param>
            <param name="video_paused">Pause or resume the video stream</param>
            <param name="presentation_paused">Pause or resume the screen sharing stream</param>
        </member>
        <member name="M:TL.SchemaExtensions.Phone_EditGroupCallTitle(WTelegram.Client,TL.InputGroupCall,System.String)">
            <summary>Edit the title of a group call or livestream		<para>See <a href="https://corefork.telegram.org/method/phone.editGroupCallTitle"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 403 (<a href="https://corefork.telegram.org/method/phone.editGroupCallTitle#possible-errors">details</a>)</para></summary>
            <param name="call">Group call</param>
            <param name="title">New title</param>
        </member>
        <member name="M:TL.SchemaExtensions.Phone_GetGroupCallJoinAs(WTelegram.Client,TL.InputPeer)">
            <summary>Get a list of peers that can be used to join a group call, presenting yourself as a specific user/channel.		<para>See <a href="https://corefork.telegram.org/method/phone.getGroupCallJoinAs"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/phone.getGroupCallJoinAs#possible-errors">details</a>)</para></summary>
            <param name="peer">The dialog whose group call or livestream we're trying to join</param>
        </member>
        <member name="M:TL.SchemaExtensions.Phone_ExportGroupCallInvite(WTelegram.Client,TL.InputGroupCall,System.Boolean)">
            <summary>Get an <a href="https://corefork.telegram.org/api/links#video-chat-livestream-links">invite link</a> for a group call or livestream		<para>See <a href="https://corefork.telegram.org/method/phone.exportGroupCallInvite"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 403 (<a href="https://corefork.telegram.org/method/phone.exportGroupCallInvite#possible-errors">details</a>)</para></summary>
            <param name="can_self_unmute">For livestreams or muted group chats, if set, users that join using this link will be able to speak without explicitly requesting permission by (for example by raising their hand).</param>
            <param name="call">The group call</param>
        </member>
        <member name="M:TL.SchemaExtensions.Phone_ToggleGroupCallStartSubscription(WTelegram.Client,TL.InputGroupCall,System.Boolean)">
            <summary>Subscribe or unsubscribe to a scheduled group call		<para>See <a href="https://corefork.telegram.org/method/phone.toggleGroupCallStartSubscription"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 403 (<a href="https://corefork.telegram.org/method/phone.toggleGroupCallStartSubscription#possible-errors">details</a>)</para></summary>
            <param name="call">Scheduled group call</param>
            <param name="subscribed">Enable or disable subscription</param>
        </member>
        <member name="M:TL.SchemaExtensions.Phone_StartScheduledGroupCall(WTelegram.Client,TL.InputGroupCall)">
            <summary>Start a scheduled group call.		<para>See <a href="https://corefork.telegram.org/method/phone.startScheduledGroupCall"/></para></summary>
            <param name="call">The scheduled group call</param>
        </member>
        <member name="M:TL.SchemaExtensions.Phone_SaveDefaultGroupCallJoinAs(WTelegram.Client,TL.InputPeer,TL.InputPeer)">
            <summary>Set the default peer that will be used to join a group call in a specific dialog.		<para>See <a href="https://corefork.telegram.org/method/phone.saveDefaultGroupCallJoinAs"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/phone.saveDefaultGroupCallJoinAs#possible-errors">details</a>)</para></summary>
            <param name="peer">The dialog</param>
            <param name="join_as">The default peer that will be used to join group calls in this dialog, presenting yourself as a specific user/channel.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Phone_JoinGroupCallPresentation(WTelegram.Client,TL.InputGroupCall,TL.DataJSON)">
            <summary>Start screen sharing in a call		<para>See <a href="https://corefork.telegram.org/method/phone.joinGroupCallPresentation"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 403 (<a href="https://corefork.telegram.org/method/phone.joinGroupCallPresentation#possible-errors">details</a>)</para></summary>
            <param name="call">The group call</param>
            <param name="params_">WebRTC parameters</param>
        </member>
        <member name="M:TL.SchemaExtensions.Phone_LeaveGroupCallPresentation(WTelegram.Client,TL.InputGroupCall)">
            <summary>Stop screen sharing in a group call		<para>See <a href="https://corefork.telegram.org/method/phone.leaveGroupCallPresentation"/></para></summary>
            <param name="call">The group call</param>
        </member>
        <member name="M:TL.SchemaExtensions.Phone_GetGroupCallStreamChannels(WTelegram.Client,TL.InputGroupCall)">
            <summary>Get info about RTMP streams in a group call or livestream.<br/>This method should be invoked to the same group/channel-related DC used for <a href="https://corefork.telegram.org/api/files#downloading-files">downloading livestream chunks</a>.<br/>As usual, the media DC is preferred, if available.		<para>See <a href="https://corefork.telegram.org/method/phone.getGroupCallStreamChannels"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/phone.getGroupCallStreamChannels#possible-errors">details</a>)</para></summary>
            <param name="call">Group call or livestream</param>
        </member>
        <member name="M:TL.SchemaExtensions.Phone_GetGroupCallStreamRtmpUrl(WTelegram.Client,TL.InputPeer,System.Boolean)">
            <summary>Get RTMP URL and stream key for RTMP livestreams. Can be used even before creating the actual RTMP livestream with <see cref="M:TL.SchemaExtensions.Phone_CreateGroupCall(WTelegram.Client,TL.InputPeer,System.Int32,System.String,System.Nullable{System.DateTime},System.Boolean)">Phone_CreateGroupCall</see> (the <c>rtmp_stream</c> flag must be set).		<para>See <a href="https://corefork.telegram.org/method/phone.getGroupCallStreamRtmpUrl"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/phone.getGroupCallStreamRtmpUrl#possible-errors">details</a>)</para></summary>
            <param name="peer">Peer to livestream into</param>
            <param name="revoke">Whether to revoke the previous stream key or simply return the existing one</param>
        </member>
        <member name="M:TL.SchemaExtensions.Phone_SaveCallLog(WTelegram.Client,TL.InputPhoneCall,TL.InputFileBase)">
            <summary>Save phone call debug information		<para>See <a href="https://corefork.telegram.org/method/phone.saveCallLog"/></para></summary>
            <param name="peer">Phone call</param>
            <param name="file">Logs</param>
        </member>
        <member name="M:TL.SchemaExtensions.Langpack_GetLangPack(WTelegram.Client,System.String,System.String)">
            <summary>Get localization pack strings		<para>See <a href="https://corefork.telegram.org/method/langpack.getLangPack"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/langpack.getLangPack#possible-errors">details</a>)</para></summary>
            <param name="lang_pack">Language pack name, usually obtained from a <a href="https://corefork.telegram.org/api/links#language-pack-links">language pack link</a></param>
            <param name="lang_code">Language code</param>
        </member>
        <member name="M:TL.SchemaExtensions.Langpack_GetStrings(WTelegram.Client,System.String,System.String,System.String[])">
            <summary>Get strings from a language pack		<para>See <a href="https://corefork.telegram.org/method/langpack.getStrings"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/langpack.getStrings#possible-errors">details</a>)</para></summary>
            <param name="lang_pack">Language pack name, usually obtained from a <a href="https://corefork.telegram.org/api/links#language-pack-links">language pack link</a></param>
            <param name="lang_code">Language code</param>
            <param name="keys">Strings to get</param>
        </member>
        <member name="M:TL.SchemaExtensions.Langpack_GetDifference(WTelegram.Client,System.String,System.String,System.Int32)">
            <summary>Get new strings in language pack		<para>See <a href="https://corefork.telegram.org/method/langpack.getDifference"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/langpack.getDifference#possible-errors">details</a>)</para></summary>
            <param name="lang_pack">Language pack</param>
            <param name="lang_code">Language code</param>
            <param name="from_version">Previous localization pack version</param>
        </member>
        <member name="M:TL.SchemaExtensions.Langpack_GetLanguages(WTelegram.Client,System.String)">
            <summary>Get information about all languages in a localization pack		<para>See <a href="https://corefork.telegram.org/method/langpack.getLanguages"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/langpack.getLanguages#possible-errors">details</a>)</para></summary>
            <param name="lang_pack">Language pack</param>
        </member>
        <member name="M:TL.SchemaExtensions.Langpack_GetLanguage(WTelegram.Client,System.String,System.String)">
            <summary>Get information about a language in a localization pack		<para>See <a href="https://corefork.telegram.org/method/langpack.getLanguage"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/langpack.getLanguage#possible-errors">details</a>)</para></summary>
            <param name="lang_pack">Language pack name, usually obtained from a <a href="https://corefork.telegram.org/api/links#language-pack-links">language pack link</a></param>
            <param name="lang_code">Language code</param>
        </member>
        <member name="M:TL.SchemaExtensions.Folders_EditPeerFolders(WTelegram.Client,TL.InputFolderPeer[])">
            <summary>Edit peers in <a href="https://corefork.telegram.org/api/folders#peer-folders">peer folder</a>		<para>See <a href="https://corefork.telegram.org/method/folders.editPeerFolders"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/folders.editPeerFolders#possible-errors">details</a>)</para></summary>
            <param name="folder_peers">New peer list</param>
        </member>
        <member name="M:TL.SchemaExtensions.Stats_GetBroadcastStats(WTelegram.Client,TL.InputChannelBase,System.Boolean)">
            <summary>Get <a href="https://corefork.telegram.org/api/stats">channel statistics</a>		<para>See <a href="https://corefork.telegram.org/method/stats.getBroadcastStats"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/stats.getBroadcastStats#possible-errors">details</a>)</para></summary>
            <param name="dark">Whether to enable dark theme for graph colors</param>
            <param name="channel">The channel</param>
        </member>
        <member name="M:TL.SchemaExtensions.Stats_LoadAsyncGraph(WTelegram.Client,System.String,System.Nullable{System.Int64})">
            <summary>Load <a href="https://corefork.telegram.org/api/stats">channel statistics graph</a> asynchronously		<para>See <a href="https://corefork.telegram.org/method/stats.loadAsyncGraph"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/stats.loadAsyncGraph#possible-errors">details</a>)</para></summary>
            <param name="token">Graph token from <see cref="T:TL.StatsGraphAsync"/></param>
            <param name="x">Zoom value, if required</param>
        </member>
        <member name="M:TL.SchemaExtensions.Stats_GetMegagroupStats(WTelegram.Client,TL.InputChannelBase,System.Boolean)">
            <summary>Get <a href="https://corefork.telegram.org/api/stats">supergroup statistics</a>		<para>See <a href="https://corefork.telegram.org/method/stats.getMegagroupStats"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400,403 (<a href="https://corefork.telegram.org/method/stats.getMegagroupStats#possible-errors">details</a>)</para></summary>
            <param name="dark">Whether to enable dark theme for graph colors</param>
            <param name="channel"><a href="https://corefork.telegram.org/api/channel">Supergroup ID</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Stats_GetMessagePublicForwards(WTelegram.Client,TL.InputChannelBase,System.Int32,System.String,System.Int32)">
            <summary>Obtains a list of messages, indicating to which other public channels was a channel message forwarded.<br/>Will return a list of <see cref="T:TL.Message">messages</see> with <c>peer_id</c> equal to the public channel to which this message was forwarded.		<para>See <a href="https://corefork.telegram.org/method/stats.getMessagePublicForwards"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/stats.getMessagePublicForwards#possible-errors">details</a>)</para></summary>
            <param name="channel">Source channel</param>
            <param name="msg_id">Source message ID</param>
            <param name="offset">Offset for <a href="https://corefork.telegram.org/api/offsets">pagination</a>, empty string on first call, then use the <c>next_offset</c> field of the returned constructor (if present, otherwise no more results are available).</param>
            <param name="limit">Maximum number of results to return, <a href="https://corefork.telegram.org/api/offsets">see pagination</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Stats_GetMessageStats(WTelegram.Client,TL.InputChannelBase,System.Int32,System.Boolean)">
            <summary>Get <a href="https://corefork.telegram.org/api/stats">message statistics</a>		<para>See <a href="https://corefork.telegram.org/method/stats.getMessageStats"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/stats.getMessageStats#possible-errors">details</a>)</para></summary>
            <param name="dark">Whether to enable dark theme for graph colors</param>
            <param name="channel">Channel ID</param>
            <param name="msg_id">Message ID</param>
        </member>
        <member name="M:TL.SchemaExtensions.Stats_GetStoryStats(WTelegram.Client,TL.InputPeer,System.Int32,System.Boolean)">
            <summary>Get <a href="https://corefork.telegram.org/api/stats">statistics</a> for a certain <a href="https://corefork.telegram.org/api/stories">story</a>.		<para>See <a href="https://corefork.telegram.org/method/stats.getStoryStats"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/stats.getStoryStats#possible-errors">details</a>)</para></summary>
            <param name="dark">Whether to enable the dark theme for graph colors</param>
            <param name="peer">The peer that posted the story</param>
            <param name="id">Story ID</param>
        </member>
        <member name="M:TL.SchemaExtensions.Stats_GetStoryPublicForwards(WTelegram.Client,TL.InputPeer,System.Int32,System.String,System.Int32)">
            <summary>Obtain forwards of a <a href="https://corefork.telegram.org/api/stories">story</a> as a message to public chats and reposts by public channels.		<para>See <a href="https://corefork.telegram.org/method/stats.getStoryPublicForwards"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/stats.getStoryPublicForwards#possible-errors">details</a>)</para></summary>
            <param name="peer">Peer where the story was originally posted</param>
            <param name="id"><a href="https://corefork.telegram.org/api/stories">Story</a> ID</param>
            <param name="offset">Offset for pagination, from <see cref="T:TL.Stats_PublicForwards"/>.<c>next_offset</c>.</param>
            <param name="limit">Maximum number of results to return, <a href="https://corefork.telegram.org/api/offsets">see pagination</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Stats_GetBroadcastRevenueStats(WTelegram.Client,TL.InputChannelBase,System.Boolean)">
            <summary><para>See <a href="https://corefork.telegram.org/method/stats.getBroadcastRevenueStats"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Stats_GetBroadcastRevenueWithdrawalUrl(WTelegram.Client,TL.InputChannelBase,TL.InputCheckPasswordSRP)">
            <summary><para>See <a href="https://corefork.telegram.org/method/stats.getBroadcastRevenueWithdrawalUrl"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Stats_GetBroadcastRevenueTransactions(WTelegram.Client,TL.InputChannelBase,System.Int32,System.Int32)">
            <summary><para>See <a href="https://corefork.telegram.org/method/stats.getBroadcastRevenueTransactions"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Chatlists_ExportChatlistInvite(WTelegram.Client,TL.InputChatlist,System.String,TL.InputPeer[])">
            <summary>Export a <a href="https://corefork.telegram.org/api/folders">folder »</a>, creating a <a href="https://corefork.telegram.org/api/links#chat-folder-links">chat folder deep link »</a>.		<para>See <a href="https://corefork.telegram.org/method/chatlists.exportChatlistInvite"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/chatlists.exportChatlistInvite#possible-errors">details</a>)</para></summary>
            <param name="chatlist">The folder to export</param>
            <param name="title">An optional name for the link</param>
            <param name="peers">The list of channels, group and supergroups to share with the link. Basic groups will automatically be <a href="https://corefork.telegram.org/api/channel#migration">converted to supergroups</a> when invoking the method.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Chatlists_DeleteExportedInvite(WTelegram.Client,TL.InputChatlist,System.String)">
            <summary>Delete a previously created <a href="https://corefork.telegram.org/api/links#chat-folder-links">chat folder deep link »</a>.		<para>See <a href="https://corefork.telegram.org/method/chatlists.deleteExportedInvite"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/chatlists.deleteExportedInvite#possible-errors">details</a>)</para></summary>
            <param name="chatlist">The related folder</param>
            <param name="slug"><c>slug</c> obtained from the <a href="https://corefork.telegram.org/api/links#chat-folder-links">chat folder deep link »</a>.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Chatlists_EditExportedInvite(WTelegram.Client,TL.InputChatlist,System.String,System.String,TL.InputPeer[])">
            <summary>Edit a <a href="https://corefork.telegram.org/api/links#chat-folder-links">chat folder deep link »</a>.		<para>See <a href="https://corefork.telegram.org/method/chatlists.editExportedInvite"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/chatlists.editExportedInvite#possible-errors">details</a>)</para></summary>
            <param name="chatlist">Folder ID</param>
            <param name="slug"><c>slug</c> obtained from the <a href="https://corefork.telegram.org/api/links#chat-folder-links">chat folder deep link »</a>.</param>
            <param name="title">If set, sets a new name for the link</param>
            <param name="peers">If set, changes the list of peers shared with the link</param>
        </member>
        <member name="M:TL.SchemaExtensions.Chatlists_GetExportedInvites(WTelegram.Client,TL.InputChatlist)">
            <summary>List all <a href="https://corefork.telegram.org/api/links#chat-folder-links">chat folder deep links »</a> associated to a folder		<para>See <a href="https://corefork.telegram.org/method/chatlists.getExportedInvites"/> [bots: ✓]</para></summary>
            <param name="chatlist">The folder</param>
        </member>
        <member name="M:TL.SchemaExtensions.Chatlists_CheckChatlistInvite(WTelegram.Client,System.String)">
            <summary>Obtain information about a <a href="https://corefork.telegram.org/api/links#chat-folder-links">chat folder deep link »</a>.		<para>See <a href="https://corefork.telegram.org/method/chatlists.checkChatlistInvite"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/chatlists.checkChatlistInvite#possible-errors">details</a>)</para></summary>
            <param name="slug"><c>slug</c> obtained from the <a href="https://corefork.telegram.org/api/links#chat-folder-links">chat folder deep link »</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Chatlists_JoinChatlistInvite(WTelegram.Client,System.String,TL.InputPeer[])">
            <summary>Import a <a href="https://corefork.telegram.org/api/links#chat-folder-links">chat folder deep link »</a>, joining some or all the chats in the folder.		<para>See <a href="https://corefork.telegram.org/method/chatlists.joinChatlistInvite"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/chatlists.joinChatlistInvite#possible-errors">details</a>)</para></summary>
            <param name="slug"><c>slug</c> obtained from a <a href="https://corefork.telegram.org/api/links#chat-folder-links">chat folder deep link »</a>.</param>
            <param name="peers">List of new chats to join, fetched using <see cref="M:TL.SchemaExtensions.Chatlists_CheckChatlistInvite(WTelegram.Client,System.String)">Chatlists_CheckChatlistInvite</see> and filtered as specified in the <a href="https://corefork.telegram.org/api/folders#shared-folders">documentation »</a>.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Chatlists_GetChatlistUpdates(WTelegram.Client,TL.InputChatlist)">
            <summary>Fetch new chats associated with an imported <a href="https://corefork.telegram.org/api/links#chat-folder-links">chat folder deep link »</a>. Must be invoked at most every <c>chatlist_update_period</c> seconds (as per the related <a href="https://corefork.telegram.org/api/config#chatlist-update-period">client configuration parameter »</a>).		<para>See <a href="https://corefork.telegram.org/method/chatlists.getChatlistUpdates"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/chatlists.getChatlistUpdates#possible-errors">details</a>)</para></summary>
            <param name="chatlist">The folder</param>
        </member>
        <member name="M:TL.SchemaExtensions.Chatlists_JoinChatlistUpdates(WTelegram.Client,TL.InputChatlist,TL.InputPeer[])">
            <summary>Join channels and supergroups recently added to a <a href="https://corefork.telegram.org/api/links#chat-folder-links">chat folder deep link »</a>.		<para>See <a href="https://corefork.telegram.org/method/chatlists.joinChatlistUpdates"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/chatlists.joinChatlistUpdates#possible-errors">details</a>)</para></summary>
            <param name="chatlist">The folder</param>
            <param name="peers">List of new chats to join, fetched using <see cref="M:TL.SchemaExtensions.Chatlists_GetChatlistUpdates(WTelegram.Client,TL.InputChatlist)">Chatlists_GetChatlistUpdates</see> and filtered as specified in the <a href="https://corefork.telegram.org/api/folders#shared-folders">documentation »</a>.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Chatlists_HideChatlistUpdates(WTelegram.Client,TL.InputChatlist)">
            <summary>Dismiss new pending peers recently added to a <a href="https://corefork.telegram.org/api/links#chat-folder-links">chat folder deep link »</a>.		<para>See <a href="https://corefork.telegram.org/method/chatlists.hideChatlistUpdates"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/chatlists.hideChatlistUpdates#possible-errors">details</a>)</para></summary>
            <param name="chatlist">The folder</param>
        </member>
        <member name="M:TL.SchemaExtensions.Chatlists_GetLeaveChatlistSuggestions(WTelegram.Client,TL.InputChatlist)">
            <summary>Returns identifiers of pinned or always included chats from a chat folder imported using a <a href="https://corefork.telegram.org/api/links#chat-folder-links">chat folder deep link »</a>, which are suggested to be left when the chat folder is deleted.		<para>See <a href="https://corefork.telegram.org/method/chatlists.getLeaveChatlistSuggestions"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/chatlists.getLeaveChatlistSuggestions#possible-errors">details</a>)</para></summary>
            <param name="chatlist">Folder ID</param>
        </member>
        <member name="M:TL.SchemaExtensions.Chatlists_LeaveChatlist(WTelegram.Client,TL.InputChatlist,TL.InputPeer[])">
            <summary>Delete a folder imported using a <a href="https://corefork.telegram.org/api/links#chat-folder-links">chat folder deep link »</a>		<para>See <a href="https://corefork.telegram.org/method/chatlists.leaveChatlist"/> [bots: ✓]</para></summary>
            <param name="chatlist">Folder ID</param>
            <param name="peers">Also leave the specified channels and groups</param>
        </member>
        <member name="M:TL.SchemaExtensions.Stories_CanSendStory(WTelegram.Client,TL.InputPeer)">
            <summary>Check whether we can post stories as the specified peer.		<para>See <a href="https://corefork.telegram.org/method/stories.canSendStory"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/stories.canSendStory#possible-errors">details</a>)</para></summary>
            <param name="peer">The peer from which we wish to post stories.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Stories_SendStory(WTelegram.Client,TL.InputPeer,TL.InputMedia,TL.InputPrivacyRule[],System.Int64,System.String,TL.MessageEntity[],System.Nullable{System.Int32},TL.MediaArea[],TL.InputPeer,System.Nullable{System.Int32},System.Boolean,System.Boolean,System.Boolean)">
            <summary>Uploads a <a href="https://corefork.telegram.org/api/stories">Telegram Story</a>.		<para>See <a href="https://corefork.telegram.org/method/stories.sendStory"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/stories.sendStory#possible-errors">details</a>)</para></summary>
            <param name="pinned">Whether to add the story to the profile automatically upon expiration. If not set, the story will only be added to the archive, see <a href="https://corefork.telegram.org/api/stories">here »</a> for more info.</param>
            <param name="noforwards">If set, disables forwards, screenshots, and downloads.</param>
            <param name="fwd_modified">Set this flag when reposting stories with <c>fwd_from_id</c>+<c>fwd_from_id</c>, if the <c>media</c> was modified before reposting.</param>
            <param name="peer">The peer to send the story as.</param>
            <param name="media">The story media.</param>
            <param name="media_areas"><a href="https://corefork.telegram.org/api/stories#media-areas">Media areas</a> associated to the story, see <a href="https://corefork.telegram.org/api/stories#media-areas">here »</a> for more info.</param>
            <param name="caption">Story caption.</param>
            <param name="entities"><a href="https://corefork.telegram.org/api/entities">Message entities for styled text</a>, if allowed by the <a href="https://corefork.telegram.org/api/config#stories-entities"><c>stories_entities</c> client configuration parameter »</a>.</param>
            <param name="privacy_rules"><a href="https://corefork.telegram.org/api/privacy">Privacy rules</a> for the story, indicating who can or can't view the story.</param>
            <param name="random_id">Unique client message ID required to prevent message resending. <para>You can use <see cref="M:WTelegram.Helpers.RandomLong"/></para></param>
            <param name="period">Period after which the story is moved to archive (and to the profile if <c>pinned</c> is set), in seconds; must be one of <c>6 * 3600</c>, <c>12 * 3600</c>, <c>86400</c>, or <c>2 * 86400</c> for Telegram Premium users, and <c>86400</c> otherwise.</param>
            <param name="fwd_from_id">If set, indicates that this story is a repost of story with ID <c>fwd_from_story</c> posted by the peer in <c>fwd_from_id</c>.</param>
            <param name="fwd_from_story">If set, indicates that this story is a repost of story with ID <c>fwd_from_story</c> posted by the peer in <c>fwd_from_id</c>.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Stories_EditStory(WTelegram.Client,TL.InputPeer,System.Int32,TL.InputMedia,System.String,TL.MessageEntity[],TL.InputPrivacyRule[],TL.MediaArea[])">
            <summary>Edit an uploaded <a href="https://corefork.telegram.org/api/stories">story</a>		<para>See <a href="https://corefork.telegram.org/method/stories.editStory"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/stories.editStory#possible-errors">details</a>)</para></summary>
            <param name="peer">Peer where the story was posted.</param>
            <param name="id">ID of story to edit.</param>
            <param name="media">If specified, replaces the story media.</param>
            <param name="media_areas"><a href="https://corefork.telegram.org/api/stories#media-areas">Media areas</a> associated to the story, see <a href="https://corefork.telegram.org/api/stories#media-areas">here »</a> for more info.</param>
            <param name="caption">If specified, replaces the story caption.</param>
            <param name="entities"><a href="https://corefork.telegram.org/api/entities">Message entities for styled text in the caption</a>, if allowed by the <a href="https://corefork.telegram.org/api/config#stories-entities"><c>stories_entities</c> client configuration parameter »</a>.</param>
            <param name="privacy_rules">If specified, alters the <a href="https://corefork.telegram.org/api/privacy">privacy settings »</a> of the story, changing who can or can't view the story.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Stories_DeleteStories(WTelegram.Client,TL.InputPeer,System.Int32[])">
            <summary>Deletes some posted <a href="https://corefork.telegram.org/api/stories">stories</a>.		<para>See <a href="https://corefork.telegram.org/method/stories.deleteStories"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/stories.deleteStories#possible-errors">details</a>)</para></summary>
            <param name="peer">Channel/user from where to delete stories.</param>
            <param name="id">IDs of stories to delete.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Stories_TogglePinned(WTelegram.Client,TL.InputPeer,System.Int32[],System.Boolean)">
            <summary>Pin or unpin one or more stories		<para>See <a href="https://corefork.telegram.org/method/stories.togglePinned"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/stories.togglePinned#possible-errors">details</a>)</para></summary>
            <param name="peer">Peer where to pin or unpin stories</param>
            <param name="id">IDs of stories to pin or unpin</param>
            <param name="pinned">Whether to pin or unpin the stories</param>
        </member>
        <member name="M:TL.SchemaExtensions.Stories_GetAllStories(WTelegram.Client,System.String,System.Boolean,System.Boolean)">
            <summary>Fetch the List of active (or active and hidden) stories, see <a href="https://corefork.telegram.org/api/stories#watching-stories">here »</a> for more info on watching stories.		<para>See <a href="https://corefork.telegram.org/method/stories.getAllStories"/></para></summary>
            <param name="next">If <c>next</c> and <c>state</c> are both set, uses the passed <c>state</c> to paginate to the next results; if neither <c>state</c> nor <c>next</c> are set, fetches the initial page; if <c>state</c> is set and <c>next</c> is not set, check for changes in the active/hidden peerset, see <a href="https://corefork.telegram.org/api/stories#watching-stories">here »</a> for more info on the full flow.</param>
            <param name="hidden">If set, fetches the hidden active story list, otherwise fetches the active story list, see <a href="https://corefork.telegram.org/api/stories#watching-stories">here »</a> for more info on the full flow.</param>
            <param name="state">If <c>next</c> and <c>state</c> are both set, uses the passed <c>state</c> to paginate to the next results; if neither <c>state</c> nor <c>next</c> are set, fetches the initial page; if <c>state</c> is set and <c>next</c> is not set, check for changes in the active/hidden peerset, see <a href="https://corefork.telegram.org/api/stories#watching-stories">here »</a> for more info on the full flow.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Stories_GetPinnedStories(WTelegram.Client,TL.InputPeer,System.Int32,System.Int32)">
            <summary>Fetch the <a href="https://corefork.telegram.org/api/stories#pinned-or-archived-stories">stories</a> pinned on a peer's profile.		<para>See <a href="https://corefork.telegram.org/method/stories.getPinnedStories"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/stories.getPinnedStories#possible-errors">details</a>)</para></summary>
            <param name="peer">Peer whose pinned stories should be fetched</param>
            <param name="offset_id"><a href="https://corefork.telegram.org/api/offsets">Offsets for pagination, for more info click here</a></param>
            <param name="limit">Maximum number of results to return, <a href="https://corefork.telegram.org/api/offsets">see pagination</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Stories_GetStoriesArchive(WTelegram.Client,TL.InputPeer,System.Int32,System.Int32)">
            <summary>Fetch the <a href="https://corefork.telegram.org/api/stories#pinned-or-archived-stories">story archive »</a> of a peer we control.		<para>See <a href="https://corefork.telegram.org/method/stories.getStoriesArchive"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/stories.getStoriesArchive#possible-errors">details</a>)</para></summary>
            <param name="peer">Peer whose archived stories should be fetched</param>
            <param name="offset_id"><a href="https://corefork.telegram.org/api/offsets">Offsets for pagination, for more info click here</a></param>
            <param name="limit">Maximum number of results to return, <a href="https://corefork.telegram.org/api/offsets">see pagination</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Stories_GetStoriesByID(WTelegram.Client,TL.InputPeer,System.Int32[])">
            <summary>Obtain full info about a set of <a href="https://corefork.telegram.org/api/stories">stories</a> by their IDs.		<para>See <a href="https://corefork.telegram.org/method/stories.getStoriesByID"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/stories.getStoriesByID#possible-errors">details</a>)</para></summary>
            <param name="peer">Peer where the stories were posted</param>
            <param name="id">Story IDs</param>
        </member>
        <member name="M:TL.SchemaExtensions.Stories_ToggleAllStoriesHidden(WTelegram.Client,System.Boolean)">
            <summary>Hide the active stories of a specific peer, preventing them from being displayed on the action bar on the homescreen.		<para>See <a href="https://corefork.telegram.org/method/stories.toggleAllStoriesHidden"/></para></summary>
            <param name="hidden">Whether to hide or unhide all active stories of the peer</param>
        </member>
        <member name="M:TL.SchemaExtensions.Stories_ReadStories(WTelegram.Client,TL.InputPeer,System.Int32)">
            <summary>Mark all stories up to a certain ID as read, for a given peer; will emit an <see cref="T:TL.UpdateReadStories"/> update to all logged-in sessions.		<para>See <a href="https://corefork.telegram.org/method/stories.readStories"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/stories.readStories#possible-errors">details</a>)</para></summary>
            <param name="peer">The peer whose stories should be marked as read.</param>
            <param name="max_id">Mark all stories up to and including this ID as read</param>
        </member>
        <member name="M:TL.SchemaExtensions.Stories_IncrementStoryViews(WTelegram.Client,TL.InputPeer,System.Int32[])">
            <summary>Increment the view counter of one or more stories.		<para>See <a href="https://corefork.telegram.org/method/stories.incrementStoryViews"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/stories.incrementStoryViews#possible-errors">details</a>)</para></summary>
            <param name="peer">Peer where the stories were posted.</param>
            <param name="id">IDs of the stories (maximum 200 at a time).</param>
        </member>
        <member name="M:TL.SchemaExtensions.Stories_GetStoryViewsList(WTelegram.Client,TL.InputPeer,System.Int32,System.String,System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Obtain the list of users that have viewed a specific <a href="https://corefork.telegram.org/api/stories">story we posted</a>		<para>See <a href="https://corefork.telegram.org/method/stories.getStoryViewsList"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/stories.getStoryViewsList#possible-errors">details</a>)</para></summary>
            <param name="just_contacts">Whether to only fetch view reaction/views made by our <a href="https://corefork.telegram.org/api/contacts">contacts</a></param>
            <param name="reactions_first">Whether to return <see cref="T:TL.StoryView"/> info about users that reacted to the story (i.e. if set, the server will first sort results by view date as usual, and then also additionally sort the list by putting <see cref="T:TL.StoryView"/>s with an associated reaction first in the list). Ignored if <c>forwards_first</c> is set.</param>
            <param name="forwards_first">If set, returns forwards and reposts first, then reactions, then other views; otherwise returns interactions sorted just by interaction date.</param>
            <param name="peer">Peer where the story was posted</param>
            <param name="q">Search for specific peers</param>
            <param name="id">Story ID</param>
            <param name="offset">Offset for pagination, obtained from <see cref="T:TL.Stories_StoryViewsList"/>.<c>next_offset</c></param>
            <param name="limit">Maximum number of results to return, <a href="https://corefork.telegram.org/api/offsets">see pagination</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Stories_GetStoriesViews(WTelegram.Client,TL.InputPeer,System.Int32[])">
            <summary>Obtain info about the view count, forward count, reactions and recent viewers of one or more <a href="https://corefork.telegram.org/api/stories">stories</a>.		<para>See <a href="https://corefork.telegram.org/method/stories.getStoriesViews"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/stories.getStoriesViews#possible-errors">details</a>)</para></summary>
            <param name="peer">Peer whose stories should be fetched</param>
            <param name="id">Story IDs</param>
        </member>
        <member name="M:TL.SchemaExtensions.Stories_ExportStoryLink(WTelegram.Client,TL.InputPeer,System.Int32)">
            <summary>Generate a <a href="https://corefork.telegram.org/api/links#story-links">story deep link</a> for a specific story		<para>See <a href="https://corefork.telegram.org/method/stories.exportStoryLink"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/stories.exportStoryLink#possible-errors">details</a>)</para></summary>
            <param name="peer">Peer where the story was posted</param>
            <param name="id">Story ID</param>
        </member>
        <member name="M:TL.SchemaExtensions.Stories_Report(WTelegram.Client,TL.InputPeer,System.Int32[],TL.ReportReason,System.String)">
            <summary>Report a story.		<para>See <a href="https://corefork.telegram.org/method/stories.report"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/stories.report#possible-errors">details</a>)</para></summary>
            <param name="peer">The peer that uploaded the story.</param>
            <param name="id">IDs of the stories to report.</param>
            <param name="reason">Why are these storeis being reported.</param>
            <param name="message">Comment for report moderation</param>
        </member>
        <member name="M:TL.SchemaExtensions.Stories_ActivateStealthMode(WTelegram.Client,System.Boolean,System.Boolean)">
            <summary>Activates <a href="https://corefork.telegram.org/api/stories#stealth-mode">stories stealth mode</a>, see <a href="https://corefork.telegram.org/api/stories#stealth-mode">here »</a> for more info.		<para>See <a href="https://corefork.telegram.org/method/stories.activateStealthMode"/></para></summary>
            <param name="past">Whether to erase views from any stories opened in the past <a href="https://corefork.telegram.org/api/config#stories-stealth-past-period"><c>stories_stealth_past_period</c> seconds »</a>, as specified by the <a href="https://corefork.telegram.org/api/config#client-configuration">client configuration</a>.</param>
            <param name="future">Whether to hide future story views for the next <a href="https://corefork.telegram.org/api/config#stories-stealth-future-period"><c>stories_stealth_future_period</c> seconds »</a>, as specified by the <a href="https://corefork.telegram.org/api/config#client-configuration">client configuration</a>.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Stories_SendReaction(WTelegram.Client,TL.InputPeer,System.Int32,TL.Reaction,System.Boolean)">
            <summary>React to a story.		<para>See <a href="https://corefork.telegram.org/method/stories.sendReaction"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/stories.sendReaction#possible-errors">details</a>)</para></summary>
            <param name="add_to_recent">Whether to add this reaction to the <a href="https://corefork.telegram.org/api/reactions#recent-reactions">recent reactions list »</a>.</param>
            <param name="peer">The peer that sent the story</param>
            <param name="story_id">ID of the story to react to</param>
            <param name="reaction">Reaction</param>
        </member>
        <member name="M:TL.SchemaExtensions.Stories_GetPeerStories(WTelegram.Client,TL.InputPeer)">
            <summary>Fetch the full active <a href="https://corefork.telegram.org/api/stories#watching-stories">story list</a> of a specific peer.		<para>See <a href="https://corefork.telegram.org/method/stories.getPeerStories"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/stories.getPeerStories#possible-errors">details</a>)</para></summary>
            <param name="peer">Peer whose stories should be fetched</param>
        </member>
        <member name="M:TL.SchemaExtensions.Stories_GetAllReadPeerStories(WTelegram.Client)">
            <summary>Obtain the latest read story ID for all peers when first logging in, returned as a list of <see cref="T:TL.UpdateReadStories"/> updates, see <a href="https://corefork.telegram.org/api/stories#watching-stories">here »</a> for more info.		<para>See <a href="https://corefork.telegram.org/method/stories.getAllReadPeerStories"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Stories_GetPeerMaxIDs(WTelegram.Client,TL.InputPeer[])">
            <summary>Get the IDs of the maximum read stories for a set of peers.		<para>See <a href="https://corefork.telegram.org/method/stories.getPeerMaxIDs"/></para></summary>
            <param name="id">Peers</param>
        </member>
        <member name="M:TL.SchemaExtensions.Stories_GetChatsToSend(WTelegram.Client)">
            <summary>Obtain a list of channels where the user can post <a href="https://corefork.telegram.org/api/stories">stories</a>		<para>See <a href="https://corefork.telegram.org/method/stories.getChatsToSend"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Stories_TogglePeerStoriesHidden(WTelegram.Client,TL.InputPeer,System.Boolean)">
            <summary>Hide the active stories of a user, preventing them from being displayed on the action bar on the homescreen, see <a href="https://corefork.telegram.org/api/stories#hiding-stories-of-other-users">here »</a> for more info.		<para>See <a href="https://corefork.telegram.org/method/stories.togglePeerStoriesHidden"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/stories.togglePeerStoriesHidden#possible-errors">details</a>)</para></summary>
            <param name="peer">Peer whose stories should be (un)hidden.</param>
            <param name="hidden">Whether to hide or unhide stories.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Stories_GetStoryReactionsList(WTelegram.Client,TL.InputPeer,System.Int32,System.Int32,TL.Reaction,System.String,System.Boolean)">
            <summary>Get the <a href="https://corefork.telegram.org/api/reactions">reaction</a> and interaction list of a <a href="https://corefork.telegram.org/api/stories">story</a> posted to a channel, along with the sender of each reaction.		<para>See <a href="https://corefork.telegram.org/method/stories.getStoryReactionsList"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/stories.getStoryReactionsList#possible-errors">details</a>)</para></summary>
            <param name="forwards_first">If set, returns forwards and reposts first, then reactions, then other views; otherwise returns interactions sorted just by interaction date.</param>
            <param name="peer">Channel</param>
            <param name="id"><a href="https://corefork.telegram.org/api/stories">Story</a> ID</param>
            <param name="reaction">Get only reactions of this type</param>
            <param name="offset">Offset for pagination (taken from the <c>next_offset</c> field of the returned <see cref="T:TL.Stories_StoryReactionsList"/>); empty in the first request.</param>
            <param name="limit">Maximum number of results to return, <a href="https://corefork.telegram.org/api/offsets">see pagination</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Stories_TogglePinnedToTop(WTelegram.Client,TL.InputPeer,System.Int32[])">
            <summary><para>See <a href="https://corefork.telegram.org/method/stories.togglePinnedToTop"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Premium_GetBoostsList(WTelegram.Client,TL.InputPeer,System.String,System.Int32,System.Boolean)">
            <summary>Obtains info about the boosts that were applied to a certain channel (admins only)		<para>See <a href="https://corefork.telegram.org/method/premium.getBoostsList"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/premium.getBoostsList#possible-errors">details</a>)</para></summary>
            <param name="gifts">Whether to return only info about boosts received from <a href="https://corefork.telegram.org/api/giveaways">gift codes and giveaways created by the channel »</a></param>
            <param name="peer">The channel</param>
            <param name="offset">Offset for pagination, obtained from <see cref="T:TL.Premium_BoostsList"/>.<c>next_offset</c></param>
            <param name="limit">Maximum number of results to return, <a href="https://corefork.telegram.org/api/offsets">see pagination</a></param>
        </member>
        <member name="M:TL.SchemaExtensions.Premium_GetMyBoosts(WTelegram.Client)">
            <summary>Obtain which peers are we currently <a href="https://corefork.telegram.org/api/boost">boosting</a>, and how many <a href="https://corefork.telegram.org/api/boost">boost slots</a> we have left.		<para>See <a href="https://corefork.telegram.org/method/premium.getMyBoosts"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Premium_ApplyBoost(WTelegram.Client,TL.InputPeer,System.Int32[])">
            <summary>Apply one or more <a href="https://corefork.telegram.org/api/boost">boosts »</a> to a peer.		<para>See <a href="https://corefork.telegram.org/method/premium.applyBoost"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/premium.applyBoost#possible-errors">details</a>)</para></summary>
            <param name="slots">Which <a href="https://corefork.telegram.org/api/boost">boost slots</a> to assign to this peer.</param>
            <param name="peer">The peer to boost.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Premium_GetBoostsStatus(WTelegram.Client,TL.InputPeer)">
            <summary>Gets the current <a href="https://corefork.telegram.org/api/boost">number of boosts</a> of a channel.		<para>See <a href="https://corefork.telegram.org/method/premium.getBoostsStatus"/></para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/premium.getBoostsStatus#possible-errors">details</a>)</para></summary>
            <param name="peer">The peer.</param>
        </member>
        <member name="M:TL.SchemaExtensions.Premium_GetUserBoosts(WTelegram.Client,TL.InputPeer,TL.InputUserBase)">
            <summary>Returns the lists of boost that were applied to a channel by a specific user (admins only)		<para>See <a href="https://corefork.telegram.org/method/premium.getUserBoosts"/> [bots: ✓]</para>		<para>Possible <see cref="T:TL.RpcException"/> codes: 400 (<a href="https://corefork.telegram.org/method/premium.getUserBoosts#possible-errors">details</a>)</para></summary>
            <param name="peer">The channel</param>
            <param name="user_id">The user</param>
        </member>
        <member name="M:TL.SchemaExtensions.Smsjobs_IsEligibleToJoin(WTelegram.Client)">
            <summary><para>See <a href="https://corefork.telegram.org/method/smsjobs.isEligibleToJoin"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Smsjobs_Join(WTelegram.Client)">
            <summary><para>See <a href="https://corefork.telegram.org/method/smsjobs.join"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Smsjobs_Leave(WTelegram.Client)">
            <summary><para>See <a href="https://corefork.telegram.org/method/smsjobs.leave"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Smsjobs_UpdateSettings(WTelegram.Client,System.Boolean)">
            <summary><para>See <a href="https://corefork.telegram.org/method/smsjobs.updateSettings"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Smsjobs_GetStatus(WTelegram.Client)">
            <summary><para>See <a href="https://corefork.telegram.org/method/smsjobs.getStatus"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Smsjobs_GetSmsJob(WTelegram.Client,System.String)">
            <summary><para>See <a href="https://corefork.telegram.org/method/smsjobs.getSmsJob"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Smsjobs_FinishJob(WTelegram.Client,System.String,System.String)">
            <summary><para>See <a href="https://corefork.telegram.org/method/smsjobs.finishJob"/></para></summary>
        </member>
        <member name="M:TL.SchemaExtensions.Fragment_GetCollectibleInfo(WTelegram.Client,TL.InputCollectible)">
            <summary><para>See <a href="https://corefork.telegram.org/method/fragment.getCollectibleInfo"/></para></summary>
        </member>
        <member name="T:TL.DecryptedMessageBase">
            <summary>Object describes the contents of an encrypted message.		<para>See <a href="https://corefork.telegram.org/type/DecryptedMessage"/></para></summary>
        </member>
        <member name="P:TL.DecryptedMessageBase.FFlags">
            <summary>Flags, see <a href="https://corefork.telegram.org/mtproto/TL-combinators#conditional-fields">TL conditional fields</a> (added in layer 45)</summary>
        </member>
        <member name="P:TL.DecryptedMessageBase.RandomId">
            <summary>Random message ID, assigned by the author of message.<br/>Must be equal to the ID passed to sending method.</summary>
        </member>
        <member name="P:TL.DecryptedMessageBase.Ttl">
            <summary>Message lifetime. Has higher priority than <see cref="T:TL.Layer8.DecryptedMessageActionSetMessageTTL"/>.<br/>Parameter added in Layer 17.</summary>
        </member>
        <member name="P:TL.DecryptedMessageBase.Message">
            <summary>Message text</summary>
        </member>
        <member name="P:TL.DecryptedMessageBase.Media">
            <summary>Media content</summary>
        </member>
        <member name="P:TL.DecryptedMessageBase.Entities">
            <summary>Message <a href="https://corefork.telegram.org/api/entities">entities</a> for styled text (parameter added in layer 45)</summary>
        </member>
        <member name="P:TL.DecryptedMessageBase.ViaBotName">
            <summary>Specifies the ID of the inline bot that generated the message (parameter added in layer 45)</summary>
        </member>
        <member name="P:TL.DecryptedMessageBase.ReplyToRandom">
            <summary>Random message ID of the message this message replies to (parameter added in layer 45)</summary>
        </member>
        <member name="P:TL.DecryptedMessageBase.Grouped">
            <summary>Random group ID, assigned by the author of message.<br/>Multiple encrypted messages with a photo attached and with the same group ID indicate an <a href="https://corefork.telegram.org/api/files#albums-grouped-media">album or grouped media</a> (parameter added in layer 45)</summary>
        </member>
        <member name="T:TL.DecryptedMessageMedia">
            <summary>Object describes media contents of an encrypted message.		<para>See <a href="https://corefork.telegram.org/type/DecryptedMessageMedia"/></para></summary>
            <remarks>a <see langword="null"/> value means <a href="https://corefork.telegram.org/constructor/decryptedMessageMediaEmpty">decryptedMessageMediaEmpty</a></remarks>
        </member>
        <member name="T:TL.DecryptedMessageAction">
            <summary>Object describes the action to which a service message is linked.		<para>See <a href="https://corefork.telegram.org/type/DecryptedMessageAction"/></para></summary>
        </member>
        <member name="T:TL.FileLocationBase">
            <summary>Indicates the location of a photo, will be deprecated soon		<para>See <a href="https://corefork.telegram.org/type/FileLocation"/></para></summary>
        </member>
        <member name="P:TL.FileLocationBase.VolumeId">
            <summary>Server volume</summary>
        </member>
        <member name="P:TL.FileLocationBase.LocalId">
            <summary>File ID</summary>
        </member>
        <member name="P:TL.FileLocationBase.Secret">
            <summary>Checksum to access the file</summary>
        </member>
        <member name="T:TL.Layer8.DecryptedMessage">
            <summary>Contents of an encrypted message.		<para>See <a href="https://corefork.telegram.org/constructor/decryptedMessage"/></para></summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessage.random_id">
            <summary>Random message ID, assigned by the author of message.<br/>Must be equal to the ID passed to sending method.</summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessage.message">
            <summary>Message text</summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessage.media">
            <summary>Media content</summary>
        </member>
        <member name="P:TL.Layer8.DecryptedMessage.RandomId">
            <summary>Random message ID, assigned by the author of message.<br/>Must be equal to the ID passed to sending method.</summary>
        </member>
        <member name="P:TL.Layer8.DecryptedMessage.Message">
            <summary>Message text</summary>
        </member>
        <member name="P:TL.Layer8.DecryptedMessage.Media">
            <summary>Media content</summary>
        </member>
        <member name="T:TL.Layer8.DecryptedMessageService">
            <summary>Contents of an encrypted service message.		<para>See <a href="https://corefork.telegram.org/constructor/decryptedMessageService"/></para></summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageService.random_id">
            <summary>Random message ID, assigned by the message author.<br/>Must be equal to the ID passed to the sending method.</summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageService.action">
            <summary>Action relevant to the service message</summary>
        </member>
        <member name="P:TL.Layer8.DecryptedMessageService.RandomId">
            <summary>Random message ID, assigned by the message author.<br/>Must be equal to the ID passed to the sending method.</summary>
        </member>
        <member name="P:TL.Layer8.DecryptedMessageService.Action">
            <summary>Action relevant to the service message</summary>
        </member>
        <member name="T:TL.Layer8.DecryptedMessageMediaPhoto">
            <summary>Photo attached to an encrypted message.		<para>See <a href="https://corefork.telegram.org/constructor/decryptedMessageMediaPhoto"/></para></summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageMediaPhoto.thumb">
            <summary>Content of thumbnail file (JPEGfile, quality 55, set in a square 90x90)</summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageMediaPhoto.thumb_w">
            <summary>Thumbnail width</summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageMediaPhoto.thumb_h">
            <summary>Thumbnail height</summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageMediaPhoto.w">
            <summary>Photo width</summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageMediaPhoto.h">
            <summary>Photo height</summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageMediaPhoto.size">
            <summary>Size of the photo in bytes</summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageMediaPhoto.key">
            <summary>Key to decrypt an attached file with a full version</summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageMediaPhoto.iv">
            <summary>Initialization vector</summary>
        </member>
        <member name="T:TL.Layer8.DecryptedMessageMediaVideo">
            <summary>Video attached to an encrypted message.		<para>See <a href="https://corefork.telegram.org/constructor/decryptedMessageMediaVideo"/></para></summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageMediaVideo.thumb">
            <summary>Content of thumbnail file (JPEG file, quality 55, set in a square 90x90)</summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageMediaVideo.thumb_w">
            <summary>Thumbnail width</summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageMediaVideo.thumb_h">
            <summary>Thumbnail height</summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageMediaVideo.duration">
            <summary>Duration of video in seconds</summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageMediaVideo.w">
            <summary>Image width</summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageMediaVideo.h">
            <summary>Image height</summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageMediaVideo.size">
            <summary>File size</summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageMediaVideo.key">
            <summary>Key to decrypt the attached video file</summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageMediaVideo.iv">
            <summary>Initialization vector</summary>
        </member>
        <member name="T:TL.Layer8.DecryptedMessageMediaGeoPoint">
            <summary>GeoPoint attached to an encrypted message.		<para>See <a href="https://corefork.telegram.org/constructor/decryptedMessageMediaGeoPoint"/></para></summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageMediaGeoPoint.lat">
            <summary>Latitude of point</summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageMediaGeoPoint.lon">
            <summary>Longitude of point</summary>
        </member>
        <member name="T:TL.Layer8.DecryptedMessageMediaContact">
            <summary>Contact attached to an encrypted message.		<para>See <a href="https://corefork.telegram.org/constructor/decryptedMessageMediaContact"/></para></summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageMediaContact.phone_number">
            <summary>Phone number</summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageMediaContact.first_name">
            <summary>Contact's first name</summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageMediaContact.last_name">
            <summary>Contact's last name</summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageMediaContact.user_id">
            <summary>Telegram User ID of signed-up contact</summary>
        </member>
        <member name="T:TL.Layer8.DecryptedMessageMediaDocument">
            <summary>Document attached to a message in a secret chat.		<para>See <a href="https://corefork.telegram.org/constructor/decryptedMessageMediaDocument"/></para></summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageMediaDocument.thumb">
            <summary>Thumbnail-file contents (JPEG-file, quality 55, set in a 90x90 square)</summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageMediaDocument.thumb_w">
            <summary>Thumbnail width</summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageMediaDocument.thumb_h">
            <summary>Thumbnail height</summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageMediaDocument.mime_type">
            <summary>File MIME-type</summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageMediaDocument.size">
            <summary>Document size (<see cref="T:System.Int32"/> on layer &lt;143, <see cref="T:System.Int64"/> on layer &gt;=143)</summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageMediaDocument.key">
            <summary>Key to decrypt the attached document file</summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageMediaDocument.iv">
            <summary>Initialization</summary>
        </member>
        <member name="P:TL.Layer8.DecryptedMessageMediaDocument.MimeType">
            <summary>File MIME-type</summary>
        </member>
        <member name="T:TL.Layer8.DecryptedMessageMediaAudio">
            <summary>Audio file attached to a secret chat message.		<para>See <a href="https://corefork.telegram.org/constructor/decryptedMessageMediaAudio"/></para></summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageMediaAudio.duration">
            <summary>Audio duration in seconds</summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageMediaAudio.size">
            <summary>File size</summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageMediaAudio.key">
            <summary>Key to decrypt the attached media file</summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageMediaAudio.iv">
            <summary>Initialization vector</summary>
        </member>
        <member name="T:TL.Layer8.DecryptedMessageActionSetMessageTTL">
            <summary>Setting of a message lifetime after reading.		<para>See <a href="https://corefork.telegram.org/constructor/decryptedMessageActionSetMessageTTL"/></para></summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageActionSetMessageTTL.ttl_seconds">
            <summary>Lifetime in seconds</summary>
        </member>
        <member name="T:TL.Layer8.DecryptedMessageActionReadMessages">
            <summary>Messages marked as read.		<para>See <a href="https://corefork.telegram.org/constructor/decryptedMessageActionReadMessages"/></para></summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageActionReadMessages.random_ids">
            <summary>List of message IDs</summary>
        </member>
        <member name="T:TL.Layer8.DecryptedMessageActionDeleteMessages">
            <summary>Deleted messages.		<para>See <a href="https://corefork.telegram.org/constructor/decryptedMessageActionDeleteMessages"/></para></summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageActionDeleteMessages.random_ids">
            <summary>List of deleted message IDs</summary>
        </member>
        <member name="T:TL.Layer8.DecryptedMessageActionScreenshotMessages">
            <summary>A screenshot was taken.		<para>See <a href="https://corefork.telegram.org/constructor/decryptedMessageActionScreenshotMessages"/></para></summary>
        </member>
        <member name="F:TL.Layer8.DecryptedMessageActionScreenshotMessages.random_ids">
            <summary>List of affected message ids (that appeared on the screenshot)</summary>
        </member>
        <member name="T:TL.Layer8.DecryptedMessageActionFlushHistory">
            <summary>The entire message history has been deleted.		<para>See <a href="https://corefork.telegram.org/constructor/decryptedMessageActionFlushHistory"/></para></summary>
        </member>
        <member name="T:TL.Layer23.PhotoSize">
            <summary>Image description.		<para>See <a href="https://corefork.telegram.org/constructor/photoSize"/></para></summary>
        </member>
        <member name="F:TL.Layer23.PhotoSize.type">
            <summary><a href="https://corefork.telegram.org/api/files#image-thumbnail-types">Thumbnail type »</a></summary>
        </member>
        <member name="F:TL.Layer23.PhotoSize.w">
            <summary>Image width</summary>
        </member>
        <member name="F:TL.Layer23.PhotoSize.h">
            <summary>Image height</summary>
        </member>
        <member name="F:TL.Layer23.PhotoSize.size">
            <summary>File size</summary>
        </member>
        <member name="P:TL.Layer23.PhotoSize.Type">
            <summary><a href="https://corefork.telegram.org/api/files#image-thumbnail-types">Thumbnail type »</a></summary>
        </member>
        <member name="T:TL.Layer23.PhotoCachedSize">
            <summary>Description of an image and its content.		<para>See <a href="https://corefork.telegram.org/constructor/photoCachedSize"/></para></summary>
        </member>
        <member name="F:TL.Layer23.PhotoCachedSize.type">
            <summary>Thumbnail type</summary>
        </member>
        <member name="F:TL.Layer23.PhotoCachedSize.w">
            <summary>Image width</summary>
        </member>
        <member name="F:TL.Layer23.PhotoCachedSize.h">
            <summary>Image height</summary>
        </member>
        <member name="F:TL.Layer23.PhotoCachedSize.bytes">
            <summary>Binary data, file content</summary>
        </member>
        <member name="P:TL.Layer23.PhotoCachedSize.Type">
            <summary>Thumbnail type</summary>
        </member>
        <member name="T:TL.Layer23.SendMessageUploadVideoAction">
            <summary>User is uploading a video.		<para>See <a href="https://corefork.telegram.org/constructor/sendMessageUploadVideoAction"/></para></summary>
        </member>
        <member name="T:TL.Layer23.SendMessageUploadAudioAction">
            <summary>User is uploading a voice message.		<para>See <a href="https://corefork.telegram.org/constructor/sendMessageUploadAudioAction"/></para></summary>
        </member>
        <member name="T:TL.Layer23.SendMessageUploadPhotoAction">
            <summary>User is uploading a photo.		<para>See <a href="https://corefork.telegram.org/constructor/sendMessageUploadPhotoAction"/></para></summary>
        </member>
        <member name="T:TL.Layer23.SendMessageUploadDocumentAction">
            <summary>User is uploading a file.		<para>See <a href="https://corefork.telegram.org/constructor/sendMessageUploadDocumentAction"/></para></summary>
        </member>
        <member name="T:TL.Layer23.DocumentAttributeSticker">
            <summary>Defines a sticker		<para>See <a href="https://corefork.telegram.org/constructor/documentAttributeSticker"/></para></summary>
        </member>
        <member name="T:TL.Layer23.DocumentAttributeVideo">
            <summary>Defines a video		<para>See <a href="https://corefork.telegram.org/constructor/documentAttributeVideo"/></para></summary>
        </member>
        <member name="F:TL.Layer23.DocumentAttributeVideo.duration">
            <summary>Duration in seconds</summary>
        </member>
        <member name="F:TL.Layer23.DocumentAttributeVideo.w">
            <summary>Video width</summary>
        </member>
        <member name="F:TL.Layer23.DocumentAttributeVideo.h">
            <summary>Video height</summary>
        </member>
        <member name="T:TL.Layer23.DocumentAttributeAudio">
            <summary>Represents an audio file		<para>See <a href="https://corefork.telegram.org/constructor/documentAttributeAudio"/></para></summary>
        </member>
        <member name="F:TL.Layer23.DocumentAttributeAudio.duration">
            <summary>Duration in seconds</summary>
        </member>
        <member name="T:TL.Layer23.DecryptedMessage">
            <summary>Contents of an encrypted message.		<para>See <a href="https://corefork.telegram.org/constructor/decryptedMessage"/></para></summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessage.random_id">
            <summary>Random message ID, assigned by the author of message.<br/>Must be equal to the ID passed to sending method.</summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessage.ttl">
            <summary>Message lifetime. Has higher priority than <see cref="T:TL.Layer8.DecryptedMessageActionSetMessageTTL"/>.<br/>Parameter added in Layer 17.</summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessage.message">
            <summary>Message text</summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessage.media">
            <summary>Media content</summary>
        </member>
        <member name="P:TL.Layer23.DecryptedMessage.RandomId">
            <summary>Random message ID, assigned by the author of message.<br/>Must be equal to the ID passed to sending method.</summary>
        </member>
        <member name="P:TL.Layer23.DecryptedMessage.Ttl">
            <summary>Message lifetime. Has higher priority than <see cref="T:TL.Layer8.DecryptedMessageActionSetMessageTTL"/>.<br/>Parameter added in Layer 17.</summary>
        </member>
        <member name="P:TL.Layer23.DecryptedMessage.Message">
            <summary>Message text</summary>
        </member>
        <member name="P:TL.Layer23.DecryptedMessage.Media">
            <summary>Media content</summary>
        </member>
        <member name="T:TL.Layer23.DecryptedMessageService">
            <summary>Contents of an encrypted service message.		<para>See <a href="https://corefork.telegram.org/constructor/decryptedMessageService"/></para></summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageService.random_id">
            <summary>Random message ID, assigned by the message author.<br/>Must be equal to the ID passed to the sending method.</summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageService.action">
            <summary>Action relevant to the service message</summary>
        </member>
        <member name="P:TL.Layer23.DecryptedMessageService.RandomId">
            <summary>Random message ID, assigned by the message author.<br/>Must be equal to the ID passed to the sending method.</summary>
        </member>
        <member name="P:TL.Layer23.DecryptedMessageService.Action">
            <summary>Action relevant to the service message</summary>
        </member>
        <member name="T:TL.Layer23.DecryptedMessageMediaVideo">
            <summary>Video attached to an encrypted message.		<para>See <a href="https://corefork.telegram.org/constructor/decryptedMessageMediaVideo"/></para></summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageMediaVideo.thumb">
            <summary>Content of thumbnail file (JPEG file, quality 55, set in a square 90x90)</summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageMediaVideo.thumb_w">
            <summary>Thumbnail width</summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageMediaVideo.thumb_h">
            <summary>Thumbnail height</summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageMediaVideo.duration">
            <summary>Duration of video in seconds</summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageMediaVideo.mime_type">
            <summary>MIME-type of the video file<br/>Parameter added in Layer 17.</summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageMediaVideo.w">
            <summary>Image width</summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageMediaVideo.h">
            <summary>Image height</summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageMediaVideo.size">
            <summary>File size</summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageMediaVideo.key">
            <summary>Key to decrypt the attached video file</summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageMediaVideo.iv">
            <summary>Initialization vector</summary>
        </member>
        <member name="P:TL.Layer23.DecryptedMessageMediaVideo.MimeType">
            <summary>MIME-type of the video file<br/>Parameter added in Layer 17.</summary>
        </member>
        <member name="T:TL.Layer23.DecryptedMessageMediaAudio">
            <summary>Audio file attached to a secret chat message.		<para>See <a href="https://corefork.telegram.org/constructor/decryptedMessageMediaAudio"/></para></summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageMediaAudio.duration">
            <summary>Audio duration in seconds</summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageMediaAudio.mime_type">
            <summary>MIME-type of the audio file<br/>Parameter added in Layer 13.</summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageMediaAudio.size">
            <summary>File size</summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageMediaAudio.key">
            <summary>Key to decrypt the attached media file</summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageMediaAudio.iv">
            <summary>Initialization vector</summary>
        </member>
        <member name="P:TL.Layer23.DecryptedMessageMediaAudio.MimeType">
            <summary>MIME-type of the audio file<br/>Parameter added in Layer 13.</summary>
        </member>
        <member name="T:TL.Layer23.DecryptedMessageMediaExternalDocument">
            <summary>Non-e2e documented forwarded from non-secret chat		<para>See <a href="https://corefork.telegram.org/constructor/decryptedMessageMediaExternalDocument"/></para></summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageMediaExternalDocument.id">
            <summary>Document ID</summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageMediaExternalDocument.access_hash">
            <summary>access hash</summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageMediaExternalDocument.date">
            <summary>Date</summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageMediaExternalDocument.mime_type">
            <summary>Mime type</summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageMediaExternalDocument.size">
            <summary>Size</summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageMediaExternalDocument.thumb">
            <summary>Thumbnail</summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageMediaExternalDocument.dc_id">
            <summary>DC ID</summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageMediaExternalDocument.attributes">
            <summary>Attributes for media types</summary>
        </member>
        <member name="P:TL.Layer23.DecryptedMessageMediaExternalDocument.MimeType">
            <summary>Mime type</summary>
        </member>
        <member name="T:TL.Layer23.DecryptedMessageActionResend">
            <summary>Request for the other party in a Secret Chat to automatically resend a contiguous range of previously sent messages, as explained in <a href="https://corefork.telegram.org/api/end-to-end/seq_no">Sequence number is Secret Chats</a>.		<para>See <a href="https://corefork.telegram.org/constructor/decryptedMessageActionResend"/></para></summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageActionResend.start_seq_no">
            <summary><c>out_seq_no</c> of the first message to be resent, with correct parity</summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageActionResend.end_seq_no">
            <summary><c>out_seq_no</c> of the last message to be resent, with same parity.</summary>
        </member>
        <member name="T:TL.Layer23.DecryptedMessageActionNotifyLayer">
            <summary>A notification stating the API layer that is used by the client. You should use your current layer and take notice of the layer used on the other side of a conversation when sending messages.		<para>See <a href="https://corefork.telegram.org/constructor/decryptedMessageActionNotifyLayer"/></para></summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageActionNotifyLayer.layer">
            <summary>Layer number, must be <strong>17</strong> or higher (this constructor was introduced in Layer 17.</summary>
        </member>
        <member name="T:TL.Layer23.DecryptedMessageActionTyping">
            <summary>User is preparing a message: typing, recording, uploading, etc.		<para>See <a href="https://corefork.telegram.org/constructor/decryptedMessageActionTyping"/></para></summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageActionTyping.action">
            <summary>Type of action</summary>
        </member>
        <member name="T:TL.Layer23.DecryptedMessageActionRequestKey">
            <summary>Request rekeying, see <a href="https://corefork.telegram.org/api/end-to-end/pfs">rekeying process</a>		<para>See <a href="https://corefork.telegram.org/constructor/decryptedMessageActionRequestKey"/></para></summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageActionRequestKey.exchange_id">
            <summary>Exchange ID</summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageActionRequestKey.g_a">
            <summary>g_a, see <a href="https://corefork.telegram.org/api/end-to-end/pfs">rekeying process</a></summary>
        </member>
        <member name="T:TL.Layer23.DecryptedMessageActionAcceptKey">
            <summary>Accept new key		<para>See <a href="https://corefork.telegram.org/constructor/decryptedMessageActionAcceptKey"/></para></summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageActionAcceptKey.exchange_id">
            <summary>Exchange ID</summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageActionAcceptKey.g_b">
            <summary>B parameter, see <a href="https://corefork.telegram.org/api/end-to-end/pfs">rekeying process</a></summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageActionAcceptKey.key_fingerprint">
            <summary>Key fingerprint, see <a href="https://corefork.telegram.org/api/end-to-end/pfs">rekeying process</a></summary>
        </member>
        <member name="T:TL.Layer23.DecryptedMessageActionAbortKey">
            <summary>Abort rekeying		<para>See <a href="https://corefork.telegram.org/constructor/decryptedMessageActionAbortKey"/></para></summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageActionAbortKey.exchange_id">
            <summary>Exchange ID</summary>
        </member>
        <member name="T:TL.Layer23.DecryptedMessageActionCommitKey">
            <summary>Commit new key, see <a href="https://corefork.telegram.org/api/end-to-end/pfs">rekeying process</a>		<para>See <a href="https://corefork.telegram.org/constructor/decryptedMessageActionCommitKey"/></para></summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageActionCommitKey.exchange_id">
            <summary>Exchange ID, see <a href="https://corefork.telegram.org/api/end-to-end/pfs">rekeying process</a></summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageActionCommitKey.key_fingerprint">
            <summary>Key fingerprint, see <a href="https://corefork.telegram.org/api/end-to-end/pfs">rekeying process</a></summary>
        </member>
        <member name="T:TL.Layer23.DecryptedMessageActionNoop">
            <summary>NOOP action		<para>See <a href="https://corefork.telegram.org/constructor/decryptedMessageActionNoop"/></para></summary>
        </member>
        <member name="T:TL.Layer23.DecryptedMessageLayer">
            <summary>Sets the layer number for the contents of an encrypted message.		<para>See <a href="https://corefork.telegram.org/constructor/decryptedMessageLayer"/></para></summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageLayer.random_bytes">
            <summary>Set of random bytes to prevent content recognition in short encrypted messages.<br/>Clients are required to check that there are at least 15 random bytes included in each message. Messages with less than 15 random bytes must be ignored.<br/>Parameter moved here from <see cref="T:TL.Layer23.DecryptedMessage"/> in Layer 17.</summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageLayer.layer">
            <summary>Layer number. Mimimal value - <strong>17</strong> (the layer in which the constructor was added).</summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageLayer.in_seq_no">
            <summary>2x the number of messages in the sender's inbox (including deleted and service messages), incremented by 1 if current user was not the chat creator<br/>Parameter added in Layer 17.</summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageLayer.out_seq_no">
            <summary>2x the number of messages in the recipient's inbox (including deleted and service messages), incremented by 1 if current user was the chat creator<br/>Parameter added in Layer 17.</summary>
        </member>
        <member name="F:TL.Layer23.DecryptedMessageLayer.message">
            <summary>The content of message itself</summary>
        </member>
        <member name="T:TL.Layer23.FileLocationUnavailable">
            <summary>File is currently unavailable.		<para>See <a href="https://corefork.telegram.org/constructor/fileLocationUnavailable"/></para></summary>
        </member>
        <member name="F:TL.Layer23.FileLocationUnavailable.volume_id">
            <summary>Server volume</summary>
        </member>
        <member name="F:TL.Layer23.FileLocationUnavailable.local_id">
            <summary>File ID</summary>
        </member>
        <member name="F:TL.Layer23.FileLocationUnavailable.secret">
            <summary>Checksum to access the file</summary>
        </member>
        <member name="P:TL.Layer23.FileLocationUnavailable.VolumeId">
            <summary>Server volume</summary>
        </member>
        <member name="P:TL.Layer23.FileLocationUnavailable.LocalId">
            <summary>File ID</summary>
        </member>
        <member name="P:TL.Layer23.FileLocationUnavailable.Secret">
            <summary>Checksum to access the file</summary>
        </member>
        <member name="T:TL.Layer23.FileLocation">
            <summary>File location.		<para>See <a href="https://corefork.telegram.org/constructor/fileLocation"/></para></summary>
        </member>
        <member name="F:TL.Layer23.FileLocation.dc_id">
            <summary>Number of the data center holding the file</summary>
        </member>
        <member name="F:TL.Layer23.FileLocation.volume_id">
            <summary>Server volume</summary>
        </member>
        <member name="F:TL.Layer23.FileLocation.local_id">
            <summary>File ID</summary>
        </member>
        <member name="F:TL.Layer23.FileLocation.secret">
            <summary>Checksum to access the file</summary>
        </member>
        <member name="P:TL.Layer23.FileLocation.VolumeId">
            <summary>Server volume</summary>
        </member>
        <member name="P:TL.Layer23.FileLocation.LocalId">
            <summary>File ID</summary>
        </member>
        <member name="P:TL.Layer23.FileLocation.Secret">
            <summary>Checksum to access the file</summary>
        </member>
        <member name="T:TL.Layer45.DocumentAttributeAudio">
            <summary>Represents an audio file		<para>See <a href="https://corefork.telegram.org/constructor/documentAttributeAudio"/></para></summary>
        </member>
        <member name="F:TL.Layer45.DocumentAttributeAudio.duration">
            <summary>Duration in seconds</summary>
        </member>
        <member name="F:TL.Layer45.DocumentAttributeAudio.title">
            <summary>Name of song</summary>
        </member>
        <member name="F:TL.Layer45.DocumentAttributeAudio.performer">
            <summary>Performer</summary>
        </member>
        <member name="T:TL.Layer46.DocumentAttributeSticker">
            <summary>Defines a sticker		<para>See <a href="https://corefork.telegram.org/constructor/documentAttributeSticker"/></para></summary>
        </member>
        <member name="F:TL.Layer46.DocumentAttributeSticker.alt">
            <summary>Alternative emoji representation of sticker</summary>
        </member>
        <member name="F:TL.Layer46.DocumentAttributeSticker.stickerset">
            <summary>Associated stickerset</summary>
        </member>
        <member name="T:TL.Layer46.MessageEntityMentionName">
            <summary>Message entity representing a <a href="https://corefork.telegram.org/api/mentions">user mention</a>: for <em>creating</em> a mention use <see cref="T:TL.InputMessageEntityMentionName"/>.		<para>See <a href="https://corefork.telegram.org/constructor/messageEntityMentionName"/></para></summary>
        </member>
        <member name="F:TL.Layer46.MessageEntityMentionName.user_id">
            <summary>Identifier of the user that was mentioned</summary>
        </member>
        <member name="T:TL.Layer46.DecryptedMessage">
            <summary>Contents of an encrypted message.		<para>See <a href="https://corefork.telegram.org/constructor/decryptedMessage"/></para></summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessage.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessage.random_id">
            <summary>Random message ID, assigned by the author of message.<br/>Must be equal to the ID passed to sending method.</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessage.ttl">
            <summary>Message lifetime. Has higher priority than <see cref="T:TL.Layer8.DecryptedMessageActionSetMessageTTL"/>.<br/>Parameter added in Layer 17.</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessage.message">
            <summary>Message text</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessage.media">
            <summary>Media content</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessage.entities">
            <summary>Message <a href="https://corefork.telegram.org/api/entities">entities</a> for styled text (parameter added in layer 45)</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessage.via_bot_name">
            <summary>Specifies the ID of the inline bot that generated the message (parameter added in layer 45)</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessage.reply_to_random_id">
            <summary>Random message ID of the message this message replies to (parameter added in layer 45)</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessage.Flags.has_reply_to_random_id">
            <summary>Field <see cref="F:TL.Layer46.DecryptedMessage.reply_to_random_id"/> has a value</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessage.Flags.has_entities">
            <summary>Field <see cref="F:TL.Layer46.DecryptedMessage.entities"/> has a value</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessage.Flags.has_media">
            <summary>Field <see cref="F:TL.Layer46.DecryptedMessage.media"/> has a value</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessage.Flags.has_via_bot_name">
            <summary>Field <see cref="F:TL.Layer46.DecryptedMessage.via_bot_name"/> has a value</summary>
        </member>
        <member name="P:TL.Layer46.DecryptedMessage.FFlags">
            <summary>Flags, see <a href="https://corefork.telegram.org/mtproto/TL-combinators#conditional-fields">TL conditional fields</a> (added in layer 45)</summary>
        </member>
        <member name="P:TL.Layer46.DecryptedMessage.RandomId">
            <summary>Random message ID, assigned by the author of message.<br/>Must be equal to the ID passed to sending method.</summary>
        </member>
        <member name="P:TL.Layer46.DecryptedMessage.Ttl">
            <summary>Message lifetime. Has higher priority than <see cref="T:TL.Layer8.DecryptedMessageActionSetMessageTTL"/>.<br/>Parameter added in Layer 17.</summary>
        </member>
        <member name="P:TL.Layer46.DecryptedMessage.Message">
            <summary>Message text</summary>
        </member>
        <member name="P:TL.Layer46.DecryptedMessage.Media">
            <summary>Media content</summary>
        </member>
        <member name="P:TL.Layer46.DecryptedMessage.Entities">
            <summary>Message <a href="https://corefork.telegram.org/api/entities">entities</a> for styled text (parameter added in layer 45)</summary>
        </member>
        <member name="P:TL.Layer46.DecryptedMessage.ViaBotName">
            <summary>Specifies the ID of the inline bot that generated the message (parameter added in layer 45)</summary>
        </member>
        <member name="P:TL.Layer46.DecryptedMessage.ReplyToRandom">
            <summary>Random message ID of the message this message replies to (parameter added in layer 45)</summary>
        </member>
        <member name="T:TL.Layer46.DecryptedMessageMediaPhoto">
            <summary>Photo attached to an encrypted message.		<para>See <a href="https://corefork.telegram.org/constructor/decryptedMessageMediaPhoto"/></para></summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessageMediaPhoto.thumb">
            <summary>Content of thumbnail file (JPEGfile, quality 55, set in a square 90x90)</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessageMediaPhoto.thumb_w">
            <summary>Thumbnail width</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessageMediaPhoto.thumb_h">
            <summary>Thumbnail height</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessageMediaPhoto.w">
            <summary>Photo width</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessageMediaPhoto.h">
            <summary>Photo height</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessageMediaPhoto.size">
            <summary>Size of the photo in bytes</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessageMediaPhoto.key">
            <summary>Key to decrypt an attached file with a full version</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessageMediaPhoto.iv">
            <summary>Initialization vector</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessageMediaPhoto.caption">
            <summary>Caption</summary>
        </member>
        <member name="T:TL.Layer46.DecryptedMessageMediaVideo">
            <summary>Video attached to an encrypted message.		<para>See <a href="https://corefork.telegram.org/constructor/decryptedMessageMediaVideo"/></para></summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessageMediaVideo.thumb">
            <summary>Content of thumbnail file (JPEG file, quality 55, set in a square 90x90)</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessageMediaVideo.thumb_w">
            <summary>Thumbnail width</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessageMediaVideo.thumb_h">
            <summary>Thumbnail height</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessageMediaVideo.duration">
            <summary>Duration of video in seconds</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessageMediaVideo.mime_type">
            <summary>MIME-type of the video file<br/>Parameter added in Layer 17.</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessageMediaVideo.w">
            <summary>Image width</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessageMediaVideo.h">
            <summary>Image height</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessageMediaVideo.size">
            <summary>File size</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessageMediaVideo.key">
            <summary>Key to decrypt the attached video file</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessageMediaVideo.iv">
            <summary>Initialization vector</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessageMediaVideo.caption">
            <summary>Caption</summary>
        </member>
        <member name="P:TL.Layer46.DecryptedMessageMediaVideo.MimeType">
            <summary>MIME-type of the video file<br/>Parameter added in Layer 17.</summary>
        </member>
        <member name="T:TL.Layer46.DecryptedMessageMediaDocument">
            <summary>Document attached to a message in a secret chat.		<para>See <a href="https://corefork.telegram.org/constructor/decryptedMessageMediaDocument"/></para></summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessageMediaDocument.thumb">
            <summary>Thumbnail-file contents (JPEG-file, quality 55, set in a 90x90 square)</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessageMediaDocument.thumb_w">
            <summary>Thumbnail width</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessageMediaDocument.thumb_h">
            <summary>Thumbnail height</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessageMediaDocument.mime_type">
            <summary>File MIME-type</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessageMediaDocument.size">
            <summary>Document size (<see cref="T:System.Int32"/> on layer &lt;143, <see cref="T:System.Int64"/> on layer &gt;=143)</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessageMediaDocument.key">
            <summary>Key to decrypt the attached document file</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessageMediaDocument.iv">
            <summary>Initialization</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessageMediaDocument.attributes">
            <summary>Document attributes for media types</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessageMediaDocument.caption">
            <summary>Caption</summary>
        </member>
        <member name="P:TL.Layer46.DecryptedMessageMediaDocument.MimeType">
            <summary>File MIME-type</summary>
        </member>
        <member name="T:TL.Layer46.DecryptedMessageMediaVenue">
            <summary>Venue		<para>See <a href="https://corefork.telegram.org/constructor/decryptedMessageMediaVenue"/></para></summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessageMediaVenue.lat">
            <summary>Latitude of venue</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessageMediaVenue.lon">
            <summary>Longitude of venue</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessageMediaVenue.title">
            <summary>Venue name</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessageMediaVenue.address">
            <summary>Address</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessageMediaVenue.provider">
            <summary>Venue provider: currently only "foursquare" and "gplaces" (Google Places) need to be supported</summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessageMediaVenue.venue_id">
            <summary>Venue ID in the provider's database</summary>
        </member>
        <member name="T:TL.Layer46.DecryptedMessageMediaWebPage">
            <summary>Webpage preview		<para>See <a href="https://corefork.telegram.org/constructor/decryptedMessageMediaWebPage"/></para></summary>
        </member>
        <member name="F:TL.Layer46.DecryptedMessageMediaWebPage.url">
            <summary>URL of webpage</summary>
        </member>
        <member name="T:TL.Layer66.SendMessageUploadRoundAction">
            <summary>User is uploading a round video		<para>See <a href="https://corefork.telegram.org/constructor/sendMessageUploadRoundAction"/></para></summary>
        </member>
        <member name="T:TL.Layer66.DocumentAttributeVideo">
            <summary>Defines a video		<para>See <a href="https://corefork.telegram.org/constructor/documentAttributeVideo"/></para></summary>
        </member>
        <member name="F:TL.Layer66.DocumentAttributeVideo.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Layer66.DocumentAttributeVideo.duration">
            <summary>Duration in seconds</summary>
        </member>
        <member name="F:TL.Layer66.DocumentAttributeVideo.w">
            <summary>Video width</summary>
        </member>
        <member name="F:TL.Layer66.DocumentAttributeVideo.h">
            <summary>Video height</summary>
        </member>
        <member name="F:TL.Layer66.DocumentAttributeVideo.Flags.round_message">
            <summary>Whether this is a round video</summary>
        </member>
        <member name="T:TL.Layer73.DecryptedMessage">
            <summary>Contents of an encrypted message.		<para>See <a href="https://corefork.telegram.org/constructor/decryptedMessage"/></para></summary>
        </member>
        <member name="F:TL.Layer73.DecryptedMessage.flags">
            <summary>Extra bits of information, use <c>flags.HasFlag(...)</c> to test for those</summary>
        </member>
        <member name="F:TL.Layer73.DecryptedMessage.random_id">
            <summary>Random message ID, assigned by the author of message.<br/>Must be equal to the ID passed to sending method.</summary>
        </member>
        <member name="F:TL.Layer73.DecryptedMessage.ttl">
            <summary>Message lifetime. Has higher priority than <see cref="T:TL.Layer8.DecryptedMessageActionSetMessageTTL"/>.<br/>Parameter added in Layer 17.</summary>
        </member>
        <member name="F:TL.Layer73.DecryptedMessage.message">
            <summary>Message text</summary>
        </member>
        <member name="F:TL.Layer73.DecryptedMessage.media">
            <summary>Media content</summary>
        </member>
        <member name="F:TL.Layer73.DecryptedMessage.entities">
            <summary>Message <a href="https://corefork.telegram.org/api/entities">entities</a> for styled text (parameter added in layer 45)</summary>
        </member>
        <member name="F:TL.Layer73.DecryptedMessage.via_bot_name">
            <summary>Specifies the ID of the inline bot that generated the message (parameter added in layer 45)</summary>
        </member>
        <member name="F:TL.Layer73.DecryptedMessage.reply_to_random_id">
            <summary>Random message ID of the message this message replies to (parameter added in layer 45)</summary>
        </member>
        <member name="F:TL.Layer73.DecryptedMessage.grouped_id">
            <summary>Random group ID, assigned by the author of message.<br/>Multiple encrypted messages with a photo attached and with the same group ID indicate an <a href="https://corefork.telegram.org/api/files#albums-grouped-media">album or grouped media</a> (parameter added in layer 45)</summary>
        </member>
        <member name="F:TL.Layer73.DecryptedMessage.Flags.has_reply_to_random_id">
            <summary>Field <see cref="F:TL.Layer73.DecryptedMessage.reply_to_random_id"/> has a value</summary>
        </member>
        <member name="F:TL.Layer73.DecryptedMessage.Flags.silent">
            <summary>Whether this is a silent message (no notification triggered)</summary>
        </member>
        <member name="F:TL.Layer73.DecryptedMessage.Flags.has_entities">
            <summary>Field <see cref="F:TL.Layer73.DecryptedMessage.entities"/> has a value</summary>
        </member>
        <member name="F:TL.Layer73.DecryptedMessage.Flags.has_media">
            <summary>Field <see cref="F:TL.Layer73.DecryptedMessage.media"/> has a value</summary>
        </member>
        <member name="F:TL.Layer73.DecryptedMessage.Flags.has_via_bot_name">
            <summary>Field <see cref="F:TL.Layer73.DecryptedMessage.via_bot_name"/> has a value</summary>
        </member>
        <member name="F:TL.Layer73.DecryptedMessage.Flags.has_grouped_id">
            <summary>Field <see cref="F:TL.Layer73.DecryptedMessage.grouped_id"/> has a value</summary>
        </member>
        <member name="P:TL.Layer73.DecryptedMessage.FFlags">
            <summary>Flags, see <a href="https://corefork.telegram.org/mtproto/TL-combinators#conditional-fields">TL conditional fields</a> (added in layer 45)</summary>
        </member>
        <member name="P:TL.Layer73.DecryptedMessage.RandomId">
            <summary>Random message ID, assigned by the author of message.<br/>Must be equal to the ID passed to sending method.</summary>
        </member>
        <member name="P:TL.Layer73.DecryptedMessage.Ttl">
            <summary>Message lifetime. Has higher priority than <see cref="T:TL.Layer8.DecryptedMessageActionSetMessageTTL"/>.<br/>Parameter added in Layer 17.</summary>
        </member>
        <member name="P:TL.Layer73.DecryptedMessage.Message">
            <summary>Message text</summary>
        </member>
        <member name="P:TL.Layer73.DecryptedMessage.Media">
            <summary>Media content</summary>
        </member>
        <member name="P:TL.Layer73.DecryptedMessage.Entities">
            <summary>Message <a href="https://corefork.telegram.org/api/entities">entities</a> for styled text (parameter added in layer 45)</summary>
        </member>
        <member name="P:TL.Layer73.DecryptedMessage.ViaBotName">
            <summary>Specifies the ID of the inline bot that generated the message (parameter added in layer 45)</summary>
        </member>
        <member name="P:TL.Layer73.DecryptedMessage.ReplyToRandom">
            <summary>Random message ID of the message this message replies to (parameter added in layer 45)</summary>
        </member>
        <member name="P:TL.Layer73.DecryptedMessage.Grouped">
            <summary>Random group ID, assigned by the author of message.<br/>Multiple encrypted messages with a photo attached and with the same group ID indicate an <a href="https://corefork.telegram.org/api/files#albums-grouped-media">album or grouped media</a> (parameter added in layer 45)</summary>
        </member>
        <member name="T:TL.Layer143.DecryptedMessageMediaDocument">
            <summary>Document attached to a message in a secret chat.		<para>See <a href="https://corefork.telegram.org/constructor/decryptedMessageMediaDocument"/></para></summary>
        </member>
        <member name="F:TL.Layer143.DecryptedMessageMediaDocument.thumb">
            <summary>Thumbnail-file contents (JPEG-file, quality 55, set in a 90x90 square)</summary>
        </member>
        <member name="F:TL.Layer143.DecryptedMessageMediaDocument.thumb_w">
            <summary>Thumbnail width</summary>
        </member>
        <member name="F:TL.Layer143.DecryptedMessageMediaDocument.thumb_h">
            <summary>Thumbnail height</summary>
        </member>
        <member name="F:TL.Layer143.DecryptedMessageMediaDocument.mime_type">
            <summary>File MIME-type</summary>
        </member>
        <member name="F:TL.Layer143.DecryptedMessageMediaDocument.size">
            <summary>Document size (<see cref="T:System.Int32"/> on layer &lt;143, <see cref="T:System.Int64"/> on layer &gt;=143)</summary>
        </member>
        <member name="F:TL.Layer143.DecryptedMessageMediaDocument.key">
            <summary>Key to decrypt the attached document file</summary>
        </member>
        <member name="F:TL.Layer143.DecryptedMessageMediaDocument.iv">
            <summary>Initialization</summary>
        </member>
        <member name="F:TL.Layer143.DecryptedMessageMediaDocument.attributes">
            <summary>Document attributes for media types</summary>
        </member>
        <member name="F:TL.Layer143.DecryptedMessageMediaDocument.caption">
            <summary>Caption</summary>
        </member>
        <member name="P:TL.Layer143.DecryptedMessageMediaDocument.MimeType">
            <summary>File MIME-type</summary>
        </member>
        <member name="M:TL.UpdateManagerExtensions.WithUpdateManager(WTelegram.Client,System.Func{TL.Update,System.Threading.Tasks.Task},System.String,WTelegram.IPeerCollector,System.Boolean)">
            <summary>Manager ensuring that you receive Telegram updates in correct order, without missing any</summary>
            <param name="onUpdate">Event to be called on sequential individual update</param>
            <param name="statePath">Resume session by recovering all updates that occured since the state saved in this file</param>
            <param name="collector">Custom users/chats collector. By default, those are collected in properties Users/Chats</param>
            <param name="reentrant"><see langword="true"/> if your <paramref name="onUpdate"/> method can be called again even when last async call didn't return yet</param>
        </member>
        <member name="M:TL.UpdateManagerExtensions.WithUpdateManager(WTelegram.Client,System.Func{TL.Update,System.Threading.Tasks.Task},System.Collections.Generic.IDictionary{System.Int64,WTelegram.UpdateManager.MBoxState},WTelegram.IPeerCollector,System.Boolean)">
            <summary>Manager ensuring that you receive Telegram updates in correct order, without missing any</summary>
            <param name="onUpdate">Event to be called on sequential individual update</param>
            <param name="state">(optional) Resume session by recovering all updates that occured since this state</param>
            <param name="collector">Custom users/chats collector. By default, those are collected in properties Users/Chats</param>
            <param name="reentrant"><see langword="true"/> if your <paramref name="onUpdate"/> method can be called again even when last async call didn't return yet</param>
        </member>
    </members>
</doc>
